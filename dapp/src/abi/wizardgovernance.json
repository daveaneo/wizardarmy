{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizID",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksSubmitted",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "10": "contracts/helpers/ReentrancyGuard.sol",
    "19": "contracts/libraries/Strings.sol",
    "2": "contracts/Governance.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "9": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        4488
      ],
      "Context": [
        1818
      ],
      "DoubleEndedQueue": [
        1797
      ],
      "ERC165": [
        1842
      ],
      "ERC2981Collection": [
        1926
      ],
      "ERC721": [
        2745
      ],
      "ERC721A": [
        3816
      ],
      "ERC721Enumerable": [
        7676
      ],
      "Governance": [
        1456
      ],
      "IERC165": [
        3972
      ],
      "IERC20": [
        4045
      ],
      "IERC2981": [
        7292
      ],
      "IERC721": [
        4161
      ],
      "IERC721Enumerable": [
        4192
      ],
      "IERC721Metadata": [
        7319
      ],
      "IERC721Receiver": [
        7337
      ],
      "Ownable": [
        3920
      ],
      "ReentrancyGuard": [
        3960
      ],
      "Strings": [
        4691
      ],
      "Wizards": [
        5423
      ]
    },
    "id": 1457,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 5424,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 4046,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 3973,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 4162,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 4193,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 3817,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 2746,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 1843,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 3921,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 1819,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 3961,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 1927,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 4692,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 4489,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1457,
        "sourceUnit": 1798,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1797,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3960,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3920,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1456,
        "linearizedBaseContracts": [
          1456,
          3920,
          1818,
          3960
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$5423",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5423,
                "src": "829:7:2"
              },
              "referencedDeclaration": 5423,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$5423",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "lastActiveTimestamp",
                "nameLocation": "1127:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:48:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:28:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1217:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1210:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1210:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1261:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1256:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1256:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1284:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1277:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1277:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1338:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1332:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1332:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1370:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1363:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1363:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1396:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1389:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1389:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1425:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1418:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1418:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1454:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1447:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1447:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1456,
            "src": "1072:403:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1535:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1528:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1581:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1574:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1574:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1641:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1633:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1633:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1695:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1687:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1687:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1759:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1753:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1753:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1807:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1800:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1800:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1979:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1972:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1972:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2006:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1999:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1999:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2057:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2050:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2050:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2107:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2100:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2100:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1513:4:2",
            "nodeType": "StructDefinition",
            "scope": 1456,
            "src": "1506:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2245:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2238:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2238:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2280:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2270:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2277:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2270:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2302:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2295:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2295:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2329:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2322:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2322:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2358:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2351:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2351:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2194:8:2",
            "nodeType": "StructDefinition",
            "scope": 1456,
            "src": "2187:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2403:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2385:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2385:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2385:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2385:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "379d94cc",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksSubmitted",
            "nameLocation": "2559:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2522:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1475,
                "src": "2522:29:2"
              },
              "referencedDeclaration": 1475,
              "src": "2522:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2726:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2689:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2698:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2689:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2709:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2709:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2749:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2741:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2741:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2803:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2770:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2779:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2770:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2790:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2790:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 108,
            "mutability": "mutable",
            "name": "tasksAttempted",
            "nameLocation": "2822:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2814:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2814:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2877:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2869:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2869:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2896:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2899:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2896:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2929:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1456,
            "src": "2921:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2921:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2957:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee",
            "id": 122,
            "name": "VerificationAssigned",
            "nameLocation": "2986:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3015:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3007:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3033:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3025:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:34:2"
            },
            "src": "2980:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 130,
            "name": "VerificationFailed",
            "nameLocation": "3052:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3079:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3071:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3104:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3096:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3096:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3130:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3122:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3070:67:2"
            },
            "src": "3046:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 142,
            "name": "VerificationSucceeded",
            "nameLocation": "3149:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3179:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3171:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3197:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3189:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3215:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3207:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3231:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3223:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3242:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3237:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3170:86:2"
            },
            "src": "3143:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 152,
            "name": "HashTesting",
            "nameLocation": "3268:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3288:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3280:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3299:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3294:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3322:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3314:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3342:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3336:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3279:78:2"
            },
            "src": "3262:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 168,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3369:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3395:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3388:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3412:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3405:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3431:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3425:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3456:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3449:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3485:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3478:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3507:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3500:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3529:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3522:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:158:2"
            },
            "src": "3363:183:2"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "4417:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 176,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4434:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 178,
                    "indexExpression": {
                      "id": 177,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4440:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4434:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 175,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "4427:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4352:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4372:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "4364:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4363:17:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "4404:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 172,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4404:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4404:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4403:13:2"
            },
            "scope": 1456,
            "src": "4343:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "4539:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 190,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4557:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 191,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4570:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4557:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4586:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4549:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:56:2"
                },
                {
                  "assignments": [
                    200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4631:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "4615:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 198,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 199,
                        "nodeType": "ArrayTypeName",
                        "src": "4615:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 204,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4656:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 206,
                          "indexExpression": {
                            "id": 205,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "4666:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4656:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4656:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4643:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 201,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4647:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 202,
                        "nodeType": "ArrayTypeName",
                        "src": "4647:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4643:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4615:79:2"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "4748:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 221,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "4762:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 223,
                            "indexExpression": {
                              "id": 222,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "4772:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4762:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 224,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4777:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 226,
                                "indexExpression": {
                                  "id": 225,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "4787:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4777:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4777:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 229,
                            "indexExpression": {
                              "id": 228,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "4805:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4777:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4762:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "4762:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 214,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "4723:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 215,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "4726:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4726:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4723:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "initializationExpression": {
                    "assignments": [
                      211
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4716:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4708:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4708:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 213,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4720:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4708:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4744:3:2",
                      "subExpression": {
                        "id": 218,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4744:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 220,
                    "nodeType": "ExpressionStatement",
                    "src": "4744:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4704:114:2"
                },
                {
                  "expression": {
                    "id": 234,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "4834:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 235,
                  "nodeType": "Return",
                  "src": "4827:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4470:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4487:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "4479:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4478:20:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "4522:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 185,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4522:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 186,
                    "nodeType": "ArrayTypeName",
                    "src": "4522:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:17:2"
            },
            "scope": 1456,
            "src": "4461:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "4933:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 245,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "4951:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 246,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4964:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4951:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4980:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4943:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4943:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "4943:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 252,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5018:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5018:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 254,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5036:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 256,
                            "indexExpression": {
                              "id": 255,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "5046:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5036:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5036:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5018:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5072:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5009:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:85:2"
                },
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5222:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5214:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5214:19:2"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5251:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5243:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5243:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 267,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5243:25:2"
                },
                {
                  "assignments": [
                    269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5286:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5278:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5278:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5290:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5278:13:2"
                },
                {
                  "body": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "5364:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 285,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5417:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 287,
                                "indexExpression": {
                                  "id": 286,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "5427:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5417:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5417:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 290,
                            "indexExpression": {
                              "id": 289,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "5445:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5417:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 291,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5450:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5417:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 316,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5646:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 318,
                                  "indexExpression": {
                                    "id": 317,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 239,
                                    "src": "5656:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5646:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 319,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5646:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 321,
                              "indexExpression": {
                                "id": 320,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "5674:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5646:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 322,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "5680:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5646:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 329,
                          "nodeType": "IfStatement",
                          "src": "5643:93:2",
                          "trueBody": {
                            "id": 328,
                            "nodeType": "Block",
                            "src": "5698:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 324,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 269,
                                    "src": "5716:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5720:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5716:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 327,
                                "nodeType": "ExpressionStatement",
                                "src": "5716:5:2"
                              }
                            ]
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "5414:322:2",
                        "trueBody": {
                          "id": 315,
                          "nodeType": "Block",
                          "src": "5469:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 293,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "5487:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 294,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5507:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 296,
                                      "indexExpression": {
                                        "id": 295,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 239,
                                        "src": "5517:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5507:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5507:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 299,
                                  "indexExpression": {
                                    "id": 298,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "5535:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5507:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5487:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 301,
                              "nodeType": "ExpressionStatement",
                              "src": "5487:50:2"
                            },
                            {
                              "expression": {
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 302,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 263,
                                  "src": "5555:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 303,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "5569:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5555:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 305,
                              "nodeType": "ExpressionStatement",
                              "src": "5555:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 306,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "5592:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5597:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5592:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 314,
                              "nodeType": "IfStatement",
                              "src": "5588:23:2",
                              "trueBody": {
                                "id": 313,
                                "nodeType": "Block",
                                "src": "5600:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 309,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 269,
                                        "src": "5602:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5608:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5602:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 312,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5602:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "5318:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 277,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5321:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 279,
                        "indexExpression": {
                          "id": 278,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "5331:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5321:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5321:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5318:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "initializationExpression": {
                    "assignments": [
                      273
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5313:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "5305:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5305:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 275,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5315:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5305:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5360:3:2",
                      "subExpression": {
                        "id": 282,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5360:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 284,
                    "nodeType": "ExpressionStatement",
                    "src": "5360:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5301:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 334,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5763:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5768:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5763:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5771:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5755:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:35:2"
                },
                {
                  "expression": {
                    "id": 340,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 263,
                    "src": "5807:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "5800:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4865:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4888:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "4880:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4880:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4879:20:2"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "4923:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4922:10:2"
            },
            "scope": 1456,
            "src": "4856:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "5975:1212:2",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "5993:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 510,
                      "src": "5985:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5985:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5985:13:2"
                },
                {
                  "body": {
                    "id": 423,
                    "nodeType": "Block",
                    "src": "6046:504:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 360,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "6063:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 362,
                                      "indexExpression": {
                                        "id": 361,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 353,
                                        "src": "6073:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6063:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastActiveTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "6063:32:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 366,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 364,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6096:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6096:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6063:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 367,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6110:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6110:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6063:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 370,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "6141:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 372,
                                    "indexExpression": {
                                      "id": 371,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 353,
                                      "src": "6151:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6141:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 373,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "6141:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 374,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6170:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6170:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6141:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6063:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 378,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "6189:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 380,
                                  "indexExpression": {
                                    "id": 379,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "6199:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6189:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "6189:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 382,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6217:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6217:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6189:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6063:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 386,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "6248:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "id": 387,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "6258:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6248:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "6248:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6278:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6248:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6063:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 417,
                          "nodeType": "Block",
                          "src": "6363:149:2",
                          "statements": [
                            {
                              "assignments": [
                                402
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 402,
                                  "mutability": "mutable",
                                  "name": "myReturn",
                                  "nameLocation": "6397:8:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 417,
                                  "src": "6381:24:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 400,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6381:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 401,
                                    "nodeType": "ArrayTypeName",
                                    "src": "6381:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 408,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6420:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "6407:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 403,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6411:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 404,
                                    "nodeType": "ArrayTypeName",
                                    "src": "6411:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6407:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6381:41:2"
                            },
                            {
                              "expression": {
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 409,
                                    "name": "myReturn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 402,
                                    "src": "6440:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 411,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6449:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6440:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "4e6f206c75636b2e",
                                  "id": 412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6454:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c69ac3f68cfe1a47905034708a786a2148d121883dbf9372da36b09cc276002a",
                                    "typeString": "literal_string \"No luck.\""
                                  },
                                  "value": "No luck."
                                },
                                "src": "6440:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 414,
                              "nodeType": "ExpressionStatement",
                              "src": "6440:24:2"
                            },
                            {
                              "expression": {
                                "id": 415,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "6489:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "functionReturnParameters": 348,
                              "id": 416,
                              "nodeType": "Return",
                              "src": "6482:15:2"
                            }
                          ]
                        },
                        "id": 418,
                        "nodeType": "IfStatement",
                        "src": "6060:452:2",
                        "trueBody": {
                          "id": 397,
                          "nodeType": "Block",
                          "src": "6294:51:2",
                          "statements": [
                            {
                              "id": 396,
                              "nodeType": "UncheckedBlock",
                              "src": "6312:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "6322:7:2",
                                    "subExpression": {
                                      "id": 393,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 350,
                                      "src": "6324:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 395,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6322:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 422,
                        "nodeType": "UncheckedBlock",
                        "src": "6525:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6535:3:2",
                              "subExpression": {
                                "id": 419,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "6537:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 421,
                            "nodeType": "ExpressionStatement",
                            "src": "6535:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 356,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "6025:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 357,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "6028:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6028:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6025:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 424,
                  "initializationExpression": {
                    "assignments": [
                      353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6020:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6012:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6012:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 355,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6022:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6012:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6008:542:2"
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "6576:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 510,
                      "src": "6560:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 427,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6560:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 428,
                        "nodeType": "ArrayTypeName",
                        "src": "6560:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 435,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 433,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "6599:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6586:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 430,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6590:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 431,
                        "nodeType": "ArrayTypeName",
                        "src": "6590:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6586:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6560:45:2"
                },
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "6623:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 510,
                      "src": "6615:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6615:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6633:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6615:19:2"
                },
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "6682:475:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 448,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "6699:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 450,
                                      "indexExpression": {
                                        "id": 449,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 441,
                                        "src": "6709:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6699:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 451,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastActiveTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "6699:32:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 454,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 452,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6732:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 453,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6732:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6699:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 455,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6746:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6746:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6699:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 458,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "6777:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 460,
                                    "indexExpression": {
                                      "id": 459,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 441,
                                      "src": "6787:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6777:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "6777:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 462,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6806:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6806:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6777:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6699:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 466,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "6825:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 468,
                                  "indexExpression": {
                                    "id": 467,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 441,
                                    "src": "6835:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6825:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 469,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "6825:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 470,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6853:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6853:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6825:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6699:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 474,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "6884:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 476,
                                "indexExpression": {
                                  "id": 475,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "6894:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6884:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "6884:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6914:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6884:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6699:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 501,
                        "nodeType": "IfStatement",
                        "src": "6696:423:2",
                        "trueBody": {
                          "id": 500,
                          "nodeType": "Block",
                          "src": "6930:189:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 481,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 429,
                                    "src": "6948:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 483,
                                  "indexExpression": {
                                    "id": 482,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 441,
                                    "src": "6956:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6948:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 484,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "6961:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 486,
                                    "indexExpression": {
                                      "id": 485,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 441,
                                      "src": "6971:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6961:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 487,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "6961:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "6948:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 489,
                              "nodeType": "ExpressionStatement",
                              "src": "6948:34:2"
                            },
                            {
                              "id": 493,
                              "nodeType": "UncheckedBlock",
                              "src": "7000:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7010:9:2",
                                    "subExpression": {
                                      "id": 490,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 437,
                                      "src": "7012:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 492,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7010:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 494,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 437,
                                  "src": "7041:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 495,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 350,
                                  "src": "7052:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7041:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 499,
                              "nodeType": "IfStatement",
                              "src": "7038:67:2",
                              "trueBody": {
                                "id": 498,
                                "nodeType": "Block",
                                "src": "7059:46:2",
                                "statements": [
                                  {
                                    "id": 497,
                                    "nodeType": "Break",
                                    "src": "7081:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 505,
                        "nodeType": "UncheckedBlock",
                        "src": "7132:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7142:3:2",
                              "subExpression": {
                                "id": 502,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 441,
                                "src": "7144:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 504,
                            "nodeType": "ExpressionStatement",
                            "src": "7142:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 444,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "6661:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 445,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "6664:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6664:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6661:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 507,
                  "initializationExpression": {
                    "assignments": [
                      441
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6656:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6648:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6648:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 443,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6658:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6648:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6644:513:2"
                },
                {
                  "expression": {
                    "id": 508,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "7173:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 509,
                  "nodeType": "Return",
                  "src": "7166:14:2"
                }
              ]
            },
            "functionSelector": "551bbe0b",
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "5909:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:2:2"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "5958:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 345,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5958:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 346,
                    "nodeType": "ArrayTypeName",
                    "src": "5958:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5957:17:2"
            },
            "scope": 1456,
            "src": "5900:1287:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "7354:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 518,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7364:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5423",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 520,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "7385:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 519,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5423,
                        "src": "7377:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5423_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7377:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5423",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "7364:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5423",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "7364:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 515,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3863,
                  "src": "7344:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7344:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "7306:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "7328:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "7320:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7320:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7319:15:2"
            },
            "returnParameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7354:0:2"
            },
            "scope": 1456,
            "src": "7297:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "7751:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 531,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7805:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5423",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 533,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "7826:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 532,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5423,
                        "src": "7818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5423_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7818:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5423",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "7805:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5423",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "7805:26:2"
                }
              ]
            },
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "7632:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 538,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "7746:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "7738:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7738:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7737:14:2"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7751:0:2"
            },
            "scope": 1456,
            "src": "7726:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "7966:7:2",
              "statements": []
            },
            "id": 542,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7946:2:2"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7966:0:2"
            },
            "scope": 1456,
            "src": "7939:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "8063:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 554,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "8081:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 555,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "8094:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8081:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8110:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8073:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 563,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 546,
                              "src": "8166:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 561,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "8147:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5423",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2073,
                            "src": "8147:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8147:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8174:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8174:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8147:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8186:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8139:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8139:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "8139:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 572,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "8223:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 574,
                            "indexExpression": {
                              "id": 573,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "8242:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8223:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 576,
                          "indexExpression": {
                            "id": 575,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "8254:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8223:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8262:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8223:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8265:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8215:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8215:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "8215:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 583,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "8299:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8306:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8299:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 586,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "8311:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 587,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "8320:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 589,
                              "indexExpression": {
                                "id": 588,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "8330:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8320:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "8320:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8311:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8299:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8291:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8291:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "8291:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 596,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8376:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8376:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 598,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "8394:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 600,
                            "indexExpression": {
                              "id": 599,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "8404:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8394:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "8394:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "8376:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8368:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8368:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "8368:61:2"
                },
                {
                  "expression": {
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 605,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "8439:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 608,
                        "indexExpression": {
                          "id": 606,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "8458:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8439:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 609,
                      "indexExpression": {
                        "id": 607,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "8470:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8439:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 610,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "8479:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8487:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8479:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8439:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "8439:49:2"
                },
                {
                  "expression": {
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 615,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "8531:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 617,
                          "indexExpression": {
                            "id": 616,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "8541:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8531:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "8531:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 620,
                      "indexExpression": {
                        "id": 619,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "8559:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8531:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8569:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8531:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "8531:39:2"
                },
                {
                  "expression": {
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 624,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "8599:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "id": 625,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "8609:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8599:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "8599:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8635:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8599:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 550,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1446,
                  "src": "8052:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8052:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "7988:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "8001:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "7993:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7993:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "8021:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8013:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "8036:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8028:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7992:50:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8063:0:2"
            },
            "scope": 1456,
            "src": "7979:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "8871:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 650,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "8889:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8908:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8889:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 653,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "8913:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8932:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "8913:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8889:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8937:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8881:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8881:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "8881:84:2"
                },
                {
                  "expression": {
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 660,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "8975:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8993:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8975:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "8975:19:2"
                },
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "9042:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "9025:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 665,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 664,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "9025:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "9025:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "baseExpression": {
                      "id": 667,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "9055:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 669,
                    "indexExpression": {
                      "id": 668,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "9065:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9055:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9025:55:2"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 671,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9094:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "9094:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 674,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "9120:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "9094:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "9094:39:2"
                },
                {
                  "expression": {
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 677,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9147:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "9147:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 680,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "9173:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "9147:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "9147:39:2"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 683,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9200:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "9200:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 686,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "9229:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "9200:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "9200:45:2"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 689,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9259:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "9259:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 692,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "9281:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "9259:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "9259:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 696,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "9317:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 699,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "9335:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9328:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 697,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "9328:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9328:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9352:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 702,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "9355:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 703,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "9367:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 704,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "9382:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 705,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "9397:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 695,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "9301:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9301:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "9301:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 647,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 646,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1455,
                  "src": "8861:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8861:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "8698:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "8729:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8713:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8713:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "8747:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8740:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "8772:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8765:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "8765:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "8791:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8784:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8784:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "8813:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8806:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "8835:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8828:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8828:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8712:139:2"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8871:0:2"
            },
            "scope": 1456,
            "src": "8689:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "9655:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "9681:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 729,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "9695:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 730,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "9713:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 731,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "9725:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 732,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "9740:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 733,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "9755:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 726,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "9665:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9665:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "9665:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 723,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1455,
                  "src": "9645:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9645:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "9467:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "9498:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9482:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9482:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "9515:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9509:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9509:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "9540:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9533:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "9533:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "9559:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9552:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9552:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "9597:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9590:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9590:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "9619:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "9612:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9481:154:2"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9655:0:2"
            },
            "scope": 1456,
            "src": "9458:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "9989:726:2",
              "statements": [
                {
                  "assignments": [
                    755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "10007:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "9999:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9999:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "expression": {
                      "id": 756,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "10025:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "10025:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9999:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 759,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "10051:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "10051:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10051:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "10051:16:2"
                },
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "10094:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "10077:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 765,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 764,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "10077:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "10077:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 770,
                  "initialValue": {
                    "baseExpression": {
                      "id": 767,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "10108:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 769,
                    "indexExpression": {
                      "id": 768,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "10118:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10108:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10077:57:2"
                },
                {
                  "expression": {
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 771,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10148:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "10148:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 774,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "10170:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "10148:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "10148:31:2"
                },
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 777,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10193:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "10193:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10214:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10193:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "10193:26:2"
                },
                {
                  "expression": {
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 783,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10233:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "10233:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 786,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "10258:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "10233:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "10233:36:2"
                },
                {
                  "expression": {
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 789,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10283:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "10283:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 792,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "10313:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10283:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "10283:46:2"
                },
                {
                  "expression": {
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 795,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10343:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "10343:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 798,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "10367:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "10343:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "10343:34:2"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 801,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10391:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 803,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "10391:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 804,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "10418:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "10391:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "10391:40:2"
                },
                {
                  "expression": {
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 807,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10445:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "10445:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 810,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "10472:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "10445:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "10445:40:2"
                },
                {
                  "expression": {
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 813,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "10499:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "10499:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 816,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "10528:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "10499:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "10499:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 820,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "10608:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 821,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "10619:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 822,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "10632:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 823,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "10650:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 824,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "10662:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 825,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "10677:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 826,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "10692:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 819,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "10589:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10589:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "EmitStatement",
                  "src": "10584:124:2"
                }
              ]
            },
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "9793:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "9825:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9809:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9809:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "9843:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9836:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9836:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "9862:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9856:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9856:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "9887:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9880:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "9880:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "9919:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9912:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9912:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "9941:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9934:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9934:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "9963:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "9956:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9956:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9808:171:2"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9989:0:2"
            },
            "scope": 1456,
            "src": "9784:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "10787:1600:2",
              "statements": [
                {
                  "assignments": [
                    836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "10805:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 931,
                      "src": "10797:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10797:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "10851:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 837,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1797,
                        "src": "10827:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$1797_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1780,
                      "src": "10827:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1475_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10827:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10797:69:2"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "10888:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 931,
                      "src": "10876:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 843,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 842,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "10876:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "10876:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10876:18:2"
                },
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "10912:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 931,
                      "src": "10904:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10904:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10904:14:2"
                },
                {
                  "body": {
                    "id": 924,
                    "nodeType": "Block",
                    "src": "11056:1242:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 856,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "11074:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 857,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "11074:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 858,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11113:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11113:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11074:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 861,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "11132:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 862,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "11132:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 863,
                                "name": "_wizID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 832,
                                "src": "11148:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11132:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11074:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 866,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "11158:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "11158:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 868,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "11177:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11158:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11074:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 923,
                        "nodeType": "IfStatement",
                        "src": "11070:1218:2",
                        "trueBody": {
                          "id": 922,
                          "nodeType": "Block",
                          "src": "11184:1104:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 871,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "11329:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 876,
                                          "name": "tasksSubmitted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 94,
                                          "src": "11366:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 877,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 850,
                                          "src": "11382:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 874,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1797,
                                          "src": "11346:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$1797_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1734,
                                        "src": "11346:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1475_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 878,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11346:38:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11338:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 872,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11338:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11338:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11329:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 881,
                              "nodeType": "ExpressionStatement",
                              "src": "11329:56:2"
                            },
                            {
                              "expression": {
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 882,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "11403:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 883,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "11412:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 885,
                                  "indexExpression": {
                                    "id": 884,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 847,
                                    "src": "11418:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11412:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "src": "11403:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 887,
                              "nodeType": "ExpressionStatement",
                              "src": "11403:22:2"
                            },
                            {
                              "expression": {
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 888,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 844,
                                    "src": "12059:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 890,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "12059:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 893,
                                      "name": "_wizID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 832,
                                      "src": "12086:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12079:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 891,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12079:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12079:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "12059:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 896,
                              "nodeType": "ExpressionStatement",
                              "src": "12059:34:2"
                            },
                            {
                              "expression": {
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 897,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 844,
                                    "src": "12111:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 899,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "12111:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 902,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "12157:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 903,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "12157:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 904,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "12175:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12157:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12150:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 900,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12150:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12150:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "12111:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 908,
                              "nodeType": "ExpressionStatement",
                              "src": "12111:81:2"
                            },
                            {
                              "expression": {
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 909,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "12210:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 918,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 914,
                                            "name": "tasksSubmitted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "12244:14:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            }
                                          },
                                          {
                                            "id": 915,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 850,
                                            "src": "12260:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 912,
                                            "name": "DoubleEndedQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1797,
                                            "src": "12224:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$1797_$",
                                              "typeString": "type(library DoubleEndedQueue)"
                                            }
                                          },
                                          "id": 913,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "at",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1734,
                                          "src": "12224:19:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1475_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                            "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                          }
                                        },
                                        "id": 916,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12224:38:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12216:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 910,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12216:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 917,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12216:47:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12210:54:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 919,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "12267:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "12210:63:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 921,
                              "nodeType": "ExpressionStatement",
                              "src": "12210:63:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 853,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "11030:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 854,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "11034:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11030:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "initializationExpression": {
                    "assignments": [
                      850
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11024:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 925,
                        "src": "11016:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 852,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11027:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11016:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "11012:1286:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 927,
                        "name": "_wizID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "12365:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 928,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "12373:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 926,
                      "name": "VerificationAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "12344:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12344:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 930,
                  "nodeType": "EmitStatement",
                  "src": "12339:41:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "10731:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "10770:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "10762:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10762:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10761:16:2"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10787:0:2"
            },
            "scope": 1456,
            "src": "10722:1665:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1033,
              "nodeType": "Block",
              "src": "13046:807:2",
              "statements": [
                {
                  "body": {
                    "id": 1031,
                    "nodeType": "Block",
                    "src": "13183:664:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 955,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "13221:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 957,
                                      "indexExpression": {
                                        "id": 956,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 942,
                                        "src": "13231:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13221:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "13221:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 953,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13210:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "13210:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13210:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 952,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13200:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13200:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 964,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 934,
                                    "src": "13269:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 962,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13258:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 963,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "13258:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13258:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 961,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13248:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13248:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "13200:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1030,
                        "nodeType": "IfStatement",
                        "src": "13197:640:2",
                        "trueBody": {
                          "id": 1029,
                          "nodeType": "Block",
                          "src": "13281:556:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 969,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "13367:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 971,
                                          "indexExpression": {
                                            "id": 970,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 942,
                                            "src": "13377:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13367:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 972,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "13367:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 973,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "13396:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 974,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "13396:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13367:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 976,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "13415:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 977,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "13415:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 978,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "13434:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 980,
                                          "indexExpression": {
                                            "id": 979,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 942,
                                            "src": "13444:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13434:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 981,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "13434:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "13415:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "13367:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13461:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 968,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "13359:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13359:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 986,
                              "nodeType": "ExpressionStatement",
                              "src": "13359:124:2"
                            },
                            {
                              "assignments": [
                                989
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 989,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "13548:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1029,
                                  "src": "13536:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 988,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 987,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "13536:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "13536:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1008,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 991,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 934,
                                    "src": "13562:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 992,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 938,
                                    "src": "13572:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 993,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 936,
                                    "src": "13580:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 994,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13587:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 995,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "13590:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 997,
                                      "indexExpression": {
                                        "id": 996,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 942,
                                        "src": "13600:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13590:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 998,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "13590:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 999,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "13620:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1001,
                                      "indexExpression": {
                                        "id": 1000,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 942,
                                        "src": "13630:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13620:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1002,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "13620:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13644:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13647:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13650:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1006,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13653:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 990,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "13557:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13557:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13536:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1012,
                                    "name": "tasksSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "13699:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1015,
                                        "name": "tasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "13723:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1014,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13715:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1013,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13715:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1016,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13715:23:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1475_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1009,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1797,
                                    "src": "13673:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$1797_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1507,
                                  "src": "13673:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$1475_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13673:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1018,
                              "nodeType": "ExpressionStatement",
                              "src": "13673:66:2"
                            },
                            {
                              "expression": {
                                "id": 1023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1019,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "13757:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1021,
                                  "indexExpression": {
                                    "id": 1020,
                                    "name": "tasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "13763:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13757:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1022,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "13781:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "13757:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1024,
                              "nodeType": "ExpressionStatement",
                              "src": "13757:30:2"
                            },
                            {
                              "expression": {
                                "id": 1027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1025,
                                  "name": "tasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "13805:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13821:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "13805:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1028,
                              "nodeType": "ExpressionStatement",
                              "src": "13805:17:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 945,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "13159:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 946,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "13161:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13161:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13159:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "initializationExpression": {
                    "assignments": [
                      942
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13152:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "13144:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13144:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 944,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13156:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13144:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13179:3:2",
                      "subExpression": {
                        "id": 949,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "13179:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 951,
                    "nodeType": "ExpressionStatement",
                    "src": "13179:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "13140:707:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "12969:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "12996:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "12982:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12982:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "13015:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "13007:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "13029:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "13022:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13022:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12981:55:2"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13046:0:2"
            },
            "scope": 1456,
            "src": "12960:893:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "13950:412:2",
              "statements": [
                {
                  "assignments": [
                    1045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "13973:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "13960:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1044,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13960:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1048,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "14002:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1050,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14010:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14002:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1046,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13985:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "13985:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13985:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13960:53:2"
                },
                {
                  "condition": {
                    "id": 1053,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1041,
                    "src": "14026:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1082,
                  "nodeType": "IfStatement",
                  "src": "14023:193:2",
                  "trueBody": {
                    "id": 1081,
                    "nodeType": "Block",
                    "src": "14036:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1079,
                          "nodeType": "Block",
                          "src": "14089:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1062,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1039,
                                    "src": "14107:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1064,
                                  "indexExpression": {
                                    "id": 1063,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1055,
                                    "src": "14115:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14107:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1068,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1039,
                                            "src": "14147:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1070,
                                          "indexExpression": {
                                            "id": 1069,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1055,
                                            "src": "14155:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14147:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1066,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "14130:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1067,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "14130:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1071,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14130:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1065,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "14120:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14120:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "14107:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1074,
                              "nodeType": "ExpressionStatement",
                              "src": "14107:52:2"
                            },
                            {
                              "id": 1078,
                              "nodeType": "UncheckedBlock",
                              "src": "14177:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "14187:3:2",
                                    "subExpression": {
                                      "id": 1075,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1055,
                                      "src": "14189:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1077,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14187:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1058,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "14069:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1059,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "14073:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14073:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14069:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1080,
                        "initializationExpression": {
                          "assignments": [
                            1055
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1055,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "14062:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1080,
                              "src": "14054:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1054,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14054:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1057,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14066:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14054:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "14050:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1084,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "14233:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "14225:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1083,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14225:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1091,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1088,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "14269:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1086,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14252:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14252:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14252:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1085,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14242:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14242:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14225:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1093,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "14305:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "14313:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1095,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "14321:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14313:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1097,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "14333:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1099,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14341:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14333:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1100,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "14345:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1092,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "14293:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14293:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "EmitStatement",
                  "src": "14288:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "13868:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "13888:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13880:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13880:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "13917:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13900:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1037,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "13900:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1038,
                    "nodeType": "ArrayTypeName",
                    "src": "13900:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "13931:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "13926:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13926:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13879:61:2"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13950:0:2"
            },
            "scope": 1456,
            "src": "13859:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1409,
              "nodeType": "Block",
              "src": "15164:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1117,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "15251:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1115,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "15232:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$5423",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2073,
                              "src": "15232:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15232:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1119,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15262:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15262:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15232:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1122,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "15276:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1124,
                              "indexExpression": {
                                "id": 1123,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1108,
                                "src": "15282:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15276:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "15276:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1126,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "15303:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15276:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15232:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15311:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15224:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15224:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "15224:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1133,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "15364:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15364:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15381:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15364:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15356:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15356:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "15356:27:2"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "15407:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "15394:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1139,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "15394:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "15394:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1145,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1142,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "15416:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1144,
                    "indexExpression": {
                      "id": 1143,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "15422:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15416:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15394:36:2"
                },
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "15448:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "15440:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15440:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1149,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15456:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15440:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1150,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "15987:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "15987:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16006:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15987:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1182,
                  "nodeType": "IfStatement",
                  "src": "15984:205:2",
                  "trueBody": {
                    "id": 1181,
                    "nodeType": "Block",
                    "src": "16009:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1179,
                          "nodeType": "Block",
                          "src": "16062:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1162,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1111,
                                    "src": "16080:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1164,
                                  "indexExpression": {
                                    "id": 1163,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1155,
                                    "src": "16088:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16080:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1168,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1111,
                                            "src": "16120:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1170,
                                          "indexExpression": {
                                            "id": 1169,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1155,
                                            "src": "16128:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16120:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1166,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "16103:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "16103:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16103:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1165,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "16093:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16093:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "16080:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1174,
                              "nodeType": "ExpressionStatement",
                              "src": "16080:52:2"
                            },
                            {
                              "id": 1178,
                              "nodeType": "UncheckedBlock",
                              "src": "16150:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "16160:3:2",
                                    "subExpression": {
                                      "id": 1175,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1155,
                                      "src": "16162:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1177,
                                  "nodeType": "ExpressionStatement",
                                  "src": "16160:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1158,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "16042:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1159,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "16046:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16046:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16042:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1180,
                        "initializationExpression": {
                          "assignments": [
                            1155
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1155,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16035:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1180,
                              "src": "16027:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1154,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16027:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1157,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16039:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16027:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "16023:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "16206:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "16198:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16198:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1191,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1188,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "16242:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1186,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16225:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16225:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16225:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1185,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16215:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16215:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16198:53:2"
                },
                {
                  "assignments": [
                    1193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1193,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "16270:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1409,
                      "src": "16262:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16262:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1201,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1194,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "16284:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "16284:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1196,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1184,
                        "src": "16299:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "16284:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16312:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16284:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16308:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16262:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1203,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1106,
                        "src": "16351:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1204,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "16359:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "16359:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1206,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "16373:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1207,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1184,
                        "src": "16382:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1208,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "16390:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16403:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16390:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1202,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "16329:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16329:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "EmitStatement",
                  "src": "16324:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1213,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "16420:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16434:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "16420:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1407,
                    "nodeType": "Block",
                    "src": "17281:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1296,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "17429:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "17429:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1298,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1184,
                            "src": "17449:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "17429:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1405,
                          "nodeType": "Block",
                          "src": "18265:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1379
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1379,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "18379:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1405,
                                  "src": "18371:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1378,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18371:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1382,
                              "initialValue": {
                                "expression": {
                                  "id": 1380,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1141,
                                  "src": "18387:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1381,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "18387:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "18371:30:2"
                            },
                            {
                              "expression": {
                                "id": 1386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "18419:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1383,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "18426:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1385,
                                  "indexExpression": {
                                    "id": 1384,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1108,
                                    "src": "18432:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18426:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1387,
                              "nodeType": "ExpressionStatement",
                              "src": "18419:21:2"
                            },
                            {
                              "assignments": [
                                1389,
                                1391
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1389,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "18464:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1405,
                                  "src": "18459:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1388,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18459:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1391,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "18483:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1405,
                                  "src": "18470:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1390,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18470:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1399,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1397,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18518:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1392,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3849,
                                        "src": "18491:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1393,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18491:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "18491:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1395,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1379,
                                      "src": "18511:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "18491:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18491:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "18458:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1401,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1389,
                                    "src": "18597:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18603:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1400,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18589:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18589:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1404,
                              "nodeType": "ExpressionStatement",
                              "src": "18589:37:2"
                            }
                          ]
                        },
                        "id": 1406,
                        "nodeType": "IfStatement",
                        "src": "17426:1246:2",
                        "trueBody": {
                          "id": 1377,
                          "nodeType": "Block",
                          "src": "17456:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1301
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1301,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "17482:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1377,
                                  "src": "17474:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1300,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17474:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1306,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1302,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1141,
                                    "src": "17490:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "17490:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17505:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "17490:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17474:32:2"
                            },
                            {
                              "assignments": [
                                1308
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1308,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "17540:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1377,
                                  "src": "17524:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1307,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17524:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1317,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1313,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1141,
                                          "src": "17581:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1314,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "17581:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1311,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "17562:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$5423",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2073,
                                      "src": "17562:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17562:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "17554:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1309,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17554:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17554:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17524:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1321,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1141,
                                      "src": "17640:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1322,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "17640:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1323,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "17658:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1318,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "17618:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5423",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5151,
                                  "src": "17618:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17618:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1325,
                              "nodeType": "ExpressionStatement",
                              "src": "17618:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1329,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1106,
                                    "src": "17724:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1330,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "17732:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1326,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "17702:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5423",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5151,
                                  "src": "17702:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17702:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1332,
                              "nodeType": "ExpressionStatement",
                              "src": "17702:56:2"
                            },
                            {
                              "expression": {
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1333,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1141,
                                    "src": "17777:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1335,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "17777:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17792:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17777:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1338,
                              "nodeType": "ExpressionStatement",
                              "src": "17777:16:2"
                            },
                            {
                              "expression": {
                                "id": 1342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "17840:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1339,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "17847:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1341,
                                  "indexExpression": {
                                    "id": 1340,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1108,
                                    "src": "17853:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17847:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1343,
                              "nodeType": "ExpressionStatement",
                              "src": "17840:21:2"
                            },
                            {
                              "assignments": [
                                1345,
                                1347
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1345,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "17928:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1377,
                                  "src": "17923:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1344,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17923:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1347,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "17947:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1377,
                                  "src": "17934:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1346,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17934:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1354,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17986:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1348,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1308,
                                      "src": "17955:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "17955:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1350,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1301,
                                      "src": "17979:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "17955:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17955:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17922:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1356,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1345,
                                    "src": "18015:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18021:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1355,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18007:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18007:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1359,
                              "nodeType": "ExpressionStatement",
                              "src": "18007:37:2"
                            },
                            {
                              "expression": {
                                "id": 1370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1360,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1345,
                                      "src": "18100:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1361,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1347,
                                      "src": "18106:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1362,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "18099:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18144:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1363,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "18114:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1364,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "18114:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1365,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "18114:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1366,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1301,
                                        "src": "18137:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "18114:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18114:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "18099:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1371,
                              "nodeType": "ExpressionStatement",
                              "src": "18099:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1373,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1345,
                                    "src": "18173:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18179:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1372,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18165:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18165:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1376,
                              "nodeType": "ExpressionStatement",
                              "src": "18165:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1408,
                  "nodeType": "IfStatement",
                  "src": "16416:2266:2",
                  "trueBody": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "16436:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1217,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "16522:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "16514:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1216,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16514:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1222,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1218,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "16530:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "16530:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16545:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "16530:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16514:32:2"
                      },
                      {
                        "assignments": [
                          1224
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1224,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "16576:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "16560:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16560:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1233,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1229,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1141,
                                    "src": "16619:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "16619:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1227,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "16600:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$5423",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2073,
                                "src": "16600:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16600:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16592:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16592:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16592:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16560:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1237,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1141,
                                "src": "16729:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "16729:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1239,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1141,
                                "src": "16743:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "16743:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1234,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "16707:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5423",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5151,
                            "src": "16707:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16707:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "16707:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1246,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1141,
                                "src": "16796:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "16796:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1248,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "16815:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1243,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "16774:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5423",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5151,
                            "src": "16774:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16774:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1250,
                        "nodeType": "ExpressionStatement",
                        "src": "16774:67:2"
                      },
                      {
                        "expression": {
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1251,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "16856:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "16856:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16871:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16856:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "16856:16:2"
                      },
                      {
                        "expression": {
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "16915:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1257,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "16922:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1259,
                            "indexExpression": {
                              "id": 1258,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "16928:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16922:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1261,
                        "nodeType": "ExpressionStatement",
                        "src": "16915:21:2"
                      },
                      {
                        "assignments": [
                          1263,
                          1265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1263,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "16995:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "16990:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1262,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "16990:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1265,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "17014:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1295,
                            "src": "17001:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1264,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17001:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1272,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17055:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1266,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1224,
                                "src": "17022:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "17022:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1268,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1217,
                                "src": "17048:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "17022:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17022:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16989:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1274,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "17080:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17086:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1273,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17072:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17072:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "17072:37:2"
                      },
                      {
                        "expression": {
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1278,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1263,
                                "src": "17157:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1279,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1265,
                                "src": "17163:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1280,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "17156:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17201:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1281,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "17171:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "17171:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "17171:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1284,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1217,
                                  "src": "17194:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "17171:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17171:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "17156:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1289,
                        "nodeType": "ExpressionStatement",
                        "src": "17156:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1291,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "17226:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17232:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1290,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17218:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17218:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "17218:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "15077:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15104:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "15096:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15096:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "15120:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "15112:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15112:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "15146:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "15129:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1109,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "15129:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1110,
                    "nodeType": "ArrayTypeName",
                    "src": "15129:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15095:59:2"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15164:0:2"
            },
            "scope": 1456,
            "src": "15068:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "18797:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18815:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18821:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18807:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18807:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "18807:30:2"
                },
                {
                  "id": 1417,
                  "nodeType": "PlaceholderStatement",
                  "src": "18847:1:2"
                }
              ]
            },
            "id": 1419,
            "name": "onlyAdmin",
            "nameLocation": "18785:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18794:2:2"
            },
            "src": "18776:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "18885:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18903:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18909:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18895:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18895:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "18895:30:2"
                },
                {
                  "id": 1426,
                  "nodeType": "PlaceholderStatement",
                  "src": "18935:1:2"
                }
              ]
            },
            "id": 1428,
            "name": "onlyNFTOwner",
            "nameLocation": "18870:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18882:2:2"
            },
            "src": "18861:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "18971:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18989:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18995:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18981:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18981:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1434,
                  "nodeType": "ExpressionStatement",
                  "src": "18981:31:2"
                },
                {
                  "id": 1435,
                  "nodeType": "PlaceholderStatement",
                  "src": "19022:1:2"
                }
              ]
            },
            "id": 1437,
            "name": "onlyLessee",
            "nameLocation": "18958:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18968:2:2"
            },
            "src": "18949:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1445,
              "nodeType": "Block",
              "src": "19058:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19098:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19104:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19090:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "19090:31:2"
                },
                {
                  "id": 1444,
                  "nodeType": "PlaceholderStatement",
                  "src": "19131:1:2"
                }
              ]
            },
            "id": 1446,
            "name": "onlyMember",
            "nameLocation": "19045:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19055:2:2"
            },
            "src": "19036:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1454,
              "nodeType": "Block",
              "src": "19189:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19207:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19212:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19199:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19199:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "19199:36:2"
                },
                {
                  "id": 1453,
                  "nodeType": "PlaceholderStatement",
                  "src": "19266:1:2"
                }
              ]
            },
            "id": 1455,
            "name": "onlyBoard",
            "nameLocation": "19177:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19186:2:2"
            },
            "src": "19168:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1457,
        "src": "743:18538:2",
        "usedErrors": [
          1466
        ]
      }
    ],
    "src": "0:19281:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b50604051620032c2380380620032c28339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b6131b7806200010b6000396000f3fe6080604052600436106101235760003560e01c8063826b8ebd116100a0578063beca3a1611610064578063beca3a16146103a7578063d374a217146103c7578063f18c51d3146103e7578063f2fde38b14610407578063ff9810991461042757600080fd5b8063826b8ebd146102dc5780638a6655d6146102fc5780638d9776721461031c5780638da5cb5b14610352578063976217cd1461037a57600080fd5b806361f9e9a8116100e757806361f9e9a8146102215780636215597b1461024157806369d0373814610287578063715018a6146102a757806372e185ce146102bc57600080fd5b8063013cf08b1461012f57806309265ce61461016957806310190ef11461018b578063379d94cc146101bf578063551bbe0b146101ff57600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5061014f61014a366004612585565b610454565b6040516101609594939291906125eb565b60405180910390f35b34801561017557600080fd5b506101896101843660046126f6565b610520565b005b34801561019757600080fd5b506101ab6101a6366004612585565b610666565b604051610160989796959493929190612756565b3480156101cb57600080fd5b506005546101e590600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610160565b34801561020b57600080fd5b50610214610770565b60405161016091906127bb565b34801561022d57600080fd5b5061018961023c3660046128a5565b610b35565b34801561024d57600080fd5b5061027961025c366004612943565b600360209081526000928352604080842090915290825290205481565b604051908152602001610160565b34801561029357600080fd5b506101896102a236600461297a565b610b5d565b3480156102b357600080fd5b50610189610ba9565b3480156102c857600080fd5b506101896102d736600461299e565b610bdf565b3480156102e857600080fd5b506102796102f7366004612585565b610f5a565b34801561030857600080fd5b50610189610317366004612a4d565b611167565b34801561032857600080fd5b5061033c610337366004612585565b6111a0565b6040516101609a99989796959493929190612a79565b34801561035e57600080fd5b506001546040516001600160a01b039091168152602001610160565b34801561038657600080fd5b5061039a610395366004612585565b6112a2565b6040516101609190612afa565b3480156103b357600080fd5b506101896103c2366004612bc8565b6113e4565b3480156103d357600080fd5b506101896103e2366004612585565b6114f9565b3480156103f357600080fd5b50610189610402366004612c19565b611841565b34801561041357600080fd5b5061018961042236600461297a565b611fe7565b34801561043357600080fd5b50610447610442366004612585565b612082565b6040516101609190612c69565b60076020526000908152604090208054819061046f90612cb1565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90612cb1565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061053557610535612ceb565b602002602001015160405160200161054f91815260200190565b604051602081830303815290604052905081156105db5760005b83518110156105d95783818151811061058457610584612ceb565b602002602001015160405160200161059e91815260200190565b604051602081830303815290604052805190602001208482815181106105c6576105c6612ceb565b6020908102919091010152600101610569565b505b6000836040516020016105ee9190612d01565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061063e5761063e612ceb565b6020026020010151856040516106579493929190612d37565b60405180910390a15050505050565b6004818154811061067657600080fd5b906000526020600020906003020160009150905080600101805461069990612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590612cb1565b80156107125780601f106106e757610100808354040283529160200191610712565b820191906000526020600020905b8154815290600101906020018083116106f557829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000805b6004548110156108f957426004828154811061079457610794612ceb565b600091825260208083203384526003909202909101905260409020541080156107f1575042600482815481106107cc576107cc612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156108305750426004828154811061080c5761080c612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561086d575060016004828154811061084c5761084c612ceb565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561087d578160010191506108f1565b604080516001808252818301909252600091816020015b606081526020019060019003908161089457905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106108df576108df612ceb565b60209081029190910101529392505050565b600101610776565b5060008167ffffffffffffffff8111156109155761091561262f565b60405190808252806020026020018201604052801561094857816020015b60608152602001906001900390816109335790505b5090506000805b600454811015610b2c57426004828154811061096d5761096d612ceb565b600091825260208083203384526003909202909101905260409020541080156109ca575042600482815481106109a5576109a5612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015610a09575042600482815481106109e5576109e5612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015610a465750600160048281548110610a2557610a25612ceb565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15610b245760048181548110610a5e57610a5e612ceb565b90600052602060002090600302016001018054610a7a90612cb1565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690612cb1565b8015610af35780601f10610ac857610100808354040283529160200191610af3565b820191906000526020600020905b815481529060010190602001808311610ad657829003601f168201915b5050505050838281518110610b0a57610b0a612ceb565b602002602001018190525081600101915083821015610b2c575b60010161094f565b50909392505050565b610b43565b60405180910390fd5b610b548787600088888888886121a8565b50505050505050565b6001546001600160a01b03163314610b875760405162461bcd60e51b8152600401610b3a90612d68565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610bd35760405162461bcd60e51b8152600401610b3a90612d68565b610bdd6000612327565b565b60005b600454811015610f545783604051602001610bfd9190612d9d565b6040516020818303038152906040528051906020012060048281548110610c2657610c26612ceb565b9060005260206000209060030201600101604051602001610c479190612db0565b6040516020818303038152906040528051906020012003610f42574260048281548110610c7657610c76612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610cda575060048181548110610cb457610cb4612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610d1c5760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610b3a565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610d5f57610d5f612ceb565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610d9957610d99612ceb565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610e379082612e8a565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610f3b908490612f60565b9091555050505b80610f4c81612f78565b915050610be2565b50505050565b60006008548210610fa05760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610b3a565b600082815260076020526040902060030154600160501b900464ffffffffff1642116110045760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610b3a565b6000806000805b60008681526007602052604090206001015461ffff168110156111255760008681526007602052604090208390600201826008811061104c5761104c612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff1611156110c7576000868152600760205260409020600201816008811061109257611092612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036110c257600091505b611113565b6000868152600760205260409020839060020182600881106110eb576110eb612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff160361111357600191505b8061111d81612f78565b91505061100b565b508015610b2c5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610b3a565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610b3a565b6009602052600090815260409020805481906111bb90612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546111e790612cb1565b80156112345780601f1061120957610100808354040283529160200191611234565b820191906000526020600020905b81548152906001019060200180831161121757829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6112aa6124e7565b60008281526009602052604090819020815161014081019092528054829082906112d390612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546112ff90612cb1565b801561134c5780601f106113215761010080835404028352916020019161134c565b820191906000526020600020905b81548152906001019060200180831161132f57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60018561ffff161180156113fd57506101018561ffff16105b6114495760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610b3a565b60016008600082825461145c9190612f60565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff8816179055806114db888a83612fae565b506114ef88886008546000898989896121a8565b5050505050505050565b6000611514600554600f81810b600160801b909204900b0390565b905061151e6124e7565b6000805b83811015611801574283610120015164ffffffffff16108015611550575084836020015164ffffffffff1614155b801561156557508483610100015161ffff1614155b156117fc57611575600582612379565b600081815260096020526040908190208151610140810190925280549294509091829082906115a390612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546115cf90612cb1565b801561161c5780601f106115f15761010080835404028352916020019161161c565b820191906000526020600020905b8154815290600101906020018083116115ff57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b549093506116d09042612f60565b64ffffffffff1661012084015282600960006116ed600585612379565b815260208101919091526040016000208151819061170b9082612e8a565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b611522565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561188a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ae9190612f91565b6001600160a01b03161480156118df5750600082815260096020526040902060040154600160701b900461ffff1683145b61192b5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610b3a565b600081511161193957600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff16156119d45760005b83518110156119d25783818151811061197d5761197d612ceb565b602002602001015160405160200161199791815260200190565b604051602081830303815290604052805190602001208482815181106119bf576119bf612ceb565b6020908102919091010152600101611962565b505b6000836040516020016119e79190612d01565b604051602081830303815290604052805190602001209050600081846002015414611a13576000611a16565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611d7c576004840154600090611aa690600290600160201b90046001600160501b031661306f565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b369190612f91565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611c1c57600080fd5b505af1158015611c30573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611c66828261253b565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611ce4576040519150601f19603f3d011682016040523d82523d6000602084013e611ce9565b606091505b509150915081611d0b5760405162461bcd60e51b8152600401610b3a906130a3565b60405133908590600081818185875af1925050503d8060008114611d4b576040519150601f19603f3d011682016040523d82523d6000602084013e611d50565b606091505b50909250905081611d735760405162461bcd60e51b8152600401610b3a906130a3565b50505050610b54565b81846003015403611ef3576004840154600090611dab90600290600160201b90046001600160501b031661306f565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190612f91565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611e9f57600080fd5b505af1158015611eb3573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611c02565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190611f23828261253b565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580611f6a6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114611fb4576040519150601f19603f3d011682016040523d82523d6000602084013e611fb9565b606091505b509150915081611fdb5760405162461bcd60e51b8152600401610b3a906130a3565b50505050505050505050565b6001546001600160a01b031633146120115760405162461bcd60e51b8152600401610b3a90612d68565b6001600160a01b0381166120765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b3a565b61207f81612327565b50565b606060085482106120c85760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610b3a565b60008281526007602052604081206001015461ffff1667ffffffffffffffff8111156120f6576120f661262f565b60405190808252806020026020018201604052801561211f578160200160208202803683370190505b50905060005b81518110156121a1576000848152600760205260409020600201816008811061215057612150612ceb565b601091828204019190066002029054906101000a900461ffff1682828151811061217c5761217c612ceb565b61ffff909216602092830291909101909101528061219981612f78565b915050612125565b5092915050565b60048054600181018083556000838152919290839081106121cb576121cb612ceb565b600091825260209091206003909102019050600181016121ec8a8c83612fae565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516123139897969594939291906130d1565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061239c612388846123ea565b85546123979190600f0b613140565b612458565b8454909150600160801b9004600f90810b9082900b126123cf57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156124545760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610b3a565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061248b57506f7fffffffffffffffffffffffffffffff8213155b6124545760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610b3a565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461254790612cb1565b6000825580601f10612557575050565b601f01602090049060005260206000209081019061207f91905b808211156124545760008155600101612571565b60006020828403121561259757600080fd5b5035919050565b6000815180845260005b818110156125c4576020818501810151868301820152016125a8565b818111156125d6576000602083870101525b50601f01601f19169290920160200192915050565b60a0815260006125fe60a083018861259e565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561266e5761266e61262f565b604052919050565b600082601f83011261268757600080fd5b8135602067ffffffffffffffff8211156126a3576126a361262f565b8160051b6126b2828201612645565b92835284810182019282810190878511156126cc57600080fd5b83870192505b848310156126eb578235825291830191908301906126d2565b979650505050505050565b60008060006060848603121561270b57600080fd5b83359250602084013567ffffffffffffffff81111561272957600080fd5b61273586828701612676565b9250506040840135801515811461274b57600080fd5b809150509250925092565b600061010080835261276a8184018c61259e565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561281057603f198886030184526127fe85835161259e565b945092850192908501906001016127e2565b5092979650505050505050565b60008083601f84011261282f57600080fd5b50813567ffffffffffffffff81111561284757600080fd5b60208301915083602082850101111561285f57600080fd5b9250929050565b803562ffffff8116811461287957600080fd5b919050565b803564ffffffffff8116811461287957600080fd5b803561ffff8116811461287957600080fd5b600080600080600080600060c0888a0312156128c057600080fd5b873567ffffffffffffffff8111156128d757600080fd5b6128e38a828b0161281d565b909850965050602088013560ff811681146128fd57600080fd5b945061290b60408901612866565b93506129196060890161287e565b92506129276080890161287e565b915061293560a08901612893565b905092959891949750929550565b6000806040838503121561295657600080fd5b50508035926020909101359150565b6001600160a01b038116811461207f57600080fd5b60006020828403121561298c57600080fd5b813561299781612965565b9392505050565b6000806000606084860312156129b357600080fd5b833567ffffffffffffffff808211156129cb57600080fd5b818601915086601f8301126129df57600080fd5b81356020828211156129f3576129f361262f565b612a05601f8301601f19168201612645565b92508183528881838601011115612a1b57600080fd5b8181850182850137600081838501015282965080880135955050505050612a446040850161287e565b90509250925092565b600080600060608486031215612a6257600080fd5b505081359360208301359350604090920135919050565b6000610140808352612a8d8184018e61259e565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612b1961016085018361259e565b91506020850151612b33604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612b5c60a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612b9a8187018361ffff169052565b8601519050610120612bb18682018361ffff169052565b9095015164ffffffffff1693019290925250919050565b600080600080600080600060c0888a031215612be357600080fd5b873567ffffffffffffffff811115612bfa57600080fd5b612c068a828b0161281d565b90985096506128fd905060208901612893565b600080600060608486031215612c2e57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612c5357600080fd5b612c5f86828701612676565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612ca557835161ffff1683529284019291840191600101612c85565b50909695505050505050565b600181811c90821680612cc557607f821691505b602082108103612ce557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015612d2b57815185529382019390820190600101612d0f565b50929695505050505050565b8481528315156020820152826040820152608060608201526000612d5e608083018461259e565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612997602083018461259e565b6000602080835260008454612dc481612cb1565b80848701526040600180841660008114612de55760018114612dff57612e2d565b60ff1985168984015283151560051b890183019550612e2d565b896000528660002060005b85811015612e255781548b8201860152908301908801612e0a565b8a0184019650505b509398975050505050505050565b601f821115612e8557600081815260208120601f850160051c81016020861015612e625750805b601f850160051c820191505b81811015612e8157828155600101612e6e565b5050505b505050565b815167ffffffffffffffff811115612ea457612ea461262f565b612eb881612eb28454612cb1565b84612e3b565b602080601f831160018114612eed5760008415612ed55750858301515b600019600386901b1c1916600185901b178555612e81565b600085815260208120601f198616915b82811015612f1c57888601518255948401946001909101908401612efd565b5085821015612f3a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115612f7357612f73612f4a565b500190565b600060018201612f8a57612f8a612f4a565b5060010190565b600060208284031215612fa357600080fd5b815161299781612965565b67ffffffffffffffff831115612fc657612fc661262f565b612fda83612fd48354612cb1565b83612e3b565b6000601f84116001811461300e5760008515612ff65750838201355b600019600387901b1c1916600186901b178355613068565b600083815260209020601f19861690835b8281101561303f578685013582556020948501946001909201910161301f565b508682101561305c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b038084168061309757634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b038490038513161561316257613162612f4a565b600160ff1b839003841281161561317b5761317b612f4a565b5050019056fea2646970667358221220a8d4d57692dac8445d7ac48668ac967c50196a9e266c28d50d8ce95bfb44279e64736f6c634300080f0033",
  "bytecodeSha1": "cc0614067093b1527542c96f380d95c9b455ba50",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "123": [
            26367,
            26392,
            false
          ],
          "124": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "122": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "120": [
            4843,
            4860,
            false
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance.claimRandomTaskForVerification": {
          "107": [
            11074,
            11128,
            false
          ],
          "108": [
            11132,
            11154,
            false
          ],
          "109": [
            11158,
            11183,
            false
          ]
        },
        "Governance.completeTask": {
          "96": [
            13200,
            13280,
            false
          ],
          "97": [
            13367,
            13411,
            false
          ],
          "98": [
            13415,
            13459,
            true
          ]
        },
        "Governance.createProposal": {
          "105": [
            8889,
            8909,
            false
          ],
          "106": [
            8913,
            8935,
            true
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "87": [
            6063,
            6125,
            false
          ],
          "88": [
            6141,
            6185,
            false
          ],
          "89": [
            6189,
            6232,
            false
          ],
          "90": [
            6248,
            6279,
            false
          ],
          "91": [
            6699,
            6761,
            false
          ],
          "92": [
            6777,
            6821,
            false
          ],
          "93": [
            6825,
            6868,
            false
          ],
          "94": [
            6884,
            6915,
            false
          ],
          "95": [
            7041,
            7057,
            false
          ]
        },
        "Governance.getVotes": {
          "119": [
            4557,
            4584,
            true
          ]
        },
        "Governance.getWinningVote": {
          "99": [
            4951,
            4978,
            true
          ],
          "100": [
            5018,
            5070,
            true
          ],
          "101": [
            5417,
            5467,
            false
          ],
          "102": [
            5592,
            5598,
            false
          ],
          "103": [
            5646,
            5697,
            false
          ],
          "104": [
            5763,
            5769,
            true
          ]
        },
        "Governance.submitVerification": {
          "110": [
            15232,
            15272,
            false
          ],
          "111": [
            15276,
            15309,
            true
          ],
          "112": [
            15364,
            15382,
            true
          ],
          "113": [
            15987,
            16007,
            false
          ],
          "114": [
            16284,
            16305,
            true
          ],
          "115": [
            16420,
            16435,
            false
          ],
          "116": [
            17080,
            17084,
            true
          ],
          "117": [
            17429,
            17455,
            false
          ],
          "118": [
            18597,
            18601,
            true
          ]
        },
        "Governance.testHashing": {
          "86": [
            14026,
            14034,
            false
          ]
        }
      },
      "20": {},
      "3": {},
      "9": {
        "Ownable.transferOwnership": {
          "121": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "85": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "83": [
            35401,
            35488
          ],
          "84": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "81": [
            4839,
            4882
          ],
          "82": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "40": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "19": [
            2207,
            2237
          ],
          "20": [
            2271,
            2297
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance._createTaskType": {
          "69": [
            10051,
            10067
          ],
          "70": [
            10148,
            10179
          ],
          "71": [
            10193,
            10219
          ],
          "72": [
            10233,
            10269
          ],
          "73": [
            10283,
            10329
          ],
          "74": [
            10343,
            10377
          ],
          "75": [
            10391,
            10431
          ],
          "76": [
            10445,
            10485
          ],
          "77": [
            10499,
            10543
          ],
          "78": [
            10584,
            10708
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "41": [
            11329,
            11385
          ],
          "42": [
            11403,
            11425
          ],
          "43": [
            12059,
            12093
          ],
          "44": [
            12111,
            12192
          ],
          "45": [
            12210,
            12273
          ],
          "46": [
            12339,
            12380
          ]
        },
        "Governance.completeTask": {
          "17": [
            13359,
            13483
          ],
          "18": [
            13673,
            13739
          ],
          "21": [
            13757,
            13787
          ],
          "22": [
            13805,
            13822
          ],
          "23": [
            13179,
            13182
          ]
        },
        "Governance.createProposal": {
          "33": [
            8881,
            8965
          ],
          "34": [
            8975,
            8994
          ],
          "35": [
            9094,
            9133
          ],
          "36": [
            9147,
            9186
          ],
          "37": [
            9200,
            9245
          ],
          "38": [
            9259,
            9290
          ],
          "39": [
            9301,
            9413
          ]
        },
        "Governance.createTaskType": {
          "13": [
            9665,
            9771
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "4": [
            6322,
            6329
          ],
          "5": [
            6440,
            6464
          ],
          "6": [
            6482,
            6497
          ],
          "7": [
            6535,
            6538
          ],
          "8": [
            6948,
            6982
          ],
          "9": [
            7010,
            7019
          ],
          "10": [
            7081,
            7086
          ],
          "11": [
            7142,
            7145
          ],
          "12": [
            7166,
            7180
          ]
        },
        "Governance.getTaskById": {
          "32": [
            4427,
            4448
          ]
        },
        "Governance.getVotes": {
          "65": [
            4549,
            4605
          ],
          "66": [
            4762,
            4807
          ],
          "67": [
            4744,
            4747
          ],
          "68": [
            4827,
            4843
          ]
        },
        "Governance.getWinningVote": {
          "24": [
            4943,
            4999
          ],
          "25": [
            5009,
            5094
          ],
          "26": [
            5487,
            5537
          ],
          "27": [
            5555,
            5570
          ],
          "28": [
            5602,
            5609
          ],
          "29": [
            5716,
            5721
          ],
          "30": [
            5360,
            5363
          ],
          "31": [
            5755,
            5790
          ]
        },
        "Governance.setNFTAddress": {
          "15": [
            7364,
            7391
          ]
        },
        "Governance.submitVerification": {
          "47": [
            15224,
            15346
          ],
          "48": [
            15356,
            15383
          ],
          "49": [
            16080,
            16132
          ],
          "50": [
            16160,
            16163
          ],
          "51": [
            16324,
            16405
          ],
          "52": [
            16707,
            16760
          ],
          "53": [
            16774,
            16841
          ],
          "54": [
            16856,
            16872
          ],
          "55": [
            16915,
            16936
          ],
          "56": [
            17072,
            17109
          ],
          "57": [
            17156,
            17204
          ],
          "58": [
            17218,
            17255
          ],
          "59": [
            17618,
            17684
          ],
          "60": [
            17702,
            17758
          ],
          "61": [
            18419,
            18440
          ],
          "62": [
            18589,
            18626
          ]
        },
        "Governance.testHashing": {
          "1": [
            14107,
            14159
          ],
          "2": [
            14187,
            14190
          ],
          "3": [
            14288,
            14355
          ]
        }
      },
      "20": {},
      "3": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "9": {
        "Ownable._setOwner": {
          "79": [
            2193,
            2210
          ],
          "80": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "63": [
            1982,
            2055
          ],
          "64": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101235760003560e01c8063826b8ebd116100a0578063beca3a1611610064578063beca3a16146103a7578063d374a217146103c7578063f18c51d3146103e7578063f2fde38b14610407578063ff9810991461042757600080fd5b8063826b8ebd146102dc5780638a6655d6146102fc5780638d9776721461031c5780638da5cb5b14610352578063976217cd1461037a57600080fd5b806361f9e9a8116100e757806361f9e9a8146102215780636215597b1461024157806369d0373814610287578063715018a6146102a757806372e185ce146102bc57600080fd5b8063013cf08b1461012f57806309265ce61461016957806310190ef11461018b578063379d94cc146101bf578063551bbe0b146101ff57600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5061014f61014a366004612585565b610454565b6040516101609594939291906125eb565b60405180910390f35b34801561017557600080fd5b506101896101843660046126f6565b610520565b005b34801561019757600080fd5b506101ab6101a6366004612585565b610666565b604051610160989796959493929190612756565b3480156101cb57600080fd5b506005546101e590600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610160565b34801561020b57600080fd5b50610214610770565b60405161016091906127bb565b34801561022d57600080fd5b5061018961023c3660046128a5565b610b35565b34801561024d57600080fd5b5061027961025c366004612943565b600360209081526000928352604080842090915290825290205481565b604051908152602001610160565b34801561029357600080fd5b506101896102a236600461297a565b610b5d565b3480156102b357600080fd5b50610189610ba9565b3480156102c857600080fd5b506101896102d736600461299e565b610bdf565b3480156102e857600080fd5b506102796102f7366004612585565b610f5a565b34801561030857600080fd5b50610189610317366004612a4d565b611167565b34801561032857600080fd5b5061033c610337366004612585565b6111a0565b6040516101609a99989796959493929190612a79565b34801561035e57600080fd5b506001546040516001600160a01b039091168152602001610160565b34801561038657600080fd5b5061039a610395366004612585565b6112a2565b6040516101609190612afa565b3480156103b357600080fd5b506101896103c2366004612bc8565b6113e4565b3480156103d357600080fd5b506101896103e2366004612585565b6114f9565b3480156103f357600080fd5b50610189610402366004612c19565b611841565b34801561041357600080fd5b5061018961042236600461297a565b611fe7565b34801561043357600080fd5b50610447610442366004612585565b612082565b6040516101609190612c69565b60076020526000908152604090208054819061046f90612cb1565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90612cb1565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061053557610535612ceb565b602002602001015160405160200161054f91815260200190565b604051602081830303815290604052905081156105db5760005b83518110156105d95783818151811061058457610584612ceb565b602002602001015160405160200161059e91815260200190565b604051602081830303815290604052805190602001208482815181106105c6576105c6612ceb565b6020908102919091010152600101610569565b505b6000836040516020016105ee9190612d01565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061063e5761063e612ceb565b6020026020010151856040516106579493929190612d37565b60405180910390a15050505050565b6004818154811061067657600080fd5b906000526020600020906003020160009150905080600101805461069990612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546106c590612cb1565b80156107125780601f106106e757610100808354040283529160200191610712565b820191906000526020600020905b8154815290600101906020018083116106f557829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000805b6004548110156108f957426004828154811061079457610794612ceb565b600091825260208083203384526003909202909101905260409020541080156107f1575042600482815481106107cc576107cc612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156108305750426004828154811061080c5761080c612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561086d575060016004828154811061084c5761084c612ceb565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561087d578160010191506108f1565b604080516001808252818301909252600091816020015b606081526020019060019003908161089457905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106108df576108df612ceb565b60209081029190910101529392505050565b600101610776565b5060008167ffffffffffffffff8111156109155761091561262f565b60405190808252806020026020018201604052801561094857816020015b60608152602001906001900390816109335790505b5090506000805b600454811015610b2c57426004828154811061096d5761096d612ceb565b600091825260208083203384526003909202909101905260409020541080156109ca575042600482815481106109a5576109a5612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015610a09575042600482815481106109e5576109e5612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015610a465750600160048281548110610a2557610a25612ceb565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15610b245760048181548110610a5e57610a5e612ceb565b90600052602060002090600302016001018054610a7a90612cb1565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690612cb1565b8015610af35780601f10610ac857610100808354040283529160200191610af3565b820191906000526020600020905b815481529060010190602001808311610ad657829003601f168201915b5050505050838281518110610b0a57610b0a612ceb565b602002602001018190525081600101915083821015610b2c575b60010161094f565b50909392505050565b610b43565b60405180910390fd5b610b548787600088888888886121a8565b50505050505050565b6001546001600160a01b03163314610b875760405162461bcd60e51b8152600401610b3a90612d68565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610bd35760405162461bcd60e51b8152600401610b3a90612d68565b610bdd6000612327565b565b60005b600454811015610f545783604051602001610bfd9190612d9d565b6040516020818303038152906040528051906020012060048281548110610c2657610c26612ceb565b9060005260206000209060030201600101604051602001610c479190612db0565b6040516020818303038152906040528051906020012003610f42574260048281548110610c7657610c76612ceb565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610cda575060048181548110610cb457610cb4612ceb565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610d1c5760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610b3a565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610d5f57610d5f612ceb565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610d9957610d99612ceb565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610e379082612e8a565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610f3b908490612f60565b9091555050505b80610f4c81612f78565b915050610be2565b50505050565b60006008548210610fa05760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610b3a565b600082815260076020526040902060030154600160501b900464ffffffffff1642116110045760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610b3a565b6000806000805b60008681526007602052604090206001015461ffff168110156111255760008681526007602052604090208390600201826008811061104c5761104c612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff1611156110c7576000868152600760205260409020600201816008811061109257611092612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036110c257600091505b611113565b6000868152600760205260409020839060020182600881106110eb576110eb612ceb565b601091828204019190066002029054906101000a900461ffff1661ffff160361111357600191505b8061111d81612f78565b91505061100b565b508015610b2c5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610b3a565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610b3a565b6009602052600090815260409020805481906111bb90612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546111e790612cb1565b80156112345780601f1061120957610100808354040283529160200191611234565b820191906000526020600020905b81548152906001019060200180831161121757829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6112aa6124e7565b60008281526009602052604090819020815161014081019092528054829082906112d390612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546112ff90612cb1565b801561134c5780601f106113215761010080835404028352916020019161134c565b820191906000526020600020905b81548152906001019060200180831161132f57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60018561ffff161180156113fd57506101018561ffff16105b6114495760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610b3a565b60016008600082825461145c9190612f60565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff8816179055806114db888a83612fae565b506114ef88886008546000898989896121a8565b5050505050505050565b6000611514600554600f81810b600160801b909204900b0390565b905061151e6124e7565b6000805b83811015611801574283610120015164ffffffffff16108015611550575084836020015164ffffffffff1614155b801561156557508483610100015161ffff1614155b156117fc57611575600582612379565b600081815260096020526040908190208151610140810190925280549294509091829082906115a390612cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546115cf90612cb1565b801561161c5780601f106115f15761010080835404028352916020019161161c565b820191906000526020600020905b8154815290600101906020018083116115ff57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b549093506116d09042612f60565b64ffffffffff1661012084015282600960006116ed600585612379565b815260208101919091526040016000208151819061170b9082612e8a565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b611522565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561188a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ae9190612f91565b6001600160a01b03161480156118df5750600082815260096020526040902060040154600160701b900461ffff1683145b61192b5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610b3a565b600081511161193957600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff16156119d45760005b83518110156119d25783818151811061197d5761197d612ceb565b602002602001015160405160200161199791815260200190565b604051602081830303815290604052805190602001208482815181106119bf576119bf612ceb565b6020908102919091010152600101611962565b505b6000836040516020016119e79190612d01565b604051602081830303815290604052805190602001209050600081846002015414611a13576000611a16565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611d7c576004840154600090611aa690600290600160201b90046001600160501b031661306f565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b369190612f91565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611c1c57600080fd5b505af1158015611c30573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611c66828261253b565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611ce4576040519150601f19603f3d011682016040523d82523d6000602084013e611ce9565b606091505b509150915081611d0b5760405162461bcd60e51b8152600401610b3a906130a3565b60405133908590600081818185875af1925050503d8060008114611d4b576040519150601f19603f3d011682016040523d82523d6000602084013e611d50565b606091505b50909250905081611d735760405162461bcd60e51b8152600401610b3a906130a3565b50505050610b54565b81846003015403611ef3576004840154600090611dab90600290600160201b90046001600160501b031661306f565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190612f91565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611e9f57600080fd5b505af1158015611eb3573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611c02565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190611f23828261253b565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580611f6a6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114611fb4576040519150601f19603f3d011682016040523d82523d6000602084013e611fb9565b606091505b509150915081611fdb5760405162461bcd60e51b8152600401610b3a906130a3565b50505050505050505050565b6001546001600160a01b031633146120115760405162461bcd60e51b8152600401610b3a90612d68565b6001600160a01b0381166120765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b3a565b61207f81612327565b50565b606060085482106120c85760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610b3a565b60008281526007602052604081206001015461ffff1667ffffffffffffffff8111156120f6576120f661262f565b60405190808252806020026020018201604052801561211f578160200160208202803683370190505b50905060005b81518110156121a1576000848152600760205260409020600201816008811061215057612150612ceb565b601091828204019190066002029054906101000a900461ffff1682828151811061217c5761217c612ceb565b61ffff909216602092830291909101909101528061219981612f78565b915050612125565b5092915050565b60048054600181018083556000838152919290839081106121cb576121cb612ceb565b600091825260209091206003909102019050600181016121ec8a8c83612fae565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516123139897969594939291906130d1565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061239c612388846123ea565b85546123979190600f0b613140565b612458565b8454909150600160801b9004600f90810b9082900b126123cf57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156124545760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610b3a565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061248b57506f7fffffffffffffffffffffffffffffff8213155b6124545760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610b3a565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461254790612cb1565b6000825580601f10612557575050565b601f01602090049060005260206000209081019061207f91905b808211156124545760008155600101612571565b60006020828403121561259757600080fd5b5035919050565b6000815180845260005b818110156125c4576020818501810151868301820152016125a8565b818111156125d6576000602083870101525b50601f01601f19169290920160200192915050565b60a0815260006125fe60a083018861259e565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561266e5761266e61262f565b604052919050565b600082601f83011261268757600080fd5b8135602067ffffffffffffffff8211156126a3576126a361262f565b8160051b6126b2828201612645565b92835284810182019282810190878511156126cc57600080fd5b83870192505b848310156126eb578235825291830191908301906126d2565b979650505050505050565b60008060006060848603121561270b57600080fd5b83359250602084013567ffffffffffffffff81111561272957600080fd5b61273586828701612676565b9250506040840135801515811461274b57600080fd5b809150509250925092565b600061010080835261276a8184018c61259e565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561281057603f198886030184526127fe85835161259e565b945092850192908501906001016127e2565b5092979650505050505050565b60008083601f84011261282f57600080fd5b50813567ffffffffffffffff81111561284757600080fd5b60208301915083602082850101111561285f57600080fd5b9250929050565b803562ffffff8116811461287957600080fd5b919050565b803564ffffffffff8116811461287957600080fd5b803561ffff8116811461287957600080fd5b600080600080600080600060c0888a0312156128c057600080fd5b873567ffffffffffffffff8111156128d757600080fd5b6128e38a828b0161281d565b909850965050602088013560ff811681146128fd57600080fd5b945061290b60408901612866565b93506129196060890161287e565b92506129276080890161287e565b915061293560a08901612893565b905092959891949750929550565b6000806040838503121561295657600080fd5b50508035926020909101359150565b6001600160a01b038116811461207f57600080fd5b60006020828403121561298c57600080fd5b813561299781612965565b9392505050565b6000806000606084860312156129b357600080fd5b833567ffffffffffffffff808211156129cb57600080fd5b818601915086601f8301126129df57600080fd5b81356020828211156129f3576129f361262f565b612a05601f8301601f19168201612645565b92508183528881838601011115612a1b57600080fd5b8181850182850137600081838501015282965080880135955050505050612a446040850161287e565b90509250925092565b600080600060608486031215612a6257600080fd5b505081359360208301359350604090920135919050565b6000610140808352612a8d8184018e61259e565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612b1961016085018361259e565b91506020850151612b33604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612b5c60a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612b9a8187018361ffff169052565b8601519050610120612bb18682018361ffff169052565b9095015164ffffffffff1693019290925250919050565b600080600080600080600060c0888a031215612be357600080fd5b873567ffffffffffffffff811115612bfa57600080fd5b612c068a828b0161281d565b90985096506128fd905060208901612893565b600080600060608486031215612c2e57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612c5357600080fd5b612c5f86828701612676565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612ca557835161ffff1683529284019291840191600101612c85565b50909695505050505050565b600181811c90821680612cc557607f821691505b602082108103612ce557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015612d2b57815185529382019390820190600101612d0f565b50929695505050505050565b8481528315156020820152826040820152608060608201526000612d5e608083018461259e565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612997602083018461259e565b6000602080835260008454612dc481612cb1565b80848701526040600180841660008114612de55760018114612dff57612e2d565b60ff1985168984015283151560051b890183019550612e2d565b896000528660002060005b85811015612e255781548b8201860152908301908801612e0a565b8a0184019650505b509398975050505050505050565b601f821115612e8557600081815260208120601f850160051c81016020861015612e625750805b601f850160051c820191505b81811015612e8157828155600101612e6e565b5050505b505050565b815167ffffffffffffffff811115612ea457612ea461262f565b612eb881612eb28454612cb1565b84612e3b565b602080601f831160018114612eed5760008415612ed55750858301515b600019600386901b1c1916600185901b178555612e81565b600085815260208120601f198616915b82811015612f1c57888601518255948401946001909101908401612efd565b5085821015612f3a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115612f7357612f73612f4a565b500190565b600060018201612f8a57612f8a612f4a565b5060010190565b600060208284031215612fa357600080fd5b815161299781612965565b67ffffffffffffffff831115612fc657612fc661262f565b612fda83612fd48354612cb1565b83612e3b565b6000601f84116001811461300e5760008515612ff65750838201355b600019600387901b1c1916600186901b178355613068565b600083815260209020601f19861690835b8281101561303f578685013582556020948501946001909201910161301f565b508682101561305c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b038084168061309757634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b038490038513161561316257613162612f4a565b600160ff1b839003841281161561317b5761317b612f4a565b5050019056fea2646970667358221220a8d4d57692dac8445d7ac48668ac967c50196a9e266c28d50d8ce95bfb44279e64736f6c634300080f0033",
  "deployedSourceMap": "743:18538:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:46;;;;;;;;;;-1:-1:-1;2689:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;13859:503;;;;;;;;;;-1:-1:-1;13859:503:2;;;;;:::i;:::-;;:::i;:::-;;2385:27;;;;;;;;;;-1:-1:-1;2385:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2522:51::-;;;;;;;;;;-1:-1:-1;2522:51:2;;;;;;;;;-1:-1:-1;;;2522:51:2;;;;;;;;;;4375:2:21;4364:22;;;4346:41;;4423:22;;;;4418:2;4403:18;;4396:50;4319:18;2522:51:2;4176:276:21;5900:1287:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9458:320::-;;;;;;;;;;-1:-1:-1;9458:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7381:25:21;;;7369:2;7354:18;957:75:2;7235:177:21;7297:101:2;;;;;;;;;;-1:-1:-1;7297:101:2;;;;;:::i;:::-;;:::i;1652:94:9:-;;;;;;;;;;;;;:::i;12960:893:2:-;;;;;;;;;;-1:-1:-1;12960:893:2;;;;;:::i;:::-;;:::i;4856:969::-;;;;;;;;;;-1:-1:-1;4856:969:2;;;;;:::i;:::-;;:::i;7979:664::-;;;;;;;;;;-1:-1:-1;7979:664:2;;;;;:::i;:::-;;:::i;2770:38::-;;;;;;;;;;-1:-1:-1;2770:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:9:-;;;;;;;;;;-1:-1:-1;1074:6:9;;1001:87;;-1:-1:-1;;;;;1074:6:9;;;10317:51:21;;10305:2;10290:18;1001:87:9;10171:203:21;4343:112:2;;;;;;;;;;-1:-1:-1;4343:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8689:762::-;;;;;;;;;;-1:-1:-1;8689:762:2;;;;;:::i;:::-;;:::i;10722:1665::-;;;;;;;;;;-1:-1:-1;10722:1665:2;;;;;:::i;:::-;;:::i;15068:3620::-;;;;;;;;;;-1:-1:-1;15068:3620:2;;;;;:::i;:::-;;:::i;1901:192:9:-;;;;;;;;;;-1:-1:-1;1901:192:9;;;;;:::i;:::-;;:::i;4461:389:2:-;;;;;;;;;;-1:-1:-1;4461:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2689:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2689:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2689:46:2;;;;;;-1:-1:-1;;;2689:46:2;;;;:::o;13859:503::-;13960:22;14002:7;14010:1;14002:10;;;;;;;;:::i;:::-;;;;;;;13985:28;;;;;;14302:19:21;;14346:2;14337:12;;14173:182;13985:28:2;;;;;;;;;;;;;13960:53;;14026:8;14023:193;;;14054:9;14050:156;14073:7;:14;14069:1;:18;14050:156;;;14147:7;14155:1;14147:10;;;;;;;;:::i;:::-;;;;;;;14130:28;;;;;;14302:19:21;;14346:2;14337:12;;14173:182;14130:28:2;;;;;;;;;;;;;14120:39;;;;;;14107:7;14115:1;14107:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;14187:3;;14050:156;;;;14023:193;14225:14;14269:7;14252:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;14242:36;;;;;;14225:53;;14293:62;14305:6;14321:10;14313:6;:18;14333:7;14341:1;14333:10;;;;;;;;:::i;:::-;;;;;;;14345:9;14293:62;;;;;;;;;:::i;:::-;;;;;;;;13950:412;;13859:503;;;:::o;2385:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2385:27:2;;;;;;;-1:-1:-1;;2385:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2385:27:2;;;;-1:-1:-1;;;2385:27:2;;;;;-1:-1:-1;;;2385:27:2;;;;;;;-1:-1:-1;;;2385:27:2;;;;;:::o;5900:1287::-;5958:15;5985:13;;6008:542;6028:9;:16;6025:19;;6008:542;;;6110:15;6063:9;6073:1;6063:12;;;;;;;;:::i;:::-;;;;;;;;;6096:10;6063:44;;:12;;;;;;;:44;;;;;;:62;:122;;;;;6170:15;6141:9;6151:1;6141:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6141:25:2;;;;:44;;6063:122;:169;;;;;6217:15;6189:9;6199:1;6189:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6189:25:2;;;;:43;6063:169;:216;;;;;6278:1;6248:9;6258:1;6248:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;6248:27:2;;;;:31;6063:216;6060:452;;;6322:7;;;;;6060:452;;;6407:15;;;6420:1;6407:15;;;;;;;;;6381:24;;6407:15;;;;;;;;;;;;;;;;;;;;6381:41;;6440:24;;;;;;;;;;;;;-1:-1:-1;;;6440:24:2;;;:8;6449:1;6440:11;;;;;;;;:::i;:::-;;;;;;;;;;:24;6489:8;5900:1287;-1:-1:-1;;;5900:1287:2:o;6060:452::-;6535:3;;6008:542;;;;6560:23;6599:5;6586:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6560:45;;6615:15;6648:9;6644:513;6664:9;:16;6661:19;;6644:513;;;6746:15;6699:9;6709:1;6699:12;;;;;;;;:::i;:::-;;;;;;;;;6732:10;6699:44;;:12;;;;;;;:44;;;;;;:62;:122;;;;;6806:15;6777:9;6787:1;6777:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6777:25:2;;;;:44;;6699:122;:169;;;;;6853:15;6825:9;6835:1;6825:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6825:25:2;;;;:43;6699:169;:216;;;;;6914:1;6884:9;6894:1;6884:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;6884:27:2;;;;:31;6699:216;6696:423;;;6961:9;6971:1;6961:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;6948:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;6956:1;6948:10;;;;;;;;:::i;:::-;;;;;;:34;;;;7010:9;;;;;7052:5;7041:7;:16;7038:67;7081:5;7038:67;;7142:3;;6644:513;;;-1:-1:-1;7173:7:2;;5900:1287;-1:-1:-1;;;5900:1287:2:o;9458:320::-;19199:36;;;;;;;;;;;9665:106:::1;9681:9;;9692:1;9695:16;9713:10;9725:13;9740;9755:15;9665;:106::i;:::-;9458:320:::0;;;;;;;:::o;7297:101::-;1074:6:9;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;7364:10:2::1;:27:::0;;-1:-1:-1;;;;;;7364:27:2::1;-1:-1:-1::0;;;;;7364:27:2;;;::::1;::::0;;;::::1;::::0;;7297:101::o;1652:94:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;12960:893:2:-;13144:9;13140:707;13161:9;:16;13159:18;;13140:707;;;13269:9;13258:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;13248:32;;;;;;13221:9;13231:1;13221:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;13210:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;13200:44;;;;;;:80;13197:640;;13396:15;13367:9;13377:1;13367:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;13367:25:2;;;;:44;;;;:92;;;13434:9;13444:1;13434:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;13434:25:2;;;;13415:15;:44;;13367:92;13359:124;;;;-1:-1:-1;;;13359:124:2;;17587:2:21;13359:124:2;;;17569:21:21;17626:2;17606:18;;;17599:30;-1:-1:-1;;;17645:18:21;;;17638:49;17704:18;;13359:124:2;17385:343:21;13359:124:2;13536:18;13557:98;;;;;;;;13562:9;13557:98;;;;13572:6;13557:98;;;;;;13580:5;13557:98;;;;13587:1;13557:98;;;;;;13590:9;13600:1;13590:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;13557:98;;;;;;13620:9;13630:1;13620:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;13620:22:2;;;;13557:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;13723:14;;13699;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;13757:21:2;;:5;:21;;;:30;;;;-1:-1:-1;13757:30:2;;:21;;:30;;:21;:30;:::i;:::-;-1:-1:-1;13757:30:2;;;;;;;;;;-1:-1:-1;;13757:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13757:30:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;13757:30:2;-1:-1:-1;;;;;;;;13757:30:2;;;;;;;-1:-1:-1;;;;13757:30:2;;-1:-1:-1;;;13757:30:2;;;;;;-1:-1:-1;;;;13757:30:2;-1:-1:-1;;;13757:30:2;;;;;-1:-1:-1;;;;13757:30:2;;;;;-1:-1:-1;;;13757:30:2;;;;;;;;;;;;13805:14;:17;;-1:-1:-1;;13805:17:2;;13757:30;;13805:17;:::i;:::-;;;;-1:-1:-1;;;13197:640:2;13179:3;;;;:::i;:::-;;;;13140:707;;;;12960:893;;;:::o;4856:969::-;4923:7;4964:14;;4951:10;:27;4943:56;;;;-1:-1:-1;;;4943:56:2;;20418:2:21;4943:56:2;;;20400:21:21;20457:2;20437:18;;;20430:30;-1:-1:-1;;;20476:18:21;;;20469:46;20532:18;;4943:56:2;20216:340:21;4943:56:2;5036:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5036:34:2;;;;5018:15;:52;5009:85;;;;-1:-1:-1;;;5009:85:2;;20763:2:21;5009:85:2;;;20745:21:21;20802:2;20782:18;;;20775:30;-1:-1:-1;;;20821:18:21;;;20814:49;20880:18;;5009:85:2;20561:343:21;5009:85:2;5214:19;5243:25;5278:11;5305:9;5301:445;5321:21;;;;:9;:21;;;;;:37;;;;;5318:40;;5301:445;;;5417:21;;;;:9;:21;;;;;5450:17;;5417:27;;5445:1;5417:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5414:322;;;5507:21;;;;:9;:21;;;;;:27;;5535:1;5507:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5487:50;;;;5569:1;5555:15;;5592:3;5597:1;5592:6;5588:23;;5608:1;5602:7;;5588:23;5414:322;;;5646:21;;;;:9;:21;;;;;5680:17;;5646:27;;5674:1;5646:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5643:93;;5720:1;5716:5;;5643:93;5360:3;;;;:::i;:::-;;;;5301:445;;;-1:-1:-1;5763:6:2;;5755:35;;;;-1:-1:-1;;;5755:35:2;;21111:2:21;5755:35:2;;;21093:21:21;21150:2;21130:18;;;21123:30;-1:-1:-1;;;21169:18:21;;;21162:46;21225:18;;5755:35:2;20909:340:21;7979:664:2;19090:31;;-1:-1:-1;;;19090:31:2;;21456:2:21;19090:31:2;;;21438:21:21;21495:2;21475:18;;;21468:30;-1:-1:-1;;;21514:18:21;;;21507:44;21568:18;;19090:31:2;21254:338:21;2770:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2770:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2770:38:2;-1:-1:-1;2770:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2770:38:2;;;;;-1:-1:-1;;;2770:38:2;;;;;-1:-1:-1;;;2770:38:2;;;;;;-1:-1:-1;;;2770:38:2;;;;;:::o;4343:112::-;4404:11;;:::i;:::-;4434:14;;;;:5;:14;;;;;;;4427:21;;;;;;;;;;;;4434:14;;4427:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4427:21:2;;;-1:-1:-1;;4427:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4427:21:2;;-1:-1:-1;;;;;4427:21:2;;;;;-1:-1:-1;;;4427:21:2;;;;;;;;;;-1:-1:-1;;;4427:21:2;;;;;;;-1:-1:-1;;;4427:21:2;;;;;;;;;;;;-1:-1:-1;;4343:112:2:o;8689:762::-;8908:1:::1;8889:16;:20;;;:46;;;;;8932:3;8913:16;:22;;;8889:46;8881:84;;;::::0;-1:-1:-1;;;8881:84:2;;23206:2:21;8881:84:2::1;::::0;::::1;23188:21:21::0;23245:2;23225:18;;;23218:30;23284:27;23264:18;;;23257:55;23329:18;;8881:84:2::1;23004:349:21::0;8881:84:2::1;8993:1;8975:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9065:14:2::1;::::0;9025:27:::1;9055:25:::0;;;:9:::1;:25;::::0;;;;9094:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;9147:39:2;9094;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;9147:39:2;;;;;-1:-1:-1;;;9147:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;9200:26:2;::::1;:45:::0;;-1:-1:-1;;9200:45:2::1;;::::0;::::1;;::::0;;9055:25;9259:31:::1;9281:9:::0;;9055:25;9259:31:::1;:::i;:::-;;9301:112;9317:9;;9335:14;;9352:1;9355:10;9367:13;9382;9397:15;9301;:112::i;:::-;8871:580;8689:762:::0;;;;;;;:::o;10722:1665::-;10797:27;10827:39;10851:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;10827:39:2;10797:69;;10876:18;;:::i;:::-;10904:14;;11012:1286;11034:19;11030:1;:23;11012:1286;;;11113:15;11074:6;:36;;;:54;;;:80;;;;;11148:6;11132;:12;;;:22;;;;11074:80;:109;;;;;11177:6;11158;:16;;;:25;;;;11074:109;11070:1218;;;11346:38;11366:14;11382:1;11346:19;:38::i;:::-;11338:47;11412:13;;;:5;:13;;;;;;;11403:22;;;;;;;;;;11338:47;;-1:-1:-1;11403:22:2;;;;11412:13;;11403:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11403:22:2;;;-1:-1:-1;;11403:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11403:22:2;;-1:-1:-1;;;;;11403:22:2;;;;;-1:-1:-1;;;11403:22:2;;;;;;;;;;;;;;-1:-1:-1;;;11403:22:2;;;;;;;;;;;-1:-1:-1;;;11403:22:2;;;;;;;;;;;;;;12059:34;;:17;;;:34;12175:16;;12059:17;;-1:-1:-1;12157:34:2;;:15;:34;:::i;:::-;12111:81;;:36;;;:81;:6;12210:5;:54;12224:38;12244:14;12260:1;12224:19;:38::i;:::-;12210:54;;;;;;;;;;;12216:47;12210:54;:63;;:54;;:63;;:54;:63;:::i;:::-;-1:-1:-1;12210:63:2;;;;;;;;;-1:-1:-1;;12210:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12210:63:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;12210:63:2;-1:-1:-1;;;;;;;;12210:63:2;;;;;;;-1:-1:-1;;;;12210:63:2;;-1:-1:-1;;;12210:63:2;;;;;;-1:-1:-1;;;;12210:63:2;-1:-1:-1;;;12210:63:2;;;;;-1:-1:-1;;;;12210:63:2;;;;;-1:-1:-1;;;12210:63:2;;;;;;;;;;;11070:1218;11012:1286;;;-1:-1:-1;12344:36:2;;;24743:25:21;;;24799:2;24784:18;;24777:34;;;12344:36:2;;24716:18:21;12344:36:2;;;;;;;10787:1600;;;10722:1665;:::o;15068:3620::-;15232:10;;:26;;-1:-1:-1;;;15232:26:2;;;;;7381:25:21;;;15262:10:2;;-1:-1:-1;;;;;15232:10:2;;:18;;7354::21;;15232:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15232:40:2;;:77;;;;-1:-1:-1;15276:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;15276:25:2;;;;:33;;15232:77;15224:122;;;;-1:-1:-1;;;15224:122:2;;25024:2:21;15224:122:2;;;25006:21:21;;;25043:18;;;25036:30;25102:34;25082:18;;;25075:62;25154:18;;15224:122:2;24822:356:21;15224:122:2;15381:1;15364:7;:14;:18;15356:27;;;;;;15394:19;15416:14;;;:5;:14;;;;;15987:16;;;;15416:14;;15394:19;-1:-1:-1;;;15987:16:2;;;;:20;15984:205;;16027:9;16023:156;16046:7;:14;16042:1;:18;16023:156;;;16120:7;16128:1;16120:10;;;;;;;;:::i;:::-;;;;;;;16103:28;;;;;;14302:19:21;;14346:2;14337:12;;14173:182;16103:28:2;;;;;;;;;;;;;16093:39;;;;;;16080:7;16088:1;16080:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;16160:3;;16023:156;;;;15984:205;16198:14;16242:7;16225:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;16215:36;;;;;;16198:53;;16262:19;16299:6;16284;:11;;;:21;:29;;16312:1;16284:29;;;16308:1;16284:29;16359:12;;;;;16329:76;;;25435:25:21;;;16359:12:2;;;;25491:2:21;25476:18;;25469:53;25538:18;;25531:34;;;25596:2;25581:18;;25574:34;;;16262:51:2;;;;;16390:14;;;25639:3:21;25624:19;;25617:51;16262::2;-1:-1:-1;16329:76:2;;25422:3:21;25407:19;16329:76:2;;;;;;;16420:11;16434:1;16420:15;16416:2266;;16530:14;;;;16514:13;;16530:16;;16545:1;;-1:-1:-1;;;16530:14:2;;-1:-1:-1;;;;;16530:14:2;:16;:::i;:::-;16600:10;;16619:17;;;;;16600:37;;-1:-1:-1;;;16600:37:2;;-1:-1:-1;;;16619:17:2;;;;;16600:37;;;26129:38:21;;;;-1:-1:-1;;;;;16514:32:2;;;;;-1:-1:-1;16560:29:2;;-1:-1:-1;;;;;16600:10:2;;;;:18;;26102::21;;16600:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16707:10;;;16729:12;;;16743:16;;;;;16707:53;;-1:-1:-1;;;16707:53:2;;16729:12;;;;16707:53;;;26350:44:21;;;;16707:10:2;16743:16;;;;26410:18:21;;;26403:49;16560:78:2;;-1:-1:-1;;;;;;16707:10:2;;:21;;26323:18:21;;16707:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16774:10:2;;16796:17;;;;;16815:25;;16774:67;;-1:-1:-1;;;16774:67:2;;-1:-1:-1;;;16796:17:2;;;;;16774:67;;;26636:38:21;;;;26690:18;;;26683:34;;;;-1:-1:-1;;;;;16774:10:2;;;;-1:-1:-1;16774:21:2;;-1:-1:-1;26609:18:21;;16774:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16856:14:2;;;:16;;-1:-1:-1;;16856:16:2;;;-1:-1:-1;16871:1:2;16922:14;;;:5;:14;;;;;;16915:21;16922:14;16871:1;16915:21;:::i;:::-;-1:-1:-1;16915:21:2;;;;;-1:-1:-1;;16915:21:2;;;-1:-1:-1;16915:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16915:21:2;;;17022:36;;-1:-1:-1;;;;;;;17022:18:2;;;17048:5;;-1:-1:-1;17022:36:2;-1:-1:-1;17022:36:2;17048:5;17022:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16989:69;;;;17080:4;17072:37;;;;-1:-1:-1;;;17072:37:2;;;;;;;:::i;:::-;17171:33;;:10;;17194:5;;17171:33;;;;17194:5;17171:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17156:48:2;;-1:-1:-1;17156:48:2;-1:-1:-1;17156:48:2;17218:37;;;;-1:-1:-1;;;17218:37:2;;;;;;;:::i;:::-;16436:831;;;;16416:2266;;;17449:6;17429;:18;;;:26;17426:1246;;17490:14;;;;17474:13;;17490:16;;17505:1;;-1:-1:-1;;;17490:14:2;;-1:-1:-1;;;;;17490:14:2;:16;:::i;:::-;17562:10;;17581:16;;;;;17562:36;;-1:-1:-1;;;17562:36:2;;-1:-1:-1;;;17581:16:2;;;;;17562:36;;;26129:38:21;;;;-1:-1:-1;;;;;17474:32:2;;;;;-1:-1:-1;17524:27:2;;-1:-1:-1;;;;;17562:10:2;;;;:18;;26102::21;;17562:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17618:10;;17640:16;;;;;17658:25;;17618:66;;-1:-1:-1;;;17618:66:2;;-1:-1:-1;;;17640:16:2;;;;;17618:66;;;26636:38:21;;;;26690:18;;;26683:34;;;;17524:75:2;;-1:-1:-1;;;;;;17618:10:2;;:21;;26609:18:21;;17618:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17702:10:2;;17732:25;;17702:56;;-1:-1:-1;;;17702:56:2;;;;;24743:25:21;;;24784:18;;;24777:34;;;;-1:-1:-1;;;;;17702:10:2;;;;-1:-1:-1;17702:21:2;;-1:-1:-1;24716:18:21;;17702:56:2;24569:248:21;17426:1246:2;18387:14;;;;18371:13;18426:14;;;:5;:14;;;;;-1:-1:-1;;;18387:14:2;;;-1:-1:-1;;;;;18387:14:2;;18426;18419:21;18426:14;18371:13;18419:21;:::i;:::-;-1:-1:-1;18419:21:2;;;;;-1:-1:-1;;18419:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18419:21:2;;;;18491:7;1074:6:9;;-1:-1:-1;;;;;1074:6:9;;1001:87;18491:7:2;-1:-1:-1;;;;;18491:12:2;18511:5;18491:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18458:63;;;;18597:4;18589:37;;;;-1:-1:-1;;;18589:37:2;;;;;;;:::i;:::-;18265:407;;;15164:3524;;;;15068:3620;;;:::o;1901:192:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:9;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:9;;27489:2:21;1982:73:9::1;::::0;::::1;27471:21:21::0;27528:2;27508:18;;;27501:30;27567:34;27547:18;;;27540:62;-1:-1:-1;;;27618:18:21;;;27611:36;27664:19;;1982:73:9::1;27287:402:21::0;1982:73:9::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;4461:389:2:-;4522:15;4570:14;;4557:10;:27;4549:56;;;;-1:-1:-1;;;4549:56:2;;20418:2:21;4549:56:2;;;20400:21:21;20457:2;20437:18;;;20430:30;-1:-1:-1;;;20476:18:21;;;20469:46;20532:18;;4549:56:2;20216:340:21;4549:56:2;4615:25;4656:21;;;:9;:21;;;;;:37;;;;;4643:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4643:51:2;;4615:79;;4708:9;4704:114;4726:9;:16;4723:1;:19;4704:114;;;4777:21;;;;:9;:21;;;;;:27;;4805:1;4777:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4762:9;4772:1;4762:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4744:3;;;;:::i;:::-;;;;4704:114;;;-1:-1:-1;4834:9:2;4461:389;-1:-1:-1;;4461:389:2:o;9784:931::-;10025:9;:16;;10051;;;;;;9999:23;10051:16;;;10025;;:9;:16;;10108:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;10148:20:2;;;:31;10170:9;;10148:20;:31;:::i;:::-;;10214:5;10193:11;:18;;;:26;;;;;;;;;;;;;;;;;;10258:11;10233;:22;;;:36;;;;;;;;;;;;;;;;;;10313:16;10283:11;:27;;;:46;;;;;;;;;;;;;;;;;;10367:10;10343:11;:21;;;:34;;;;;;;;;;;;;;;;;;10418:13;10391:11;:24;;;:40;;;;;;;;;;;;;;;;;;10472:13;10445:11;:24;;;:40;;;;;;;;;;;;;;;;;;10528:15;10499:11;:26;;;:44;;;;;;;;;;;;;;;;;;10589:119;10608:9;;10619:11;10632:16;10650:10;10662:13;10677;10692:15;10589:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;9989:726;;9784:931;;;;;;;;:::o;2101:173:9:-;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;29099:2:21;35401:87:0;;;29081:21:21;29138:2;29118:18;;;29111:30;29177:34;29157:18;;;29150:62;-1:-1:-1;;;29228:18:21;;;29221:38;29276:19;;35401:87:0;28897:404:21;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;29508:2:21;26359:106:0;;;29490:21:21;29547:2;29527:18;;;29520:30;29586:34;29566:18;;;29559:62;-1:-1:-1;;;29637:18:21;;;29630:37;29684:19;;26359:106:0;29306:403:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:21;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:21;;14:180;-1:-1:-1;14:180:21:o;199:472::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;521:6;518:1;515:13;512:87;;;587:1;580:4;571:6;566:3;562:16;558:27;551:38;512:87;-1:-1:-1;653:2:21;632:15;-1:-1:-1;;628:29:21;619:39;;;;660:4;615:50;;199:472;-1:-1:-1;;199:472:21:o;872:570::-;1125:3;1114:9;1107:22;1088:4;1146:46;1187:3;1176:9;1172:19;1164:6;1146:46;:::i;:::-;1240:6;1228:19;;;;1223:2;1208:18;;1201:47;-1:-1:-1;1267:12:21;1315:15;;;1310:2;1295:18;;1288:43;1367:15;;;1362:2;1347:18;;1340:43;1420:15;;;1414:3;1399:19;;;1392:44;1138:54;872:570;-1:-1:-1;872:570:21:o;1447:127::-;1508:10;1503:3;1499:20;1496:1;1489:31;1539:4;1536:1;1529:15;1563:4;1560:1;1553:15;1579:275;1650:2;1644:9;1715:2;1696:13;;-1:-1:-1;;1692:27:21;1680:40;;1750:18;1735:34;;1771:22;;;1732:62;1729:88;;;1797:18;;:::i;:::-;1833:2;1826:22;1579:275;;-1:-1:-1;1579:275:21:o;1859:712::-;1913:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:55;;1984:1;1981;1974:12;1933:55;2020:6;2007:20;2046:4;2069:18;2065:2;2062:26;2059:52;;;2091:18;;:::i;:::-;2137:2;2134:1;2130:10;2160:28;2184:2;2180;2176:11;2160:28;:::i;:::-;2222:15;;;2292;;;2288:24;;;2253:12;;;;2324:15;;;2321:35;;;2352:1;2349;2342:12;2321:35;2388:2;2380:6;2376:15;2365:26;;2400:142;2416:6;2411:3;2408:15;2400:142;;;2482:17;;2470:30;;2433:12;;;;2520;;;;2400:142;;;2560:5;1859:712;-1:-1:-1;;;;;;;1859:712:21:o;2576:577::-;2675:6;2683;2691;2744:2;2732:9;2723:7;2719:23;2715:32;2712:52;;;2760:1;2757;2750:12;2712:52;2796:9;2783:23;2773:33;;2857:2;2846:9;2842:18;2829:32;2884:18;2876:6;2873:30;2870:50;;;2916:1;2913;2906:12;2870:50;2939:61;2992:7;2983:6;2972:9;2968:22;2939:61;:::i;:::-;2929:71;;;3050:2;3039:9;3035:18;3022:32;3097:5;3090:13;3083:21;3076:5;3073:32;3063:60;;3119:1;3116;3109:12;3063:60;3142:5;3132:15;;;2576:577;;;;;:::o;3335:836::-;3623:4;3652:3;3682:2;3671:9;3664:21;3702:45;3743:2;3732:9;3728:18;3720:6;3702:45;:::i;:::-;3790:14;;3783:22;3778:2;3763:18;;3756:50;-1:-1:-1;;3825:12:21;3873:15;;;3868:2;3853:18;;3846:43;3937:4;3925:17;;;;3920:2;3905:18;;3898:45;3992:8;3980:21;;;;3974:3;3959:19;;3952:50;4039:15;;;4033:3;4018:19;;4011:44;4092:15;;;4086:3;4071:19;;4064:44;4157:6;4145:19;;;4139:3;4124:19;;;4117:48;3790:14;3694:53;-1:-1:-1;3335:836:21:o;4457:803::-;4619:4;4648:2;4688;4677:9;4673:18;4718:2;4707:9;4700:21;4741:6;4776;4770:13;4807:6;4799;4792:22;4845:2;4834:9;4830:18;4823:25;;4907:2;4897:6;4894:1;4890:14;4879:9;4875:30;4871:39;4857:53;;4945:2;4937:6;4933:15;4966:1;4976:255;4990:6;4987:1;4984:13;4976:255;;;5083:2;5079:7;5067:9;5059:6;5055:22;5051:36;5046:3;5039:49;5111:40;5144:6;5135;5129:13;5111:40;:::i;:::-;5101:50;-1:-1:-1;5209:12:21;;;;5174:15;;;;5012:1;5005:9;4976:255;;;-1:-1:-1;5248:6:21;;4457:803;-1:-1:-1;;;;;;;4457:803:21:o;5265:348::-;5317:8;5327:6;5381:3;5374:4;5366:6;5362:17;5358:27;5348:55;;5399:1;5396;5389:12;5348:55;-1:-1:-1;5422:20:21;;5465:18;5454:30;;5451:50;;;5497:1;5494;5487:12;5451:50;5534:4;5526:6;5522:17;5510:29;;5586:3;5579:4;5570:6;5562;5558:19;5554:30;5551:39;5548:59;;;5603:1;5600;5593:12;5548:59;5265:348;;;;;:::o;5618:161::-;5685:20;;5745:8;5734:20;;5724:31;;5714:59;;5769:1;5766;5759:12;5714:59;5618:161;;;:::o;5784:165::-;5851:20;;5911:12;5900:24;;5890:35;;5880:63;;5939:1;5936;5929:12;5954:159;6021:20;;6081:6;6070:18;;6060:29;;6050:57;;6103:1;6100;6093:12;6118:859;6228:6;6236;6244;6252;6260;6268;6276;6329:3;6317:9;6308:7;6304:23;6300:33;6297:53;;;6346:1;6343;6336:12;6297:53;6386:9;6373:23;6419:18;6411:6;6408:30;6405:50;;;6451:1;6448;6441:12;6405:50;6490:59;6541:7;6532:6;6521:9;6517:22;6490:59;:::i;:::-;6568:8;;-1:-1:-1;6464:85:21;-1:-1:-1;;6653:2:21;6638:18;;6625:32;6697:4;6686:16;;6676:27;;6666:55;;6717:1;6714;6707:12;6666:55;6740:5;-1:-1:-1;6764:37:21;6797:2;6782:18;;6764:37;:::i;:::-;6754:47;;6820:37;6853:2;6842:9;6838:18;6820:37;:::i;:::-;6810:47;;6876:38;6909:3;6898:9;6894:19;6876:38;:::i;:::-;6866:48;;6933:38;6966:3;6955:9;6951:19;6933:38;:::i;:::-;6923:48;;6118:859;;;;;;;;;;:::o;6982:248::-;7050:6;7058;7111:2;7099:9;7090:7;7086:23;7082:32;7079:52;;;7127:1;7124;7117:12;7079:52;-1:-1:-1;;7150:23:21;;;7220:2;7205:18;;;7192:32;;-1:-1:-1;6982:248:21:o;7417:131::-;-1:-1:-1;;;;;7492:31:21;;7482:42;;7472:70;;7538:1;7535;7528:12;7553:247;7612:6;7665:2;7653:9;7644:7;7640:23;7636:32;7633:52;;;7681:1;7678;7671:12;7633:52;7720:9;7707:23;7739:31;7764:5;7739:31;:::i;:::-;7789:5;7553:247;-1:-1:-1;;;7553:247:21:o;7805:906::-;7891:6;7899;7907;7960:2;7948:9;7939:7;7935:23;7931:32;7928:52;;;7976:1;7973;7966:12;7928:52;8016:9;8003:23;8045:18;8086:2;8078:6;8075:14;8072:34;;;8102:1;8099;8092:12;8072:34;8140:6;8129:9;8125:22;8115:32;;8185:7;8178:4;8174:2;8170:13;8166:27;8156:55;;8207:1;8204;8197:12;8156:55;8243:2;8230:16;8265:4;8288:2;8284;8281:10;8278:36;;;8294:18;;:::i;:::-;8336:53;8379:2;8360:13;;-1:-1:-1;;8356:27:21;8352:36;;8336:53;:::i;:::-;8323:66;;8412:2;8405:5;8398:17;8452:7;8447:2;8442;8438;8434:11;8430:20;8427:33;8424:53;;;8473:1;8470;8463:12;8424:53;8528:2;8523;8519;8515:11;8510:2;8503:5;8499:14;8486:45;8572:1;8567:2;8562;8555:5;8551:14;8547:23;8540:34;8593:5;8583:15;;8645:2;8634:9;8630:18;8617:32;8607:42;;;;;;8668:37;8701:2;8690:9;8686:18;8668:37;:::i;:::-;8658:47;;7805:906;;;;;:::o;8716:316::-;8793:6;8801;8809;8862:2;8850:9;8841:7;8837:23;8833:32;8830:52;;;8878:1;8875;8868:12;8830:52;-1:-1:-1;;8901:23:21;;;8971:2;8956:18;;8943:32;;-1:-1:-1;9022:2:21;9007:18;;;8994:32;;8716:316;-1:-1:-1;8716:316:21:o;9148:1018::-;9496:4;9525:3;9555:2;9544:9;9537:21;9575:45;9616:2;9605:9;9601:18;9593:6;9575:45;:::i;:::-;9639:12;9687:15;;;9682:2;9667:18;;9660:43;9734:2;9719:18;;9712:34;;;;-1:-1:-1;;9777:2:21;9762:18;;9755:34;;;;9838:4;9826:17;;;;9820:3;9805:19;;9798:46;9893:8;9881:21;;;;9875:3;9860:19;;9853:50;-1:-1:-1;;;;;9940:35:21;;;;9934:3;9919:19;;9912:64;9995:6;10038:15;;;10032:3;10017:19;;10010:44;10091:15;10085:3;10070:19;;10063:44;10144:15;;;10138:3;10123:19;;;10116:44;;;;9567:53;9148:1018;-1:-1:-1;9148:1018:21:o;10379:1356::-;10548:2;10537:9;10530:21;10511:4;10586:6;10580:13;10612:6;10654:2;10649;10638:9;10634:18;10627:30;10680:52;10727:3;10716:9;10712:19;10698:12;10680:52;:::i;:::-;10666:66;;10781:2;10773:6;10769:15;10763:22;10794:53;10843:2;10832:9;10828:18;10812:14;847:12;836:24;824:37;;771:96;10794:53;;10901:2;10893:6;10889:15;10883:22;10878:2;10867:9;10863:18;10856:50;10961:2;10953:6;10949:15;10943:22;10937:3;10926:9;10922:19;10915:51;11015:3;11007:6;11003:16;10997:23;11029:53;11077:3;11066:9;11062:19;11046:14;3225:4;3214:16;3202:29;;3158:75;11029:53;-1:-1:-1;11131:3:21;11119:16;;11113:23;3314:8;3303:20;;11194:3;11179:19;;3291:33;-1:-1:-1;11248:3:21;11236:16;;11230:23;-1:-1:-1;;;;;9102:34:21;;11311:3;11296:19;;9090:47;11262:54;11365:3;11357:6;11353:16;11347:23;11389:3;11401:53;11450:2;11439:9;11435:18;11419:14;752:6;741:18;729:31;;676:90;11401:53;11491:15;;11485:22;;-1:-1:-1;11526:3:21;11538:53;11572:18;;;11485:22;752:6;741:18;729:31;;676:90;11538:53;11628:15;;;11622:22;847:12;836:24;11687:18;;824:37;;;;-1:-1:-1;11723:6:21;;-1:-1:-1;10379:1356:21:o;11740:774::-;11851:6;11859;11867;11875;11883;11891;11899;11952:3;11940:9;11931:7;11927:23;11923:33;11920:53;;;11969:1;11966;11959:12;11920:53;12009:9;11996:23;12042:18;12034:6;12031:30;12028:50;;;12074:1;12071;12064:12;12028:50;12113:59;12164:7;12155:6;12144:9;12140:22;12113:59;:::i;:::-;12191:8;;-1:-1:-1;12087:85:21;-1:-1:-1;12245:37:21;;-1:-1:-1;12278:2:21;12263:18;;12245:37;:::i;12519:484::-;12621:6;12629;12637;12690:2;12678:9;12669:7;12665:23;12661:32;12658:52;;;12706:1;12703;12696:12;12658:52;12742:9;12729:23;12719:33;;12799:2;12788:9;12784:18;12771:32;12761:42;;12854:2;12843:9;12839:18;12826:32;12881:18;12873:6;12870:30;12867:50;;;12913:1;12910;12903:12;12867:50;12936:61;12989:7;12980:6;12969:9;12965:22;12936:61;:::i;:::-;12926:71;;;12519:484;;;;;:::o;13008:643::-;13177:2;13229:21;;;13299:13;;13202:18;;;13321:22;;;13148:4;;13177:2;13400:15;;;;13374:2;13359:18;;;13148:4;13443:182;13457:6;13454:1;13451:13;13443:182;;;13522:13;;13537:6;13518:26;13506:39;;13600:15;;;;13565:12;;;;13479:1;13472:9;13443:182;;;-1:-1:-1;13642:3:21;;13008:643;-1:-1:-1;;;;;;13008:643:21:o;13656:380::-;13735:1;13731:12;;;;13778;;;13799:61;;13853:4;13845:6;13841:17;13831:27;;13799:61;13906:2;13898:6;13895:14;13875:18;13872:38;13869:161;;13952:10;13947:3;13943:20;13940:1;13933:31;13987:4;13984:1;13977:15;14015:4;14012:1;14005:15;13869:161;;13656:380;;;:::o;14041:127::-;14102:10;14097:3;14093:20;14090:1;14083:31;14133:4;14130:1;14123:15;14157:4;14154:1;14147:15;14360:543;14578:13;;14521:3;;14552;;14631:4;14658:15;;;14521:3;14701:175;14715:6;14712:1;14709:13;14701:175;;;14778:13;;14764:28;;14814:14;;;;14851:15;;;;14737:1;14730:9;14701:175;;;-1:-1:-1;14892:5:21;;14360:543;-1:-1:-1;;;;;;14360:543:21:o;14908:443::-;15133:6;15122:9;15115:25;15190:6;15183:14;15176:22;15171:2;15160:9;15156:18;15149:50;15235:6;15230:2;15219:9;15215:18;15208:34;15278:3;15273:2;15262:9;15258:18;15251:31;15096:4;15299:46;15340:3;15329:9;15325:19;15317:6;15299:46;:::i;:::-;15291:54;14908:443;-1:-1:-1;;;;;;14908:443:21:o;15705:356::-;15907:2;15889:21;;;15926:18;;;15919:30;15985:34;15980:2;15965:18;;15958:62;16052:2;16037:18;;15705:356::o;16066:220::-;16215:2;16204:9;16197:21;16178:4;16235:45;16276:2;16265:9;16261:18;16253:6;16235:45;:::i;16417:963::-;16526:4;16555:2;16584;16573:9;16566:21;16607:1;16640:6;16634:13;16670:36;16696:9;16670:36;:::i;:::-;16742:6;16737:2;16726:9;16722:18;16715:34;16768:2;16789:1;16821:2;16810:9;16806:18;16838:1;16833:158;;;;17005:1;17000:354;;;;16799:555;;16833:158;-1:-1:-1;;16881:24:21;;16861:18;;;16854:52;16959:14;;16952:22;16949:1;16945:30;16930:46;;16926:55;;;-1:-1:-1;16833:158:21;;17000:354;17031:6;17028:1;17021:17;17079:2;17076:1;17066:16;17104:1;17118:180;17132:6;17129:1;17126:13;17118:180;;;17225:14;;17201:17;;;17197:26;;17190:50;17268:16;;;;17147:10;;17118:180;;;17322:17;;17318:26;;;-1:-1:-1;;16799:555:21;-1:-1:-1;17371:3:21;;16417:963;-1:-1:-1;;;;;;;;16417:963:21:o;17733:545::-;17835:2;17830:3;17827:11;17824:448;;;17871:1;17896:5;17892:2;17885:17;17941:4;17937:2;17927:19;18011:2;17999:10;17995:19;17992:1;17988:27;17982:4;17978:38;18047:4;18035:10;18032:20;18029:47;;;-1:-1:-1;18070:4:21;18029:47;18125:2;18120:3;18116:12;18113:1;18109:20;18103:4;18099:31;18089:41;;18180:82;18198:2;18191:5;18188:13;18180:82;;;18243:17;;;18224:1;18213:13;18180:82;;;18184:3;;;17824:448;17733:545;;;:::o;18454:1352::-;18580:3;18574:10;18607:18;18599:6;18596:30;18593:56;;;18629:18;;:::i;:::-;18658:97;18748:6;18708:38;18740:4;18734:11;18708:38;:::i;:::-;18702:4;18658:97;:::i;:::-;18810:4;;18874:2;18863:14;;18891:1;18886:663;;;;19593:1;19610:6;19607:89;;;-1:-1:-1;19662:19:21;;;19656:26;19607:89;-1:-1:-1;;18411:1:21;18407:11;;;18403:24;18399:29;18389:40;18435:1;18431:11;;;18386:57;19709:81;;18856:944;;18886:663;16364:1;16357:14;;;16401:4;16388:18;;-1:-1:-1;;18922:20:21;;;19040:236;19054:7;19051:1;19048:14;19040:236;;;19143:19;;;19137:26;19122:42;;19235:27;;;;19203:1;19191:14;;;;19070:19;;19040:236;;;19044:3;19304:6;19295:7;19292:19;19289:201;;;19365:19;;;19359:26;-1:-1:-1;;19448:1:21;19444:14;;;19460:3;19440:24;19436:37;19432:42;19417:58;19402:74;;19289:201;-1:-1:-1;;;;;19536:1:21;19520:14;;;19516:22;19503:36;;-1:-1:-1;18454:1352:21:o;19811:127::-;19872:10;19867:3;19863:20;19860:1;19853:31;19903:4;19900:1;19893:15;19927:4;19924:1;19917:15;19943:128;19983:3;20014:1;20010:6;20007:1;20004:13;20001:39;;;20020:18;;:::i;:::-;-1:-1:-1;20056:9:21;;19943:128::o;20076:135::-;20115:3;20136:17;;;20133:43;;20156:18;;:::i;:::-;-1:-1:-1;20203:1:21;20192:13;;20076:135::o;21597:251::-;21667:6;21720:2;21708:9;21699:7;21695:23;21691:32;21688:52;;;21736:1;21733;21726:12;21688:52;21768:9;21762:16;21787:31;21812:5;21787:31;:::i;23358:1206::-;23482:18;23477:3;23474:27;23471:53;;;23504:18;;:::i;:::-;23533:94;23623:3;23583:38;23615:4;23609:11;23583:38;:::i;:::-;23577:4;23533:94;:::i;:::-;23653:1;23678:2;23673:3;23670:11;23695:1;23690:616;;;;24350:1;24367:3;24364:93;;;-1:-1:-1;24423:19:21;;;24410:33;24364:93;-1:-1:-1;;18411:1:21;18407:11;;;18403:24;18399:29;18389:40;18435:1;18431:11;;;18386:57;24470:78;;23663:895;;23690:616;16364:1;16357:14;;;16401:4;16388:18;;-1:-1:-1;;23726:17:21;;;23827:9;23849:229;23863:7;23860:1;23857:14;23849:229;;;23952:19;;;23939:33;23924:49;;24059:4;24044:20;;;;24012:1;24000:14;;;;23879:12;23849:229;;;23853:3;24106;24097:7;24094:16;24091:159;;;24230:1;24226:6;24220:3;24214;24211:1;24207:11;24203:21;24199:34;24195:39;24182:9;24177:3;24173:19;24160:33;24156:79;24148:6;24141:95;24091:159;;;24293:1;24287:3;24284:1;24280:11;24276:19;24270:4;24263:33;23663:895;;;23358:1206;;;:::o;25679:300::-;25718:1;-1:-1:-1;;;;;25793:2:21;25790:1;25786:10;25815:3;25805:134;;25861:10;25856:3;25852:20;25849:1;25842:31;25896:4;25893:1;25886:15;25924:4;25921:1;25914:15;25805:134;25957:10;;25953:20;;;;;25679:300;-1:-1:-1;;25679:300:21:o;26938:344::-;27140:2;27122:21;;;27179:2;27159:18;;;27152:30;-1:-1:-1;;;27213:2:21;27198:18;;27191:50;27273:2;27258:18;;26938:344::o;27694:928::-;28007:3;27996:9;27989:22;28048:6;28042:3;28031:9;28027:19;28020:35;27970:4;28074:3;28127:6;28119;28114:2;28103:9;28099:18;28086:48;28183:1;28154:22;;;28150:31;;28143:42;28275:12;28325:15;;;28318:4;28303:20;;28296:45;28389:4;28377:17;;;;28372:2;28357:18;;28350:45;-1:-1:-1;28443:8:21;28431:21;;;;28426:2;28411:18;;28404:49;28490:15;;;28484:3;28469:19;;28462:44;28543:15;;;28537:3;28522:19;;28515:44;28608:6;28596:19;;;28590:3;28575:19;;28568:48;28246:2;28225:15;;;-1:-1:-1;;28221:29:21;28206:45;28202:54;;;-1:-1:-1;27694:928:21:o;28627:265::-;28666:3;28694:9;;;28719:10;;-1:-1:-1;;;;;28738:27:21;;;28731:35;;28715:52;28712:78;;;28770:18;;:::i;:::-;-1:-1:-1;;;28817:19:21;;;28810:27;;28802:36;;28799:62;;;28841:18;;:::i;:::-;-1:-1:-1;;28877:9:21;;28627:265::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    19281
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x826B8EBD GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xBECA3A16 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x379D94CC EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x551BBE0B EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x12A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F6 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1E5 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x28A5 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x2943 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x297A JUMP JUMPDEST PUSH2 0xB5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x299E JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A4D JUMP JUMPDEST PUSH2 0x1167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39A PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC8 JUMP JUMPDEST PUSH2 0x13E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x14F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C19 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x297A JUMP JUMPDEST PUSH2 0x1FE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x447 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x46F SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x535 JUMPI PUSH2 0x535 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x54F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5D9 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x569 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x63E JUMPI PUSH2 0x63E PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x657 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x699 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C5 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x712 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x712 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x8F9 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x794 JUMPI PUSH2 0x794 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x7F1 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CC PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x86D JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x87D JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x894 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x273790363AB1B597 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8DF JUMPI PUSH2 0x8DF PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x776 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x915 JUMPI PUSH2 0x915 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x948 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x933 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xB2C JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x96D JUMPI PUSH2 0x96D PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x9CA JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA09 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9E5 JUMPI PUSH2 0x9E5 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0xA46 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0xB24 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA5E JUMPI PUSH2 0xA5E PUSH2 0x2CEB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA7A SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0xB2C JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x94F JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB54 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x21A8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0xBDD PUSH1 0x0 PUSH2 0x2327 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xF54 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBFD SWAP2 SWAP1 PUSH2 0x2D9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x2CEB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xF42 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xCDA JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCB4 JUMPI PUSH2 0xCB4 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD5F JUMPI PUSH2 0xD5F PUSH2 0x2CEB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD99 JUMPI PUSH2 0xD99 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xE37 SWAP1 DUP3 PUSH2 0x2E8A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF3B SWAP1 DUP5 SWAP1 PUSH2 0x2F60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST DUP1 PUSH2 0xF4C DUP2 PUSH2 0x2F78 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x1004 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1125 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x104C JUMPI PUSH2 0x104C PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x10C2 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x10EB JUMPI PUSH2 0x10EB PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1113 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x111D DUP2 PUSH2 0x2F78 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100B JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x11BB SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E7 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1234 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1209 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1234 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1217 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x12AA PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x12D3 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12FF SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x134C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1321 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x134C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x132F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x13FD JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2F60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x14DB DUP9 DUP11 DUP4 PUSH2 0x2FAE JUMP JUMPDEST POP PUSH2 0x14EF DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x21A8 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1514 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x151E PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1801 JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0x1550 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1565 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x17FC JUMPI PUSH2 0x1575 PUSH1 0x5 DUP3 PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x15A3 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15CF SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x161C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x161C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP3 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 SWAP4 POP PUSH2 0x16D0 SWAP1 TIMESTAMP PUSH2 0x2F60 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x16ED PUSH1 0x5 DUP6 PUSH2 0x2379 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x170B SWAP1 DUP3 PUSH2 0x2E8A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMPDEST PUSH2 0x1522 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18AE SWAP2 SWAP1 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x18DF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x19D2 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x197D JUMPI PUSH2 0x197D PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1997 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1962 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1A13 JUMPI PUSH1 0x0 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x1D7C JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1AA6 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x306F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B36 SWAP2 SWAP1 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1C66 DUP3 DUP3 PUSH2 0x253B JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CE4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1D0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D4B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1D73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x30A3 JUMP JUMPDEST POP POP POP POP PUSH2 0xB54 JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1EF3 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1DAB SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x306F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3B SWAP2 SWAP1 PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F23 DUP3 DUP3 PUSH2 0x253B JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x1F6A PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FB4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1FDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x30A3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2011 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2076 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x207F DUP2 PUSH2 0x2327 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x20C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20F6 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x211F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x21A1 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2150 JUMPI PUSH2 0x2150 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x217C JUMPI PUSH2 0x217C PUSH2 0x2CEB JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2199 DUP2 PUSH2 0x2F78 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2125 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x21CB JUMPI PUSH2 0x21CB PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x21EC DUP11 DUP13 DUP4 PUSH2 0x2FAE JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2313 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x239C PUSH2 0x2388 DUP5 PUSH2 0x23EA JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2397 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3140 JUMP JUMPDEST PUSH2 0x2458 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x23CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x248B JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2454 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2547 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2557 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x207F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2454 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25C4 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x25A8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x25D6 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25FE PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x266E JUMPI PUSH2 0x266E PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x26A3 JUMPI PUSH2 0x26A3 PUSH2 0x262F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x26B2 DUP3 DUP3 ADD PUSH2 0x2645 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x26CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x26EB JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x26D2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2735 DUP7 DUP3 DUP8 ADD PUSH2 0x2676 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x274B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x276A DUP2 DUP5 ADD DUP13 PUSH2 0x259E JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2810 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x27FE DUP6 DUP4 MLOAD PUSH2 0x259E JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x27E2 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x282F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x285F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E3 DUP11 DUP3 DUP12 ADD PUSH2 0x281D JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x28FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x290B PUSH1 0x40 DUP10 ADD PUSH2 0x2866 JUMP JUMPDEST SWAP4 POP PUSH2 0x2919 PUSH1 0x60 DUP10 ADD PUSH2 0x287E JUMP JUMPDEST SWAP3 POP PUSH2 0x2927 PUSH1 0x80 DUP10 ADD PUSH2 0x287E JUMP JUMPDEST SWAP2 POP PUSH2 0x2935 PUSH1 0xA0 DUP10 ADD PUSH2 0x2893 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2997 DUP2 PUSH2 0x2965 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x29CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH2 0x29F3 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x2645 JUMP JUMPDEST SWAP3 POP DUP2 DUP4 MSTORE DUP9 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP6 ADD DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 DUP6 ADD ADD MSTORE DUP3 SWAP7 POP DUP1 DUP9 ADD CALLDATALOAD SWAP6 POP POP POP POP POP PUSH2 0x2A44 PUSH1 0x40 DUP6 ADD PUSH2 0x287E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x2A8D DUP2 DUP5 ADD DUP15 PUSH2 0x259E JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x140 DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2B19 PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x259E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2B33 PUSH1 0x40 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x2B5C PUSH1 0xA0 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP6 ADD MLOAD PUSH3 0xFFFFFF DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0x2B9A DUP2 DUP8 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x2BB1 DUP7 DUP3 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST SWAP1 SWAP6 ADD MLOAD PUSH5 0xFFFFFFFFFF AND SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C06 DUP11 DUP3 DUP12 ADD PUSH2 0x281D JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x28FD SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x2893 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5F DUP7 DUP3 DUP8 ADD PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CA5 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2C85 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2CC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2CE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D2B JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D0F JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2D5E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x259E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2997 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x259E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0x2DC4 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2DE5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2DFF JUMPI PUSH2 0x2E2D JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x2E2D JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2E25 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x2E0A JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2E85 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2E62 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E81 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E6E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EA4 JUMPI PUSH2 0x2EA4 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x2EB8 DUP2 PUSH2 0x2EB2 DUP5 SLOAD PUSH2 0x2CB1 JUMP JUMPDEST DUP5 PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2EED JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2ED5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F1C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2EFD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F3A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2F73 JUMPI PUSH2 0x2F73 PUSH2 0x2F4A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2F8A JUMPI PUSH2 0x2F8A PUSH2 0x2F4A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2997 DUP2 PUSH2 0x2965 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2FC6 JUMPI PUSH2 0x2FC6 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x2FDA DUP4 PUSH2 0x2FD4 DUP4 SLOAD PUSH2 0x2CB1 JUMP JUMPDEST DUP4 PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x300E JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2FF6 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x303F JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x301F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x305C JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x3097 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3162 JUMPI PUSH2 0x3162 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x317B JUMPI PUSH2 0x317B PUSH2 0x2F4A JUMP JUMPDEST POP POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD4 0xD5 PUSH23 0x92DAC8445D7AC48668AC967C50196A9E266C28D50D8CE9 JUMPDEST 0xFB DIFFICULTY 0x27 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E7"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x407"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x427"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "REVERT",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x352"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37A"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "REVERT",
      "path": "2"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "GT",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "REVERT",
      "path": "2"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x169"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x379D94CC"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BF"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x551BBE0B"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "REVERT",
      "path": "2"
    },
    "291": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A"
    },
    "296": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "STOP",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "301": {
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "302": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        19281
      ],
      "op": "REVERT",
      "path": "2"
    },
    "303": {
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "306": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "307": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B"
    },
    "310": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "311": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "REVERT",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "316": {
      "op": "POP"
    },
    "317": {
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "320": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "323": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "324": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "326": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "329": {
      "fn": null,
      "jump": "i",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x454"
    },
    "334": {
      "fn": null,
      "jump": "i",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "335": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "339": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "342": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "344": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "345": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "346": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "347": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25EB"
    },
    "351": {
      "fn": null,
      "jump": "i",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "355": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "356": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "357": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SUB",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "360": {
      "fn": null,
      "offset": [
        2689,
        2735
      ],
      "op": "RETURN",
      "path": "2"
    },
    "361": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "362": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "363": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "DUP1",
      "path": "2"
    },
    "364": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "365": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "368": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "369": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "371": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "DUP1",
      "path": "2"
    },
    "372": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "REVERT",
      "path": "2"
    },
    "373": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "374": {
      "op": "POP"
    },
    "375": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "378": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184"
    },
    "381": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "382": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "384": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26F6"
    },
    "387": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "388": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "389": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x520"
    },
    "392": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "393": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "394": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "STOP",
      "path": "2"
    },
    "395": {
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "396": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "397": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "398": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "399": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197"
    },
    "402": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "403": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "405": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "407": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "408": {
      "op": "POP"
    },
    "409": {
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB"
    },
    "412": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "416": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "418": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "421": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "422": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "423": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "426": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "427": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "428": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "430": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "431": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "434": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "435": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "436": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "437": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "439": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "441": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "442": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "443": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2756"
    },
    "446": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "447": {
      "offset": [
        2522,
        2573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "448": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP1",
      "path": "2"
    },
    "450": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "451": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "454": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "455": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "457": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP1",
      "path": "2"
    },
    "458": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "REVERT",
      "path": "2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "464": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "468": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP2",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP2",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "offset": [
        2522,
        2573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DIV",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP3",
      "path": "2"
    },
    "484": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "485": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "488": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "DUP1",
      "path": "2"
    },
    "489": {
      "fn": "Governance.testHashing",
      "offset": [
        2522,
        2573
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "490": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "492": {
      "op": "SWAP4"
    },
    "493": {
      "op": "DUP5"
    },
    "494": {
      "op": "SIGNEXTEND"
    },
    "495": {
      "op": "DUP2"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "SWAP2"
    },
    "498": {
      "op": "SWAP1"
    },
    "499": {
      "op": "SWAP3"
    },
    "500": {
      "op": "SIGNEXTEND"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "503": {
      "op": "DUP3"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "op": "MSTORE"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "offset": [
        2522,
        2573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "510": {
      "op": "JUMP"
    },
    "511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "DUP1",
      "path": "2"
    },
    "514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "DUP1",
      "path": "2"
    },
    "522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "REVERT",
      "path": "2"
    },
    "523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "POP",
      "path": "2"
    },
    "525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x214"
    },
    "528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x770"
    },
    "531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27BB"
    },
    "544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "545": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "546": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "DUP1",
      "path": "2"
    },
    "548": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "549": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D"
    },
    "552": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "553": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "555": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "DUP1",
      "path": "2"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "REVERT",
      "path": "2"
    },
    "557": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "562": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C"
    },
    "565": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "566": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "568": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28A5"
    },
    "571": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMP",
      "path": "2"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "573": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB35"
    },
    "576": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMP",
      "path": "2"
    },
    "577": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "578": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "579": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "581": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D"
    },
    "584": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "585": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "587": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "588": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "589": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "594": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C"
    },
    "597": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "598": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "600": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2943"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "604": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "605": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "607": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "609": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "610": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "617": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "623": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "625": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "626": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "627": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "628": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "629": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "630": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "631": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "632": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "633": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "634": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "636": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "637": {
      "op": "SWAP1"
    },
    "638": {
      "op": "DUP2"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "646": {
      "op": "JUMP"
    },
    "647": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "648": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "650": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "651": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x293"
    },
    "654": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "655": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "657": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "658": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "REVERT",
      "path": "2"
    },
    "659": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "664": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "667": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "668": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "670": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297A"
    },
    "673": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "674": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "675": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5D"
    },
    "678": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2B3"
    },
    "686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "9"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "9"
    },
    "693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x189"
    },
    "696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBA9"
    },
    "699": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "700": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "701": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "704": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "707": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "708": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "710": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "DUP1",
      "path": "2"
    },
    "711": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "REVERT",
      "path": "2"
    },
    "712": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "717": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D7"
    },
    "720": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "721": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "723": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299E"
    },
    "726": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "727": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "728": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBDF"
    },
    "731": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "742": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "REVERT",
      "path": "2"
    },
    "744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F7"
    },
    "752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "758": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5A"
    },
    "763": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "764": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "765": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "767": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "768": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "771": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "772": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "774": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "775": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "REVERT",
      "path": "2"
    },
    "776": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "781": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x317"
    },
    "784": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "785": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "787": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4D"
    },
    "790": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "792": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1167"
    },
    "795": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "796": {
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "797": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "800": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x328"
    },
    "803": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "804": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "806": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "807": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "REVERT",
      "path": "2"
    },
    "808": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33C"
    },
    "813": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x337"
    },
    "816": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "817": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "819": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "822": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "824": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A0"
    },
    "827": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "829": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "835": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "836": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "838": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "839": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "840": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "841": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "842": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "843": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "844": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "845": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "846": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A79"
    },
    "849": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "854": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35E"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "9"
    },
    "862": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "867": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "876": {
      "op": "SHL"
    },
    "877": {
      "op": "SUB"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "880": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x160"
    },
    "889": {
      "op": "JUMP"
    },
    "890": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "891": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "892": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "DUP1",
      "path": "2"
    },
    "893": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "894": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x386"
    },
    "897": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "898": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "900": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "DUP1",
      "path": "2"
    },
    "901": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "REVERT",
      "path": "2"
    },
    "902": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A"
    },
    "907": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x395"
    },
    "910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "916": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMP",
      "path": "2"
    },
    "917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "918": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A2"
    },
    "921": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMP",
      "path": "2"
    },
    "922": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "923": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "925": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "926": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "929": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AFA"
    },
    "934": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "937": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "938": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "939": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B3"
    },
    "942": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "943": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "945": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "946": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "REVERT",
      "path": "2"
    },
    "947": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "952": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C2"
    },
    "955": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "956": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "958": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC8"
    },
    "961": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "962": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "963": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E4"
    },
    "966": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "970": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3"
    },
    "974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "REVERT",
      "path": "2"
    },
    "979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E2"
    },
    "987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F9"
    },
    "998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "999": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1000": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1002": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1003": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F3"
    },
    "1006": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1007": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1009": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1010": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1011": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "1016": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x402"
    },
    "1019": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1020": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1022": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C19"
    },
    "1025": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1026": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1841"
    },
    "1030": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x413"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1043": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x189"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x422"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x297A"
    },
    "1057": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FE7"
    },
    "1062": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1063": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1064": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1065": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1066": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1067": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x433"
    },
    "1070": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1071": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1073": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1075": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1080": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x442"
    },
    "1083": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1084": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1086": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2585"
    },
    "1089": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1090": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1091": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2082"
    },
    "1094": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1095": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1098": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "1102": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1103": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1104": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C69"
    },
    "1107": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1108": {
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1109": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1111": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1113": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1114": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1116": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1118": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1119": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1121": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1122": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1126": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1127": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46F"
    },
    "1130": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1131": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "1134": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1135": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1136": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1137": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1139": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1140": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1142": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1143": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1144": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DIV",
      "path": "2"
    },
    "1145": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MUL",
      "path": "2"
    },
    "1146": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1148": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1151": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1152": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1153": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1154": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1155": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1157": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1158": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1159": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1160": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1161": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1162": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1163": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1164": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1165": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1167": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1168": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1169": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1170": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1171": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49B"
    },
    "1174": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1175": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "1178": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1179": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1180": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1181": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1182": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E8"
    },
    "1185": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1186": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1189": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "LT",
      "path": "2"
    },
    "1190": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "1193": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1194": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1197": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1199": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1200": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DIV",
      "path": "2"
    },
    "1201": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MUL",
      "path": "2"
    },
    "1202": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1203": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1204": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1205": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1207": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1208": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1209": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E8"
    },
    "1212": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1214": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1215": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1216": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1220": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1221": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1223": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1225": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1226": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1227": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1228": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1229": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1230": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1231": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1232": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1233": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1235": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1239": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1240": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1241": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1242": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "GT",
      "path": "2"
    },
    "1243": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CB"
    },
    "1246": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1247": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1248": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1249": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SUB",
      "path": "2"
    },
    "1250": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1252": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "AND",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1254": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1255": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1256": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1263": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1264": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1270": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "ADD",
      "path": "2"
    },
    "1271": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1274": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "AND",
      "path": "2"
    },
    "1278": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1279": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1285": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1287": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "AND",
      "path": "2"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1289": {
      "op": "POP"
    },
    "1290": {
      "offset": [
        2689,
        2735
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DIV",
      "path": "2"
    },
    "1299": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1300": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "AND",
      "path": "2"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "offset": [
        2689,
        2735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1308": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DIV",
      "path": "2"
    },
    "1309": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "AND",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.getVotes",
      "offset": [
        2689,
        2735
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2689,
        2735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1313": {
      "fn": "Governance.testHashing",
      "offset": [
        13960,
        13982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1315": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14009
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.testHashing",
      "offset": [
        14010,
        14011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1318": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1319": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "LT",
      "path": "2"
    },
    "1322": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x535"
    },
    "1325": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x535"
    },
    "1329": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1332": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14002,
        14012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1333": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1334": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1336": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "MUL",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1339": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "ADD",
      "path": "2"
    },
    "1340": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "ADD",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.testHashing",
      "offset": [
        14002,
        14012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1344": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1347": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "ADD",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54F"
    },
    "1351": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1352": {
      "op": "DUP2"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "SWAP1"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1362": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1365": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1366": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "SUB",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "SUB",
      "path": "2"
    },
    "1369": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1370": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1371": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1374": {
      "fn": "Governance.testHashing",
      "offset": [
        13985,
        14013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.testHashing",
      "offset": [
        13960,
        14013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1376": {
      "fn": "Governance.testHashing",
      "offset": [
        13960,
        14013
      ],
      "op": "POP",
      "path": "2"
    },
    "1377": {
      "branch": 86,
      "fn": "Governance.testHashing",
      "offset": [
        14026,
        14034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1378": {
      "fn": "Governance.testHashing",
      "offset": [
        14023,
        14216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1379": {
      "fn": "Governance.testHashing",
      "offset": [
        14023,
        14216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DB"
    },
    "1382": {
      "branch": 86,
      "fn": "Governance.testHashing",
      "offset": [
        14023,
        14216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.testHashing",
      "offset": [
        14054,
        14063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1385": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1386": {
      "fn": "Governance.testHashing",
      "offset": [
        14073,
        14080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1387": {
      "fn": "Governance.testHashing",
      "offset": [
        14073,
        14087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1388": {
      "fn": "Governance.testHashing",
      "offset": [
        14069,
        14070
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1389": {
      "fn": "Governance.testHashing",
      "offset": [
        14069,
        14087
      ],
      "op": "LT",
      "path": "2"
    },
    "1390": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1391": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "1394": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1395": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14154
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1396": {
      "fn": "Governance.testHashing",
      "offset": [
        14155,
        14156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1397": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1398": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1399": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "LT",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x584"
    },
    "1404": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x584"
    },
    "1408": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1411": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14147,
        14157
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1412": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1415": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "MUL",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1418": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "ADD",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "ADD",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.testHashing",
      "offset": [
        14147,
        14157
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1421": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1423": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1426": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "ADD",
      "path": "2"
    },
    "1427": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59E"
    },
    "1430": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1431": {
      "op": "DUP2"
    },
    "1432": {
      "op": "MSTORE"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1435": {
      "op": "ADD"
    },
    "1436": {
      "op": "SWAP1"
    },
    "1437": {
      "op": "JUMP"
    },
    "1438": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1439": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1441": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1442": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1444": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "SUB",
      "path": "2"
    },
    "1447": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "SUB",
      "path": "2"
    },
    "1448": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1449": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1451": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1453": {
      "fn": "Governance.testHashing",
      "offset": [
        14130,
        14158
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1459": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "ADD",
      "path": "2"
    },
    "1460": {
      "fn": "Governance.testHashing",
      "offset": [
        14120,
        14159
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1461": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14114
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1462": {
      "fn": "Governance.testHashing",
      "offset": [
        14115,
        14116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1463": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1464": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "LT",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C6"
    },
    "1470": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1471": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C6"
    },
    "1474": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1477": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14107,
        14117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1478": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1481": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1482": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "MUL",
      "path": "2"
    },
    "1484": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1485": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1486": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1487": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "ADD",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14117
      ],
      "op": "ADD",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.testHashing",
      "offset": [
        14107,
        14159
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.testHashing",
      "offset": [
        14187,
        14190
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1492": {
      "fn": "Governance.testHashing",
      "offset": [
        14187,
        14190
      ],
      "op": "ADD",
      "path": "2"
    },
    "1493": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x569"
    },
    "1496": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1497": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1498": {
      "fn": "Governance.testHashing",
      "offset": [
        14050,
        14206
      ],
      "op": "POP",
      "path": "2"
    },
    "1499": {
      "fn": "Governance.testHashing",
      "offset": [
        14023,
        14216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.testHashing",
      "offset": [
        14225,
        14239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1502": {
      "fn": "Governance.testHashing",
      "offset": [
        14269,
        14276
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1503": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1505": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1506": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1508": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "ADD",
      "path": "2"
    },
    "1509": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EE"
    },
    "1512": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D01"
    },
    "1517": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14252,
        14277
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1519": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1526": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "SUB",
      "path": "2"
    },
    "1527": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "SUB",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1530": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1531": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1533": {
      "fn": "Governance.testHashing",
      "offset": [
        14252,
        14277
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1534": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1535": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1539": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "ADD",
      "path": "2"
    },
    "1540": {
      "fn": "Governance.testHashing",
      "offset": [
        14242,
        14278
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1541": {
      "fn": "Governance.testHashing",
      "offset": [
        14225,
        14278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1542": {
      "fn": "Governance.testHashing",
      "offset": [
        14225,
        14278
      ],
      "op": "POP",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        14305,
        14311
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        14321,
        14331
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1578": {
      "fn": "Governance.testHashing",
      "offset": [
        14313,
        14319
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.testHashing",
      "offset": [
        14313,
        14331
      ],
      "op": "EQ",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14340
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.testHashing",
      "offset": [
        14341,
        14342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1583": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1584": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1586": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "LT",
      "path": "2"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63E"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63E"
    },
    "1594": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14333,
        14343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1604": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "1605": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "1606": {
      "fn": "Governance.testHashing",
      "offset": [
        14333,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1607": {
      "fn": "Governance.testHashing",
      "offset": [
        14345,
        14354
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x657"
    },
    "1614": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1615": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1616": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1617": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D37"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        14293,
        14355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1624": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1627": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SUB",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        14293,
        14355
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        13950,
        14362
      ],
      "op": "POP",
      "path": "2"
    },
    "1633": {
      "fn": "Governance.testHashing",
      "offset": [
        13950,
        14362
      ],
      "op": "POP",
      "path": "2"
    },
    "1634": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "POP",
      "path": "2"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "POP",
      "path": "2"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        13859,
        14362
      ],
      "op": "POP",
      "path": "2"
    },
    "1637": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        13859,
        14362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1638": {
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1645": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "LT",
      "path": "2"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x676"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MUL",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1671": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "POP",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1674": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "POP",
      "path": "2"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1678": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x699"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1694": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MUL",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1702": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1703": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1709": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1712": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1713": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1717": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1719": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1735": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1741": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "LT",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E7"
    },
    "1747": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1753": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1755": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MUL",
      "path": "2"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1758": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1761": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1762": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "1766": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1767": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1768": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1771": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1790": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1795": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "GT",
      "path": "2"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F5"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SUB",
      "path": "2"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1817": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "ADD",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1842": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1854": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1864": {
      "op": "SHL"
    },
    "1865": {
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1868": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "offset": [
        2385,
        2412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1877": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "offset": [
        2385,
        2412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1885": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1889": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DIV",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "AND",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2385,
        2412
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1903": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2385,
        2412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5958,
        5973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5985,
        5998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5985,
        5998
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6028,
        6037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6028,
        6044
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6025,
        6044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6025,
        6044
      ],
      "op": "LT",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F9"
    },
    "1920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6110,
        6125
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6073,
        6074
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "LT",
      "path": "2"
    },
    "1929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x794"
    },
    "1932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x794"
    },
    "1936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6063,
        6075
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6096,
        6106
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "MUL",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6075
      ],
      "op": "ADD",
      "path": "2"
    },
    "1962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6107
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1969": {
      "branch": 87,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6125
      ],
      "op": "LT",
      "path": "2"
    },
    "1970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F1"
    },
    "1975": {
      "branch": 87,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "POP",
      "path": "2"
    },
    "1977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6170,
        6185
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6151,
        6152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "LT",
      "path": "2"
    },
    "1985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CC"
    },
    "1988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CC"
    },
    "1992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "1995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6141,
        6153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "MUL",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6153
      ],
      "op": "ADD",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "ADD",
      "path": "2"
    },
    "2016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2021": {
      "op": "SHL"
    },
    "2022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "DIV",
      "path": "2"
    },
    "2024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6166
      ],
      "op": "AND",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6185
      ],
      "op": "GT",
      "path": "2"
    },
    "2032": {
      "branch": 88,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6141,
        6185
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x830"
    },
    "2039": {
      "branch": 88,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "POP",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6217,
        6232
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6199,
        6200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2047": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "LT",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80C"
    },
    "2052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80C"
    },
    "2056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6189,
        6201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2061": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2071": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "MUL",
      "path": "2"
    },
    "2076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6201
      ],
      "op": "ADD",
      "path": "2"
    },
    "2077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "ADD",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "DIV",
      "path": "2"
    },
    "2088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6214
      ],
      "op": "AND",
      "path": "2"
    },
    "2095": {
      "branch": 89,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6189,
        6232
      ],
      "op": "GT",
      "path": "2"
    },
    "2096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6232
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86D"
    },
    "2102": {
      "branch": 89,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "POP",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6278,
        6279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6258,
        6259
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "LT",
      "path": "2"
    },
    "2113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84C"
    },
    "2116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84C"
    },
    "2120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2123": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6248,
        6260
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2135": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2137": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "MUL",
      "path": "2"
    },
    "2140": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6260
      ],
      "op": "ADD",
      "path": "2"
    },
    "2141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2143": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "ADD",
      "path": "2"
    },
    "2144": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "DIV",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6275
      ],
      "op": "AND",
      "path": "2"
    },
    "2156": {
      "branch": 90,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6248,
        6279
      ],
      "op": "GT",
      "path": "2"
    },
    "2157": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6063,
        6279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2158": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87D"
    },
    "2162": {
      "branch": 90,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6322,
        6329
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 4
    },
    "2164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6322,
        6329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6322,
        6329
      ],
      "op": "ADD",
      "path": "2"
    },
    "2167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6322,
        6329
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2168": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6322,
        6329
      ],
      "op": "POP",
      "path": "2"
    },
    "2169": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F1"
    },
    "2172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2173": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6420,
        6421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "ADD",
      "path": "2"
    },
    "2186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2193": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "ADD",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "ADD",
      "path": "2"
    },
    "2204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2207": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2208": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SUB",
      "path": "2"
    },
    "2209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x894"
    },
    "2214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "POP",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6407,
        6422
      ],
      "op": "POP",
      "path": "2"
    },
    "2218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6381,
        6422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6381,
        6422
      ],
      "op": "POP",
      "path": "2"
    },
    "2220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x40"
    },
    "2222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "ADD",
      "path": "2"
    },
    "2227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "ADD",
      "path": "2"
    },
    "2238": {
      "op": "PUSH8",
      "value": "0x273790363AB1B597"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "POP",
      "path": "2"
    },
    "2253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6449,
        6450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "LT",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6440,
        6451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "MUL",
      "path": "2"
    },
    "2277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "ADD",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6451
      ],
      "op": "ADD",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6440,
        6464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6489,
        6497
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 6
    },
    "2284": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6060,
        6512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6535,
        6538
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "2292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6535,
        6538
      ],
      "op": "ADD",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x776"
    },
    "2296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6008,
        6550
      ],
      "op": "POP",
      "path": "2"
    },
    "2299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6560,
        6583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6599,
        6604
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "GT",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x915"
    },
    "2317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x915"
    },
    "2321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262F"
    },
    "2324": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "MUL",
      "path": "2"
    },
    "2337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ADD",
      "path": "2"
    },
    "2340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ADD",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x948"
    },
    "2350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ADD",
      "path": "2"
    },
    "2355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "ADD",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SUB",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x933"
    },
    "2373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "POP",
      "path": "2"
    },
    "2376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6586,
        6605
      ],
      "op": "POP",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6560,
        6605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6560,
        6605
      ],
      "op": "POP",
      "path": "2"
    },
    "2380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6615,
        6630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6648,
        6657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6664,
        6673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6664,
        6680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6661,
        6680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6661,
        6680
      ],
      "op": "LT",
      "path": "2"
    },
    "2389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2C"
    },
    "2393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6746,
        6761
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6709,
        6710
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2400": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "LT",
      "path": "2"
    },
    "2402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96D"
    },
    "2405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96D"
    },
    "2409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6699,
        6711
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6732,
        6742
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "MUL",
      "path": "2"
    },
    "2432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6711
      ],
      "op": "ADD",
      "path": "2"
    },
    "2435": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2439": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6743
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2442": {
      "branch": 91,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6761
      ],
      "op": "LT",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9CA"
    },
    "2448": {
      "branch": 91,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "POP",
      "path": "2"
    },
    "2450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6806,
        6821
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6787,
        6788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2454": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "LT",
      "path": "2"
    },
    "2458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A5"
    },
    "2461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A5"
    },
    "2465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6777,
        6789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "MUL",
      "path": "2"
    },
    "2485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6789
      ],
      "op": "ADD",
      "path": "2"
    },
    "2486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "ADD",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "DIV",
      "path": "2"
    },
    "2497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6802
      ],
      "op": "AND",
      "path": "2"
    },
    "2504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6821
      ],
      "op": "GT",
      "path": "2"
    },
    "2505": {
      "branch": 92,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6777,
        6821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA09"
    },
    "2512": {
      "branch": 92,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "POP",
      "path": "2"
    },
    "2514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6853,
        6868
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6835,
        6836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "LT",
      "path": "2"
    },
    "2522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E5"
    },
    "2525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E5"
    },
    "2529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6825,
        6837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "MUL",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6837
      ],
      "op": "ADD",
      "path": "2"
    },
    "2550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "ADD",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "DIV",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6850
      ],
      "op": "AND",
      "path": "2"
    },
    "2568": {
      "branch": 93,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6825,
        6868
      ],
      "op": "GT",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6868
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA46"
    },
    "2575": {
      "branch": 93,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "POP",
      "path": "2"
    },
    "2577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6914,
        6915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2581": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6894,
        6895
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "LT",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "2589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "2593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2596": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6884,
        6896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "MUL",
      "path": "2"
    },
    "2613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6896
      ],
      "op": "ADD",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "ADD",
      "path": "2"
    },
    "2617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "DIV",
      "path": "2"
    },
    "2625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6911
      ],
      "op": "AND",
      "path": "2"
    },
    "2629": {
      "branch": 94,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6884,
        6915
      ],
      "op": "GT",
      "path": "2"
    },
    "2630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6699,
        6915
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6696,
        7119
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6696,
        7119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB24"
    },
    "2635": {
      "branch": 94,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6696,
        7119
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6970
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x4"
    },
    "2638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6971,
        6972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "LT",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5E"
    },
    "2646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5E"
    },
    "2650": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6961,
        6973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "MUL",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6973
      ],
      "op": "ADD",
      "path": "2"
    },
    "2669": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6961,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA7A"
    },
    "2677": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "2681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DIV",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MUL",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA6"
    },
    "2721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "2725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF3"
    },
    "2732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2736": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "LT",
      "path": "2"
    },
    "2737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC8"
    },
    "2740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DIV",
      "path": "2"
    },
    "2748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MUL",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF3"
    },
    "2759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2773": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "GT",
      "path": "2"
    },
    "2790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD6"
    },
    "2793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SUB",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "AND",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "ADD",
      "path": "2"
    },
    "2802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6956,
        6957
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "LT",
      "path": "2"
    },
    "2815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0A"
    },
    "2818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0A"
    },
    "2822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "2825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6948,
        6958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "MUL",
      "path": "2"
    },
    "2830": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "ADD",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6958
      ],
      "op": "ADD",
      "path": "2"
    },
    "2834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6948,
        6982
      ],
      "op": "POP",
      "path": "2"
    },
    "2838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7010,
        7019
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 9
    },
    "2839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7010,
        7019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7010,
        7019
      ],
      "op": "ADD",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7010,
        7019
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7010,
        7019
      ],
      "op": "POP",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7052,
        7057
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7041,
        7048
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2846": {
      "branch": 95,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7041,
        7057
      ],
      "op": "LT",
      "path": "2"
    },
    "2847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7038,
        7105
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7081,
        7086
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xB2C"
    },
    "2851": {
      "branch": 95,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7038,
        7105
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7038,
        7105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7142,
        7145
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "2855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7142,
        7145
      ],
      "op": "ADD",
      "path": "2"
    },
    "2856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x94F"
    },
    "2859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6644,
        7157
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2861": {
      "op": "POP"
    },
    "2862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7173,
        7180
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 12
    },
    "2863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7173,
        7180
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5900,
        7187
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2865": {
      "op": "POP"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        5900,
        7187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2870": {
      "offset": [
        19199,
        19235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB43"
    },
    "2873": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2877": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2880": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "SUB",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2883": {
      "fn": "Governance.createTaskType",
      "offset": [
        19199,
        19235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.createTaskType",
      "offset": [
        9665,
        9771
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xB54"
    },
    "2887": {
      "fn": "Governance.createTaskType",
      "offset": [
        9681,
        9690
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2888": {
      "fn": "Governance.createTaskType",
      "offset": [
        9681,
        9690
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.createTaskType",
      "offset": [
        9692,
        9693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2891": {
      "fn": "Governance.createTaskType",
      "offset": [
        9695,
        9711
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2892": {
      "fn": "Governance.createTaskType",
      "offset": [
        9713,
        9723
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2893": {
      "fn": "Governance.createTaskType",
      "offset": [
        9725,
        9738
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2894": {
      "fn": "Governance.createTaskType",
      "offset": [
        9740,
        9753
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.createTaskType",
      "offset": [
        9755,
        9770
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.createTaskType",
      "offset": [
        9665,
        9680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A8"
    },
    "2899": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        9665,
        9771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.createTaskType",
      "offset": [
        9665,
        9771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2902": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2903": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2904": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.createTaskType",
      "offset": [
        9458,
        9778
      ],
      "op": "POP",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        9458,
        9778
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2909": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2910": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2912": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "2922": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 14
    },
    "2923": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "2924": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB87"
    },
    "2927": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2928": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2930": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2939": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2940": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2942": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "2943": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3A"
    },
    "2946": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2947": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D68"
    },
    "2950": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2951": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2952": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x2"
    },
    "2954": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2955": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "op": "SUB"
    },
    "2964": {
      "op": "NOT"
    },
    "2965": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "AND",
      "path": "2"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "SUB"
    },
    "2974": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2975": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2976": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2977": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "AND",
      "path": "2"
    },
    "2978": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "OR",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2983": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7364,
        7391
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2984": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        7297,
        7398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2985": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2986": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2988": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "2998": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2999": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3000": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBD3"
    },
    "3003": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3004": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3006": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3015": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3016": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3018": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3019": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3A"
    },
    "3022": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3023": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D68"
    },
    "3026": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3027": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3028": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 16,
      "value": "0xBDD"
    },
    "3031": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3033": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2327"
    },
    "3036": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3037": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3038": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3039": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3040": {
      "fn": "Governance.completeTask",
      "offset": [
        13144,
        13153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3042": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.completeTask",
      "offset": [
        13161,
        13170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3045": {
      "fn": "Governance.completeTask",
      "offset": [
        13161,
        13177
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.completeTask",
      "offset": [
        13159,
        13177
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.completeTask",
      "offset": [
        13159,
        13177
      ],
      "op": "LT",
      "path": "2"
    },
    "3048": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3049": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF54"
    },
    "3052": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3053": {
      "fn": "Governance.completeTask",
      "offset": [
        13269,
        13278
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3054": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3056": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3057": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3059": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "ADD",
      "path": "2"
    },
    "3060": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFD"
    },
    "3063": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3064": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3065": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D9D"
    },
    "3068": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13258,
        13279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3069": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3070": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3072": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3073": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3075": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3076": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3077": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "SUB",
      "path": "2"
    },
    "3078": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "SUB",
      "path": "2"
    },
    "3079": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3080": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3081": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3082": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3084": {
      "fn": "Governance.completeTask",
      "offset": [
        13258,
        13279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3085": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3086": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3087": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3088": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3090": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "ADD",
      "path": "2"
    },
    "3091": {
      "fn": "Governance.completeTask",
      "offset": [
        13248,
        13280
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3092": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13230
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3094": {
      "fn": "Governance.completeTask",
      "offset": [
        13231,
        13232
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3095": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3096": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3097": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3098": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "LT",
      "path": "2"
    },
    "3099": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC26"
    },
    "3102": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3103": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC26"
    },
    "3106": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "3109": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13221,
        13233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3112": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3114": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3115": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3117": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3119": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3123": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "MUL",
      "path": "2"
    },
    "3124": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13233
      ],
      "op": "ADD",
      "path": "2"
    },
    "3125": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3127": {
      "fn": "Governance.completeTask",
      "offset": [
        13221,
        13242
      ],
      "op": "ADD",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3130": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3133": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "ADD",
      "path": "2"
    },
    "3134": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC47"
    },
    "3137": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3138": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB0"
    },
    "3142": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13210,
        13243
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3143": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3146": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3149": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3150": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "SUB",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "SUB",
      "path": "2"
    },
    "3153": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3155": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3158": {
      "fn": "Governance.completeTask",
      "offset": [
        13210,
        13243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3159": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3162": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3164": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "ADD",
      "path": "2"
    },
    "3165": {
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13244
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3166": {
      "branch": 96,
      "fn": "Governance.completeTask",
      "offset": [
        13200,
        13280
      ],
      "op": "SUB",
      "path": "2"
    },
    "3167": {
      "fn": "Governance.completeTask",
      "offset": [
        13197,
        13837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF42"
    },
    "3170": {
      "branch": 96,
      "fn": "Governance.completeTask",
      "offset": [
        13197,
        13837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3171": {
      "fn": "Governance.completeTask",
      "offset": [
        13396,
        13411
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 17
    },
    "3172": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3174": {
      "fn": "Governance.completeTask",
      "offset": [
        13377,
        13378
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3176": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3177": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3178": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "LT",
      "path": "2"
    },
    "3179": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "3182": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3183": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "3186": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "3189": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13367,
        13379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3190": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3191": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3193": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3194": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3195": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3196": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3198": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3199": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3201": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3203": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "MUL",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13379
      ],
      "op": "ADD",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3209": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "ADD",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "DIV",
      "path": "2"
    },
    "3218": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3224": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13392
      ],
      "op": "AND",
      "path": "2"
    },
    "3225": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13411
      ],
      "op": "GT",
      "path": "2"
    },
    "3226": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3227": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3228": {
      "branch": 97,
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDA"
    },
    "3232": {
      "branch": 97,
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3233": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13459
      ],
      "op": "POP",
      "path": "2"
    },
    "3234": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3236": {
      "fn": "Governance.completeTask",
      "offset": [
        13444,
        13445
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3238": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3239": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3240": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "LT",
      "path": "2"
    },
    "3241": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB4"
    },
    "3244": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3245": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB4"
    },
    "3248": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "3251": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13434,
        13446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3252": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3253": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3255": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3257": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3258": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3260": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3261": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3262": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3263": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3265": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3266": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3267": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "MUL",
      "path": "2"
    },
    "3268": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13446
      ],
      "op": "ADD",
      "path": "2"
    },
    "3269": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3271": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "ADD",
      "path": "2"
    },
    "3272": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3277": {
      "op": "SHL"
    },
    "3278": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3279": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "DIV",
      "path": "2"
    },
    "3280": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3286": {
      "fn": "Governance.completeTask",
      "offset": [
        13434,
        13459
      ],
      "op": "AND",
      "path": "2"
    },
    "3287": {
      "fn": "Governance.completeTask",
      "offset": [
        13415,
        13430
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3288": {
      "fn": "Governance.completeTask",
      "offset": [
        13415,
        13459
      ],
      "op": "GT",
      "path": "2"
    },
    "3289": {
      "branch": 98,
      "fn": "Governance.completeTask",
      "offset": [
        13415,
        13459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3290": {
      "fn": "Governance.completeTask",
      "offset": [
        13367,
        13459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3291": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1C"
    },
    "3294": {
      "branch": 98,
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3295": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3297": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3309": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3311": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "ADD",
      "path": "2"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3318": {
      "op": "DUP3"
    },
    "3319": {
      "op": "ADD"
    },
    "3320": {
      "op": "MSTORE"
    },
    "3321": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "3355": {
      "op": "JUMP"
    },
    "3356": {
      "fn": "Governance.completeTask",
      "offset": [
        13359,
        13483
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3357": {
      "fn": "Governance.completeTask",
      "offset": [
        13536,
        13554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3359": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3361": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3362": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3363": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3366": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3367": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3369": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3370": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3371": {
      "fn": "Governance.completeTask",
      "offset": [
        13562,
        13571
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3372": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3376": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3377": {
      "fn": "Governance.completeTask",
      "offset": [
        13572,
        13578
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3378": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3384": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "AND",
      "path": "2"
    },
    "3385": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3386": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3387": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3389": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3390": {
      "fn": "Governance.completeTask",
      "offset": [
        13580,
        13585
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3391": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3395": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3396": {
      "fn": "Governance.completeTask",
      "offset": [
        13587,
        13588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3398": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3399": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SHL",
      "path": "2"
    },
    "3400": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3401": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3402": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3404": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3405": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3407": {
      "fn": "Governance.completeTask",
      "offset": [
        13600,
        13601
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3408": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3411": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "LT",
      "path": "2"
    },
    "3412": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5F"
    },
    "3415": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3416": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5F"
    },
    "3419": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "3422": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13590,
        13602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3423": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3424": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3425": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3427": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3430": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3432": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3433": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3434": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3436": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "MUL",
      "path": "2"
    },
    "3437": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13602
      ],
      "op": "ADD",
      "path": "2"
    },
    "3438": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3440": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "ADD",
      "path": "2"
    },
    "3441": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3443": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3444": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3445": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3446": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3449": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "EXP",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3451": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "DIV",
      "path": "2"
    },
    "3452": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3454": {
      "fn": "Governance.completeTask",
      "offset": [
        13590,
        13618
      ],
      "op": "AND",
      "path": "2"
    },
    "3455": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3457": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "AND",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3459": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3460": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3462": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3463": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3465": {
      "fn": "Governance.completeTask",
      "offset": [
        13630,
        13631
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3466": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3468": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3469": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "LT",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD99"
    },
    "3473": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3474": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD99"
    },
    "3477": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "3480": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13620,
        13632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3481": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3482": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3484": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3485": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3489": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3491": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3492": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3494": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3496": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3497": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "MUL",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3499": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3500": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13632
      ],
      "op": "ADD",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3503": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "ADD",
      "path": "2"
    },
    "3504": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3509": {
      "op": "SHL"
    },
    "3510": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3511": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "DIV",
      "path": "2"
    },
    "3512": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3516": {
      "fn": "Governance.completeTask",
      "offset": [
        13620,
        13642
      ],
      "op": "AND",
      "path": "2"
    },
    "3517": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3518": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3519": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3520": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3523": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3524": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3527": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3529": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3530": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3533": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3535": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3537": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3538": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3539": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3542": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3543": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3544": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "ADD",
      "path": "2"
    },
    "3545": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3546": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.completeTask",
      "offset": [
        13557,
        13655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.completeTask",
      "offset": [
        13723,
        13737
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0xA"
    },
    "3550": {
      "fn": "Governance.completeTask",
      "offset": [
        13723,
        13737
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.completeTask",
      "offset": [
        13699,
        13713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3553": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3554": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3561": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3562": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3563": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "3564": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "3566": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3567": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 19
    },
    "3568": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3569": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3570": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "3572": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3573": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3574": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3575": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3576": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3577": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3578": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3579": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3580": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 20
    },
    "3581": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3582": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3599": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3600": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3601": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3602": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3604": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3605": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3606": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "3607": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3608": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3609": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3610": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "3611": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "3612": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3613": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3614": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 21
    },
    "3615": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3616": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3618": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3619": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3621": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3622": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3624": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3627": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3628": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3629": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE37"
    },
    "3633": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3634": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13778
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3635": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8A"
    },
    "3638": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13757,
        13787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3639": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3643": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3645": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3646": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3648": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3649": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3650": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3653": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3667": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3670": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3671": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3672": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3675": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3677": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3680": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3681": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3682": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3683": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3685": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3686": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3687": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3688": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3690": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3691": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3692": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3693": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3695": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3700": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3704": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3707": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3708": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3709": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3710": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3712": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3714": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3715": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3717": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3718": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3719": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3720": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3723": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3724": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3725": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3726": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3727": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3730": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3731": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "3732": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3733": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3734": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3736": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3737": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "3738": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3739": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3744": {
      "op": "NOT"
    },
    "3745": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3746": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3747": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3749": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3750": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3756": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3757": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3758": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3759": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3760": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3761": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3762": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3763": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3764": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3765": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3766": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "3783": {
      "op": "NOT"
    },
    "3784": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "SUB"
    },
    "3798": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3799": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3803": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3804": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3805": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "NOT"
    },
    "3812": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3813": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3818": {
      "op": "SHL"
    },
    "3819": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3822": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3823": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3824": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3825": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3826": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3827": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "op": "NOT"
    },
    "3839": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3846": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3848": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3849": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3850": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "op": "NOT"
    },
    "3860": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3861": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3862": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3863": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3864": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3871": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3872": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "AND",
      "path": "2"
    },
    "3874": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3875": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "OR",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3881": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13819
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0xA"
    },
    "3884": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3888": {
      "op": "SWAP1"
    },
    "3889": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3B"
    },
    "3892": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3894": {
      "fn": "Governance.completeTask",
      "offset": [
        13757,
        13787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3895": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F60"
    },
    "3898": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13805,
        13822
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3899": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3900": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3901": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.completeTask",
      "offset": [
        13805,
        13822
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "POP"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "fn": "Governance.completeTask",
      "offset": [
        13197,
        13837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 23
    },
    "3908": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF4C"
    },
    "3911": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3912": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F78"
    },
    "3915": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        13179,
        13182
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3916": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3917": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3918": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "POP",
      "path": "2"
    },
    "3919": {
      "fn": "Governance.completeTask",
      "offset": [
        13179,
        13182
      ],
      "op": "POP",
      "path": "2"
    },
    "3920": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE2"
    },
    "3923": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3924": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3925": {
      "fn": "Governance.completeTask",
      "offset": [
        13140,
        13847
      ],
      "op": "POP",
      "path": "2"
    },
    "3926": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "POP",
      "path": "2"
    },
    "3927": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "POP",
      "path": "2"
    },
    "3928": {
      "fn": "Governance.completeTask",
      "offset": [
        12960,
        13853
      ],
      "op": "POP",
      "path": "2"
    },
    "3929": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        12960,
        13853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        5825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4923,
        4930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3933": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4964,
        4978
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x8"
    },
    "3935": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4964,
        4978
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4951,
        4961
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3937": {
      "branch": 99,
      "fn": "Governance.getWinningVote",
      "offset": [
        4951,
        4978
      ],
      "op": "LT",
      "path": "2"
    },
    "3938": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "3941": {
      "branch": 99,
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3942": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3944": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3953": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3956": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3958": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3959": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "ADD",
      "path": "2"
    },
    "3960": {
      "op": "MSTORE"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "3999": {
      "op": "JUMP"
    },
    "4000": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4943,
        4999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x0"
    },
    "4003": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4005": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4006": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4008": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4010": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4013": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5057
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4017": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "ADD",
      "path": "2"
    },
    "4018": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4025": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "DIV",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4032": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5036,
        5070
      ],
      "op": "AND",
      "path": "2"
    },
    "4033": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5018,
        5033
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4034": {
      "branch": 100,
      "fn": "Governance.getWinningVote",
      "offset": [
        5018,
        5070
      ],
      "op": "GT",
      "path": "2"
    },
    "4035": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1004"
    },
    "4038": {
      "branch": 100,
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4039": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4041": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4050": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4053": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4055": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4056": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "ADD",
      "path": "2"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4062": {
      "op": "DUP3"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "ADD"
    },
    "4092": {
      "op": "MSTORE"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "4099": {
      "op": "JUMP"
    },
    "4100": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5094
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4101": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5214,
        5233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4103": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5243,
        5268
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4104": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5278,
        5289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4106": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5305,
        5314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4107": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4108": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4110": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4112": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4113": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4115": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4117": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4120": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4121": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5342
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4122": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4124": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4126": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4129": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5358
      ],
      "op": "AND",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5318,
        5358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4131": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5318,
        5358
      ],
      "op": "LT",
      "path": "2"
    },
    "4132": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4133": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1125"
    },
    "4136": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4139": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4140": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4141": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4142": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4144": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4146": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4147": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4149": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4150": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5438
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4151": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5450,
        5467
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4152": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5450,
        5467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4153": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4155": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5444
      ],
      "op": "ADD",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4159": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4160": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "LT",
      "path": "2"
    },
    "4161": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104C"
    },
    "4164": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4165": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104C"
    },
    "4168": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "4171": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5417,
        5447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4175": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4176": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4177": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4178": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "DIV",
      "path": "2"
    },
    "4179": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "4180": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4181": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4182": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "MOD",
      "path": "2"
    },
    "4183": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4185": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "MUL",
      "path": "2"
    },
    "4186": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4187": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4188": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4189": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4192": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "EXP",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4194": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "DIV",
      "path": "2"
    },
    "4195": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4198": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5447
      ],
      "op": "AND",
      "path": "2"
    },
    "4199": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4202": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5467
      ],
      "op": "AND",
      "path": "2"
    },
    "4203": {
      "branch": 101,
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5467
      ],
      "op": "GT",
      "path": "2"
    },
    "4204": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4205": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C7"
    },
    "4208": {
      "branch": 101,
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4209": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x0"
    },
    "4211": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4214": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4216": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4218": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4221": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4222": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5528
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4223": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4225": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5534
      ],
      "op": "ADD",
      "path": "2"
    },
    "4226": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5535,
        5536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4227": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4229": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4230": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "LT",
      "path": "2"
    },
    "4231": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1092"
    },
    "4234": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1092"
    },
    "4238": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "4241": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5507,
        5537
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4242": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4243": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4245": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4246": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4247": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4248": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "DIV",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "ADD",
      "path": "2"
    },
    "4250": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4251": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4252": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "MOD",
      "path": "2"
    },
    "4253": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4255": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "MUL",
      "path": "2"
    },
    "4256": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4257": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4258": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4259": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4262": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "EXP",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4264": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "DIV",
      "path": "2"
    },
    "4265": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4268": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5507,
        5537
      ],
      "op": "AND",
      "path": "2"
    },
    "4269": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4272": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5537
      ],
      "op": "AND",
      "path": "2"
    },
    "4273": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5537
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4274": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5537
      ],
      "op": "POP",
      "path": "2"
    },
    "4275": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5569,
        5570
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 27
    },
    "4276": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5555,
        5570
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4277": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5555,
        5570
      ],
      "op": "POP",
      "path": "2"
    },
    "4278": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5592,
        5595
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4279": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5597,
        5598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4281": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5592,
        5598
      ],
      "op": "SUB",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5588,
        5611
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C2"
    },
    "4285": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5588,
        5611
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4286": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5608,
        5609
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x0"
    },
    "4288": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5602,
        5609
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4289": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5602,
        5609
      ],
      "op": "POP",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5588,
        5611
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1113"
    },
    "4294": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5414,
        5736
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4298": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4299": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4300": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4301": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4303": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4305": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4306": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4308": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4309": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5667
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5680,
        5697
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5680,
        5697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4314": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5673
      ],
      "op": "ADD",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5674,
        5675
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4318": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4319": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "LT",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10EB"
    },
    "4323": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10EB"
    },
    "4327": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "4330": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5646,
        5676
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4331": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4332": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4334": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4336": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4337": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "DIV",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "ADD",
      "path": "2"
    },
    "4339": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4340": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4341": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "MOD",
      "path": "2"
    },
    "4342": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4344": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "MUL",
      "path": "2"
    },
    "4345": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4346": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4348": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4351": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "EXP",
      "path": "2"
    },
    "4352": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "DIV",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4357": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5676
      ],
      "op": "AND",
      "path": "2"
    },
    "4358": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4361": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5697
      ],
      "op": "AND",
      "path": "2"
    },
    "4362": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5697
      ],
      "op": "SUB",
      "path": "2"
    },
    "4363": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5643,
        5736
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1113"
    },
    "4366": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5643,
        5736
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4367": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5720,
        5721
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x1"
    },
    "4369": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5716,
        5721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4370": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5716,
        5721
      ],
      "op": "POP",
      "path": "2"
    },
    "4371": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5643,
        5736
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4372": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 30
    },
    "4373": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111D"
    },
    "4376": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4377": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F78"
    },
    "4380": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5360,
        5363
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "4384": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5360,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "4385": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100B"
    },
    "4388": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4389": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5301,
        5746
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4390": {
      "op": "POP"
    },
    "4391": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5763,
        5769
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 31
    },
    "4392": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5763,
        5769
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4393": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2C"
    },
    "4396": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4399": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4406": {
      "op": "SHL"
    },
    "4407": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4411": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4413": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "ADD",
      "path": "2"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4420": {
      "op": "DUP3"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4442": {
      "op": "SHL"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4445": {
      "op": "DUP3"
    },
    "4446": {
      "op": "ADD"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5755,
        5790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "4454": {
      "op": "JUMP"
    },
    "4455": {
      "fn": "Governance.vote",
      "offset": [
        7979,
        8643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4456": {
      "offset": [
        19090,
        19121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4458": {
      "fn": "Governance.vote",
      "offset": [
        19090,
        19121
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "offset": [
        19090,
        19121
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4467": {
      "fn": "Governance.vote",
      "offset": [
        19090,
        19121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4470": {
      "offset": [
        19090,
        19121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4472": {
      "fn": "Governance.vote",
      "offset": [
        19090,
        19121
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.vote",
      "offset": [
        19090,
        19121
      ],
      "op": "ADD",
      "path": "2"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4479": {
      "op": "DUP3"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "MSTORE"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "offset": [
        19090,
        19121
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "4511": {
      "op": "JUMP"
    },
    "4512": {
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4513": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4515": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4517": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4518": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4520": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4521": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4522": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4523": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4525": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4526": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4527": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4528": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4530": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11BB"
    },
    "4534": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4535": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "4538": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4539": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4540": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4541": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4543": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4544": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4546": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4547": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4549": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MUL",
      "path": "2"
    },
    "4550": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4552": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4553": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4555": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4556": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4557": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4558": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4559": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4561": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4562": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4563": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4564": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4565": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4566": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4567": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4568": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4569": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4571": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4573": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4574": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4575": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E7"
    },
    "4578": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4579": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "4582": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4583": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4584": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4585": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4586": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1234"
    },
    "4589": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4590": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4591": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4593": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "LT",
      "path": "2"
    },
    "4594": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1209"
    },
    "4597": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4598": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4601": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4603": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4604": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4605": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MUL",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4607": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4608": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4609": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4611": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4612": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4613": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1234"
    },
    "4616": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4617": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4618": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4619": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4620": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4621": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4622": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4624": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4625": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4627": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4629": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4630": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4631": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4632": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4633": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4634": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4635": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4639": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4640": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4641": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4643": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4645": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4646": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "GT",
      "path": "2"
    },
    "4647": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1217"
    },
    "4650": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4651": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4652": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4653": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SUB",
      "path": "2"
    },
    "4654": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4656": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4657": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4660": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4666": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4667": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4668": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4669": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4671": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4672": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4673": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4674": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4676": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4677": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4678": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4679": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4681": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4682": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4683": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "ADD",
      "path": "2"
    },
    "4684": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4685": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4686": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4687": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4693": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4694": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4695": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4696": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4704": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4707": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4711": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4714": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4715": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4716": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4724": {
      "op": "SHL"
    },
    "4725": {
      "op": "SUB"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4730": {
      "op": "SHL"
    },
    "4731": {
      "offset": [
        2770,
        2808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4734": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4742": {
      "op": "SHL"
    },
    "4743": {
      "offset": [
        2770,
        2808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4744": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4746": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4747": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "offset": [
        2770,
        2808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4754": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4755": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4758": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4763": {
      "op": "SHL"
    },
    "4764": {
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4766": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DIV",
      "path": "2"
    },
    "4767": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "AND",
      "path": "2"
    },
    "4768": {
      "fn": "Governance.vote",
      "offset": [
        2770,
        2808
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2770,
        2808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4770": {
      "fn": "Governance.getTaskById",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4771": {
      "fn": "Governance.getTaskById",
      "offset": [
        4404,
        4415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12AA"
    },
    "4774": {
      "fn": "Governance.getTaskById",
      "offset": [
        4404,
        4415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24E7"
    },
    "4777": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4404,
        4415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4778": {
      "fn": "Governance.getTaskById",
      "offset": [
        4404,
        4415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x0"
    },
    "4781": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4784": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4786": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4788": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4789": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4791": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4792": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4793": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4794": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4795": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4796": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4800": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4801": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4802": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4805": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4806": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4808": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4809": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4810": {
      "fn": "Governance.getTaskById",
      "offset": [
        4434,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4811": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D3"
    },
    "4814": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "4818": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4820": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4821": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4823": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4826": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4827": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4828": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "4829": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MUL",
      "path": "2"
    },
    "4830": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4832": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4833": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4835": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4836": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4839": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4841": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4843": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4844": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4845": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4846": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4847": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4848": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4851": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4852": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12FF"
    },
    "4858": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4859": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "4862": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4865": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x134C"
    },
    "4869": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4873": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "LT",
      "path": "2"
    },
    "4874": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1321"
    },
    "4877": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4878": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4881": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4882": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4883": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4884": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "4885": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MUL",
      "path": "2"
    },
    "4886": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4887": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4889": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4891": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4892": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4893": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x134C"
    },
    "4896": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4897": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4898": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4899": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4902": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4907": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4909": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4912": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4916": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4919": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4920": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4921": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4923": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4925": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4926": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "GT",
      "path": "2"
    },
    "4927": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132F"
    },
    "4930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4933": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SUB",
      "path": "2"
    },
    "4934": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4936": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "4937": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4938": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4939": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4940": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "op": "POP"
    },
    "4944": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4945": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4951": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4952": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4954": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4960": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4962": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "4963": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4965": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4966": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4967": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4968": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4970": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4971": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4972": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4973": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4975": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4977": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4978": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4980": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4981": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4982": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4983": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4985": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4986": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4988": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4990": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4991": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4992": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "4993": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4994": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4996": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4997": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "4998": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5000": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5001": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5002": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5003": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5006": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5007": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5008": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "5009": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5013": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "5014": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5016": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5017": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5018": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5023": {
      "op": "SHL"
    },
    "5024": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5025": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "5035": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5037": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5038": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5039": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5044": {
      "op": "SHL"
    },
    "5045": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "5047": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5050": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5051": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "5053": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5055": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5056": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5057": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5062": {
      "op": "SHL"
    },
    "5063": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5064": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "5065": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "5066": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5067": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5074": {
      "op": "SHL"
    },
    "5075": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5076": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "DIV",
      "path": "2"
    },
    "5077": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5078": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5079": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "AND",
      "path": "2"
    },
    "5080": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5083": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5085": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5087": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5088": {
      "fn": "Governance.getTaskById",
      "offset": [
        4427,
        4448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4343,
        4455
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5092": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5093": {
      "fn": "Governance.createProposal",
      "offset": [
        8908,
        8909
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x1"
    },
    "5095": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8905
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5096": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5099": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8909
      ],
      "op": "AND",
      "path": "2"
    },
    "5100": {
      "branch": 105,
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8909
      ],
      "op": "GT",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5102": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5103": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13FD"
    },
    "5106": {
      "branch": 105,
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5107": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "POP",
      "path": "2"
    },
    "5108": {
      "fn": "Governance.createProposal",
      "offset": [
        8932,
        8935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "5111": {
      "fn": "Governance.createProposal",
      "offset": [
        8913,
        8929
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5112": {
      "fn": "Governance.createProposal",
      "offset": [
        8913,
        8935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5115": {
      "fn": "Governance.createProposal",
      "offset": [
        8913,
        8935
      ],
      "op": "AND",
      "path": "2"
    },
    "5116": {
      "branch": 106,
      "fn": "Governance.createProposal",
      "offset": [
        8913,
        8935
      ],
      "op": "LT",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.createProposal",
      "offset": [
        8889,
        8935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5118": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1449"
    },
    "5121": {
      "branch": 106,
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5122": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5124": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5131": {
      "op": "SHL"
    },
    "5132": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5133": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5136": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5138": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "ADD",
      "path": "2"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5145": {
      "op": "DUP3"
    },
    "5146": {
      "op": "ADD"
    },
    "5147": {
      "op": "MSTORE"
    },
    "5148": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5183": {
      "op": "DUP3"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "op": "MSTORE"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "5192": {
      "op": "JUMP"
    },
    "5193": {
      "fn": "Governance.createProposal",
      "offset": [
        8881,
        8965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.createProposal",
      "offset": [
        8993,
        8994
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x1"
    },
    "5196": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5198": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5200": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5201": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145C"
    },
    "5206": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5208": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F60"
    },
    "5211": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        8975,
        8994
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5212": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5213": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.createProposal",
      "offset": [
        8975,
        8994
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "op": "POP"
    },
    "5218": {
      "fn": "Governance.createProposal",
      "offset": [
        9065,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5220": {
      "fn": "Governance.createProposal",
      "offset": [
        9065,
        9079
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.createProposal",
      "offset": [
        9025,
        9052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5223": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5224": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5226": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5228": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5230": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5233": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5234": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5235": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9117
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x3"
    },
    "5237": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5238": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9117
      ],
      "op": "ADD",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5241": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "5257": {
      "op": "NOT"
    },
    "5258": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "AND",
      "path": "2",
      "statement": 36
    },
    "5259": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "5266": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5272": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5273": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "AND",
      "path": "2"
    },
    "5275": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5276": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5277": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5278": {
      "fn": "Governance.createProposal",
      "offset": [
        9094,
        9133
      ],
      "op": "MUL",
      "path": "2"
    },
    "5279": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5287": {
      "op": "SHL"
    },
    "5288": {
      "op": "NOT"
    },
    "5289": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "AND",
      "path": "2"
    },
    "5290": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5292": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5293": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "OR",
      "path": "2"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5298": {
      "op": "SHL"
    },
    "5299": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5300": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "AND",
      "path": "2"
    },
    "5302": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5303": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5304": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "MUL",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "OR",
      "path": "2"
    },
    "5307": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5308": {
      "fn": "Governance.createProposal",
      "offset": [
        9147,
        9186
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5311": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9226
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 37
    },
    "5312": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9226
      ],
      "op": "ADD",
      "path": "2"
    },
    "5313": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5314": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5315": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5318": {
      "op": "NOT"
    },
    "5319": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "AND",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5323": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5324": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "AND",
      "path": "2"
    },
    "5325": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "OR",
      "path": "2"
    },
    "5326": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5327": {
      "fn": "Governance.createProposal",
      "offset": [
        9200,
        9245
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5328": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5329": {
      "fn": "Governance.createProposal",
      "offset": [
        9259,
        9290
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0x14DB"
    },
    "5332": {
      "fn": "Governance.createProposal",
      "offset": [
        9281,
        9290
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5333": {
      "fn": "Governance.createProposal",
      "offset": [
        9281,
        9290
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5334": {
      "fn": "Governance.createProposal",
      "offset": [
        9055,
        9080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5335": {
      "fn": "Governance.createProposal",
      "offset": [
        9259,
        9290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FAE"
    },
    "5338": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        9259,
        9290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5339": {
      "fn": "Governance.createProposal",
      "offset": [
        9259,
        9290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5340": {
      "fn": "Governance.createProposal",
      "offset": [
        9259,
        9290
      ],
      "op": "POP",
      "path": "2"
    },
    "5341": {
      "fn": "Governance.createProposal",
      "offset": [
        9301,
        9413
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0x14EF"
    },
    "5344": {
      "fn": "Governance.createProposal",
      "offset": [
        9317,
        9326
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5345": {
      "fn": "Governance.createProposal",
      "offset": [
        9317,
        9326
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5346": {
      "fn": "Governance.createProposal",
      "offset": [
        9335,
        9349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5348": {
      "fn": "Governance.createProposal",
      "offset": [
        9335,
        9349
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5349": {
      "fn": "Governance.createProposal",
      "offset": [
        9352,
        9353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5351": {
      "fn": "Governance.createProposal",
      "offset": [
        9355,
        9365
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5352": {
      "fn": "Governance.createProposal",
      "offset": [
        9367,
        9380
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5353": {
      "fn": "Governance.createProposal",
      "offset": [
        9382,
        9395
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5354": {
      "fn": "Governance.createProposal",
      "offset": [
        9397,
        9412
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5355": {
      "fn": "Governance.createProposal",
      "offset": [
        9301,
        9316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A8"
    },
    "5358": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        9301,
        9413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5359": {
      "fn": "Governance.createProposal",
      "offset": [
        9301,
        9413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5360": {
      "fn": "Governance.createProposal",
      "offset": [
        8871,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5361": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5362": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5364": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5365": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5366": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.createProposal",
      "offset": [
        8689,
        9451
      ],
      "op": "POP",
      "path": "2"
    },
    "5368": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        8689,
        9451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5369": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10797,
        10824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10827,
        10866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1514"
    },
    "5375": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10851,
        10865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5377": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 40
    },
    "5378": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "5380": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5381": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5382": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5387": {
      "op": "SHL"
    },
    "5388": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5389": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5390": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "5391": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5392": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5393": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "5394": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5395": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10827,
        10866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10797,
        10866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5398": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10797,
        10866
      ],
      "op": "POP",
      "path": "2"
    },
    "5399": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10876,
        10894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151E"
    },
    "5402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10876,
        10894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24E7"
    },
    "5405": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10876,
        10894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5406": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10876,
        10894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5407": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10904,
        10918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10904,
        10918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5411": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11053
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11030,
        11031
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11030,
        11053
      ],
      "op": "LT",
      "path": "2"
    },
    "5414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1801"
    },
    "5418": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5419": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11113,
        11128
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5420": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5421": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11110
      ],
      "op": "ADD",
      "path": "2"
    },
    "5425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11110
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11128
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5432": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11128
      ],
      "op": "AND",
      "path": "2"
    },
    "5433": {
      "branch": 107,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11128
      ],
      "op": "LT",
      "path": "2"
    },
    "5434": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5435": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5436": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1550"
    },
    "5439": {
      "branch": 107,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "POP",
      "path": "2"
    },
    "5441": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11148,
        11154
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11138
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5443": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11144
      ],
      "op": "ADD",
      "path": "2"
    },
    "5446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11144
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11154
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5453": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11154
      ],
      "op": "AND",
      "path": "2"
    },
    "5454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11154
      ],
      "op": "EQ",
      "path": "2"
    },
    "5455": {
      "branch": 108,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11132,
        11154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5457": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1565"
    },
    "5462": {
      "branch": 108,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5463": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "POP",
      "path": "2"
    },
    "5464": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11177,
        11183
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5465": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11164
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5466": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11174
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5469": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11174
      ],
      "op": "ADD",
      "path": "2"
    },
    "5470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11174
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5471": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5474": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11183
      ],
      "op": "AND",
      "path": "2"
    },
    "5475": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11183
      ],
      "op": "EQ",
      "path": "2"
    },
    "5476": {
      "branch": 109,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11158,
        11183
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11074,
        11183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11070,
        12288
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5479": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11070,
        12288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FC"
    },
    "5482": {
      "branch": 109,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11070,
        12288
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11346,
        11384
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0x1575"
    },
    "5486": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11366,
        11380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5488": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11382,
        11383
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5489": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11346,
        11365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2379"
    },
    "5492": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        11346,
        11384
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11346,
        11384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5494": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11338,
        11385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5496": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 42
    },
    "5497": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5498": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5499": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5501": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5508": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5515": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11338,
        11385
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11338,
        11385
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5524": {
      "op": "POP"
    },
    "5525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11412,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15A3"
    },
    "5534": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "5538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5546": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5548": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5549": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MUL",
      "path": "2"
    },
    "5550": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5552": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5555": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5557": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5558": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5559": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5561": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5563": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5565": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5566": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5568": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5571": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5572": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15CF"
    },
    "5578": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5579": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB1"
    },
    "5582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5583": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5585": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5586": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161C"
    },
    "5589": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5590": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5591": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "LT",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F1"
    },
    "5597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5598": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MUL",
      "path": "2"
    },
    "5606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5608": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5613": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161C"
    },
    "5616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5621": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5624": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5633": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5634": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5635": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5639": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5640": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5643": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5644": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5645": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5646": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "GT",
      "path": "2"
    },
    "5647": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FF"
    },
    "5650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SUB",
      "path": "2"
    },
    "5654": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5656": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5658": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5661": {
      "op": "POP"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "POP"
    },
    "5664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5667": {
      "op": "POP"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5682": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5685": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5688": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5690": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5691": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5693": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5695": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5696": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5697": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5700": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5707": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5708": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5710": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5711": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5712": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5714": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5720": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5721": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5726": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5733": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5736": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5737": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5743": {
      "op": "SHL"
    },
    "5744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5752": {
      "op": "SHL"
    },
    "5753": {
      "op": "SUB"
    },
    "5754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5758": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5759": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5764": {
      "op": "SHL"
    },
    "5765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5770": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5771": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5772": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5775": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5776": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5777": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5778": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5779": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5780": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5781": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5786": {
      "op": "SHL"
    },
    "5787": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5789": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5790": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5791": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5793": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5794": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5795": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5796": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5797": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5804": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5805": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "DIV",
      "path": "2"
    },
    "5806": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5807": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5808": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "AND",
      "path": "2"
    },
    "5809": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5812": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5814": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "ADD",
      "path": "2"
    },
    "5815": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5818": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11403,
        11425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12093
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 43
    },
    "5820": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12093
      ],
      "op": "AND",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12076
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5823": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12076
      ],
      "op": "ADD",
      "path": "2"
    },
    "5824": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12175,
        12191
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0xB"
    },
    "5827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12175,
        12191
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12059,
        12076
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12157,
        12191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D0"
    },
    "5834": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12157,
        12191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12157,
        12172
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12157,
        12191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F60"
    },
    "5839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12157,
        12191
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12157,
        12191
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5841": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12192
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12192
      ],
      "op": "AND",
      "path": "2"
    },
    "5848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5851": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12147
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5852": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12147
      ],
      "op": "ADD",
      "path": "2"
    },
    "5853": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5854": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12111,
        12117
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5855": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12215
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x9"
    },
    "5857": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5859": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12224,
        12262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16ED"
    },
    "5862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12244,
        12258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5864": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12260,
        12261
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5865": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12224,
        12243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2379"
    },
    "5868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12224,
        12262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5869": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12224,
        12262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5870": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5871": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5872": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5874": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5875": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "ADD",
      "path": "2"
    },
    "5876": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5877": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5880": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "ADD",
      "path": "2"
    },
    "5883": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12216,
        12263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5885": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5886": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5887": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5888": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170B"
    },
    "5893": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5894": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8A"
    },
    "5898": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12210,
        12273
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5900": {
      "op": "POP"
    },
    "5901": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5906": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5908": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5909": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5912": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5918": {
      "op": "NOT"
    },
    "5919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5928": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "5929": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "5930": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5931": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5934": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5935": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5937": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5942": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5944": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5945": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5946": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5951": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5966": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5972": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "ADD",
      "path": "2"
    },
    "5992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "5998": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6003": {
      "op": "NOT"
    },
    "6004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MUL",
      "path": "2"
    },
    "6021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6024": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6025": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "6042": {
      "op": "NOT"
    },
    "6043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "op": "SUB"
    },
    "6057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MUL",
      "path": "2"
    },
    "6064": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6069": {
      "op": "SHL"
    },
    "6070": {
      "op": "NOT"
    },
    "6071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6077": {
      "op": "SHL"
    },
    "6078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MUL",
      "path": "2"
    },
    "6085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6086": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6096": {
      "op": "SHL"
    },
    "6097": {
      "op": "NOT"
    },
    "6098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6103": {
      "op": "SHL"
    },
    "6104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MUL",
      "path": "2"
    },
    "6109": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6117": {
      "op": "SHL"
    },
    "6118": {
      "op": "NOT"
    },
    "6119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "AND",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "MUL",
      "path": "2"
    },
    "6137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "OR",
      "path": "2"
    },
    "6138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12210,
        12273
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11070,
        12288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1522"
    },
    "6144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11012,
        12298
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6146": {
      "op": "POP"
    },
    "6147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x40"
    },
    "6149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6151": {
      "op": "DUP6"
    },
    "6152": {
      "op": "DUP2"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6156": {
      "op": "DUP2"
    },
    "6157": {
      "op": "ADD"
    },
    "6158": {
      "op": "DUP4"
    },
    "6159": {
      "op": "SWAP1"
    },
    "6160": {
      "op": "MSTORE"
    },
    "6161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE"
    },
    "6194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6195": {
      "op": "ADD"
    },
    "6196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "SUB",
      "path": "2"
    },
    "6202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12344,
        12380
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10787,
        12387
      ],
      "op": "POP",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10787,
        12387
      ],
      "op": "POP",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10787,
        12387
      ],
      "op": "POP",
      "path": "2"
    },
    "6207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10722,
        12387
      ],
      "op": "POP",
      "path": "2"
    },
    "6208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        10722,
        12387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6209": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6210": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15242
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x2"
    },
    "6212": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15242
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6215": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6216": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6223": {
      "op": "SHL"
    },
    "6224": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6225": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6226": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6228": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ADD",
      "path": "2"
    },
    "6230": {
      "op": "DUP6"
    },
    "6231": {
      "op": "SWAP1"
    },
    "6232": {
      "op": "MSTORE"
    },
    "6233": {
      "fn": "Governance.submitVerification",
      "offset": [
        15262,
        15272
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6234": {
      "fn": "Governance.submitVerification",
      "offset": [
        15262,
        15272
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6241": {
      "op": "SHL"
    },
    "6242": {
      "op": "SUB"
    },
    "6243": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15242
      ],
      "op": "AND",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15242
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15250
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "6250": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6253": {
      "op": "ADD"
    },
    "6254": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6256": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6258": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6260": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6261": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "SUB",
      "path": "2"
    },
    "6262": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "GAS",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6268": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6269": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188A"
    },
    "6272": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6273": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6274": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6276": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6277": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6279": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6281": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6282": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6283": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "POP",
      "path": "2"
    },
    "6284": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "POP",
      "path": "2"
    },
    "6285": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "POP",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "POP",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6289": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6290": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6293": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "NOT",
      "path": "2"
    },
    "6294": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6296": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6297": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ADD",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "AND",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6300": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ADD",
      "path": "2"
    },
    "6301": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6304": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "POP",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "ADD",
      "path": "2"
    },
    "6308": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6309": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18AE"
    },
    "6312": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6314": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F91"
    },
    "6317": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        15232,
        15258
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15258
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6325": {
      "op": "SHL"
    },
    "6326": {
      "op": "SUB"
    },
    "6327": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15272
      ],
      "op": "AND",
      "path": "2"
    },
    "6328": {
      "branch": 110,
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15272
      ],
      "op": "EQ",
      "path": "2"
    },
    "6329": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6330": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15309
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6331": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18DF"
    },
    "6334": {
      "branch": 110,
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15309
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6338": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6339": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6340": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6341": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6343": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6345": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6346": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6348": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6349": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15290
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6350": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6352": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "ADD",
      "path": "2"
    },
    "6353": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6358": {
      "op": "SHL"
    },
    "6359": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6360": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "DIV",
      "path": "2"
    },
    "6361": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6364": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15301
      ],
      "op": "AND",
      "path": "2"
    },
    "6365": {
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15309
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6366": {
      "branch": 111,
      "fn": "Governance.submitVerification",
      "offset": [
        15276,
        15309
      ],
      "op": "EQ",
      "path": "2"
    },
    "6367": {
      "fn": "Governance.submitVerification",
      "offset": [
        15232,
        15309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6368": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x192B"
    },
    "6371": {
      "branch": 111,
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6372": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6374": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6381": {
      "op": "SHL"
    },
    "6382": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6383": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6386": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6388": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6389": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "ADD",
      "path": "2"
    },
    "6390": {
      "op": "DUP2"
    },
    "6391": {
      "op": "SWAP1"
    },
    "6392": {
      "op": "MSTORE"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6395": {
      "op": "DUP3"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6433": {
      "op": "DUP3"
    },
    "6434": {
      "op": "ADD"
    },
    "6435": {
      "op": "MSTORE"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6438": {
      "op": "ADD"
    },
    "6439": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "6442": {
      "op": "JUMP"
    },
    "6443": {
      "fn": "Governance.submitVerification",
      "offset": [
        15224,
        15346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.submitVerification",
      "offset": [
        15381,
        15382
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x0"
    },
    "6446": {
      "fn": "Governance.submitVerification",
      "offset": [
        15364,
        15371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6447": {
      "fn": "Governance.submitVerification",
      "offset": [
        15364,
        15378
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6448": {
      "branch": 112,
      "fn": "Governance.submitVerification",
      "offset": [
        15364,
        15382
      ],
      "op": "GT",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1939"
    },
    "6452": {
      "branch": 112,
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6453": {
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6455": {
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6457": {
      "fn": "Governance.submitVerification",
      "offset": [
        15356,
        15383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6458": {
      "fn": "Governance.submitVerification",
      "offset": [
        15394,
        15413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6460": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6463": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6465": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6467": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6468": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6470": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6471": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6474": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "ADD",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6477": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6478": {
      "fn": "Governance.submitVerification",
      "offset": [
        15416,
        15430
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.submitVerification",
      "offset": [
        15394,
        15413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6484": {
      "op": "SHL"
    },
    "6485": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6486": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "DIV",
      "path": "2"
    },
    "6487": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6490": {
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16003
      ],
      "op": "AND",
      "path": "2"
    },
    "6491": {
      "branch": 113,
      "fn": "Governance.submitVerification",
      "offset": [
        15987,
        16007
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6492": {
      "fn": "Governance.submitVerification",
      "offset": [
        15984,
        16189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D4"
    },
    "6495": {
      "branch": 113,
      "fn": "Governance.submitVerification",
      "offset": [
        15984,
        16189
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6496": {
      "fn": "Governance.submitVerification",
      "offset": [
        16027,
        16036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6498": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6499": {
      "fn": "Governance.submitVerification",
      "offset": [
        16046,
        16053
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6500": {
      "fn": "Governance.submitVerification",
      "offset": [
        16046,
        16060
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6501": {
      "fn": "Governance.submitVerification",
      "offset": [
        16042,
        16043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.submitVerification",
      "offset": [
        16042,
        16060
      ],
      "op": "LT",
      "path": "2"
    },
    "6503": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6504": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D2"
    },
    "6507": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6508": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16127
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 49
    },
    "6509": {
      "fn": "Governance.submitVerification",
      "offset": [
        16128,
        16129
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6513": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "LT",
      "path": "2"
    },
    "6514": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197D"
    },
    "6517": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197D"
    },
    "6521": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "6524": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16120,
        16130
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6525": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6526": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6528": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "MUL",
      "path": "2"
    },
    "6529": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6531": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "ADD",
      "path": "2"
    },
    "6532": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "ADD",
      "path": "2"
    },
    "6533": {
      "fn": "Governance.submitVerification",
      "offset": [
        16120,
        16130
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6536": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6537": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6539": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "ADD",
      "path": "2"
    },
    "6540": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1997"
    },
    "6543": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6544": {
      "op": "DUP2"
    },
    "6545": {
      "op": "MSTORE"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6548": {
      "op": "ADD"
    },
    "6549": {
      "op": "SWAP1"
    },
    "6550": {
      "op": "JUMP"
    },
    "6551": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6552": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6554": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6555": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6557": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6558": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6559": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "SUB",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "SUB",
      "path": "2"
    },
    "6561": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6563": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6564": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6566": {
      "fn": "Governance.submitVerification",
      "offset": [
        16103,
        16131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6567": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6569": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6570": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6572": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "ADD",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.submitVerification",
      "offset": [
        16093,
        16132
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16087
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6575": {
      "fn": "Governance.submitVerification",
      "offset": [
        16088,
        16089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6576": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6579": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "LT",
      "path": "2"
    },
    "6580": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19BF"
    },
    "6583": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6584": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19BF"
    },
    "6587": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "6590": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16080,
        16090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6591": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6592": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6594": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6596": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "MUL",
      "path": "2"
    },
    "6597": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6598": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "ADD",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16090
      ],
      "op": "ADD",
      "path": "2"
    },
    "6602": {
      "fn": "Governance.submitVerification",
      "offset": [
        16080,
        16132
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6603": {
      "fn": "Governance.submitVerification",
      "offset": [
        16160,
        16163
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x1"
    },
    "6605": {
      "fn": "Governance.submitVerification",
      "offset": [
        16160,
        16163
      ],
      "op": "ADD",
      "path": "2"
    },
    "6606": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1962"
    },
    "6609": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6610": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.submitVerification",
      "offset": [
        16023,
        16179
      ],
      "op": "POP",
      "path": "2"
    },
    "6612": {
      "fn": "Governance.submitVerification",
      "offset": [
        15984,
        16189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6613": {
      "fn": "Governance.submitVerification",
      "offset": [
        16198,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6615": {
      "fn": "Governance.submitVerification",
      "offset": [
        16242,
        16249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6616": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6618": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6619": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6621": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "ADD",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E7"
    },
    "6625": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6627": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D01"
    },
    "6630": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16225,
        16250
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6631": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6632": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6634": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6635": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6637": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6638": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6639": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "SUB",
      "path": "2"
    },
    "6640": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "SUB",
      "path": "2"
    },
    "6641": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6642": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6643": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6644": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6646": {
      "fn": "Governance.submitVerification",
      "offset": [
        16225,
        16250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6649": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6652": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "ADD",
      "path": "2"
    },
    "6653": {
      "fn": "Governance.submitVerification",
      "offset": [
        16215,
        16251
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.submitVerification",
      "offset": [
        16198,
        16251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6655": {
      "fn": "Governance.submitVerification",
      "offset": [
        16198,
        16251
      ],
      "op": "POP",
      "path": "2"
    },
    "6656": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6658": {
      "fn": "Governance.submitVerification",
      "offset": [
        16299,
        16305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16290
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6660": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16295
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6662": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16295
      ],
      "op": "ADD",
      "path": "2"
    },
    "6663": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16295
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6664": {
      "branch": 114,
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16305
      ],
      "op": "EQ",
      "path": "2"
    },
    "6665": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "6668": {
      "branch": 114,
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6669": {
      "fn": "Governance.submitVerification",
      "offset": [
        16312,
        16313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6671": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A16"
    },
    "6674": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6675": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.submitVerification",
      "offset": [
        16308,
        16309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6678": {
      "fn": "Governance.submitVerification",
      "offset": [
        16284,
        16313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6679": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x1"
    },
    "6681": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6682": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6683": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6687": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6688": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6689": {
      "op": "DUP12"
    },
    "6690": {
      "op": "DUP2"
    },
    "6691": {
      "op": "MSTORE"
    },
    "6692": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6698": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6699": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.submitVerification",
      "offset": [
        16359,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6703": {
      "op": "DUP4"
    },
    "6704": {
      "op": "ADD"
    },
    "6705": {
      "op": "MSTORE"
    },
    "6706": {
      "op": "DUP2"
    },
    "6707": {
      "op": "ADD"
    },
    "6708": {
      "op": "DUP10"
    },
    "6709": {
      "op": "SWAP1"
    },
    "6710": {
      "op": "MSTORE"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6713": {
      "op": "DUP2"
    },
    "6714": {
      "op": "ADD"
    },
    "6715": {
      "op": "DUP6"
    },
    "6716": {
      "op": "SWAP1"
    },
    "6717": {
      "op": "MSTORE"
    },
    "6718": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6720": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6721": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6722": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6723": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "AND",
      "path": "2"
    },
    "6724": {
      "fn": "Governance.submitVerification",
      "offset": [
        16390,
        16404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6725": {
      "fn": "Governance.submitVerification",
      "offset": [
        16390,
        16404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6726": {
      "fn": "Governance.submitVerification",
      "offset": [
        16390,
        16404
      ],
      "op": "EQ",
      "path": "2"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6729": {
      "op": "DUP4"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "op": "MSTORE"
    },
    "6732": {
      "fn": "Governance.submitVerification",
      "offset": [
        16262,
        16313
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6733": {
      "op": "POP"
    },
    "6734": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "6767": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6773": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6774": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6775": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6776": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "SUB",
      "path": "2"
    },
    "6777": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6778": {
      "fn": "Governance.submitVerification",
      "offset": [
        16329,
        16405
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6779": {
      "fn": "Governance.submitVerification",
      "offset": [
        16420,
        16431
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6780": {
      "fn": "Governance.submitVerification",
      "offset": [
        16434,
        16435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6782": {
      "branch": 115,
      "fn": "Governance.submitVerification",
      "offset": [
        16420,
        16435
      ],
      "op": "SUB",
      "path": "2"
    },
    "6783": {
      "fn": "Governance.submitVerification",
      "offset": [
        16416,
        18682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7C"
    },
    "6786": {
      "branch": 115,
      "fn": "Governance.submitVerification",
      "offset": [
        16416,
        18682
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6787": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6789": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6790": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "ADD",
      "path": "2"
    },
    "6791": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6792": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16527
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6794": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16527
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6795": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA6"
    },
    "6798": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6799": {
      "fn": "Governance.submitVerification",
      "offset": [
        16545,
        16546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6801": {
      "fn": "Governance.submitVerification",
      "offset": [
        16545,
        16546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6806": {
      "op": "SHL"
    },
    "6807": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6808": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "DIV",
      "path": "2"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6815": {
      "op": "SHL"
    },
    "6816": {
      "op": "SUB"
    },
    "6817": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16544
      ],
      "op": "AND",
      "path": "2"
    },
    "6818": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306F"
    },
    "6821": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16530,
        16546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6822": {
      "fn": "Governance.submitVerification",
      "offset": [
        16530,
        16546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6823": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6825": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6826": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6828": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6829": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6830": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "ADD",
      "path": "2"
    },
    "6831": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6834": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6835": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6842": {
      "op": "SHL"
    },
    "6843": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6844": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6849": {
      "op": "SHL"
    },
    "6850": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6851": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6852": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "DIV",
      "path": "2"
    },
    "6853": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6856": {
      "fn": "Governance.submitVerification",
      "offset": [
        16619,
        16636
      ],
      "op": "AND",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6859": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ADD",
      "path": "2"
    },
    "6860": {
      "op": "SWAP2"
    },
    "6861": {
      "op": "SWAP1"
    },
    "6862": {
      "op": "SWAP2"
    },
    "6863": {
      "op": "MSTORE"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6870": {
      "op": "SHL"
    },
    "6871": {
      "op": "SUB"
    },
    "6872": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16546
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6873": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6874": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16546
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6875": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16546
      ],
      "op": "AND",
      "path": "2"
    },
    "6876": {
      "fn": "Governance.submitVerification",
      "offset": [
        16514,
        16546
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "fn": "Governance.submitVerification",
      "offset": [
        16560,
        16589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6880": {
      "fn": "Governance.submitVerification",
      "offset": [
        16560,
        16589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6887": {
      "op": "SHL"
    },
    "6888": {
      "op": "SUB"
    },
    "6889": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6890": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6891": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "AND",
      "path": "2"
    },
    "6892": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6893": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16618
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "6898": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6901": {
      "op": "ADD"
    },
    "6902": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6904": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6906": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6907": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6908": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6909": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "SUB",
      "path": "2"
    },
    "6910": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6911": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6912": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "GAS",
      "path": "2"
    },
    "6913": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6914": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6915": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6916": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6917": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B12"
    },
    "6920": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6921": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6922": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6924": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6925": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6926": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6927": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6929": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6930": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6931": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "POP",
      "path": "2"
    },
    "6932": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "POP",
      "path": "2"
    },
    "6933": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "POP",
      "path": "2"
    },
    "6934": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "POP",
      "path": "2"
    },
    "6935": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6937": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6938": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6939": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6941": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "NOT",
      "path": "2"
    },
    "6942": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6944": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6945": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ADD",
      "path": "2"
    },
    "6946": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "AND",
      "path": "2"
    },
    "6947": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ADD",
      "path": "2"
    },
    "6949": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6952": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6953": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "POP",
      "path": "2"
    },
    "6954": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6955": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "ADD",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B36"
    },
    "6960": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6961": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F91"
    },
    "6965": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16600,
        16637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6966": {
      "fn": "Governance.submitVerification",
      "offset": [
        16600,
        16637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6967": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x2"
    },
    "6969": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6970": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6972": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6973": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "ADD",
      "path": "2"
    },
    "6974": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6975": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6977": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6978": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6979": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "ADD",
      "path": "2"
    },
    "6980": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6981": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6983": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6984": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "6989": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6991": {
      "op": "SHL"
    },
    "6992": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6993": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6994": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7000": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7001": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7002": {
      "fn": "Governance.submitVerification",
      "offset": [
        16729,
        16741
      ],
      "op": "AND",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "ADD",
      "path": "2"
    },
    "7006": {
      "op": "SWAP2"
    },
    "7007": {
      "op": "SWAP1"
    },
    "7008": {
      "op": "SWAP2"
    },
    "7009": {
      "op": "MSTORE"
    },
    "7010": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7013": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "DIV",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7019": {
      "fn": "Governance.submitVerification",
      "offset": [
        16743,
        16759
      ],
      "op": "AND",
      "path": "2"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7022": {
      "op": "DUP3"
    },
    "7023": {
      "op": "ADD"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "fn": "Governance.submitVerification",
      "offset": [
        16560,
        16638
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7026": {
      "fn": "Governance.submitVerification",
      "offset": [
        16560,
        16638
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7027": {
      "op": "POP"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7034": {
      "op": "SHL"
    },
    "7035": {
      "op": "SUB"
    },
    "7036": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "AND",
      "path": "2"
    },
    "7037": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7038": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16728
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7043": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16728
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7046": {
      "op": "ADD"
    },
    "7047": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7049": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7051": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7052": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7053": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7054": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "SUB",
      "path": "2"
    },
    "7055": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7058": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7062": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7063": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA0"
    },
    "7067": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7068": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7070": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7071": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7072": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7073": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "POP",
      "path": "2"
    },
    "7074": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "GAS",
      "path": "2"
    },
    "7075": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "CALL",
      "path": "2"
    },
    "7076": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7077": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7078": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7079": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB4"
    },
    "7082": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7083": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7084": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7086": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7087": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7091": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.submitVerification",
      "offset": [
        16707,
        16760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7093": {
      "op": "POP"
    },
    "7094": {
      "op": "POP"
    },
    "7095": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x2"
    },
    "7097": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7098": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7100": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7101": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7102": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "ADD",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.submitVerification",
      "offset": [
        16815,
        16840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7106": {
      "fn": "Governance.submitVerification",
      "offset": [
        16815,
        16840
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7109": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7110": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7117": {
      "op": "SHL"
    },
    "7118": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7119": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7124": {
      "op": "SHL"
    },
    "7125": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7126": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "DIV",
      "path": "2"
    },
    "7128": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7131": {
      "fn": "Governance.submitVerification",
      "offset": [
        16796,
        16813
      ],
      "op": "AND",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7133": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7134": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "ADD",
      "path": "2"
    },
    "7135": {
      "op": "SWAP3"
    },
    "7136": {
      "op": "SWAP1"
    },
    "7137": {
      "op": "SWAP3"
    },
    "7138": {
      "op": "MSTORE"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7141": {
      "op": "DUP2"
    },
    "7142": {
      "op": "ADD"
    },
    "7143": {
      "op": "SWAP2"
    },
    "7144": {
      "op": "SWAP1"
    },
    "7145": {
      "op": "SWAP2"
    },
    "7146": {
      "op": "MSTORE"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7153": {
      "op": "SHL"
    },
    "7154": {
      "op": "SUB"
    },
    "7155": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7156": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7157": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "AND",
      "path": "2"
    },
    "7158": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16784
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7159": {
      "op": "POP"
    },
    "7160": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16795
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7165": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16795
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7166": {
      "op": "POP"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7169": {
      "op": "ADD"
    },
    "7170": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7171": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7173": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7175": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7176": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7177": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7178": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "SUB",
      "path": "2"
    },
    "7179": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7180": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7182": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7185": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7186": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7187": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7188": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1C"
    },
    "7191": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7192": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7194": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7195": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7196": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7197": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "7198": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "GAS",
      "path": "2"
    },
    "7199": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "CALL",
      "path": "2"
    },
    "7200": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7202": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7203": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C30"
    },
    "7206": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7207": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7208": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7210": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7211": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7212": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7213": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7215": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.submitVerification",
      "offset": [
        16774,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7217": {
      "op": "POP"
    },
    "7218": {
      "op": "POP"
    },
    "7219": {
      "op": "POP"
    },
    "7220": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16870
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x4"
    },
    "7222": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16870
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7223": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16870
      ],
      "op": "ADD",
      "path": "2"
    },
    "7224": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16872
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7225": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16872
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7226": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7241": {
      "op": "NOT"
    },
    "7242": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16872
      ],
      "op": "AND",
      "path": "2"
    },
    "7243": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16872
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7244": {
      "fn": "Governance.submitVerification",
      "offset": [
        16856,
        16872
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7245": {
      "op": "POP"
    },
    "7246": {
      "fn": "Governance.submitVerification",
      "offset": [
        16871,
        16872
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7248": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 55
    },
    "7249": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7250": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7251": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7253": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7255": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7256": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7258": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7260": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7261": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C66"
    },
    "7264": {
      "fn": "Governance.submitVerification",
      "offset": [
        16922,
        16936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7265": {
      "fn": "Governance.submitVerification",
      "offset": [
        16871,
        16872
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7266": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253B"
    },
    "7269": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        16915,
        16936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7270": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7271": {
      "op": "POP"
    },
    "7272": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7274": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7275": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "ADD",
      "path": "2"
    },
    "7276": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7277": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7278": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7284": {
      "op": "NOT"
    },
    "7285": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "AND",
      "path": "2"
    },
    "7286": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7287": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7290": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7292": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7293": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "ADD",
      "path": "2"
    },
    "7294": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7295": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7296": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7297": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7299": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7300": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "ADD",
      "path": "2"
    },
    "7301": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7302": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7304": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7306": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7307": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7308": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "ADD",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "op": "SUB"
    },
    "7319": {
      "op": "NOT"
    },
    "7320": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "AND",
      "path": "2"
    },
    "7321": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7322": {
      "fn": "Governance.submitVerification",
      "offset": [
        16915,
        16936
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7323": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7325": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7326": {
      "op": "DUP2"
    },
    "7327": {
      "op": "SWAP1"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7334": {
      "op": "SHL"
    },
    "7335": {
      "op": "SUB"
    },
    "7336": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17040
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7337": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17040
      ],
      "op": "AND",
      "path": "2"
    },
    "7338": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17040
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "Governance.submitVerification",
      "offset": [
        17048,
        17053
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7340": {
      "fn": "Governance.submitVerification",
      "offset": [
        17048,
        17053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7341": {
      "op": "DUP4"
    },
    "7342": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7343": {
      "op": "DUP2"
    },
    "7344": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7345": {
      "fn": "Governance.submitVerification",
      "offset": [
        17048,
        17053
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17040
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7347": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "GAS",
      "path": "2"
    },
    "7348": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "CALL",
      "path": "2"
    },
    "7349": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7350": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7351": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7352": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7353": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7354": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7355": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7357": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7358": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "EQ",
      "path": "2"
    },
    "7359": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE4"
    },
    "7362": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7363": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7365": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7366": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7367": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7368": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7370": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "NOT",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7373": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7374": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7375": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "AND",
      "path": "2"
    },
    "7376": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7377": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7378": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7380": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7387": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7389": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7391": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE9"
    },
    "7395": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7396": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7397": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7399": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7400": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7401": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7402": {
      "fn": "Governance.submitVerification",
      "offset": [
        17022,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7403": {
      "fn": "Governance.submitVerification",
      "offset": [
        16989,
        17058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7404": {
      "fn": "Governance.submitVerification",
      "offset": [
        16989,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7405": {
      "fn": "Governance.submitVerification",
      "offset": [
        16989,
        17058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7406": {
      "fn": "Governance.submitVerification",
      "offset": [
        16989,
        17058
      ],
      "op": "POP",
      "path": "2"
    },
    "7407": {
      "branch": 116,
      "fn": "Governance.submitVerification",
      "offset": [
        17080,
        17084
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 56
    },
    "7408": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0B"
    },
    "7411": {
      "branch": 116,
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7412": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7414": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7421": {
      "op": "SHL"
    },
    "7422": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7423": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7426": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "ADD",
      "path": "2"
    },
    "7427": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "7430": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7431": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A3"
    },
    "7434": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17072,
        17109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7435": {
      "fn": "Governance.submitVerification",
      "offset": [
        17072,
        17109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7436": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x40"
    },
    "7438": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7439": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17181
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7440": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17181
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.submitVerification",
      "offset": [
        17194,
        17199
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.submitVerification",
      "offset": [
        17194,
        17199
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7445": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7446": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.submitVerification",
      "offset": [
        17194,
        17199
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7449": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17181
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7450": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "GAS",
      "path": "2"
    },
    "7451": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "CALL",
      "path": "2"
    },
    "7452": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7453": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "POP",
      "path": "2"
    },
    "7454": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "POP",
      "path": "2"
    },
    "7455": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "POP",
      "path": "2"
    },
    "7456": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7457": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7458": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7460": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7461": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "EQ",
      "path": "2"
    },
    "7462": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4B"
    },
    "7465": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7466": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7468": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7469": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7470": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "POP",
      "path": "2"
    },
    "7471": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7473": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "NOT",
      "path": "2"
    },
    "7474": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7476": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7477": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "ADD",
      "path": "2"
    },
    "7478": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "AND",
      "path": "2"
    },
    "7479": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7480": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "ADD",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7483": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7484": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7487": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7488": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7490": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7492": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7493": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "ADD",
      "path": "2"
    },
    "7494": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7495": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D50"
    },
    "7498": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7499": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7500": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7502": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7503": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "POP",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.submitVerification",
      "offset": [
        17171,
        17204
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "fn": "Governance.submitVerification",
      "offset": [
        17156,
        17204
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.submitVerification",
      "offset": [
        17156,
        17204
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7508": {
      "op": "POP"
    },
    "7509": {
      "fn": "Governance.submitVerification",
      "offset": [
        17156,
        17204
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7510": {
      "op": "POP"
    },
    "7511": {
      "fn": "Governance.submitVerification",
      "offset": [
        17156,
        17204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7512": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1D73"
    },
    "7515": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7516": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7518": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7525": {
      "op": "SHL"
    },
    "7526": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7528": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7530": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "ADD",
      "path": "2"
    },
    "7531": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "7534": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7535": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A3"
    },
    "7538": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17218,
        17255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7539": {
      "fn": "Governance.submitVerification",
      "offset": [
        17218,
        17255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7540": {
      "fn": "Governance.submitVerification",
      "offset": [
        16436,
        17267
      ],
      "op": "POP",
      "path": "2"
    },
    "7541": {
      "fn": "Governance.submitVerification",
      "offset": [
        16436,
        17267
      ],
      "op": "POP",
      "path": "2"
    },
    "7542": {
      "fn": "Governance.submitVerification",
      "offset": [
        16436,
        17267
      ],
      "op": "POP",
      "path": "2"
    },
    "7543": {
      "fn": "Governance.submitVerification",
      "offset": [
        16436,
        17267
      ],
      "op": "POP",
      "path": "2"
    },
    "7544": {
      "fn": "Governance.submitVerification",
      "offset": [
        16416,
        18682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB54"
    },
    "7547": {
      "fn": "Governance.submitVerification",
      "offset": [
        16416,
        18682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7548": {
      "fn": "Governance.submitVerification",
      "offset": [
        16416,
        18682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7549": {
      "fn": "Governance.submitVerification",
      "offset": [
        17449,
        17455
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7550": {
      "fn": "Governance.submitVerification",
      "offset": [
        17429,
        17435
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7551": {
      "fn": "Governance.submitVerification",
      "offset": [
        17429,
        17447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7553": {
      "fn": "Governance.submitVerification",
      "offset": [
        17429,
        17447
      ],
      "op": "ADD",
      "path": "2"
    },
    "7554": {
      "fn": "Governance.submitVerification",
      "offset": [
        17429,
        17447
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7555": {
      "branch": 117,
      "fn": "Governance.submitVerification",
      "offset": [
        17429,
        17455
      ],
      "op": "SUB",
      "path": "2"
    },
    "7556": {
      "fn": "Governance.submitVerification",
      "offset": [
        17426,
        18672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF3"
    },
    "7559": {
      "branch": 117,
      "fn": "Governance.submitVerification",
      "offset": [
        17426,
        18672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7560": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7562": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7563": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "ADD",
      "path": "2"
    },
    "7564": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7565": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7567": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17487
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7568": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DAB"
    },
    "7571": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7572": {
      "fn": "Governance.submitVerification",
      "offset": [
        17505,
        17506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7574": {
      "fn": "Governance.submitVerification",
      "offset": [
        17505,
        17506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7579": {
      "op": "SHL"
    },
    "7580": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7581": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "DIV",
      "path": "2"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7588": {
      "op": "SHL"
    },
    "7589": {
      "op": "SUB"
    },
    "7590": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17504
      ],
      "op": "AND",
      "path": "2"
    },
    "7591": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306F"
    },
    "7594": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17490,
        17506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7595": {
      "fn": "Governance.submitVerification",
      "offset": [
        17490,
        17506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7596": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7598": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7599": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7601": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7602": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "ADD",
      "path": "2"
    },
    "7604": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7605": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7607": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7608": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7615": {
      "op": "SHL"
    },
    "7616": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7622": {
      "op": "SHL"
    },
    "7623": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7624": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7625": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "DIV",
      "path": "2"
    },
    "7626": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7629": {
      "fn": "Governance.submitVerification",
      "offset": [
        17581,
        17597
      ],
      "op": "AND",
      "path": "2"
    },
    "7630": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7631": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7632": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ADD",
      "path": "2"
    },
    "7633": {
      "op": "SWAP2"
    },
    "7634": {
      "op": "SWAP1"
    },
    "7635": {
      "op": "SWAP2"
    },
    "7636": {
      "op": "MSTORE"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7643": {
      "op": "SHL"
    },
    "7644": {
      "op": "SUB"
    },
    "7645": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7646": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7647": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7648": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17506
      ],
      "op": "AND",
      "path": "2"
    },
    "7649": {
      "fn": "Governance.submitVerification",
      "offset": [
        17474,
        17506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7650": {
      "op": "POP"
    },
    "7651": {
      "fn": "Governance.submitVerification",
      "offset": [
        17524,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7653": {
      "fn": "Governance.submitVerification",
      "offset": [
        17524,
        17551
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7660": {
      "op": "SHL"
    },
    "7661": {
      "op": "SUB"
    },
    "7662": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7663": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7664": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "AND",
      "path": "2"
    },
    "7665": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7666": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17580
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7671": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17580
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7674": {
      "op": "ADD"
    },
    "7675": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7677": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7679": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7680": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7681": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7682": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "SUB",
      "path": "2"
    },
    "7683": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7684": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7685": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "GAS",
      "path": "2"
    },
    "7686": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7687": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7688": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7689": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7690": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E17"
    },
    "7693": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7694": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7695": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7697": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7698": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7699": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7700": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7702": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7703": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7704": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "POP",
      "path": "2"
    },
    "7705": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "POP",
      "path": "2"
    },
    "7706": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "POP",
      "path": "2"
    },
    "7707": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "POP",
      "path": "2"
    },
    "7708": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7710": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7711": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7712": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7714": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "NOT",
      "path": "2"
    },
    "7715": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7717": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7718": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ADD",
      "path": "2"
    },
    "7719": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "AND",
      "path": "2"
    },
    "7720": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7721": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ADD",
      "path": "2"
    },
    "7722": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7723": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7725": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "POP",
      "path": "2"
    },
    "7727": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7728": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "ADD",
      "path": "2"
    },
    "7729": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7730": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3B"
    },
    "7733": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7734": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7735": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F91"
    },
    "7738": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17562,
        17598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7739": {
      "fn": "Governance.submitVerification",
      "offset": [
        17562,
        17598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17628
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x2"
    },
    "7742": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17628
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7743": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7745": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7746": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "ADD",
      "path": "2"
    },
    "7748": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7749": {
      "fn": "Governance.submitVerification",
      "offset": [
        17658,
        17683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7751": {
      "fn": "Governance.submitVerification",
      "offset": [
        17658,
        17683
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7754": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7755": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7762": {
      "op": "SHL"
    },
    "7763": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7764": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7769": {
      "op": "SHL"
    },
    "7770": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7772": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "DIV",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7776": {
      "fn": "Governance.submitVerification",
      "offset": [
        17640,
        17656
      ],
      "op": "AND",
      "path": "2"
    },
    "7777": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7778": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7779": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "ADD",
      "path": "2"
    },
    "7780": {
      "op": "SWAP3"
    },
    "7781": {
      "op": "SWAP1"
    },
    "7782": {
      "op": "SWAP3"
    },
    "7783": {
      "op": "MSTORE"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7786": {
      "op": "DUP2"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "SWAP2"
    },
    "7789": {
      "op": "SWAP1"
    },
    "7790": {
      "op": "SWAP2"
    },
    "7791": {
      "op": "MSTORE"
    },
    "7792": {
      "fn": "Governance.submitVerification",
      "offset": [
        17524,
        17599
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7793": {
      "fn": "Governance.submitVerification",
      "offset": [
        17524,
        17599
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7794": {
      "op": "POP"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7801": {
      "op": "SHL"
    },
    "7802": {
      "op": "SUB"
    },
    "7803": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17628
      ],
      "op": "AND",
      "path": "2"
    },
    "7804": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17628
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7805": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17639
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7810": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7813": {
      "op": "ADD"
    },
    "7814": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7816": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7818": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7819": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7820": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7821": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "SUB",
      "path": "2"
    },
    "7822": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7823": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7825": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7826": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7827": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7828": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7829": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E9F"
    },
    "7834": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7835": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7837": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7838": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7839": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "POP",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "GAS",
      "path": "2"
    },
    "7842": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "CALL",
      "path": "2"
    },
    "7843": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7844": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7845": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB3"
    },
    "7849": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7850": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7851": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7854": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7855": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7856": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7858": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7859": {
      "fn": "Governance.submitVerification",
      "offset": [
        17618,
        17684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7860": {
      "op": "POP"
    },
    "7861": {
      "op": "POP"
    },
    "7862": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x2"
    },
    "7864": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7865": {
      "fn": "Governance.submitVerification",
      "offset": [
        17732,
        17757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7867": {
      "fn": "Governance.submitVerification",
      "offset": [
        17732,
        17757
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7868": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7870": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7871": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7880": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7881": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7883": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7884": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "ADD",
      "path": "2"
    },
    "7885": {
      "op": "DUP15"
    },
    "7886": {
      "op": "SWAP1"
    },
    "7887": {
      "op": "MSTORE"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "ADD"
    },
    "7892": {
      "op": "SWAP2"
    },
    "7893": {
      "op": "SWAP1"
    },
    "7894": {
      "op": "SWAP2"
    },
    "7895": {
      "op": "MSTORE"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7902": {
      "op": "SHL"
    },
    "7903": {
      "op": "SUB"
    },
    "7904": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7906": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "AND",
      "path": "2"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17712
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7908": {
      "op": "POP"
    },
    "7909": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17723
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7914": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17723
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7915": {
      "op": "POP"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7918": {
      "op": "ADD"
    },
    "7919": {
      "fn": "Governance.submitVerification",
      "offset": [
        17702,
        17758
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C02"
    },
    "7922": {
      "op": "JUMP"
    },
    "7923": {
      "fn": "Governance.submitVerification",
      "offset": [
        17426,
        18672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7924": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7926": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "ADD",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7929": {
      "fn": "Governance.submitVerification",
      "offset": [
        18371,
        18384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7931": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 61
    },
    "7932": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7933": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18431
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7936": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7938": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7941": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7942": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7947": {
      "op": "SHL"
    },
    "7948": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7949": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7950": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "DIV",
      "path": "2"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7957": {
      "op": "SHL"
    },
    "7958": {
      "op": "SUB"
    },
    "7959": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "AND",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.submitVerification",
      "offset": [
        18387,
        18401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7961": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7962": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F23"
    },
    "7965": {
      "fn": "Governance.submitVerification",
      "offset": [
        18426,
        18440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7966": {
      "fn": "Governance.submitVerification",
      "offset": [
        18371,
        18384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7967": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253B"
    },
    "7970": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18419,
        18440
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7971": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7972": {
      "op": "POP"
    },
    "7973": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7975": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7976": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "ADD",
      "path": "2"
    },
    "7977": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7978": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7979": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7985": {
      "op": "NOT"
    },
    "7986": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "AND",
      "path": "2"
    },
    "7987": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7988": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7989": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7991": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7993": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7994": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "ADD",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7996": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7997": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7998": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8000": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8001": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "ADD",
      "path": "2"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8007": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8008": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "ADD",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8011": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8018": {
      "op": "SHL"
    },
    "8019": {
      "op": "SUB"
    },
    "8020": {
      "op": "NOT"
    },
    "8021": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "AND",
      "path": "2"
    },
    "8022": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8023": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        18419,
        18440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8025": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6A"
    },
    "8028": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "8030": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8037": {
      "op": "SHL"
    },
    "8038": {
      "op": "SUB"
    },
    "8039": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "8040": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8041": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8042": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8049": {
      "op": "SHL"
    },
    "8050": {
      "op": "SUB"
    },
    "8051": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18503
      ],
      "op": "AND",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.submitVerification",
      "offset": [
        18511,
        18516
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8053": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8055": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8056": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8058": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8060": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8062": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8063": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "SUB",
      "path": "2"
    },
    "8064": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8065": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8066": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8067": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "GAS",
      "path": "2"
    },
    "8068": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "CALL",
      "path": "2"
    },
    "8069": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8070": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8071": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8072": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8073": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8074": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8075": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8077": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8078": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "EQ",
      "path": "2"
    },
    "8079": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB4"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8083": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8085": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8086": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8090": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "NOT",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8093": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "ADD",
      "path": "2"
    },
    "8095": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "AND",
      "path": "2"
    },
    "8096": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8097": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "ADD",
      "path": "2"
    },
    "8098": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8100": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8101": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8102": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8103": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8104": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8105": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8107": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8109": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8110": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "ADD",
      "path": "2"
    },
    "8111": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8112": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB9"
    },
    "8115": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8117": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8119": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8120": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8121": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8122": {
      "fn": "Governance.submitVerification",
      "offset": [
        18491,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        18458,
        18521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8124": {
      "fn": "Governance.submitVerification",
      "offset": [
        18458,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8125": {
      "fn": "Governance.submitVerification",
      "offset": [
        18458,
        18521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8126": {
      "fn": "Governance.submitVerification",
      "offset": [
        18458,
        18521
      ],
      "op": "POP",
      "path": "2"
    },
    "8127": {
      "branch": 118,
      "fn": "Governance.submitVerification",
      "offset": [
        18597,
        18601
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 62
    },
    "8128": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FDB"
    },
    "8131": {
      "branch": 118,
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8132": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8134": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8141": {
      "op": "SHL"
    },
    "8142": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8143": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8146": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "ADD",
      "path": "2"
    },
    "8147": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8151": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A3"
    },
    "8154": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18589,
        18626
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8156": {
      "fn": "Governance.submitVerification",
      "offset": [
        18265,
        18672
      ],
      "op": "POP",
      "path": "2"
    },
    "8157": {
      "fn": "Governance.submitVerification",
      "offset": [
        18265,
        18672
      ],
      "op": "POP",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.submitVerification",
      "offset": [
        18265,
        18672
      ],
      "op": "POP",
      "path": "2"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        15164,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        15164,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8161": {
      "fn": "Governance.submitVerification",
      "offset": [
        15164,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8162": {
      "fn": "Governance.submitVerification",
      "offset": [
        15164,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8163": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8165": {
      "fn": "Governance.submitVerification",
      "offset": [
        15068,
        18688
      ],
      "op": "POP",
      "path": "2"
    },
    "8166": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        15068,
        18688
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8168": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "8170": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8177": {
      "op": "SHL"
    },
    "8178": {
      "op": "SUB"
    },
    "8179": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "8180": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "8181": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "8182": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2011"
    },
    "8185": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "8186": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8188": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "8189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8197": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "8198": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8200": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "8201": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3A"
    },
    "8204": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8205": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D68"
    },
    "8208": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8209": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8216": {
      "op": "SHL"
    },
    "8217": {
      "op": "SUB"
    },
    "8218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 63
    },
    "8219": {
      "branch": 121,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "9"
    },
    "8220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2076"
    },
    "8223": {
      "branch": 121,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "8224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "8227": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8233": {
      "op": "SHL"
    },
    "8234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "9"
    },
    "8242": {
      "op": "MSTORE"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8247": {
      "op": "DUP3"
    },
    "8248": {
      "op": "ADD"
    },
    "8249": {
      "op": "MSTORE"
    },
    "8250": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8285": {
      "op": "DUP3"
    },
    "8286": {
      "op": "ADD"
    },
    "8287": {
      "op": "MSTORE"
    },
    "8288": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8297": {
      "op": "SHL"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8300": {
      "op": "DUP3"
    },
    "8301": {
      "op": "ADD"
    },
    "8302": {
      "op": "MSTORE"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8305": {
      "op": "ADD"
    },
    "8306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3A"
    },
    "8309": {
      "op": "JUMP"
    },
    "8310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 64,
      "value": "0x207F"
    },
    "8314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2327"
    },
    "8318": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "9"
    },
    "8321": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8322": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8323": {
      "fn": "Governance.getVotes",
      "offset": [
        4522,
        4537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8325": {
      "fn": "Governance.getVotes",
      "offset": [
        4570,
        4584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0x8"
    },
    "8327": {
      "fn": "Governance.getVotes",
      "offset": [
        4570,
        4584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8328": {
      "fn": "Governance.getVotes",
      "offset": [
        4557,
        4567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8329": {
      "branch": 119,
      "fn": "Governance.getVotes",
      "offset": [
        4557,
        4584
      ],
      "op": "LT",
      "path": "2"
    },
    "8330": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C8"
    },
    "8333": {
      "branch": 119,
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8336": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8343": {
      "op": "SHL"
    },
    "8344": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8345": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8348": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8350": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8351": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "ADD",
      "path": "2"
    },
    "8352": {
      "op": "MSTORE"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8357": {
      "op": "DUP3"
    },
    "8358": {
      "op": "ADD"
    },
    "8359": {
      "op": "MSTORE"
    },
    "8360": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "8379": {
      "op": "SHL"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8382": {
      "op": "DUP3"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "op": "MSTORE"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8387": {
      "op": "ADD"
    },
    "8388": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3A"
    },
    "8391": {
      "op": "JUMP"
    },
    "8392": {
      "fn": "Governance.getVotes",
      "offset": [
        4549,
        4605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8393": {
      "fn": "Governance.getVotes",
      "offset": [
        4615,
        4640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8395": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8398": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8400": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8402": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8403": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8405": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8406": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4677
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8407": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8409": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4693
      ],
      "op": "ADD",
      "path": "2"
    },
    "8410": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4693
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8411": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8414": {
      "fn": "Governance.getVotes",
      "offset": [
        4656,
        4693
      ],
      "op": "AND",
      "path": "2"
    },
    "8415": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8424": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8425": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "GT",
      "path": "2"
    },
    "8426": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8427": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20F6"
    },
    "8430": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8431": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20F6"
    },
    "8434": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262F"
    },
    "8437": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4643,
        4694
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8438": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8439": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8441": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8442": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8443": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8444": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8445": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8446": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8447": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8449": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "MUL",
      "path": "2"
    },
    "8450": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8452": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ADD",
      "path": "2"
    },
    "8453": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8454": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ADD",
      "path": "2"
    },
    "8455": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8457": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8458": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8459": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x211F"
    },
    "8463": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8464": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8465": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8467": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ADD",
      "path": "2"
    },
    "8468": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8470": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8471": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "MUL",
      "path": "2"
    },
    "8472": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8473": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8474": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8475": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "8476": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "ADD",
      "path": "2"
    },
    "8477": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8478": {
      "op": "POP"
    },
    "8479": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8480": {
      "fn": "Governance.getVotes",
      "offset": [
        4643,
        4694
      ],
      "op": "POP",
      "path": "2"
    },
    "8481": {
      "fn": "Governance.getVotes",
      "offset": [
        4615,
        4694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8482": {
      "fn": "Governance.getVotes",
      "offset": [
        4615,
        4694
      ],
      "op": "POP",
      "path": "2"
    },
    "8483": {
      "fn": "Governance.getVotes",
      "offset": [
        4708,
        4717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8485": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8486": {
      "fn": "Governance.getVotes",
      "offset": [
        4726,
        4735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8487": {
      "fn": "Governance.getVotes",
      "offset": [
        4726,
        4742
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8488": {
      "fn": "Governance.getVotes",
      "offset": [
        4723,
        4724
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8489": {
      "fn": "Governance.getVotes",
      "offset": [
        4723,
        4742
      ],
      "op": "LT",
      "path": "2"
    },
    "8490": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8491": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A1"
    },
    "8494": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8495": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x0"
    },
    "8497": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8498": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8499": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8500": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8502": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8504": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8505": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8507": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8508": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4798
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8509": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8511": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4804
      ],
      "op": "ADD",
      "path": "2"
    },
    "8512": {
      "fn": "Governance.getVotes",
      "offset": [
        4805,
        4806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8513": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "8515": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8516": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "LT",
      "path": "2"
    },
    "8517": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2150"
    },
    "8520": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8521": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2150"
    },
    "8524": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "8527": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4777,
        4807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8528": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8529": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "8531": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8532": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8533": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8534": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "DIV",
      "path": "2"
    },
    "8535": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "ADD",
      "path": "2"
    },
    "8536": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8537": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8538": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "MOD",
      "path": "2"
    },
    "8539": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8541": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "MUL",
      "path": "2"
    },
    "8542": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8543": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8545": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8548": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "EXP",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8550": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "DIV",
      "path": "2"
    },
    "8551": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8554": {
      "fn": "Governance.getVotes",
      "offset": [
        4777,
        4807
      ],
      "op": "AND",
      "path": "2"
    },
    "8555": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4771
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8556": {
      "fn": "Governance.getVotes",
      "offset": [
        4772,
        4773
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8557": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8558": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8559": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8560": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "LT",
      "path": "2"
    },
    "8561": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "8564": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8565": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "8568": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "8571": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4762,
        4774
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8572": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8573": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8576": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4807
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8578": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4807
      ],
      "op": "AND",
      "path": "2"
    },
    "8579": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8581": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8582": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8583": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "MUL",
      "path": "2"
    },
    "8584": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8585": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8586": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8587": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "ADD",
      "path": "2"
    },
    "8588": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8589": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8590": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4774
      ],
      "op": "ADD",
      "path": "2"
    },
    "8591": {
      "fn": "Governance.getVotes",
      "offset": [
        4762,
        4807
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8592": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 67
    },
    "8593": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2199"
    },
    "8596": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8597": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F78"
    },
    "8600": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4744,
        4747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8601": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8602": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8603": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "POP",
      "path": "2"
    },
    "8604": {
      "fn": "Governance.getVotes",
      "offset": [
        4744,
        4747
      ],
      "op": "POP",
      "path": "2"
    },
    "8605": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2125"
    },
    "8608": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8609": {
      "fn": "Governance.getVotes",
      "offset": [
        4704,
        4818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8610": {
      "op": "POP"
    },
    "8611": {
      "fn": "Governance.getVotes",
      "offset": [
        4834,
        4843
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 68
    },
    "8612": {
      "fn": "Governance.getVotes",
      "offset": [
        4461,
        4850
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8613": {
      "op": "POP"
    },
    "8614": {
      "op": "POP"
    },
    "8615": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4461,
        4850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8616": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8617": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8619": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8620": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8621": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x1"
    },
    "8623": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8624": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "ADD",
      "path": "2"
    },
    "8625": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8626": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8627": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8628": {
      "fn": "Governance._createTaskType",
      "offset": [
        9999,
        10022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8630": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8631": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8632": {
      "fn": "Governance._createTaskType",
      "offset": [
        10051,
        10067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8633": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8634": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8635": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8636": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8637": {
      "fn": "Governance._createTaskType",
      "offset": [
        10025,
        10041
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8638": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8639": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "LT",
      "path": "2"
    },
    "8640": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CB"
    },
    "8643": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8644": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CB"
    },
    "8647": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEB"
    },
    "8650": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        10108,
        10134
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8651": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8652": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8654": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8655": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8656": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8657": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8659": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8660": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8661": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8662": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8664": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8665": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8666": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "MUL",
      "path": "2"
    },
    "8667": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "ADD",
      "path": "2"
    },
    "8668": {
      "fn": "Governance._createTaskType",
      "offset": [
        10108,
        10134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8669": {
      "op": "POP"
    },
    "8670": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10168
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8672": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8673": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10168
      ],
      "op": "ADD",
      "path": "2"
    },
    "8674": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21EC"
    },
    "8677": {
      "fn": "Governance._createTaskType",
      "offset": [
        10170,
        10179
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8678": {
      "fn": "Governance._createTaskType",
      "offset": [
        10170,
        10179
      ],
      "op": "DUP13",
      "path": "2"
    },
    "8679": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10168
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8680": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FAE"
    },
    "8683": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        10148,
        10179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8684": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8685": {
      "fn": "Governance._createTaskType",
      "offset": [
        10148,
        10179
      ],
      "op": "POP",
      "path": "2"
    },
    "8686": {
      "fn": "Governance._createTaskType",
      "offset": [
        10214,
        10219
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "8688": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8689": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8691": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10211
      ],
      "op": "ADD",
      "path": "2"
    },
    "8692": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8694": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8697": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "EXP",
      "path": "2"
    },
    "8698": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8699": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8700": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8701": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8703": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "MUL",
      "path": "2"
    },
    "8704": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "NOT",
      "path": "2"
    },
    "8705": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "AND",
      "path": "2"
    },
    "8706": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8707": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8708": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8709": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8710": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "MUL",
      "path": "2"
    },
    "8711": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "OR",
      "path": "2"
    },
    "8712": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8713": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8714": {
      "fn": "Governance._createTaskType",
      "offset": [
        10193,
        10219
      ],
      "op": "POP",
      "path": "2"
    },
    "8715": {
      "fn": "Governance._createTaskType",
      "offset": [
        10258,
        10269
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 72
    },
    "8716": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8717": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8719": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10255
      ],
      "op": "ADD",
      "path": "2"
    },
    "8720": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8722": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8725": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "EXP",
      "path": "2"
    },
    "8726": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8727": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8728": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8729": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8735": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "MUL",
      "path": "2"
    },
    "8736": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "NOT",
      "path": "2"
    },
    "8737": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "AND",
      "path": "2"
    },
    "8738": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8739": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8740": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8746": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "AND",
      "path": "2"
    },
    "8747": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "MUL",
      "path": "2"
    },
    "8748": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "OR",
      "path": "2"
    },
    "8749": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8750": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8751": {
      "fn": "Governance._createTaskType",
      "offset": [
        10233,
        10269
      ],
      "op": "POP",
      "path": "2"
    },
    "8752": {
      "fn": "Governance._createTaskType",
      "offset": [
        10313,
        10329
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 73
    },
    "8753": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10294
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8754": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10310
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8756": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10310
      ],
      "op": "ADD",
      "path": "2"
    },
    "8757": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10310
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8759": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8762": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "EXP",
      "path": "2"
    },
    "8763": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8764": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8765": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8766": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8768": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "MUL",
      "path": "2"
    },
    "8769": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "NOT",
      "path": "2"
    },
    "8770": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "AND",
      "path": "2"
    },
    "8771": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8772": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8773": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8775": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "AND",
      "path": "2"
    },
    "8776": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "MUL",
      "path": "2"
    },
    "8777": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "OR",
      "path": "2"
    },
    "8778": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8779": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8780": {
      "fn": "Governance._createTaskType",
      "offset": [
        10283,
        10329
      ],
      "op": "POP",
      "path": "2"
    },
    "8781": {
      "fn": "Governance._createTaskType",
      "offset": [
        10367,
        10377
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 74
    },
    "8782": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10354
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8783": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8785": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10364
      ],
      "op": "ADD",
      "path": "2"
    },
    "8786": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8788": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8791": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "EXP",
      "path": "2"
    },
    "8792": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8793": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8794": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8795": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8799": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "MUL",
      "path": "2"
    },
    "8800": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "NOT",
      "path": "2"
    },
    "8801": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "AND",
      "path": "2"
    },
    "8802": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8803": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8804": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8808": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "AND",
      "path": "2"
    },
    "8809": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "MUL",
      "path": "2"
    },
    "8810": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "OR",
      "path": "2"
    },
    "8811": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8812": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8813": {
      "fn": "Governance._createTaskType",
      "offset": [
        10343,
        10377
      ],
      "op": "POP",
      "path": "2"
    },
    "8814": {
      "fn": "Governance._createTaskType",
      "offset": [
        10418,
        10431
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 75
    },
    "8815": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10402
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8816": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8818": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10415
      ],
      "op": "ADD",
      "path": "2"
    },
    "8819": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8821": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8824": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "EXP",
      "path": "2"
    },
    "8825": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8826": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8827": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8828": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8834": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "MUL",
      "path": "2"
    },
    "8835": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "NOT",
      "path": "2"
    },
    "8836": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "AND",
      "path": "2"
    },
    "8837": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8838": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8839": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8845": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "AND",
      "path": "2"
    },
    "8846": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "MUL",
      "path": "2"
    },
    "8847": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "OR",
      "path": "2"
    },
    "8848": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8849": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8850": {
      "fn": "Governance._createTaskType",
      "offset": [
        10391,
        10431
      ],
      "op": "POP",
      "path": "2"
    },
    "8851": {
      "fn": "Governance._createTaskType",
      "offset": [
        10472,
        10485
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 76
    },
    "8852": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8853": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8855": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10469
      ],
      "op": "ADD",
      "path": "2"
    },
    "8856": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "8858": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8861": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "EXP",
      "path": "2"
    },
    "8862": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8863": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8864": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8865": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8871": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "MUL",
      "path": "2"
    },
    "8872": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "NOT",
      "path": "2"
    },
    "8873": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "AND",
      "path": "2"
    },
    "8874": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8875": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8876": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8882": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "AND",
      "path": "2"
    },
    "8883": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "MUL",
      "path": "2"
    },
    "8884": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "OR",
      "path": "2"
    },
    "8885": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8886": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8887": {
      "fn": "Governance._createTaskType",
      "offset": [
        10445,
        10485
      ],
      "op": "POP",
      "path": "2"
    },
    "8888": {
      "fn": "Governance._createTaskType",
      "offset": [
        10528,
        10543
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 77
    },
    "8889": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8890": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8892": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10525
      ],
      "op": "ADD",
      "path": "2"
    },
    "8893": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "8895": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8898": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "EXP",
      "path": "2"
    },
    "8899": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8900": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8901": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8902": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8905": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "MUL",
      "path": "2"
    },
    "8906": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "NOT",
      "path": "2"
    },
    "8907": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "AND",
      "path": "2"
    },
    "8908": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8909": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8910": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8913": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "AND",
      "path": "2"
    },
    "8914": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "MUL",
      "path": "2"
    },
    "8915": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "OR",
      "path": "2"
    },
    "8916": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8917": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8918": {
      "fn": "Governance._createTaskType",
      "offset": [
        10499,
        10543
      ],
      "op": "POP",
      "path": "2"
    },
    "8919": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 78,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "8952": {
      "fn": "Governance._createTaskType",
      "offset": [
        10608,
        10617
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8953": {
      "fn": "Governance._createTaskType",
      "offset": [
        10608,
        10617
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8954": {
      "fn": "Governance._createTaskType",
      "offset": [
        10619,
        10630
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8955": {
      "fn": "Governance._createTaskType",
      "offset": [
        10632,
        10648
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8956": {
      "fn": "Governance._createTaskType",
      "offset": [
        10650,
        10660
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8957": {
      "fn": "Governance._createTaskType",
      "offset": [
        10662,
        10675
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8958": {
      "fn": "Governance._createTaskType",
      "offset": [
        10677,
        10690
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8959": {
      "fn": "Governance._createTaskType",
      "offset": [
        10692,
        10707
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8960": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8962": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8963": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2313"
    },
    "8966": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "8967": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "8968": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "8969": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8970": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8971": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8972": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8973": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8974": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8975": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D1"
    },
    "8978": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        10589,
        10708
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8979": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8980": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8982": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8983": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8984": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8985": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SUB",
      "path": "2"
    },
    "8986": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8987": {
      "fn": "Governance._createTaskType",
      "offset": [
        10589,
        10708
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8988": {
      "fn": "Governance._createTaskType",
      "offset": [
        9989,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8989": {
      "fn": "Governance._createTaskType",
      "offset": [
        9989,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8990": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8991": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8992": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8993": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8994": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8995": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8996": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8997": {
      "fn": "Governance._createTaskType",
      "offset": [
        9784,
        10715
      ],
      "op": "POP",
      "path": "2"
    },
    "8998": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        9784,
        10715
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8999": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9000": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9002": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9003": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9010": {
      "op": "SHL"
    },
    "9011": {
      "op": "SUB"
    },
    "9012": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 79
    },
    "9013": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9014": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9021": {
      "op": "SHL"
    },
    "9022": {
      "op": "SUB"
    },
    "9023": {
      "op": "NOT"
    },
    "9024": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9"
    },
    "9025": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "9026": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9027": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "9"
    },
    "9028": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9029": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "9030": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "9031": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 80,
      "value": "0x40"
    },
    "9033": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9034": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "9035": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "9"
    },
    "9036": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "9037": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9038": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9039": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9040": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9073": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9074": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "9076": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9077": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "9"
    },
    "9078": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "9079": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "9080": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9081": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9082": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9084": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9085": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x239C"
    },
    "9088": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2388"
    },
    "9091": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9092": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23EA"
    },
    "9095": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9096": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9097": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9098": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9099": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2397"
    },
    "9102": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9103": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9104": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9106": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9107": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3140"
    },
    "9110": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9111": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9112": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2458"
    },
    "9115": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9116": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9117": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 81
    },
    "9118": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9119": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9120": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9121": {
      "op": "POP"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9126": {
      "op": "SHL"
    },
    "9127": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9128": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "9129": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9131": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9132": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9133": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9134": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9135": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9136": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9137": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9138": {
      "branch": 120,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "9139": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23CF"
    },
    "9142": {
      "branch": 120,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9143": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9145": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9146": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "9153": {
      "op": "SHL"
    },
    "9154": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9155": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9156": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9158": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "9159": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9161": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9162": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9163": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9164": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "9165": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9166": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9167": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9168": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 82,
      "value": "0xF"
    },
    "9170": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9171": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9173": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9174": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9175": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9176": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9178": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9179": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9180": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9181": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "9182": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9184": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9185": {
      "op": "POP"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9189": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9190": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9191": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9192": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9193": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9194": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9195": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9203": {
      "op": "SHL"
    },
    "9204": {
      "op": "SUB"
    },
    "9205": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 83
    },
    "9206": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "9207": {
      "branch": 122,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9208": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2454"
    },
    "9211": {
      "branch": 122,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9212": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9214": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9221": {
      "op": "SHL"
    },
    "9222": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9223": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9226": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9228": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9229": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "9230": {
      "op": "MSTORE"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9235": {
      "op": "DUP3"
    },
    "9236": {
      "op": "ADD"
    },
    "9237": {
      "op": "MSTORE"
    },
    "9238": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9273": {
      "op": "DUP3"
    },
    "9274": {
      "op": "ADD"
    },
    "9275": {
      "op": "MSTORE"
    },
    "9276": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "9287": {
      "op": "SHL"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9290": {
      "op": "DUP3"
    },
    "9291": {
      "op": "ADD"
    },
    "9292": {
      "op": "MSTORE"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9295": {
      "op": "ADD"
    },
    "9296": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3A"
    },
    "9299": {
      "op": "JUMP"
    },
    "9300": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9301": {
      "op": "POP"
    },
    "9302": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 84
    },
    "9303": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9304": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9305": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9307": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9324": {
      "op": "NOT"
    },
    "9325": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 85
    },
    "9326": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "9327": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9328": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9329": {
      "branch": 123,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9330": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248B"
    },
    "9333": {
      "branch": 123,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9334": {
      "op": "POP"
    },
    "9335": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9352": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9353": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "9354": {
      "branch": 124,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9355": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9356": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2454"
    },
    "9359": {
      "branch": 124,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9360": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9362": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9369": {
      "op": "SHL"
    },
    "9370": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9371": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9374": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9376": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9377": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "9378": {
      "op": "MSTORE"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9421": {
      "op": "DUP3"
    },
    "9422": {
      "op": "ADD"
    },
    "9423": {
      "op": "MSTORE"
    },
    "9424": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9434": {
      "op": "SHL"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9437": {
      "op": "DUP3"
    },
    "9438": {
      "op": "ADD"
    },
    "9439": {
      "op": "MSTORE"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9442": {
      "op": "ADD"
    },
    "9443": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3A"
    },
    "9446": {
      "op": "JUMP"
    },
    "9447": {
      "op": "JUMPDEST"
    },
    "9448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9450": {
      "op": "DUP1"
    },
    "9451": {
      "op": "MLOAD"
    },
    "9452": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9455": {
      "op": "DUP2"
    },
    "9456": {
      "op": "ADD"
    },
    "9457": {
      "op": "DUP3"
    },
    "9458": {
      "op": "MSTORE"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9461": {
      "op": "DUP1"
    },
    "9462": {
      "op": "DUP3"
    },
    "9463": {
      "op": "MSTORE"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9468": {
      "op": "DUP4"
    },
    "9469": {
      "op": "ADD"
    },
    "9470": {
      "op": "DUP2"
    },
    "9471": {
      "op": "SWAP1"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "op": "SWAP3"
    },
    "9474": {
      "op": "DUP3"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "DUP4"
    },
    "9477": {
      "op": "SWAP1"
    },
    "9478": {
      "op": "MSTORE"
    },
    "9479": {
      "op": "DUP2"
    },
    "9480": {
      "op": "ADD"
    },
    "9481": {
      "op": "DUP3"
    },
    "9482": {
      "op": "SWAP1"
    },
    "9483": {
      "op": "MSTORE"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9486": {
      "op": "DUP2"
    },
    "9487": {
      "op": "ADD"
    },
    "9488": {
      "op": "DUP3"
    },
    "9489": {
      "op": "SWAP1"
    },
    "9490": {
      "op": "MSTORE"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9493": {
      "op": "DUP2"
    },
    "9494": {
      "op": "ADD"
    },
    "9495": {
      "op": "DUP3"
    },
    "9496": {
      "op": "SWAP1"
    },
    "9497": {
      "op": "MSTORE"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9500": {
      "op": "DUP2"
    },
    "9501": {
      "op": "ADD"
    },
    "9502": {
      "op": "DUP3"
    },
    "9503": {
      "op": "SWAP1"
    },
    "9504": {
      "op": "MSTORE"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9507": {
      "op": "DUP2"
    },
    "9508": {
      "op": "ADD"
    },
    "9509": {
      "op": "DUP3"
    },
    "9510": {
      "op": "SWAP1"
    },
    "9511": {
      "op": "MSTORE"
    },
    "9512": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9515": {
      "op": "DUP2"
    },
    "9516": {
      "op": "ADD"
    },
    "9517": {
      "op": "DUP3"
    },
    "9518": {
      "op": "SWAP1"
    },
    "9519": {
      "op": "MSTORE"
    },
    "9520": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9523": {
      "op": "DUP2"
    },
    "9524": {
      "op": "ADD"
    },
    "9525": {
      "op": "SWAP2"
    },
    "9526": {
      "op": "SWAP1"
    },
    "9527": {
      "op": "SWAP2"
    },
    "9528": {
      "op": "MSTORE"
    },
    "9529": {
      "op": "SWAP1"
    },
    "9530": {
      "jump": "o",
      "op": "JUMP"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "op": "DUP1"
    },
    "9534": {
      "op": "SLOAD"
    },
    "9535": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9538": {
      "op": "SWAP1"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0x2CB1"
    },
    "9542": {
      "jump": "i",
      "op": "JUMP"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9546": {
      "op": "DUP3"
    },
    "9547": {
      "op": "SSTORE"
    },
    "9548": {
      "op": "DUP1"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9551": {
      "op": "LT"
    },
    "9552": {
      "op": "PUSH2",
      "value": "0x2557"
    },
    "9555": {
      "op": "JUMPI"
    },
    "9556": {
      "op": "POP"
    },
    "9557": {
      "op": "POP"
    },
    "9558": {
      "jump": "o",
      "op": "JUMP"
    },
    "9559": {
      "op": "JUMPDEST"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9562": {
      "op": "ADD"
    },
    "9563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9565": {
      "op": "SWAP1"
    },
    "9566": {
      "op": "DIV"
    },
    "9567": {
      "op": "SWAP1"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9570": {
      "op": "MSTORE"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9575": {
      "op": "KECCAK256"
    },
    "9576": {
      "op": "SWAP1"
    },
    "9577": {
      "op": "DUP2"
    },
    "9578": {
      "op": "ADD"
    },
    "9579": {
      "op": "SWAP1"
    },
    "9580": {
      "op": "PUSH2",
      "value": "0x207F"
    },
    "9583": {
      "op": "SWAP2"
    },
    "9584": {
      "op": "SWAP1"
    },
    "9585": {
      "op": "JUMPDEST"
    },
    "9586": {
      "op": "DUP1"
    },
    "9587": {
      "op": "DUP3"
    },
    "9588": {
      "op": "GT"
    },
    "9589": {
      "op": "ISZERO"
    },
    "9590": {
      "op": "PUSH2",
      "value": "0x2454"
    },
    "9593": {
      "op": "JUMPI"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9596": {
      "op": "DUP2"
    },
    "9597": {
      "op": "SSTORE"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9600": {
      "op": "ADD"
    },
    "9601": {
      "op": "PUSH2",
      "value": "0x2571"
    },
    "9604": {
      "op": "JUMP"
    },
    "9605": {
      "op": "JUMPDEST"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9610": {
      "op": "DUP3"
    },
    "9611": {
      "op": "DUP5"
    },
    "9612": {
      "op": "SUB"
    },
    "9613": {
      "op": "SLT"
    },
    "9614": {
      "op": "ISZERO"
    },
    "9615": {
      "op": "PUSH2",
      "value": "0x2597"
    },
    "9618": {
      "op": "JUMPI"
    },
    "9619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9621": {
      "op": "DUP1"
    },
    "9622": {
      "op": "REVERT"
    },
    "9623": {
      "op": "JUMPDEST"
    },
    "9624": {
      "op": "POP"
    },
    "9625": {
      "op": "CALLDATALOAD"
    },
    "9626": {
      "op": "SWAP2"
    },
    "9627": {
      "op": "SWAP1"
    },
    "9628": {
      "op": "POP"
    },
    "9629": {
      "jump": "o",
      "op": "JUMP"
    },
    "9630": {
      "op": "JUMPDEST"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9633": {
      "op": "DUP2"
    },
    "9634": {
      "op": "MLOAD"
    },
    "9635": {
      "op": "DUP1"
    },
    "9636": {
      "op": "DUP5"
    },
    "9637": {
      "op": "MSTORE"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9640": {
      "op": "JUMPDEST"
    },
    "9641": {
      "op": "DUP2"
    },
    "9642": {
      "op": "DUP2"
    },
    "9643": {
      "op": "LT"
    },
    "9644": {
      "op": "ISZERO"
    },
    "9645": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9648": {
      "op": "JUMPI"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9651": {
      "op": "DUP2"
    },
    "9652": {
      "op": "DUP6"
    },
    "9653": {
      "op": "ADD"
    },
    "9654": {
      "op": "DUP2"
    },
    "9655": {
      "op": "ADD"
    },
    "9656": {
      "op": "MLOAD"
    },
    "9657": {
      "op": "DUP7"
    },
    "9658": {
      "op": "DUP4"
    },
    "9659": {
      "op": "ADD"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "MSTORE"
    },
    "9663": {
      "op": "ADD"
    },
    "9664": {
      "op": "PUSH2",
      "value": "0x25A8"
    },
    "9667": {
      "op": "JUMP"
    },
    "9668": {
      "op": "JUMPDEST"
    },
    "9669": {
      "op": "DUP2"
    },
    "9670": {
      "op": "DUP2"
    },
    "9671": {
      "op": "GT"
    },
    "9672": {
      "op": "ISZERO"
    },
    "9673": {
      "op": "PUSH2",
      "value": "0x25D6"
    },
    "9676": {
      "op": "JUMPI"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9681": {
      "op": "DUP4"
    },
    "9682": {
      "op": "DUP8"
    },
    "9683": {
      "op": "ADD"
    },
    "9684": {
      "op": "ADD"
    },
    "9685": {
      "op": "MSTORE"
    },
    "9686": {
      "op": "JUMPDEST"
    },
    "9687": {
      "op": "POP"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9690": {
      "op": "ADD"
    },
    "9691": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9693": {
      "op": "NOT"
    },
    "9694": {
      "op": "AND"
    },
    "9695": {
      "op": "SWAP3"
    },
    "9696": {
      "op": "SWAP1"
    },
    "9697": {
      "op": "SWAP3"
    },
    "9698": {
      "op": "ADD"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9701": {
      "op": "ADD"
    },
    "9702": {
      "op": "SWAP3"
    },
    "9703": {
      "op": "SWAP2"
    },
    "9704": {
      "op": "POP"
    },
    "9705": {
      "op": "POP"
    },
    "9706": {
      "jump": "o",
      "op": "JUMP"
    },
    "9707": {
      "op": "JUMPDEST"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9710": {
      "op": "DUP2"
    },
    "9711": {
      "op": "MSTORE"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9714": {
      "op": "PUSH2",
      "value": "0x25FE"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9719": {
      "op": "DUP4"
    },
    "9720": {
      "op": "ADD"
    },
    "9721": {
      "op": "DUP9"
    },
    "9722": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "9725": {
      "jump": "i",
      "op": "JUMP"
    },
    "9726": {
      "op": "JUMPDEST"
    },
    "9727": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9730": {
      "op": "SWAP7"
    },
    "9731": {
      "op": "SWAP1"
    },
    "9732": {
      "op": "SWAP7"
    },
    "9733": {
      "op": "AND"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9736": {
      "op": "DUP4"
    },
    "9737": {
      "op": "ADD"
    },
    "9738": {
      "op": "MSTORE"
    },
    "9739": {
      "op": "POP"
    },
    "9740": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9746": {
      "op": "SWAP4"
    },
    "9747": {
      "op": "DUP5"
    },
    "9748": {
      "op": "AND"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9751": {
      "op": "DUP3"
    },
    "9752": {
      "op": "ADD"
    },
    "9753": {
      "op": "MSTORE"
    },
    "9754": {
      "op": "SWAP2"
    },
    "9755": {
      "op": "DUP4"
    },
    "9756": {
      "op": "AND"
    },
    "9757": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9759": {
      "op": "DUP4"
    },
    "9760": {
      "op": "ADD"
    },
    "9761": {
      "op": "MSTORE"
    },
    "9762": {
      "op": "SWAP1"
    },
    "9763": {
      "op": "SWAP2"
    },
    "9764": {
      "op": "AND"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9767": {
      "op": "SWAP1"
    },
    "9768": {
      "op": "SWAP2"
    },
    "9769": {
      "op": "ADD"
    },
    "9770": {
      "op": "MSTORE"
    },
    "9771": {
      "op": "SWAP2"
    },
    "9772": {
      "op": "SWAP1"
    },
    "9773": {
      "op": "POP"
    },
    "9774": {
      "jump": "o",
      "op": "JUMP"
    },
    "9775": {
      "op": "JUMPDEST"
    },
    "9776": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9783": {
      "op": "SHL"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9786": {
      "op": "MSTORE"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9789": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9791": {
      "op": "MSTORE"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9796": {
      "op": "REVERT"
    },
    "9797": {
      "op": "JUMPDEST"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9800": {
      "op": "MLOAD"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9803": {
      "op": "DUP3"
    },
    "9804": {
      "op": "ADD"
    },
    "9805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9807": {
      "op": "NOT"
    },
    "9808": {
      "op": "AND"
    },
    "9809": {
      "op": "DUP2"
    },
    "9810": {
      "op": "ADD"
    },
    "9811": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9820": {
      "op": "DUP2"
    },
    "9821": {
      "op": "GT"
    },
    "9822": {
      "op": "DUP3"
    },
    "9823": {
      "op": "DUP3"
    },
    "9824": {
      "op": "LT"
    },
    "9825": {
      "op": "OR"
    },
    "9826": {
      "op": "ISZERO"
    },
    "9827": {
      "op": "PUSH2",
      "value": "0x266E"
    },
    "9830": {
      "op": "JUMPI"
    },
    "9831": {
      "op": "PUSH2",
      "value": "0x266E"
    },
    "9834": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "9837": {
      "jump": "i",
      "op": "JUMP"
    },
    "9838": {
      "op": "JUMPDEST"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9841": {
      "op": "MSTORE"
    },
    "9842": {
      "op": "SWAP2"
    },
    "9843": {
      "op": "SWAP1"
    },
    "9844": {
      "op": "POP"
    },
    "9845": {
      "jump": "o",
      "op": "JUMP"
    },
    "9846": {
      "op": "JUMPDEST"
    },
    "9847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9849": {
      "op": "DUP3"
    },
    "9850": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9852": {
      "op": "DUP4"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "SLT"
    },
    "9855": {
      "op": "PUSH2",
      "value": "0x2687"
    },
    "9858": {
      "op": "JUMPI"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9861": {
      "op": "DUP1"
    },
    "9862": {
      "op": "REVERT"
    },
    "9863": {
      "op": "JUMPDEST"
    },
    "9864": {
      "op": "DUP2"
    },
    "9865": {
      "op": "CALLDATALOAD"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9868": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9877": {
      "op": "DUP3"
    },
    "9878": {
      "op": "GT"
    },
    "9879": {
      "op": "ISZERO"
    },
    "9880": {
      "op": "PUSH2",
      "value": "0x26A3"
    },
    "9883": {
      "op": "JUMPI"
    },
    "9884": {
      "op": "PUSH2",
      "value": "0x26A3"
    },
    "9887": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "9890": {
      "jump": "i",
      "op": "JUMP"
    },
    "9891": {
      "op": "JUMPDEST"
    },
    "9892": {
      "op": "DUP2"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9895": {
      "op": "SHL"
    },
    "9896": {
      "op": "PUSH2",
      "value": "0x26B2"
    },
    "9899": {
      "op": "DUP3"
    },
    "9900": {
      "op": "DUP3"
    },
    "9901": {
      "op": "ADD"
    },
    "9902": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "9905": {
      "jump": "i",
      "op": "JUMP"
    },
    "9906": {
      "op": "JUMPDEST"
    },
    "9907": {
      "op": "SWAP3"
    },
    "9908": {
      "op": "DUP4"
    },
    "9909": {
      "op": "MSTORE"
    },
    "9910": {
      "op": "DUP5"
    },
    "9911": {
      "op": "DUP2"
    },
    "9912": {
      "op": "ADD"
    },
    "9913": {
      "op": "DUP3"
    },
    "9914": {
      "op": "ADD"
    },
    "9915": {
      "op": "SWAP3"
    },
    "9916": {
      "op": "DUP3"
    },
    "9917": {
      "op": "DUP2"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "SWAP1"
    },
    "9920": {
      "op": "DUP8"
    },
    "9921": {
      "op": "DUP6"
    },
    "9922": {
      "op": "GT"
    },
    "9923": {
      "op": "ISZERO"
    },
    "9924": {
      "op": "PUSH2",
      "value": "0x26CC"
    },
    "9927": {
      "op": "JUMPI"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9930": {
      "op": "DUP1"
    },
    "9931": {
      "op": "REVERT"
    },
    "9932": {
      "op": "JUMPDEST"
    },
    "9933": {
      "op": "DUP4"
    },
    "9934": {
      "op": "DUP8"
    },
    "9935": {
      "op": "ADD"
    },
    "9936": {
      "op": "SWAP3"
    },
    "9937": {
      "op": "POP"
    },
    "9938": {
      "op": "JUMPDEST"
    },
    "9939": {
      "op": "DUP5"
    },
    "9940": {
      "op": "DUP4"
    },
    "9941": {
      "op": "LT"
    },
    "9942": {
      "op": "ISZERO"
    },
    "9943": {
      "op": "PUSH2",
      "value": "0x26EB"
    },
    "9946": {
      "op": "JUMPI"
    },
    "9947": {
      "op": "DUP3"
    },
    "9948": {
      "op": "CALLDATALOAD"
    },
    "9949": {
      "op": "DUP3"
    },
    "9950": {
      "op": "MSTORE"
    },
    "9951": {
      "op": "SWAP2"
    },
    "9952": {
      "op": "DUP4"
    },
    "9953": {
      "op": "ADD"
    },
    "9954": {
      "op": "SWAP2"
    },
    "9955": {
      "op": "SWAP1"
    },
    "9956": {
      "op": "DUP4"
    },
    "9957": {
      "op": "ADD"
    },
    "9958": {
      "op": "SWAP1"
    },
    "9959": {
      "op": "PUSH2",
      "value": "0x26D2"
    },
    "9962": {
      "op": "JUMP"
    },
    "9963": {
      "op": "JUMPDEST"
    },
    "9964": {
      "op": "SWAP8"
    },
    "9965": {
      "op": "SWAP7"
    },
    "9966": {
      "op": "POP"
    },
    "9967": {
      "op": "POP"
    },
    "9968": {
      "op": "POP"
    },
    "9969": {
      "op": "POP"
    },
    "9970": {
      "op": "POP"
    },
    "9971": {
      "op": "POP"
    },
    "9972": {
      "op": "POP"
    },
    "9973": {
      "jump": "o",
      "op": "JUMP"
    },
    "9974": {
      "op": "JUMPDEST"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9977": {
      "op": "DUP1"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9982": {
      "op": "DUP5"
    },
    "9983": {
      "op": "DUP7"
    },
    "9984": {
      "op": "SUB"
    },
    "9985": {
      "op": "SLT"
    },
    "9986": {
      "op": "ISZERO"
    },
    "9987": {
      "op": "PUSH2",
      "value": "0x270B"
    },
    "9990": {
      "op": "JUMPI"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9993": {
      "op": "DUP1"
    },
    "9994": {
      "op": "REVERT"
    },
    "9995": {
      "op": "JUMPDEST"
    },
    "9996": {
      "op": "DUP4"
    },
    "9997": {
      "op": "CALLDATALOAD"
    },
    "9998": {
      "op": "SWAP3"
    },
    "9999": {
      "op": "POP"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10002": {
      "op": "DUP5"
    },
    "10003": {
      "op": "ADD"
    },
    "10004": {
      "op": "CALLDATALOAD"
    },
    "10005": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10014": {
      "op": "DUP2"
    },
    "10015": {
      "op": "GT"
    },
    "10016": {
      "op": "ISZERO"
    },
    "10017": {
      "op": "PUSH2",
      "value": "0x2729"
    },
    "10020": {
      "op": "JUMPI"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10023": {
      "op": "DUP1"
    },
    "10024": {
      "op": "REVERT"
    },
    "10025": {
      "op": "JUMPDEST"
    },
    "10026": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10029": {
      "op": "DUP7"
    },
    "10030": {
      "op": "DUP3"
    },
    "10031": {
      "op": "DUP8"
    },
    "10032": {
      "op": "ADD"
    },
    "10033": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "10036": {
      "jump": "i",
      "op": "JUMP"
    },
    "10037": {
      "op": "JUMPDEST"
    },
    "10038": {
      "op": "SWAP3"
    },
    "10039": {
      "op": "POP"
    },
    "10040": {
      "op": "POP"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10043": {
      "op": "DUP5"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "op": "CALLDATALOAD"
    },
    "10046": {
      "op": "DUP1"
    },
    "10047": {
      "op": "ISZERO"
    },
    "10048": {
      "op": "ISZERO"
    },
    "10049": {
      "op": "DUP2"
    },
    "10050": {
      "op": "EQ"
    },
    "10051": {
      "op": "PUSH2",
      "value": "0x274B"
    },
    "10054": {
      "op": "JUMPI"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10057": {
      "op": "DUP1"
    },
    "10058": {
      "op": "REVERT"
    },
    "10059": {
      "op": "JUMPDEST"
    },
    "10060": {
      "op": "DUP1"
    },
    "10061": {
      "op": "SWAP2"
    },
    "10062": {
      "op": "POP"
    },
    "10063": {
      "op": "POP"
    },
    "10064": {
      "op": "SWAP3"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "SWAP3"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "SWAP3"
    },
    "10069": {
      "jump": "o",
      "op": "JUMP"
    },
    "10070": {
      "op": "JUMPDEST"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10073": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10076": {
      "op": "DUP1"
    },
    "10077": {
      "op": "DUP4"
    },
    "10078": {
      "op": "MSTORE"
    },
    "10079": {
      "op": "PUSH2",
      "value": "0x276A"
    },
    "10082": {
      "op": "DUP2"
    },
    "10083": {
      "op": "DUP5"
    },
    "10084": {
      "op": "ADD"
    },
    "10085": {
      "op": "DUP13"
    },
    "10086": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "10089": {
      "jump": "i",
      "op": "JUMP"
    },
    "10090": {
      "op": "JUMPDEST"
    },
    "10091": {
      "op": "SWAP10"
    },
    "10092": {
      "op": "ISZERO"
    },
    "10093": {
      "op": "ISZERO"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10096": {
      "op": "DUP5"
    },
    "10097": {
      "op": "ADD"
    },
    "10098": {
      "op": "MSTORE"
    },
    "10099": {
      "op": "POP"
    },
    "10100": {
      "op": "POP"
    },
    "10101": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10107": {
      "op": "SWAP7"
    },
    "10108": {
      "op": "DUP8"
    },
    "10109": {
      "op": "AND"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10112": {
      "op": "DUP3"
    },
    "10113": {
      "op": "ADD"
    },
    "10114": {
      "op": "MSTORE"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10117": {
      "op": "SWAP6"
    },
    "10118": {
      "op": "SWAP1"
    },
    "10119": {
      "op": "SWAP6"
    },
    "10120": {
      "op": "AND"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10123": {
      "op": "DUP7"
    },
    "10124": {
      "op": "ADD"
    },
    "10125": {
      "op": "MSTORE"
    },
    "10126": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "10130": {
      "op": "SWAP4"
    },
    "10131": {
      "op": "SWAP1"
    },
    "10132": {
      "op": "SWAP4"
    },
    "10133": {
      "op": "AND"
    },
    "10134": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10136": {
      "op": "DUP6"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "MSTORE"
    },
    "10139": {
      "op": "SWAP1"
    },
    "10140": {
      "op": "DUP5"
    },
    "10141": {
      "op": "AND"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10144": {
      "op": "DUP5"
    },
    "10145": {
      "op": "ADD"
    },
    "10146": {
      "op": "MSTORE"
    },
    "10147": {
      "op": "SWAP1"
    },
    "10148": {
      "op": "SWAP3"
    },
    "10149": {
      "op": "AND"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10152": {
      "op": "DUP3"
    },
    "10153": {
      "op": "ADD"
    },
    "10154": {
      "op": "MSTORE"
    },
    "10155": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10158": {
      "op": "SWAP1"
    },
    "10159": {
      "op": "SWAP2"
    },
    "10160": {
      "op": "AND"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10163": {
      "op": "SWAP1"
    },
    "10164": {
      "op": "SWAP2"
    },
    "10165": {
      "op": "ADD"
    },
    "10166": {
      "op": "MSTORE"
    },
    "10167": {
      "op": "SWAP2"
    },
    "10168": {
      "op": "SWAP1"
    },
    "10169": {
      "op": "POP"
    },
    "10170": {
      "jump": "o",
      "op": "JUMP"
    },
    "10171": {
      "op": "JUMPDEST"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10176": {
      "op": "DUP1"
    },
    "10177": {
      "op": "DUP4"
    },
    "10178": {
      "op": "ADD"
    },
    "10179": {
      "op": "DUP2"
    },
    "10180": {
      "op": "DUP5"
    },
    "10181": {
      "op": "MSTORE"
    },
    "10182": {
      "op": "DUP1"
    },
    "10183": {
      "op": "DUP6"
    },
    "10184": {
      "op": "MLOAD"
    },
    "10185": {
      "op": "DUP1"
    },
    "10186": {
      "op": "DUP4"
    },
    "10187": {
      "op": "MSTORE"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10190": {
      "op": "DUP7"
    },
    "10191": {
      "op": "ADD"
    },
    "10192": {
      "op": "SWAP2"
    },
    "10193": {
      "op": "POP"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10196": {
      "op": "DUP2"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10199": {
      "op": "SHL"
    },
    "10200": {
      "op": "DUP8"
    },
    "10201": {
      "op": "ADD"
    },
    "10202": {
      "op": "ADD"
    },
    "10203": {
      "op": "SWAP3"
    },
    "10204": {
      "op": "POP"
    },
    "10205": {
      "op": "DUP4"
    },
    "10206": {
      "op": "DUP8"
    },
    "10207": {
      "op": "ADD"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10210": {
      "op": "JUMPDEST"
    },
    "10211": {
      "op": "DUP3"
    },
    "10212": {
      "op": "DUP2"
    },
    "10213": {
      "op": "LT"
    },
    "10214": {
      "op": "ISZERO"
    },
    "10215": {
      "op": "PUSH2",
      "value": "0x2810"
    },
    "10218": {
      "op": "JUMPI"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10221": {
      "op": "NOT"
    },
    "10222": {
      "op": "DUP9"
    },
    "10223": {
      "op": "DUP7"
    },
    "10224": {
      "op": "SUB"
    },
    "10225": {
      "op": "ADD"
    },
    "10226": {
      "op": "DUP5"
    },
    "10227": {
      "op": "MSTORE"
    },
    "10228": {
      "op": "PUSH2",
      "value": "0x27FE"
    },
    "10231": {
      "op": "DUP6"
    },
    "10232": {
      "op": "DUP4"
    },
    "10233": {
      "op": "MLOAD"
    },
    "10234": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "10237": {
      "jump": "i",
      "op": "JUMP"
    },
    "10238": {
      "op": "JUMPDEST"
    },
    "10239": {
      "op": "SWAP5"
    },
    "10240": {
      "op": "POP"
    },
    "10241": {
      "op": "SWAP3"
    },
    "10242": {
      "op": "DUP6"
    },
    "10243": {
      "op": "ADD"
    },
    "10244": {
      "op": "SWAP3"
    },
    "10245": {
      "op": "SWAP1"
    },
    "10246": {
      "op": "DUP6"
    },
    "10247": {
      "op": "ADD"
    },
    "10248": {
      "op": "SWAP1"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10251": {
      "op": "ADD"
    },
    "10252": {
      "op": "PUSH2",
      "value": "0x27E2"
    },
    "10255": {
      "op": "JUMP"
    },
    "10256": {
      "op": "JUMPDEST"
    },
    "10257": {
      "op": "POP"
    },
    "10258": {
      "op": "SWAP3"
    },
    "10259": {
      "op": "SWAP8"
    },
    "10260": {
      "op": "SWAP7"
    },
    "10261": {
      "op": "POP"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "op": "POP"
    },
    "10264": {
      "op": "POP"
    },
    "10265": {
      "op": "POP"
    },
    "10266": {
      "op": "POP"
    },
    "10267": {
      "op": "POP"
    },
    "10268": {
      "jump": "o",
      "op": "JUMP"
    },
    "10269": {
      "op": "JUMPDEST"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10272": {
      "op": "DUP1"
    },
    "10273": {
      "op": "DUP4"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10276": {
      "op": "DUP5"
    },
    "10277": {
      "op": "ADD"
    },
    "10278": {
      "op": "SLT"
    },
    "10279": {
      "op": "PUSH2",
      "value": "0x282F"
    },
    "10282": {
      "op": "JUMPI"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10285": {
      "op": "DUP1"
    },
    "10286": {
      "op": "REVERT"
    },
    "10287": {
      "op": "JUMPDEST"
    },
    "10288": {
      "op": "POP"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "CALLDATALOAD"
    },
    "10291": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10300": {
      "op": "DUP2"
    },
    "10301": {
      "op": "GT"
    },
    "10302": {
      "op": "ISZERO"
    },
    "10303": {
      "op": "PUSH2",
      "value": "0x2847"
    },
    "10306": {
      "op": "JUMPI"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10309": {
      "op": "DUP1"
    },
    "10310": {
      "op": "REVERT"
    },
    "10311": {
      "op": "JUMPDEST"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10314": {
      "op": "DUP4"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "SWAP2"
    },
    "10317": {
      "op": "POP"
    },
    "10318": {
      "op": "DUP4"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10321": {
      "op": "DUP3"
    },
    "10322": {
      "op": "DUP6"
    },
    "10323": {
      "op": "ADD"
    },
    "10324": {
      "op": "ADD"
    },
    "10325": {
      "op": "GT"
    },
    "10326": {
      "op": "ISZERO"
    },
    "10327": {
      "op": "PUSH2",
      "value": "0x285F"
    },
    "10330": {
      "op": "JUMPI"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10333": {
      "op": "DUP1"
    },
    "10334": {
      "op": "REVERT"
    },
    "10335": {
      "op": "JUMPDEST"
    },
    "10336": {
      "op": "SWAP3"
    },
    "10337": {
      "op": "POP"
    },
    "10338": {
      "op": "SWAP3"
    },
    "10339": {
      "op": "SWAP1"
    },
    "10340": {
      "op": "POP"
    },
    "10341": {
      "jump": "o",
      "op": "JUMP"
    },
    "10342": {
      "op": "JUMPDEST"
    },
    "10343": {
      "op": "DUP1"
    },
    "10344": {
      "op": "CALLDATALOAD"
    },
    "10345": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "10349": {
      "op": "DUP2"
    },
    "10350": {
      "op": "AND"
    },
    "10351": {
      "op": "DUP2"
    },
    "10352": {
      "op": "EQ"
    },
    "10353": {
      "op": "PUSH2",
      "value": "0x2879"
    },
    "10356": {
      "op": "JUMPI"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10359": {
      "op": "DUP1"
    },
    "10360": {
      "op": "REVERT"
    },
    "10361": {
      "op": "JUMPDEST"
    },
    "10362": {
      "op": "SWAP2"
    },
    "10363": {
      "op": "SWAP1"
    },
    "10364": {
      "op": "POP"
    },
    "10365": {
      "jump": "o",
      "op": "JUMP"
    },
    "10366": {
      "op": "JUMPDEST"
    },
    "10367": {
      "op": "DUP1"
    },
    "10368": {
      "op": "CALLDATALOAD"
    },
    "10369": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "AND"
    },
    "10377": {
      "op": "DUP2"
    },
    "10378": {
      "op": "EQ"
    },
    "10379": {
      "op": "PUSH2",
      "value": "0x2879"
    },
    "10382": {
      "op": "JUMPI"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10385": {
      "op": "DUP1"
    },
    "10386": {
      "op": "REVERT"
    },
    "10387": {
      "op": "JUMPDEST"
    },
    "10388": {
      "op": "DUP1"
    },
    "10389": {
      "op": "CALLDATALOAD"
    },
    "10390": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10393": {
      "op": "DUP2"
    },
    "10394": {
      "op": "AND"
    },
    "10395": {
      "op": "DUP2"
    },
    "10396": {
      "op": "EQ"
    },
    "10397": {
      "op": "PUSH2",
      "value": "0x2879"
    },
    "10400": {
      "op": "JUMPI"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10403": {
      "op": "DUP1"
    },
    "10404": {
      "op": "REVERT"
    },
    "10405": {
      "op": "JUMPDEST"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10408": {
      "op": "DUP1"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10411": {
      "op": "DUP1"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10414": {
      "op": "DUP1"
    },
    "10415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10419": {
      "op": "DUP9"
    },
    "10420": {
      "op": "DUP11"
    },
    "10421": {
      "op": "SUB"
    },
    "10422": {
      "op": "SLT"
    },
    "10423": {
      "op": "ISZERO"
    },
    "10424": {
      "op": "PUSH2",
      "value": "0x28C0"
    },
    "10427": {
      "op": "JUMPI"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10430": {
      "op": "DUP1"
    },
    "10431": {
      "op": "REVERT"
    },
    "10432": {
      "op": "JUMPDEST"
    },
    "10433": {
      "op": "DUP8"
    },
    "10434": {
      "op": "CALLDATALOAD"
    },
    "10435": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10444": {
      "op": "DUP2"
    },
    "10445": {
      "op": "GT"
    },
    "10446": {
      "op": "ISZERO"
    },
    "10447": {
      "op": "PUSH2",
      "value": "0x28D7"
    },
    "10450": {
      "op": "JUMPI"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10453": {
      "op": "DUP1"
    },
    "10454": {
      "op": "REVERT"
    },
    "10455": {
      "op": "JUMPDEST"
    },
    "10456": {
      "op": "PUSH2",
      "value": "0x28E3"
    },
    "10459": {
      "op": "DUP11"
    },
    "10460": {
      "op": "DUP3"
    },
    "10461": {
      "op": "DUP12"
    },
    "10462": {
      "op": "ADD"
    },
    "10463": {
      "op": "PUSH2",
      "value": "0x281D"
    },
    "10466": {
      "jump": "i",
      "op": "JUMP"
    },
    "10467": {
      "op": "JUMPDEST"
    },
    "10468": {
      "op": "SWAP1"
    },
    "10469": {
      "op": "SWAP9"
    },
    "10470": {
      "op": "POP"
    },
    "10471": {
      "op": "SWAP7"
    },
    "10472": {
      "op": "POP"
    },
    "10473": {
      "op": "POP"
    },
    "10474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10476": {
      "op": "DUP9"
    },
    "10477": {
      "op": "ADD"
    },
    "10478": {
      "op": "CALLDATALOAD"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10481": {
      "op": "DUP2"
    },
    "10482": {
      "op": "AND"
    },
    "10483": {
      "op": "DUP2"
    },
    "10484": {
      "op": "EQ"
    },
    "10485": {
      "op": "PUSH2",
      "value": "0x28FD"
    },
    "10488": {
      "op": "JUMPI"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10491": {
      "op": "DUP1"
    },
    "10492": {
      "op": "REVERT"
    },
    "10493": {
      "op": "JUMPDEST"
    },
    "10494": {
      "op": "SWAP5"
    },
    "10495": {
      "op": "POP"
    },
    "10496": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10501": {
      "op": "DUP10"
    },
    "10502": {
      "op": "ADD"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x2866"
    },
    "10506": {
      "jump": "i",
      "op": "JUMP"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "SWAP4"
    },
    "10509": {
      "op": "POP"
    },
    "10510": {
      "op": "PUSH2",
      "value": "0x2919"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10515": {
      "op": "DUP10"
    },
    "10516": {
      "op": "ADD"
    },
    "10517": {
      "op": "PUSH2",
      "value": "0x287E"
    },
    "10520": {
      "jump": "i",
      "op": "JUMP"
    },
    "10521": {
      "op": "JUMPDEST"
    },
    "10522": {
      "op": "SWAP3"
    },
    "10523": {
      "op": "POP"
    },
    "10524": {
      "op": "PUSH2",
      "value": "0x2927"
    },
    "10527": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10529": {
      "op": "DUP10"
    },
    "10530": {
      "op": "ADD"
    },
    "10531": {
      "op": "PUSH2",
      "value": "0x287E"
    },
    "10534": {
      "jump": "i",
      "op": "JUMP"
    },
    "10535": {
      "op": "JUMPDEST"
    },
    "10536": {
      "op": "SWAP2"
    },
    "10537": {
      "op": "POP"
    },
    "10538": {
      "op": "PUSH2",
      "value": "0x2935"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10543": {
      "op": "DUP10"
    },
    "10544": {
      "op": "ADD"
    },
    "10545": {
      "op": "PUSH2",
      "value": "0x2893"
    },
    "10548": {
      "jump": "i",
      "op": "JUMP"
    },
    "10549": {
      "op": "JUMPDEST"
    },
    "10550": {
      "op": "SWAP1"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "SWAP3"
    },
    "10553": {
      "op": "SWAP6"
    },
    "10554": {
      "op": "SWAP9"
    },
    "10555": {
      "op": "SWAP2"
    },
    "10556": {
      "op": "SWAP5"
    },
    "10557": {
      "op": "SWAP8"
    },
    "10558": {
      "op": "POP"
    },
    "10559": {
      "op": "SWAP3"
    },
    "10560": {
      "op": "SWAP6"
    },
    "10561": {
      "op": "POP"
    },
    "10562": {
      "jump": "o",
      "op": "JUMP"
    },
    "10563": {
      "op": "JUMPDEST"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10566": {
      "op": "DUP1"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10569": {
      "op": "DUP4"
    },
    "10570": {
      "op": "DUP6"
    },
    "10571": {
      "op": "SUB"
    },
    "10572": {
      "op": "SLT"
    },
    "10573": {
      "op": "ISZERO"
    },
    "10574": {
      "op": "PUSH2",
      "value": "0x2956"
    },
    "10577": {
      "op": "JUMPI"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10580": {
      "op": "DUP1"
    },
    "10581": {
      "op": "REVERT"
    },
    "10582": {
      "op": "JUMPDEST"
    },
    "10583": {
      "op": "POP"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "op": "DUP1"
    },
    "10586": {
      "op": "CALLDATALOAD"
    },
    "10587": {
      "op": "SWAP3"
    },
    "10588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10590": {
      "op": "SWAP1"
    },
    "10591": {
      "op": "SWAP2"
    },
    "10592": {
      "op": "ADD"
    },
    "10593": {
      "op": "CALLDATALOAD"
    },
    "10594": {
      "op": "SWAP2"
    },
    "10595": {
      "op": "POP"
    },
    "10596": {
      "jump": "o",
      "op": "JUMP"
    },
    "10597": {
      "op": "JUMPDEST"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10604": {
      "op": "SHL"
    },
    "10605": {
      "op": "SUB"
    },
    "10606": {
      "op": "DUP2"
    },
    "10607": {
      "op": "AND"
    },
    "10608": {
      "op": "DUP2"
    },
    "10609": {
      "op": "EQ"
    },
    "10610": {
      "op": "PUSH2",
      "value": "0x207F"
    },
    "10613": {
      "op": "JUMPI"
    },
    "10614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10616": {
      "op": "DUP1"
    },
    "10617": {
      "op": "REVERT"
    },
    "10618": {
      "op": "JUMPDEST"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10623": {
      "op": "DUP3"
    },
    "10624": {
      "op": "DUP5"
    },
    "10625": {
      "op": "SUB"
    },
    "10626": {
      "op": "SLT"
    },
    "10627": {
      "op": "ISZERO"
    },
    "10628": {
      "op": "PUSH2",
      "value": "0x298C"
    },
    "10631": {
      "op": "JUMPI"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "DUP1"
    },
    "10635": {
      "op": "REVERT"
    },
    "10636": {
      "op": "JUMPDEST"
    },
    "10637": {
      "op": "DUP2"
    },
    "10638": {
      "op": "CALLDATALOAD"
    },
    "10639": {
      "op": "PUSH2",
      "value": "0x2997"
    },
    "10642": {
      "op": "DUP2"
    },
    "10643": {
      "op": "PUSH2",
      "value": "0x2965"
    },
    "10646": {
      "jump": "i",
      "op": "JUMP"
    },
    "10647": {
      "op": "JUMPDEST"
    },
    "10648": {
      "op": "SWAP4"
    },
    "10649": {
      "op": "SWAP3"
    },
    "10650": {
      "op": "POP"
    },
    "10651": {
      "op": "POP"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "jump": "o",
      "op": "JUMP"
    },
    "10654": {
      "op": "JUMPDEST"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10657": {
      "op": "DUP1"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10662": {
      "op": "DUP5"
    },
    "10663": {
      "op": "DUP7"
    },
    "10664": {
      "op": "SUB"
    },
    "10665": {
      "op": "SLT"
    },
    "10666": {
      "op": "ISZERO"
    },
    "10667": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "10670": {
      "op": "JUMPI"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10673": {
      "op": "DUP1"
    },
    "10674": {
      "op": "REVERT"
    },
    "10675": {
      "op": "JUMPDEST"
    },
    "10676": {
      "op": "DUP4"
    },
    "10677": {
      "op": "CALLDATALOAD"
    },
    "10678": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10687": {
      "op": "DUP1"
    },
    "10688": {
      "op": "DUP3"
    },
    "10689": {
      "op": "GT"
    },
    "10690": {
      "op": "ISZERO"
    },
    "10691": {
      "op": "PUSH2",
      "value": "0x29CB"
    },
    "10694": {
      "op": "JUMPI"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10697": {
      "op": "DUP1"
    },
    "10698": {
      "op": "REVERT"
    },
    "10699": {
      "op": "JUMPDEST"
    },
    "10700": {
      "op": "DUP2"
    },
    "10701": {
      "op": "DUP7"
    },
    "10702": {
      "op": "ADD"
    },
    "10703": {
      "op": "SWAP2"
    },
    "10704": {
      "op": "POP"
    },
    "10705": {
      "op": "DUP7"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10708": {
      "op": "DUP4"
    },
    "10709": {
      "op": "ADD"
    },
    "10710": {
      "op": "SLT"
    },
    "10711": {
      "op": "PUSH2",
      "value": "0x29DF"
    },
    "10714": {
      "op": "JUMPI"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10717": {
      "op": "DUP1"
    },
    "10718": {
      "op": "REVERT"
    },
    "10719": {
      "op": "JUMPDEST"
    },
    "10720": {
      "op": "DUP2"
    },
    "10721": {
      "op": "CALLDATALOAD"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10724": {
      "op": "DUP3"
    },
    "10725": {
      "op": "DUP3"
    },
    "10726": {
      "op": "GT"
    },
    "10727": {
      "op": "ISZERO"
    },
    "10728": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10731": {
      "op": "JUMPI"
    },
    "10732": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "10738": {
      "jump": "i",
      "op": "JUMP"
    },
    "10739": {
      "op": "JUMPDEST"
    },
    "10740": {
      "op": "PUSH2",
      "value": "0x2A05"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10745": {
      "op": "DUP4"
    },
    "10746": {
      "op": "ADD"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10749": {
      "op": "NOT"
    },
    "10750": {
      "op": "AND"
    },
    "10751": {
      "op": "DUP3"
    },
    "10752": {
      "op": "ADD"
    },
    "10753": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "10756": {
      "jump": "i",
      "op": "JUMP"
    },
    "10757": {
      "op": "JUMPDEST"
    },
    "10758": {
      "op": "SWAP3"
    },
    "10759": {
      "op": "POP"
    },
    "10760": {
      "op": "DUP2"
    },
    "10761": {
      "op": "DUP4"
    },
    "10762": {
      "op": "MSTORE"
    },
    "10763": {
      "op": "DUP9"
    },
    "10764": {
      "op": "DUP2"
    },
    "10765": {
      "op": "DUP4"
    },
    "10766": {
      "op": "DUP7"
    },
    "10767": {
      "op": "ADD"
    },
    "10768": {
      "op": "ADD"
    },
    "10769": {
      "op": "GT"
    },
    "10770": {
      "op": "ISZERO"
    },
    "10771": {
      "op": "PUSH2",
      "value": "0x2A1B"
    },
    "10774": {
      "op": "JUMPI"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10777": {
      "op": "DUP1"
    },
    "10778": {
      "op": "REVERT"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "DUP2"
    },
    "10781": {
      "op": "DUP2"
    },
    "10782": {
      "op": "DUP6"
    },
    "10783": {
      "op": "ADD"
    },
    "10784": {
      "op": "DUP3"
    },
    "10785": {
      "op": "DUP6"
    },
    "10786": {
      "op": "ADD"
    },
    "10787": {
      "op": "CALLDATACOPY"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10790": {
      "op": "DUP2"
    },
    "10791": {
      "op": "DUP4"
    },
    "10792": {
      "op": "DUP6"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "op": "ADD"
    },
    "10795": {
      "op": "MSTORE"
    },
    "10796": {
      "op": "DUP3"
    },
    "10797": {
      "op": "SWAP7"
    },
    "10798": {
      "op": "POP"
    },
    "10799": {
      "op": "DUP1"
    },
    "10800": {
      "op": "DUP9"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "op": "CALLDATALOAD"
    },
    "10803": {
      "op": "SWAP6"
    },
    "10804": {
      "op": "POP"
    },
    "10805": {
      "op": "POP"
    },
    "10806": {
      "op": "POP"
    },
    "10807": {
      "op": "POP"
    },
    "10808": {
      "op": "POP"
    },
    "10809": {
      "op": "PUSH2",
      "value": "0x2A44"
    },
    "10812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10814": {
      "op": "DUP6"
    },
    "10815": {
      "op": "ADD"
    },
    "10816": {
      "op": "PUSH2",
      "value": "0x287E"
    },
    "10819": {
      "jump": "i",
      "op": "JUMP"
    },
    "10820": {
      "op": "JUMPDEST"
    },
    "10821": {
      "op": "SWAP1"
    },
    "10822": {
      "op": "POP"
    },
    "10823": {
      "op": "SWAP3"
    },
    "10824": {
      "op": "POP"
    },
    "10825": {
      "op": "SWAP3"
    },
    "10826": {
      "op": "POP"
    },
    "10827": {
      "op": "SWAP3"
    },
    "10828": {
      "jump": "o",
      "op": "JUMP"
    },
    "10829": {
      "op": "JUMPDEST"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10832": {
      "op": "DUP1"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10835": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10837": {
      "op": "DUP5"
    },
    "10838": {
      "op": "DUP7"
    },
    "10839": {
      "op": "SUB"
    },
    "10840": {
      "op": "SLT"
    },
    "10841": {
      "op": "ISZERO"
    },
    "10842": {
      "op": "PUSH2",
      "value": "0x2A62"
    },
    "10845": {
      "op": "JUMPI"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10848": {
      "op": "DUP1"
    },
    "10849": {
      "op": "REVERT"
    },
    "10850": {
      "op": "JUMPDEST"
    },
    "10851": {
      "op": "POP"
    },
    "10852": {
      "op": "POP"
    },
    "10853": {
      "op": "DUP2"
    },
    "10854": {
      "op": "CALLDATALOAD"
    },
    "10855": {
      "op": "SWAP4"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10858": {
      "op": "DUP4"
    },
    "10859": {
      "op": "ADD"
    },
    "10860": {
      "op": "CALLDATALOAD"
    },
    "10861": {
      "op": "SWAP4"
    },
    "10862": {
      "op": "POP"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10865": {
      "op": "SWAP1"
    },
    "10866": {
      "op": "SWAP3"
    },
    "10867": {
      "op": "ADD"
    },
    "10868": {
      "op": "CALLDATALOAD"
    },
    "10869": {
      "op": "SWAP2"
    },
    "10870": {
      "op": "SWAP1"
    },
    "10871": {
      "op": "POP"
    },
    "10872": {
      "jump": "o",
      "op": "JUMP"
    },
    "10873": {
      "op": "JUMPDEST"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10876": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10879": {
      "op": "DUP1"
    },
    "10880": {
      "op": "DUP4"
    },
    "10881": {
      "op": "MSTORE"
    },
    "10882": {
      "op": "PUSH2",
      "value": "0x2A8D"
    },
    "10885": {
      "op": "DUP2"
    },
    "10886": {
      "op": "DUP5"
    },
    "10887": {
      "op": "ADD"
    },
    "10888": {
      "op": "DUP15"
    },
    "10889": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "10892": {
      "jump": "i",
      "op": "JUMP"
    },
    "10893": {
      "op": "JUMPDEST"
    },
    "10894": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10900": {
      "op": "SWAP13"
    },
    "10901": {
      "op": "DUP14"
    },
    "10902": {
      "op": "AND"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10905": {
      "op": "DUP6"
    },
    "10906": {
      "op": "ADD"
    },
    "10907": {
      "op": "MSTORE"
    },
    "10908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10910": {
      "op": "DUP5"
    },
    "10911": {
      "op": "ADD"
    },
    "10912": {
      "op": "SWAP12"
    },
    "10913": {
      "op": "SWAP1"
    },
    "10914": {
      "op": "SWAP12"
    },
    "10915": {
      "op": "MSTORE"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "op": "POP"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10920": {
      "op": "DUP2"
    },
    "10921": {
      "op": "ADD"
    },
    "10922": {
      "op": "SWAP8"
    },
    "10923": {
      "op": "SWAP1"
    },
    "10924": {
      "op": "SWAP8"
    },
    "10925": {
      "op": "MSTORE"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10928": {
      "op": "SWAP6"
    },
    "10929": {
      "op": "SWAP1"
    },
    "10930": {
      "op": "SWAP6"
    },
    "10931": {
      "op": "AND"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10934": {
      "op": "DUP8"
    },
    "10935": {
      "op": "ADD"
    },
    "10936": {
      "op": "MSTORE"
    },
    "10937": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "10941": {
      "op": "SWAP4"
    },
    "10942": {
      "op": "SWAP1"
    },
    "10943": {
      "op": "SWAP4"
    },
    "10944": {
      "op": "AND"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10947": {
      "op": "DUP7"
    },
    "10948": {
      "op": "ADD"
    },
    "10949": {
      "op": "MSTORE"
    },
    "10950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10954": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10956": {
      "op": "SHL"
    },
    "10957": {
      "op": "SUB"
    },
    "10958": {
      "op": "SWAP2"
    },
    "10959": {
      "op": "SWAP1"
    },
    "10960": {
      "op": "SWAP2"
    },
    "10961": {
      "op": "AND"
    },
    "10962": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10964": {
      "op": "DUP6"
    },
    "10965": {
      "op": "ADD"
    },
    "10966": {
      "op": "MSTORE"
    },
    "10967": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10970": {
      "op": "SWAP1"
    },
    "10971": {
      "op": "DUP2"
    },
    "10972": {
      "op": "AND"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10975": {
      "op": "DUP6"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "MSTORE"
    },
    "10978": {
      "op": "AND"
    },
    "10979": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10982": {
      "op": "DUP4"
    },
    "10983": {
      "op": "ADD"
    },
    "10984": {
      "op": "MSTORE"
    },
    "10985": {
      "op": "SWAP1"
    },
    "10986": {
      "op": "SWAP3"
    },
    "10987": {
      "op": "AND"
    },
    "10988": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10991": {
      "op": "SWAP1"
    },
    "10992": {
      "op": "SWAP3"
    },
    "10993": {
      "op": "ADD"
    },
    "10994": {
      "op": "SWAP2"
    },
    "10995": {
      "op": "SWAP1"
    },
    "10996": {
      "op": "SWAP2"
    },
    "10997": {
      "op": "MSTORE"
    },
    "10998": {
      "op": "SWAP2"
    },
    "10999": {
      "op": "SWAP1"
    },
    "11000": {
      "op": "POP"
    },
    "11001": {
      "jump": "o",
      "op": "JUMP"
    },
    "11002": {
      "op": "JUMPDEST"
    },
    "11003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11005": {
      "op": "DUP2"
    },
    "11006": {
      "op": "MSTORE"
    },
    "11007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11009": {
      "op": "DUP3"
    },
    "11010": {
      "op": "MLOAD"
    },
    "11011": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11014": {
      "op": "DUP1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11017": {
      "op": "DUP6"
    },
    "11018": {
      "op": "ADD"
    },
    "11019": {
      "op": "MSTORE"
    },
    "11020": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "11023": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "11026": {
      "op": "DUP6"
    },
    "11027": {
      "op": "ADD"
    },
    "11028": {
      "op": "DUP4"
    },
    "11029": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "11032": {
      "jump": "i",
      "op": "JUMP"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "SWAP2"
    },
    "11035": {
      "op": "POP"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11038": {
      "op": "DUP6"
    },
    "11039": {
      "op": "ADD"
    },
    "11040": {
      "op": "MLOAD"
    },
    "11041": {
      "op": "PUSH2",
      "value": "0x2B33"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11046": {
      "op": "DUP7"
    },
    "11047": {
      "op": "ADD"
    },
    "11048": {
      "op": "DUP3"
    },
    "11049": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11055": {
      "op": "AND"
    },
    "11056": {
      "op": "SWAP1"
    },
    "11057": {
      "op": "MSTORE"
    },
    "11058": {
      "op": "JUMP"
    },
    "11059": {
      "op": "JUMPDEST"
    },
    "11060": {
      "op": "POP"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11063": {
      "op": "DUP6"
    },
    "11064": {
      "op": "ADD"
    },
    "11065": {
      "op": "MLOAD"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11068": {
      "op": "DUP6"
    },
    "11069": {
      "op": "ADD"
    },
    "11070": {
      "op": "MSTORE"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11073": {
      "op": "DUP6"
    },
    "11074": {
      "op": "ADD"
    },
    "11075": {
      "op": "MLOAD"
    },
    "11076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11078": {
      "op": "DUP6"
    },
    "11079": {
      "op": "ADD"
    },
    "11080": {
      "op": "MSTORE"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11083": {
      "op": "DUP6"
    },
    "11084": {
      "op": "ADD"
    },
    "11085": {
      "op": "MLOAD"
    },
    "11086": {
      "op": "PUSH2",
      "value": "0x2B5C"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11091": {
      "op": "DUP7"
    },
    "11092": {
      "op": "ADD"
    },
    "11093": {
      "op": "DUP3"
    },
    "11094": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11096": {
      "op": "AND"
    },
    "11097": {
      "op": "SWAP1"
    },
    "11098": {
      "op": "MSTORE"
    },
    "11099": {
      "op": "JUMP"
    },
    "11100": {
      "op": "JUMPDEST"
    },
    "11101": {
      "op": "POP"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11104": {
      "op": "DUP6"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "MLOAD"
    },
    "11107": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11111": {
      "op": "DUP2"
    },
    "11112": {
      "op": "AND"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11115": {
      "op": "DUP7"
    },
    "11116": {
      "op": "ADD"
    },
    "11117": {
      "op": "MSTORE"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11121": {
      "op": "DUP6"
    },
    "11122": {
      "op": "ADD"
    },
    "11123": {
      "op": "MLOAD"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11130": {
      "op": "SHL"
    },
    "11131": {
      "op": "SUB"
    },
    "11132": {
      "op": "DUP2"
    },
    "11133": {
      "op": "AND"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11136": {
      "op": "DUP7"
    },
    "11137": {
      "op": "ADD"
    },
    "11138": {
      "op": "MSTORE"
    },
    "11139": {
      "op": "POP"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11142": {
      "op": "DUP6"
    },
    "11143": {
      "op": "ADD"
    },
    "11144": {
      "op": "MLOAD"
    },
    "11145": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11148": {
      "op": "PUSH2",
      "value": "0x2B9A"
    },
    "11151": {
      "op": "DUP2"
    },
    "11152": {
      "op": "DUP8"
    },
    "11153": {
      "op": "ADD"
    },
    "11154": {
      "op": "DUP4"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11158": {
      "op": "AND"
    },
    "11159": {
      "op": "SWAP1"
    },
    "11160": {
      "op": "MSTORE"
    },
    "11161": {
      "op": "JUMP"
    },
    "11162": {
      "op": "JUMPDEST"
    },
    "11163": {
      "op": "DUP7"
    },
    "11164": {
      "op": "ADD"
    },
    "11165": {
      "op": "MLOAD"
    },
    "11166": {
      "op": "SWAP1"
    },
    "11167": {
      "op": "POP"
    },
    "11168": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11171": {
      "op": "PUSH2",
      "value": "0x2BB1"
    },
    "11174": {
      "op": "DUP7"
    },
    "11175": {
      "op": "DUP3"
    },
    "11176": {
      "op": "ADD"
    },
    "11177": {
      "op": "DUP4"
    },
    "11178": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11181": {
      "op": "AND"
    },
    "11182": {
      "op": "SWAP1"
    },
    "11183": {
      "op": "MSTORE"
    },
    "11184": {
      "op": "JUMP"
    },
    "11185": {
      "op": "JUMPDEST"
    },
    "11186": {
      "op": "SWAP1"
    },
    "11187": {
      "op": "SWAP6"
    },
    "11188": {
      "op": "ADD"
    },
    "11189": {
      "op": "MLOAD"
    },
    "11190": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11196": {
      "op": "AND"
    },
    "11197": {
      "op": "SWAP4"
    },
    "11198": {
      "op": "ADD"
    },
    "11199": {
      "op": "SWAP3"
    },
    "11200": {
      "op": "SWAP1"
    },
    "11201": {
      "op": "SWAP3"
    },
    "11202": {
      "op": "MSTORE"
    },
    "11203": {
      "op": "POP"
    },
    "11204": {
      "op": "SWAP2"
    },
    "11205": {
      "op": "SWAP1"
    },
    "11206": {
      "op": "POP"
    },
    "11207": {
      "jump": "o",
      "op": "JUMP"
    },
    "11208": {
      "op": "JUMPDEST"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11211": {
      "op": "DUP1"
    },
    "11212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11214": {
      "op": "DUP1"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11217": {
      "op": "DUP1"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11222": {
      "op": "DUP9"
    },
    "11223": {
      "op": "DUP11"
    },
    "11224": {
      "op": "SUB"
    },
    "11225": {
      "op": "SLT"
    },
    "11226": {
      "op": "ISZERO"
    },
    "11227": {
      "op": "PUSH2",
      "value": "0x2BE3"
    },
    "11230": {
      "op": "JUMPI"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11233": {
      "op": "DUP1"
    },
    "11234": {
      "op": "REVERT"
    },
    "11235": {
      "op": "JUMPDEST"
    },
    "11236": {
      "op": "DUP8"
    },
    "11237": {
      "op": "CALLDATALOAD"
    },
    "11238": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11247": {
      "op": "DUP2"
    },
    "11248": {
      "op": "GT"
    },
    "11249": {
      "op": "ISZERO"
    },
    "11250": {
      "op": "PUSH2",
      "value": "0x2BFA"
    },
    "11253": {
      "op": "JUMPI"
    },
    "11254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11256": {
      "op": "DUP1"
    },
    "11257": {
      "op": "REVERT"
    },
    "11258": {
      "op": "JUMPDEST"
    },
    "11259": {
      "op": "PUSH2",
      "value": "0x2C06"
    },
    "11262": {
      "op": "DUP11"
    },
    "11263": {
      "op": "DUP3"
    },
    "11264": {
      "op": "DUP12"
    },
    "11265": {
      "op": "ADD"
    },
    "11266": {
      "op": "PUSH2",
      "value": "0x281D"
    },
    "11269": {
      "jump": "i",
      "op": "JUMP"
    },
    "11270": {
      "op": "JUMPDEST"
    },
    "11271": {
      "op": "SWAP1"
    },
    "11272": {
      "op": "SWAP9"
    },
    "11273": {
      "op": "POP"
    },
    "11274": {
      "op": "SWAP7"
    },
    "11275": {
      "op": "POP"
    },
    "11276": {
      "op": "PUSH2",
      "value": "0x28FD"
    },
    "11279": {
      "op": "SWAP1"
    },
    "11280": {
      "op": "POP"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11283": {
      "op": "DUP10"
    },
    "11284": {
      "op": "ADD"
    },
    "11285": {
      "op": "PUSH2",
      "value": "0x2893"
    },
    "11288": {
      "jump": "i",
      "op": "JUMP"
    },
    "11289": {
      "op": "JUMPDEST"
    },
    "11290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11292": {
      "op": "DUP1"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11297": {
      "op": "DUP5"
    },
    "11298": {
      "op": "DUP7"
    },
    "11299": {
      "op": "SUB"
    },
    "11300": {
      "op": "SLT"
    },
    "11301": {
      "op": "ISZERO"
    },
    "11302": {
      "op": "PUSH2",
      "value": "0x2C2E"
    },
    "11305": {
      "op": "JUMPI"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11308": {
      "op": "DUP1"
    },
    "11309": {
      "op": "REVERT"
    },
    "11310": {
      "op": "JUMPDEST"
    },
    "11311": {
      "op": "DUP4"
    },
    "11312": {
      "op": "CALLDATALOAD"
    },
    "11313": {
      "op": "SWAP3"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11317": {
      "op": "DUP5"
    },
    "11318": {
      "op": "ADD"
    },
    "11319": {
      "op": "CALLDATALOAD"
    },
    "11320": {
      "op": "SWAP2"
    },
    "11321": {
      "op": "POP"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11324": {
      "op": "DUP5"
    },
    "11325": {
      "op": "ADD"
    },
    "11326": {
      "op": "CALLDATALOAD"
    },
    "11327": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11336": {
      "op": "DUP2"
    },
    "11337": {
      "op": "GT"
    },
    "11338": {
      "op": "ISZERO"
    },
    "11339": {
      "op": "PUSH2",
      "value": "0x2C53"
    },
    "11342": {
      "op": "JUMPI"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11345": {
      "op": "DUP1"
    },
    "11346": {
      "op": "REVERT"
    },
    "11347": {
      "op": "JUMPDEST"
    },
    "11348": {
      "op": "PUSH2",
      "value": "0x2C5F"
    },
    "11351": {
      "op": "DUP7"
    },
    "11352": {
      "op": "DUP3"
    },
    "11353": {
      "op": "DUP8"
    },
    "11354": {
      "op": "ADD"
    },
    "11355": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "11358": {
      "jump": "i",
      "op": "JUMP"
    },
    "11359": {
      "op": "JUMPDEST"
    },
    "11360": {
      "op": "SWAP2"
    },
    "11361": {
      "op": "POP"
    },
    "11362": {
      "op": "POP"
    },
    "11363": {
      "op": "SWAP3"
    },
    "11364": {
      "op": "POP"
    },
    "11365": {
      "op": "SWAP3"
    },
    "11366": {
      "op": "POP"
    },
    "11367": {
      "op": "SWAP3"
    },
    "11368": {
      "jump": "o",
      "op": "JUMP"
    },
    "11369": {
      "op": "JUMPDEST"
    },
    "11370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11372": {
      "op": "DUP1"
    },
    "11373": {
      "op": "DUP3"
    },
    "11374": {
      "op": "MSTORE"
    },
    "11375": {
      "op": "DUP3"
    },
    "11376": {
      "op": "MLOAD"
    },
    "11377": {
      "op": "DUP3"
    },
    "11378": {
      "op": "DUP3"
    },
    "11379": {
      "op": "ADD"
    },
    "11380": {
      "op": "DUP2"
    },
    "11381": {
      "op": "SWAP1"
    },
    "11382": {
      "op": "MSTORE"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11385": {
      "op": "SWAP2"
    },
    "11386": {
      "op": "SWAP1"
    },
    "11387": {
      "op": "DUP5"
    },
    "11388": {
      "op": "DUP3"
    },
    "11389": {
      "op": "ADD"
    },
    "11390": {
      "op": "SWAP1"
    },
    "11391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11393": {
      "op": "DUP6"
    },
    "11394": {
      "op": "ADD"
    },
    "11395": {
      "op": "SWAP1"
    },
    "11396": {
      "op": "DUP5"
    },
    "11397": {
      "op": "JUMPDEST"
    },
    "11398": {
      "op": "DUP2"
    },
    "11399": {
      "op": "DUP2"
    },
    "11400": {
      "op": "LT"
    },
    "11401": {
      "op": "ISZERO"
    },
    "11402": {
      "op": "PUSH2",
      "value": "0x2CA5"
    },
    "11405": {
      "op": "JUMPI"
    },
    "11406": {
      "op": "DUP4"
    },
    "11407": {
      "op": "MLOAD"
    },
    "11408": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11411": {
      "op": "AND"
    },
    "11412": {
      "op": "DUP4"
    },
    "11413": {
      "op": "MSTORE"
    },
    "11414": {
      "op": "SWAP3"
    },
    "11415": {
      "op": "DUP5"
    },
    "11416": {
      "op": "ADD"
    },
    "11417": {
      "op": "SWAP3"
    },
    "11418": {
      "op": "SWAP2"
    },
    "11419": {
      "op": "DUP5"
    },
    "11420": {
      "op": "ADD"
    },
    "11421": {
      "op": "SWAP2"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "ADD"
    },
    "11425": {
      "op": "PUSH2",
      "value": "0x2C85"
    },
    "11428": {
      "op": "JUMP"
    },
    "11429": {
      "op": "JUMPDEST"
    },
    "11430": {
      "op": "POP"
    },
    "11431": {
      "op": "SWAP1"
    },
    "11432": {
      "op": "SWAP7"
    },
    "11433": {
      "op": "SWAP6"
    },
    "11434": {
      "op": "POP"
    },
    "11435": {
      "op": "POP"
    },
    "11436": {
      "op": "POP"
    },
    "11437": {
      "op": "POP"
    },
    "11438": {
      "op": "POP"
    },
    "11439": {
      "op": "POP"
    },
    "11440": {
      "jump": "o",
      "op": "JUMP"
    },
    "11441": {
      "op": "JUMPDEST"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11444": {
      "op": "DUP2"
    },
    "11445": {
      "op": "DUP2"
    },
    "11446": {
      "op": "SHR"
    },
    "11447": {
      "op": "SWAP1"
    },
    "11448": {
      "op": "DUP3"
    },
    "11449": {
      "op": "AND"
    },
    "11450": {
      "op": "DUP1"
    },
    "11451": {
      "op": "PUSH2",
      "value": "0x2CC5"
    },
    "11454": {
      "op": "JUMPI"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11457": {
      "op": "DUP3"
    },
    "11458": {
      "op": "AND"
    },
    "11459": {
      "op": "SWAP2"
    },
    "11460": {
      "op": "POP"
    },
    "11461": {
      "op": "JUMPDEST"
    },
    "11462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11464": {
      "op": "DUP3"
    },
    "11465": {
      "op": "LT"
    },
    "11466": {
      "op": "DUP2"
    },
    "11467": {
      "op": "SUB"
    },
    "11468": {
      "op": "PUSH2",
      "value": "0x2CE5"
    },
    "11471": {
      "op": "JUMPI"
    },
    "11472": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11479": {
      "op": "SHL"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11482": {
      "op": "MSTORE"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11487": {
      "op": "MSTORE"
    },
    "11488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11492": {
      "op": "REVERT"
    },
    "11493": {
      "op": "JUMPDEST"
    },
    "11494": {
      "op": "POP"
    },
    "11495": {
      "op": "SWAP2"
    },
    "11496": {
      "op": "SWAP1"
    },
    "11497": {
      "op": "POP"
    },
    "11498": {
      "jump": "o",
      "op": "JUMP"
    },
    "11499": {
      "op": "JUMPDEST"
    },
    "11500": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11507": {
      "op": "SHL"
    },
    "11508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11510": {
      "op": "MSTORE"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11515": {
      "op": "MSTORE"
    },
    "11516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11520": {
      "op": "REVERT"
    },
    "11521": {
      "op": "JUMPDEST"
    },
    "11522": {
      "op": "DUP2"
    },
    "11523": {
      "op": "MLOAD"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11526": {
      "op": "SWAP1"
    },
    "11527": {
      "op": "DUP3"
    },
    "11528": {
      "op": "SWAP1"
    },
    "11529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11531": {
      "op": "DUP1"
    },
    "11532": {
      "op": "DUP7"
    },
    "11533": {
      "op": "ADD"
    },
    "11534": {
      "op": "DUP5"
    },
    "11535": {
      "op": "JUMPDEST"
    },
    "11536": {
      "op": "DUP4"
    },
    "11537": {
      "op": "DUP2"
    },
    "11538": {
      "op": "LT"
    },
    "11539": {
      "op": "ISZERO"
    },
    "11540": {
      "op": "PUSH2",
      "value": "0x2D2B"
    },
    "11543": {
      "op": "JUMPI"
    },
    "11544": {
      "op": "DUP2"
    },
    "11545": {
      "op": "MLOAD"
    },
    "11546": {
      "op": "DUP6"
    },
    "11547": {
      "op": "MSTORE"
    },
    "11548": {
      "op": "SWAP4"
    },
    "11549": {
      "op": "DUP3"
    },
    "11550": {
      "op": "ADD"
    },
    "11551": {
      "op": "SWAP4"
    },
    "11552": {
      "op": "SWAP1"
    },
    "11553": {
      "op": "DUP3"
    },
    "11554": {
      "op": "ADD"
    },
    "11555": {
      "op": "SWAP1"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11558": {
      "op": "ADD"
    },
    "11559": {
      "op": "PUSH2",
      "value": "0x2D0F"
    },
    "11562": {
      "op": "JUMP"
    },
    "11563": {
      "op": "JUMPDEST"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "SWAP3"
    },
    "11566": {
      "op": "SWAP7"
    },
    "11567": {
      "op": "SWAP6"
    },
    "11568": {
      "op": "POP"
    },
    "11569": {
      "op": "POP"
    },
    "11570": {
      "op": "POP"
    },
    "11571": {
      "op": "POP"
    },
    "11572": {
      "op": "POP"
    },
    "11573": {
      "op": "POP"
    },
    "11574": {
      "jump": "o",
      "op": "JUMP"
    },
    "11575": {
      "op": "JUMPDEST"
    },
    "11576": {
      "op": "DUP5"
    },
    "11577": {
      "op": "DUP2"
    },
    "11578": {
      "op": "MSTORE"
    },
    "11579": {
      "op": "DUP4"
    },
    "11580": {
      "op": "ISZERO"
    },
    "11581": {
      "op": "ISZERO"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11584": {
      "op": "DUP3"
    },
    "11585": {
      "op": "ADD"
    },
    "11586": {
      "op": "MSTORE"
    },
    "11587": {
      "op": "DUP3"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11590": {
      "op": "DUP3"
    },
    "11591": {
      "op": "ADD"
    },
    "11592": {
      "op": "MSTORE"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11597": {
      "op": "DUP3"
    },
    "11598": {
      "op": "ADD"
    },
    "11599": {
      "op": "MSTORE"
    },
    "11600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11602": {
      "op": "PUSH2",
      "value": "0x2D5E"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11607": {
      "op": "DUP4"
    },
    "11608": {
      "op": "ADD"
    },
    "11609": {
      "op": "DUP5"
    },
    "11610": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "11613": {
      "jump": "i",
      "op": "JUMP"
    },
    "11614": {
      "op": "JUMPDEST"
    },
    "11615": {
      "op": "SWAP7"
    },
    "11616": {
      "op": "SWAP6"
    },
    "11617": {
      "op": "POP"
    },
    "11618": {
      "op": "POP"
    },
    "11619": {
      "op": "POP"
    },
    "11620": {
      "op": "POP"
    },
    "11621": {
      "op": "POP"
    },
    "11622": {
      "op": "POP"
    },
    "11623": {
      "jump": "o",
      "op": "JUMP"
    },
    "11624": {
      "op": "JUMPDEST"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11627": {
      "op": "DUP1"
    },
    "11628": {
      "op": "DUP3"
    },
    "11629": {
      "op": "MSTORE"
    },
    "11630": {
      "op": "DUP2"
    },
    "11631": {
      "op": "DUP2"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "op": "MSTORE"
    },
    "11634": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11669": {
      "op": "DUP3"
    },
    "11670": {
      "op": "ADD"
    },
    "11671": {
      "op": "MSTORE"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11674": {
      "op": "ADD"
    },
    "11675": {
      "op": "SWAP1"
    },
    "11676": {
      "jump": "o",
      "op": "JUMP"
    },
    "11677": {
      "op": "JUMPDEST"
    },
    "11678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11680": {
      "op": "DUP2"
    },
    "11681": {
      "op": "MSTORE"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11684": {
      "op": "PUSH2",
      "value": "0x2997"
    },
    "11687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11689": {
      "op": "DUP4"
    },
    "11690": {
      "op": "ADD"
    },
    "11691": {
      "op": "DUP5"
    },
    "11692": {
      "op": "PUSH2",
      "value": "0x259E"
    },
    "11695": {
      "jump": "i",
      "op": "JUMP"
    },
    "11696": {
      "op": "JUMPDEST"
    },
    "11697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11701": {
      "op": "DUP1"
    },
    "11702": {
      "op": "DUP4"
    },
    "11703": {
      "op": "MSTORE"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11706": {
      "op": "DUP5"
    },
    "11707": {
      "op": "SLOAD"
    },
    "11708": {
      "op": "PUSH2",
      "value": "0x2DC4"
    },
    "11711": {
      "op": "DUP2"
    },
    "11712": {
      "op": "PUSH2",
      "value": "0x2CB1"
    },
    "11715": {
      "jump": "i",
      "op": "JUMP"
    },
    "11716": {
      "op": "JUMPDEST"
    },
    "11717": {
      "op": "DUP1"
    },
    "11718": {
      "op": "DUP5"
    },
    "11719": {
      "op": "DUP8"
    },
    "11720": {
      "op": "ADD"
    },
    "11721": {
      "op": "MSTORE"
    },
    "11722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11726": {
      "op": "DUP1"
    },
    "11727": {
      "op": "DUP5"
    },
    "11728": {
      "op": "AND"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11731": {
      "op": "DUP2"
    },
    "11732": {
      "op": "EQ"
    },
    "11733": {
      "op": "PUSH2",
      "value": "0x2DE5"
    },
    "11736": {
      "op": "JUMPI"
    },
    "11737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11739": {
      "op": "DUP2"
    },
    "11740": {
      "op": "EQ"
    },
    "11741": {
      "op": "PUSH2",
      "value": "0x2DFF"
    },
    "11744": {
      "op": "JUMPI"
    },
    "11745": {
      "op": "PUSH2",
      "value": "0x2E2D"
    },
    "11748": {
      "op": "JUMP"
    },
    "11749": {
      "op": "JUMPDEST"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11752": {
      "op": "NOT"
    },
    "11753": {
      "op": "DUP6"
    },
    "11754": {
      "op": "AND"
    },
    "11755": {
      "op": "DUP10"
    },
    "11756": {
      "op": "DUP5"
    },
    "11757": {
      "op": "ADD"
    },
    "11758": {
      "op": "MSTORE"
    },
    "11759": {
      "op": "DUP4"
    },
    "11760": {
      "op": "ISZERO"
    },
    "11761": {
      "op": "ISZERO"
    },
    "11762": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11764": {
      "op": "SHL"
    },
    "11765": {
      "op": "DUP10"
    },
    "11766": {
      "op": "ADD"
    },
    "11767": {
      "op": "DUP4"
    },
    "11768": {
      "op": "ADD"
    },
    "11769": {
      "op": "SWAP6"
    },
    "11770": {
      "op": "POP"
    },
    "11771": {
      "op": "PUSH2",
      "value": "0x2E2D"
    },
    "11774": {
      "op": "JUMP"
    },
    "11775": {
      "op": "JUMPDEST"
    },
    "11776": {
      "op": "DUP10"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11779": {
      "op": "MSTORE"
    },
    "11780": {
      "op": "DUP7"
    },
    "11781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11783": {
      "op": "KECCAK256"
    },
    "11784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11786": {
      "op": "JUMPDEST"
    },
    "11787": {
      "op": "DUP6"
    },
    "11788": {
      "op": "DUP2"
    },
    "11789": {
      "op": "LT"
    },
    "11790": {
      "op": "ISZERO"
    },
    "11791": {
      "op": "PUSH2",
      "value": "0x2E25"
    },
    "11794": {
      "op": "JUMPI"
    },
    "11795": {
      "op": "DUP2"
    },
    "11796": {
      "op": "SLOAD"
    },
    "11797": {
      "op": "DUP12"
    },
    "11798": {
      "op": "DUP3"
    },
    "11799": {
      "op": "ADD"
    },
    "11800": {
      "op": "DUP7"
    },
    "11801": {
      "op": "ADD"
    },
    "11802": {
      "op": "MSTORE"
    },
    "11803": {
      "op": "SWAP1"
    },
    "11804": {
      "op": "DUP4"
    },
    "11805": {
      "op": "ADD"
    },
    "11806": {
      "op": "SWAP1"
    },
    "11807": {
      "op": "DUP9"
    },
    "11808": {
      "op": "ADD"
    },
    "11809": {
      "op": "PUSH2",
      "value": "0x2E0A"
    },
    "11812": {
      "op": "JUMP"
    },
    "11813": {
      "op": "JUMPDEST"
    },
    "11814": {
      "op": "DUP11"
    },
    "11815": {
      "op": "ADD"
    },
    "11816": {
      "op": "DUP5"
    },
    "11817": {
      "op": "ADD"
    },
    "11818": {
      "op": "SWAP7"
    },
    "11819": {
      "op": "POP"
    },
    "11820": {
      "op": "POP"
    },
    "11821": {
      "op": "JUMPDEST"
    },
    "11822": {
      "op": "POP"
    },
    "11823": {
      "op": "SWAP4"
    },
    "11824": {
      "op": "SWAP9"
    },
    "11825": {
      "op": "SWAP8"
    },
    "11826": {
      "op": "POP"
    },
    "11827": {
      "op": "POP"
    },
    "11828": {
      "op": "POP"
    },
    "11829": {
      "op": "POP"
    },
    "11830": {
      "op": "POP"
    },
    "11831": {
      "op": "POP"
    },
    "11832": {
      "op": "POP"
    },
    "11833": {
      "op": "POP"
    },
    "11834": {
      "jump": "o",
      "op": "JUMP"
    },
    "11835": {
      "op": "JUMPDEST"
    },
    "11836": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11838": {
      "op": "DUP3"
    },
    "11839": {
      "op": "GT"
    },
    "11840": {
      "op": "ISZERO"
    },
    "11841": {
      "op": "PUSH2",
      "value": "0x2E85"
    },
    "11844": {
      "op": "JUMPI"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11847": {
      "op": "DUP2"
    },
    "11848": {
      "op": "DUP2"
    },
    "11849": {
      "op": "MSTORE"
    },
    "11850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11852": {
      "op": "DUP2"
    },
    "11853": {
      "op": "KECCAK256"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11856": {
      "op": "DUP6"
    },
    "11857": {
      "op": "ADD"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11860": {
      "op": "SHR"
    },
    "11861": {
      "op": "DUP2"
    },
    "11862": {
      "op": "ADD"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11865": {
      "op": "DUP7"
    },
    "11866": {
      "op": "LT"
    },
    "11867": {
      "op": "ISZERO"
    },
    "11868": {
      "op": "PUSH2",
      "value": "0x2E62"
    },
    "11871": {
      "op": "JUMPI"
    },
    "11872": {
      "op": "POP"
    },
    "11873": {
      "op": "DUP1"
    },
    "11874": {
      "op": "JUMPDEST"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11877": {
      "op": "DUP6"
    },
    "11878": {
      "op": "ADD"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11881": {
      "op": "SHR"
    },
    "11882": {
      "op": "DUP3"
    },
    "11883": {
      "op": "ADD"
    },
    "11884": {
      "op": "SWAP2"
    },
    "11885": {
      "op": "POP"
    },
    "11886": {
      "op": "JUMPDEST"
    },
    "11887": {
      "op": "DUP2"
    },
    "11888": {
      "op": "DUP2"
    },
    "11889": {
      "op": "LT"
    },
    "11890": {
      "op": "ISZERO"
    },
    "11891": {
      "op": "PUSH2",
      "value": "0x2E81"
    },
    "11894": {
      "op": "JUMPI"
    },
    "11895": {
      "op": "DUP3"
    },
    "11896": {
      "op": "DUP2"
    },
    "11897": {
      "op": "SSTORE"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11900": {
      "op": "ADD"
    },
    "11901": {
      "op": "PUSH2",
      "value": "0x2E6E"
    },
    "11904": {
      "op": "JUMP"
    },
    "11905": {
      "op": "JUMPDEST"
    },
    "11906": {
      "op": "POP"
    },
    "11907": {
      "op": "POP"
    },
    "11908": {
      "op": "POP"
    },
    "11909": {
      "op": "JUMPDEST"
    },
    "11910": {
      "op": "POP"
    },
    "11911": {
      "op": "POP"
    },
    "11912": {
      "op": "POP"
    },
    "11913": {
      "jump": "o",
      "op": "JUMP"
    },
    "11914": {
      "op": "JUMPDEST"
    },
    "11915": {
      "op": "DUP2"
    },
    "11916": {
      "op": "MLOAD"
    },
    "11917": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11926": {
      "op": "DUP2"
    },
    "11927": {
      "op": "GT"
    },
    "11928": {
      "op": "ISZERO"
    },
    "11929": {
      "op": "PUSH2",
      "value": "0x2EA4"
    },
    "11932": {
      "op": "JUMPI"
    },
    "11933": {
      "op": "PUSH2",
      "value": "0x2EA4"
    },
    "11936": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "11939": {
      "jump": "i",
      "op": "JUMP"
    },
    "11940": {
      "op": "JUMPDEST"
    },
    "11941": {
      "op": "PUSH2",
      "value": "0x2EB8"
    },
    "11944": {
      "op": "DUP2"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EB2"
    },
    "11948": {
      "op": "DUP5"
    },
    "11949": {
      "op": "SLOAD"
    },
    "11950": {
      "op": "PUSH2",
      "value": "0x2CB1"
    },
    "11953": {
      "jump": "i",
      "op": "JUMP"
    },
    "11954": {
      "op": "JUMPDEST"
    },
    "11955": {
      "op": "DUP5"
    },
    "11956": {
      "op": "PUSH2",
      "value": "0x2E3B"
    },
    "11959": {
      "jump": "i",
      "op": "JUMP"
    },
    "11960": {
      "op": "JUMPDEST"
    },
    "11961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11963": {
      "op": "DUP1"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11966": {
      "op": "DUP4"
    },
    "11967": {
      "op": "GT"
    },
    "11968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11970": {
      "op": "DUP2"
    },
    "11971": {
      "op": "EQ"
    },
    "11972": {
      "op": "PUSH2",
      "value": "0x2EED"
    },
    "11975": {
      "op": "JUMPI"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11978": {
      "op": "DUP5"
    },
    "11979": {
      "op": "ISZERO"
    },
    "11980": {
      "op": "PUSH2",
      "value": "0x2ED5"
    },
    "11983": {
      "op": "JUMPI"
    },
    "11984": {
      "op": "POP"
    },
    "11985": {
      "op": "DUP6"
    },
    "11986": {
      "op": "DUP4"
    },
    "11987": {
      "op": "ADD"
    },
    "11988": {
      "op": "MLOAD"
    },
    "11989": {
      "op": "JUMPDEST"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11992": {
      "op": "NOT"
    },
    "11993": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11995": {
      "op": "DUP7"
    },
    "11996": {
      "op": "SWAP1"
    },
    "11997": {
      "op": "SHL"
    },
    "11998": {
      "op": "SHR"
    },
    "11999": {
      "op": "NOT"
    },
    "12000": {
      "op": "AND"
    },
    "12001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12003": {
      "op": "DUP6"
    },
    "12004": {
      "op": "SWAP1"
    },
    "12005": {
      "op": "SHL"
    },
    "12006": {
      "op": "OR"
    },
    "12007": {
      "op": "DUP6"
    },
    "12008": {
      "op": "SSTORE"
    },
    "12009": {
      "op": "PUSH2",
      "value": "0x2E81"
    },
    "12012": {
      "op": "JUMP"
    },
    "12013": {
      "op": "JUMPDEST"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12016": {
      "op": "DUP6"
    },
    "12017": {
      "op": "DUP2"
    },
    "12018": {
      "op": "MSTORE"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12021": {
      "op": "DUP2"
    },
    "12022": {
      "op": "KECCAK256"
    },
    "12023": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12025": {
      "op": "NOT"
    },
    "12026": {
      "op": "DUP7"
    },
    "12027": {
      "op": "AND"
    },
    "12028": {
      "op": "SWAP2"
    },
    "12029": {
      "op": "JUMPDEST"
    },
    "12030": {
      "op": "DUP3"
    },
    "12031": {
      "op": "DUP2"
    },
    "12032": {
      "op": "LT"
    },
    "12033": {
      "op": "ISZERO"
    },
    "12034": {
      "op": "PUSH2",
      "value": "0x2F1C"
    },
    "12037": {
      "op": "JUMPI"
    },
    "12038": {
      "op": "DUP9"
    },
    "12039": {
      "op": "DUP7"
    },
    "12040": {
      "op": "ADD"
    },
    "12041": {
      "op": "MLOAD"
    },
    "12042": {
      "op": "DUP3"
    },
    "12043": {
      "op": "SSTORE"
    },
    "12044": {
      "op": "SWAP5"
    },
    "12045": {
      "op": "DUP5"
    },
    "12046": {
      "op": "ADD"
    },
    "12047": {
      "op": "SWAP5"
    },
    "12048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12050": {
      "op": "SWAP1"
    },
    "12051": {
      "op": "SWAP2"
    },
    "12052": {
      "op": "ADD"
    },
    "12053": {
      "op": "SWAP1"
    },
    "12054": {
      "op": "DUP5"
    },
    "12055": {
      "op": "ADD"
    },
    "12056": {
      "op": "PUSH2",
      "value": "0x2EFD"
    },
    "12059": {
      "op": "JUMP"
    },
    "12060": {
      "op": "JUMPDEST"
    },
    "12061": {
      "op": "POP"
    },
    "12062": {
      "op": "DUP6"
    },
    "12063": {
      "op": "DUP3"
    },
    "12064": {
      "op": "LT"
    },
    "12065": {
      "op": "ISZERO"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2F3A"
    },
    "12069": {
      "op": "JUMPI"
    },
    "12070": {
      "op": "DUP8"
    },
    "12071": {
      "op": "DUP6"
    },
    "12072": {
      "op": "ADD"
    },
    "12073": {
      "op": "MLOAD"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12076": {
      "op": "NOT"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12079": {
      "op": "DUP9"
    },
    "12080": {
      "op": "SWAP1"
    },
    "12081": {
      "op": "SHL"
    },
    "12082": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12084": {
      "op": "AND"
    },
    "12085": {
      "op": "SHR"
    },
    "12086": {
      "op": "NOT"
    },
    "12087": {
      "op": "AND"
    },
    "12088": {
      "op": "DUP2"
    },
    "12089": {
      "op": "SSTORE"
    },
    "12090": {
      "op": "JUMPDEST"
    },
    "12091": {
      "op": "POP"
    },
    "12092": {
      "op": "POP"
    },
    "12093": {
      "op": "POP"
    },
    "12094": {
      "op": "POP"
    },
    "12095": {
      "op": "POP"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12098": {
      "op": "SWAP1"
    },
    "12099": {
      "op": "DUP2"
    },
    "12100": {
      "op": "SHL"
    },
    "12101": {
      "op": "ADD"
    },
    "12102": {
      "op": "SWAP1"
    },
    "12103": {
      "op": "SSTORE"
    },
    "12104": {
      "op": "POP"
    },
    "12105": {
      "jump": "o",
      "op": "JUMP"
    },
    "12106": {
      "op": "JUMPDEST"
    },
    "12107": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12114": {
      "op": "SHL"
    },
    "12115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12117": {
      "op": "MSTORE"
    },
    "12118": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12120": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12122": {
      "op": "MSTORE"
    },
    "12123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12127": {
      "op": "REVERT"
    },
    "12128": {
      "op": "JUMPDEST"
    },
    "12129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12131": {
      "op": "DUP3"
    },
    "12132": {
      "op": "NOT"
    },
    "12133": {
      "op": "DUP3"
    },
    "12134": {
      "op": "GT"
    },
    "12135": {
      "op": "ISZERO"
    },
    "12136": {
      "op": "PUSH2",
      "value": "0x2F73"
    },
    "12139": {
      "op": "JUMPI"
    },
    "12140": {
      "op": "PUSH2",
      "value": "0x2F73"
    },
    "12143": {
      "op": "PUSH2",
      "value": "0x2F4A"
    },
    "12146": {
      "jump": "i",
      "op": "JUMP"
    },
    "12147": {
      "op": "JUMPDEST"
    },
    "12148": {
      "op": "POP"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "SWAP1"
    },
    "12151": {
      "jump": "o",
      "op": "JUMP"
    },
    "12152": {
      "op": "JUMPDEST"
    },
    "12153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12157": {
      "op": "DUP3"
    },
    "12158": {
      "op": "ADD"
    },
    "12159": {
      "op": "PUSH2",
      "value": "0x2F8A"
    },
    "12162": {
      "op": "JUMPI"
    },
    "12163": {
      "op": "PUSH2",
      "value": "0x2F8A"
    },
    "12166": {
      "op": "PUSH2",
      "value": "0x2F4A"
    },
    "12169": {
      "jump": "i",
      "op": "JUMP"
    },
    "12170": {
      "op": "JUMPDEST"
    },
    "12171": {
      "op": "POP"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12174": {
      "op": "ADD"
    },
    "12175": {
      "op": "SWAP1"
    },
    "12176": {
      "jump": "o",
      "op": "JUMP"
    },
    "12177": {
      "op": "JUMPDEST"
    },
    "12178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12182": {
      "op": "DUP3"
    },
    "12183": {
      "op": "DUP5"
    },
    "12184": {
      "op": "SUB"
    },
    "12185": {
      "op": "SLT"
    },
    "12186": {
      "op": "ISZERO"
    },
    "12187": {
      "op": "PUSH2",
      "value": "0x2FA3"
    },
    "12190": {
      "op": "JUMPI"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12193": {
      "op": "DUP1"
    },
    "12194": {
      "op": "REVERT"
    },
    "12195": {
      "op": "JUMPDEST"
    },
    "12196": {
      "op": "DUP2"
    },
    "12197": {
      "op": "MLOAD"
    },
    "12198": {
      "op": "PUSH2",
      "value": "0x2997"
    },
    "12201": {
      "op": "DUP2"
    },
    "12202": {
      "op": "PUSH2",
      "value": "0x2965"
    },
    "12205": {
      "jump": "i",
      "op": "JUMP"
    },
    "12206": {
      "op": "JUMPDEST"
    },
    "12207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12216": {
      "op": "DUP4"
    },
    "12217": {
      "op": "GT"
    },
    "12218": {
      "op": "ISZERO"
    },
    "12219": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12222": {
      "op": "JUMPI"
    },
    "12223": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12226": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "12229": {
      "jump": "i",
      "op": "JUMP"
    },
    "12230": {
      "op": "JUMPDEST"
    },
    "12231": {
      "op": "PUSH2",
      "value": "0x2FDA"
    },
    "12234": {
      "op": "DUP4"
    },
    "12235": {
      "op": "PUSH2",
      "value": "0x2FD4"
    },
    "12238": {
      "op": "DUP4"
    },
    "12239": {
      "op": "SLOAD"
    },
    "12240": {
      "op": "PUSH2",
      "value": "0x2CB1"
    },
    "12243": {
      "jump": "i",
      "op": "JUMP"
    },
    "12244": {
      "op": "JUMPDEST"
    },
    "12245": {
      "op": "DUP4"
    },
    "12246": {
      "op": "PUSH2",
      "value": "0x2E3B"
    },
    "12249": {
      "jump": "i",
      "op": "JUMP"
    },
    "12250": {
      "op": "JUMPDEST"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12255": {
      "op": "DUP5"
    },
    "12256": {
      "op": "GT"
    },
    "12257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12259": {
      "op": "DUP2"
    },
    "12260": {
      "op": "EQ"
    },
    "12261": {
      "op": "PUSH2",
      "value": "0x300E"
    },
    "12264": {
      "op": "JUMPI"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12267": {
      "op": "DUP6"
    },
    "12268": {
      "op": "ISZERO"
    },
    "12269": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12272": {
      "op": "JUMPI"
    },
    "12273": {
      "op": "POP"
    },
    "12274": {
      "op": "DUP4"
    },
    "12275": {
      "op": "DUP3"
    },
    "12276": {
      "op": "ADD"
    },
    "12277": {
      "op": "CALLDATALOAD"
    },
    "12278": {
      "op": "JUMPDEST"
    },
    "12279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12281": {
      "op": "NOT"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12284": {
      "op": "DUP8"
    },
    "12285": {
      "op": "SWAP1"
    },
    "12286": {
      "op": "SHL"
    },
    "12287": {
      "op": "SHR"
    },
    "12288": {
      "op": "NOT"
    },
    "12289": {
      "op": "AND"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12292": {
      "op": "DUP7"
    },
    "12293": {
      "op": "SWAP1"
    },
    "12294": {
      "op": "SHL"
    },
    "12295": {
      "op": "OR"
    },
    "12296": {
      "op": "DUP4"
    },
    "12297": {
      "op": "SSTORE"
    },
    "12298": {
      "op": "PUSH2",
      "value": "0x3068"
    },
    "12301": {
      "op": "JUMP"
    },
    "12302": {
      "op": "JUMPDEST"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12305": {
      "op": "DUP4"
    },
    "12306": {
      "op": "DUP2"
    },
    "12307": {
      "op": "MSTORE"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12310": {
      "op": "SWAP1"
    },
    "12311": {
      "op": "KECCAK256"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12314": {
      "op": "NOT"
    },
    "12315": {
      "op": "DUP7"
    },
    "12316": {
      "op": "AND"
    },
    "12317": {
      "op": "SWAP1"
    },
    "12318": {
      "op": "DUP4"
    },
    "12319": {
      "op": "JUMPDEST"
    },
    "12320": {
      "op": "DUP3"
    },
    "12321": {
      "op": "DUP2"
    },
    "12322": {
      "op": "LT"
    },
    "12323": {
      "op": "ISZERO"
    },
    "12324": {
      "op": "PUSH2",
      "value": "0x303F"
    },
    "12327": {
      "op": "JUMPI"
    },
    "12328": {
      "op": "DUP7"
    },
    "12329": {
      "op": "DUP6"
    },
    "12330": {
      "op": "ADD"
    },
    "12331": {
      "op": "CALLDATALOAD"
    },
    "12332": {
      "op": "DUP3"
    },
    "12333": {
      "op": "SSTORE"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12336": {
      "op": "SWAP5"
    },
    "12337": {
      "op": "DUP6"
    },
    "12338": {
      "op": "ADD"
    },
    "12339": {
      "op": "SWAP5"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12342": {
      "op": "SWAP1"
    },
    "12343": {
      "op": "SWAP3"
    },
    "12344": {
      "op": "ADD"
    },
    "12345": {
      "op": "SWAP2"
    },
    "12346": {
      "op": "ADD"
    },
    "12347": {
      "op": "PUSH2",
      "value": "0x301F"
    },
    "12350": {
      "op": "JUMP"
    },
    "12351": {
      "op": "JUMPDEST"
    },
    "12352": {
      "op": "POP"
    },
    "12353": {
      "op": "DUP7"
    },
    "12354": {
      "op": "DUP3"
    },
    "12355": {
      "op": "LT"
    },
    "12356": {
      "op": "ISZERO"
    },
    "12357": {
      "op": "PUSH2",
      "value": "0x305C"
    },
    "12360": {
      "op": "JUMPI"
    },
    "12361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12363": {
      "op": "NOT"
    },
    "12364": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12366": {
      "op": "DUP9"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12369": {
      "op": "SHL"
    },
    "12370": {
      "op": "AND"
    },
    "12371": {
      "op": "SHR"
    },
    "12372": {
      "op": "NOT"
    },
    "12373": {
      "op": "DUP5"
    },
    "12374": {
      "op": "DUP8"
    },
    "12375": {
      "op": "ADD"
    },
    "12376": {
      "op": "CALLDATALOAD"
    },
    "12377": {
      "op": "AND"
    },
    "12378": {
      "op": "DUP2"
    },
    "12379": {
      "op": "SSTORE"
    },
    "12380": {
      "op": "JUMPDEST"
    },
    "12381": {
      "op": "POP"
    },
    "12382": {
      "op": "POP"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12385": {
      "op": "DUP6"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12388": {
      "op": "SHL"
    },
    "12389": {
      "op": "ADD"
    },
    "12390": {
      "op": "DUP4"
    },
    "12391": {
      "op": "SSTORE"
    },
    "12392": {
      "op": "JUMPDEST"
    },
    "12393": {
      "op": "POP"
    },
    "12394": {
      "op": "POP"
    },
    "12395": {
      "op": "POP"
    },
    "12396": {
      "op": "POP"
    },
    "12397": {
      "op": "POP"
    },
    "12398": {
      "jump": "o",
      "op": "JUMP"
    },
    "12399": {
      "op": "JUMPDEST"
    },
    "12400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "12408": {
      "op": "SHL"
    },
    "12409": {
      "op": "SUB"
    },
    "12410": {
      "op": "DUP1"
    },
    "12411": {
      "op": "DUP5"
    },
    "12412": {
      "op": "AND"
    },
    "12413": {
      "op": "DUP1"
    },
    "12414": {
      "op": "PUSH2",
      "value": "0x3097"
    },
    "12417": {
      "op": "JUMPI"
    },
    "12418": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12425": {
      "op": "SHL"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12428": {
      "op": "MSTORE"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12433": {
      "op": "MSTORE"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12438": {
      "op": "REVERT"
    },
    "12439": {
      "op": "JUMPDEST"
    },
    "12440": {
      "op": "SWAP3"
    },
    "12441": {
      "op": "AND"
    },
    "12442": {
      "op": "SWAP2"
    },
    "12443": {
      "op": "SWAP1"
    },
    "12444": {
      "op": "SWAP2"
    },
    "12445": {
      "op": "DIV"
    },
    "12446": {
      "op": "SWAP3"
    },
    "12447": {
      "op": "SWAP2"
    },
    "12448": {
      "op": "POP"
    },
    "12449": {
      "op": "POP"
    },
    "12450": {
      "jump": "o",
      "op": "JUMP"
    },
    "12451": {
      "op": "JUMPDEST"
    },
    "12452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12454": {
      "op": "DUP1"
    },
    "12455": {
      "op": "DUP3"
    },
    "12456": {
      "op": "MSTORE"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "12459": {
      "op": "SWAP1"
    },
    "12460": {
      "op": "DUP3"
    },
    "12461": {
      "op": "ADD"
    },
    "12462": {
      "op": "MSTORE"
    },
    "12463": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "12486": {
      "op": "SHL"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12489": {
      "op": "DUP3"
    },
    "12490": {
      "op": "ADD"
    },
    "12491": {
      "op": "MSTORE"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12494": {
      "op": "ADD"
    },
    "12495": {
      "op": "SWAP1"
    },
    "12496": {
      "jump": "o",
      "op": "JUMP"
    },
    "12497": {
      "op": "JUMPDEST"
    },
    "12498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12500": {
      "op": "DUP2"
    },
    "12501": {
      "op": "MSTORE"
    },
    "12502": {
      "op": "DUP8"
    },
    "12503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12505": {
      "op": "DUP3"
    },
    "12506": {
      "op": "ADD"
    },
    "12507": {
      "op": "MSTORE"
    },
    "12508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12510": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12513": {
      "op": "DUP10"
    },
    "12514": {
      "op": "DUP12"
    },
    "12515": {
      "op": "DUP3"
    },
    "12516": {
      "op": "DUP6"
    },
    "12517": {
      "op": "ADD"
    },
    "12518": {
      "op": "CALLDATACOPY"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12521": {
      "op": "DUP11"
    },
    "12522": {
      "op": "DUP5"
    },
    "12523": {
      "op": "ADD"
    },
    "12524": {
      "op": "DUP3"
    },
    "12525": {
      "op": "ADD"
    },
    "12526": {
      "op": "MSTORE"
    },
    "12527": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12533": {
      "op": "SWAP9"
    },
    "12534": {
      "op": "DUP10"
    },
    "12535": {
      "op": "AND"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12538": {
      "op": "DUP5"
    },
    "12539": {
      "op": "ADD"
    },
    "12540": {
      "op": "MSTORE"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12543": {
      "op": "SWAP8"
    },
    "12544": {
      "op": "SWAP1"
    },
    "12545": {
      "op": "SWAP8"
    },
    "12546": {
      "op": "AND"
    },
    "12547": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12549": {
      "op": "DUP4"
    },
    "12550": {
      "op": "ADD"
    },
    "12551": {
      "op": "MSTORE"
    },
    "12552": {
      "op": "POP"
    },
    "12553": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12557": {
      "op": "SWAP5"
    },
    "12558": {
      "op": "SWAP1"
    },
    "12559": {
      "op": "SWAP5"
    },
    "12560": {
      "op": "AND"
    },
    "12561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12563": {
      "op": "DUP6"
    },
    "12564": {
      "op": "ADD"
    },
    "12565": {
      "op": "MSTORE"
    },
    "12566": {
      "op": "SWAP2"
    },
    "12567": {
      "op": "DUP6"
    },
    "12568": {
      "op": "AND"
    },
    "12569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12571": {
      "op": "DUP5"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "op": "MSTORE"
    },
    "12574": {
      "op": "SWAP1"
    },
    "12575": {
      "op": "SWAP4"
    },
    "12576": {
      "op": "AND"
    },
    "12577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12579": {
      "op": "DUP3"
    },
    "12580": {
      "op": "ADD"
    },
    "12581": {
      "op": "MSTORE"
    },
    "12582": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12585": {
      "op": "SWAP1"
    },
    "12586": {
      "op": "SWAP3"
    },
    "12587": {
      "op": "AND"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12590": {
      "op": "DUP4"
    },
    "12591": {
      "op": "ADD"
    },
    "12592": {
      "op": "MSTORE"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12595": {
      "op": "SWAP1"
    },
    "12596": {
      "op": "SWAP3"
    },
    "12597": {
      "op": "ADD"
    },
    "12598": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12600": {
      "op": "NOT"
    },
    "12601": {
      "op": "AND"
    },
    "12602": {
      "op": "ADD"
    },
    "12603": {
      "op": "ADD"
    },
    "12604": {
      "op": "SWAP2"
    },
    "12605": {
      "op": "SWAP1"
    },
    "12606": {
      "op": "POP"
    },
    "12607": {
      "jump": "o",
      "op": "JUMP"
    },
    "12608": {
      "op": "JUMPDEST"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12611": {
      "op": "DUP1"
    },
    "12612": {
      "op": "DUP3"
    },
    "12613": {
      "op": "SLT"
    },
    "12614": {
      "op": "DUP1"
    },
    "12615": {
      "op": "ISZERO"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12620": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12622": {
      "op": "SHL"
    },
    "12623": {
      "op": "SUB"
    },
    "12624": {
      "op": "DUP5"
    },
    "12625": {
      "op": "SWAP1"
    },
    "12626": {
      "op": "SUB"
    },
    "12627": {
      "op": "DUP6"
    },
    "12628": {
      "op": "SGT"
    },
    "12629": {
      "op": "AND"
    },
    "12630": {
      "op": "ISZERO"
    },
    "12631": {
      "op": "PUSH2",
      "value": "0x3162"
    },
    "12634": {
      "op": "JUMPI"
    },
    "12635": {
      "op": "PUSH2",
      "value": "0x3162"
    },
    "12638": {
      "op": "PUSH2",
      "value": "0x2F4A"
    },
    "12641": {
      "jump": "i",
      "op": "JUMP"
    },
    "12642": {
      "op": "JUMPDEST"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12645": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12647": {
      "op": "SHL"
    },
    "12648": {
      "op": "DUP4"
    },
    "12649": {
      "op": "SWAP1"
    },
    "12650": {
      "op": "SUB"
    },
    "12651": {
      "op": "DUP5"
    },
    "12652": {
      "op": "SLT"
    },
    "12653": {
      "op": "DUP2"
    },
    "12654": {
      "op": "AND"
    },
    "12655": {
      "op": "ISZERO"
    },
    "12656": {
      "op": "PUSH2",
      "value": "0x317B"
    },
    "12659": {
      "op": "JUMPI"
    },
    "12660": {
      "op": "PUSH2",
      "value": "0x317B"
    },
    "12663": {
      "op": "PUSH2",
      "value": "0x2F4A"
    },
    "12666": {
      "jump": "i",
      "op": "JUMP"
    },
    "12667": {
      "op": "JUMPDEST"
    },
    "12668": {
      "op": "POP"
    },
    "12669": {
      "op": "POP"
    },
    "12670": {
      "op": "ADD"
    },
    "12671": {
      "op": "SWAP1"
    },
    "12672": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "65761d9d2ffe00cee487805d93e516b4b007aa41",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (address => uint256) lastActiveTimestamp; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksSubmitted;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 tasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes() external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n            else {\n                string[] memory myReturn= new string[](1);\n                myReturn[0] = \"No luck.\";\n                return myReturn;\n            }\n            unchecked{++i;}\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[i] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizID) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n//                potentialTasks.push(uint256(DoubleEndedQueue.at(tasksSubmitted, i)));\n                taskId = uint256(DoubleEndedQueue.at(tasksSubmitted, i));\n                myTask = tasks[taskId];\n\n                /*\n                // adjust dequeue\n                tasksSubmitted[0], tasksSubmitted[uint128(i)] = bytes32(0), tasksSubmitted[uint128(i)];\n                tasksVerifying.push(uint256(tasksSubmitted[uint128(i)]));\n                // shift head of dequeue to maintain structure (slight penalty for head)\n                if (i != 0) {\n                    tasksSubmitted._data[uint128(i)] = tasksSubmitted._data[tasksSubmitted.begin];\n                }\n                DoubleEndedQueue.pop(tasksSubmitted);\n                */\n\n                // update task\n                // assign task to home boy\n                myTask.verifierID = uint16(_wizID);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))] = myTask;\n            }\n        }\n        // emit event with task\n        emit VerificationAssigned(_wizID, taskId);\n    }\n\n/*\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n\n*/\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizID) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length; i++){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizID, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksSubmitted, bytes32(tasksAttempted));\n                tasks[tasksAttempted] = myTask;\n                tasksAttempted+=1;\n            }\n        }\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:18538:2:-:0;;;2896:5;2869:32;;2957:6;2921:42;;7726:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:10;1778:7;:22;889:23:9;679:10:3;889:9:9;:23::i;:::-;7805:10:2;:26;;-1:-1:-1;;;;;;7805:26:2;-1:-1:-1;;;;;7805:26:2;;;;;;;;;;743:18538;;2101:173:9;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;743:18538:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}