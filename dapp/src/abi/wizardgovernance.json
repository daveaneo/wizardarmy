{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "10": "contracts/helpers/ReentrancyGuard.sol",
    "19": "contracts/libraries/Strings.sol",
    "2": "contracts/Governance.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "9": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        4859
      ],
      "Context": [
        2189
      ],
      "DoubleEndedQueue": [
        2168
      ],
      "ERC165": [
        2213
      ],
      "ERC2981Collection": [
        2297
      ],
      "ERC721": [
        3116
      ],
      "ERC721A": [
        4187
      ],
      "ERC721Enumerable": [
        8152
      ],
      "Governance": [
        1827
      ],
      "IERC165": [
        4343
      ],
      "IERC20": [
        4416
      ],
      "IERC2981": [
        7768
      ],
      "IERC721": [
        4532
      ],
      "IERC721Enumerable": [
        4563
      ],
      "IERC721Metadata": [
        7795
      ],
      "IERC721Receiver": [
        7813
      ],
      "Ownable": [
        4291
      ],
      "ReentrancyGuard": [
        4331
      ],
      "Strings": [
        5062
      ],
      "Wizards": [
        5899
      ]
    },
    "id": 1828,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 5900,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4417,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4344,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4533,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4564,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4188,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 3117,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 2214,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4292,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 2190,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4332,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 2298,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 5063,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 4860,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1828,
        "sourceUnit": 2169,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2168,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4331,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4291,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1827,
        "linearizedBaseContracts": [
          1827,
          4291,
          2189,
          4331
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$5899",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5899,
                "src": "829:7:2"
              },
              "referencedDeclaration": 5899,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$5899",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1126:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1264:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1259:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1287:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1280:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1341:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1335:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1373:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1366:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1366:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1399:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1392:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1428:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1421:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1457:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1450:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1827,
            "src": "1072:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1538:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1531:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1531:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1584:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1577:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1644:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1636:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1698:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1690:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1762:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1756:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1810:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1803:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1982:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1975:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1975:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2009:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2002:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2060:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2053:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2053:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2110:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2103:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1516:4:2",
            "nodeType": "StructDefinition",
            "scope": 1827,
            "src": "1509:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2223:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2216:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2216:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2248:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2241:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2241:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2283:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2280:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2273:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2305:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2298:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2332:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2325:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2325:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2361:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2354:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2354:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2197:8:2",
            "nodeType": "StructDefinition",
            "scope": 1827,
            "src": "2190:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2406:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2388:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2388:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2388:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2388:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2562:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2525:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1846,
                "src": "2525:29:2"
              },
              "referencedDeclaration": 1846,
              "src": "2525:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2739:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2702:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2711:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2702:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2722:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2722:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2762:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2754:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2754:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2816:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2783:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2792:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2783:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2803:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2803:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 108,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2842:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2827:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2827:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2902:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2894:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2894:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2921:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2924:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2921:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2954:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1827,
            "src": "2946:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2946:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2982:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 125,
            "name": "VerificationAssigned",
            "nameLocation": "3010:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3039:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3031:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3057:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3049:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3070:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3065:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 121,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "3065:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "3065:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:47:2"
            },
            "src": "3004:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 133,
            "name": "VerificationFailed",
            "nameLocation": "3089:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3116:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3108:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3141:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3133:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3167:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3159:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:67:2"
            },
            "src": "3083:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 145,
            "name": "VerificationSucceeded",
            "nameLocation": "3186:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3216:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3208:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3234:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3226:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3268:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3260:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3279:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3274:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3207:86:2"
            },
            "src": "3180:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 155,
            "name": "HashTesting",
            "nameLocation": "3305:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3325:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3317:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3336:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3331:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3359:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3351:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3379:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3373:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:78:2"
            },
            "src": "3299:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 171,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3406:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3432:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3425:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3449:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3442:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3442:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3468:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3462:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3493:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3486:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3522:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3515:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3544:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3537:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3566:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3559:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:158:2"
            },
            "src": "3400:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 181,
            "name": "TaskCompleted",
            "nameLocation": "3594:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3616:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3608:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3634:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3649:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3642:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3667:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3659:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:65:2"
            },
            "src": "3588:85:2"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "4544:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 189,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4561:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 191,
                    "indexExpression": {
                      "id": 190,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4567:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4561:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "4554:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4479:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4499:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4491:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4490:17:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4531:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4531:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:13:2"
            },
            "scope": 1827,
            "src": "4470:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "4666:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4684:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 204,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4697:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4684:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4713:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4676:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:56:2"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4758:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "4742:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 211,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4742:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 212,
                        "nodeType": "ArrayTypeName",
                        "src": "4742:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 217,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4783:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 219,
                          "indexExpression": {
                            "id": 218,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4793:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4783:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4770:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 214,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4774:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 215,
                        "nodeType": "ArrayTypeName",
                        "src": "4774:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4742:79:2"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "4875:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 234,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "4889:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "id": 235,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4899:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4889:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 237,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4904:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 239,
                                "indexExpression": {
                                  "id": 238,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4914:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4904:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4904:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4932:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4904:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4889:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "4889:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4850:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 228,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4853:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4853:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4850:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "initializationExpression": {
                    "assignments": [
                      224
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4843:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "4835:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4835:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 226,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4847:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4835:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4871:3:2",
                      "subExpression": {
                        "id": 231,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4871:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 233,
                    "nodeType": "ExpressionStatement",
                    "src": "4871:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4831:114:2"
                },
                {
                  "expression": {
                    "id": 247,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "4961:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 248,
                  "nodeType": "Return",
                  "src": "4954:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4597:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4614:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:20:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4649:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4649:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4649:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4648:17:2"
            },
            "scope": 1827,
            "src": "4588:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "5060:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5078:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 259,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "5091:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5078:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5107:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5070:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 265,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5145:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5145:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 267,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5163:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 269,
                            "indexExpression": {
                              "id": 268,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "5173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5163:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5163:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5145:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5199:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5136:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:85:2"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5349:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5341:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5341:19:2"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5378:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5370:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5370:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 280,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5370:25:2"
                },
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5413:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5405:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5417:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5405:13:2"
                },
                {
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "5491:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 298,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5544:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 300,
                                "indexExpression": {
                                  "id": 299,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "5554:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5544:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5544:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "id": 302,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "5572:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5544:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 304,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5577:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5544:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 329,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5773:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "id": 330,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "5783:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5773:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 332,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5773:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 334,
                              "indexExpression": {
                                "id": 333,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "5801:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5773:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 335,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "5807:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5773:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 342,
                          "nodeType": "IfStatement",
                          "src": "5770:93:2",
                          "trueBody": {
                            "id": 341,
                            "nodeType": "Block",
                            "src": "5825:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 337,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "5843:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5847:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5843:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 340,
                                "nodeType": "ExpressionStatement",
                                "src": "5843:5:2"
                              }
                            ]
                          }
                        },
                        "id": 343,
                        "nodeType": "IfStatement",
                        "src": "5541:322:2",
                        "trueBody": {
                          "id": 328,
                          "nodeType": "Block",
                          "src": "5596:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 306,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "5614:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 307,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5634:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 309,
                                      "indexExpression": {
                                        "id": 308,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 252,
                                        "src": "5644:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5634:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 310,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5634:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 312,
                                  "indexExpression": {
                                    "id": 311,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 286,
                                    "src": "5662:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5634:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5614:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 314,
                              "nodeType": "ExpressionStatement",
                              "src": "5614:50:2"
                            },
                            {
                              "expression": {
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 315,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "5682:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 316,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 286,
                                  "src": "5696:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5682:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 318,
                              "nodeType": "ExpressionStatement",
                              "src": "5682:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 319,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "5719:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5724:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5719:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 327,
                              "nodeType": "IfStatement",
                              "src": "5715:23:2",
                              "trueBody": {
                                "id": 326,
                                "nodeType": "Block",
                                "src": "5727:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 322,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "5729:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 323,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5735:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5729:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 325,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5729:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "5445:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 290,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5448:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 292,
                        "indexExpression": {
                          "id": 291,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5458:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5448:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5448:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5445:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "initializationExpression": {
                    "assignments": [
                      286
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5440:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "5432:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 288,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5442:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5432:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5487:3:2",
                      "subExpression": {
                        "id": 295,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "5487:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 297,
                    "nodeType": "ExpressionStatement",
                    "src": "5487:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5428:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "5890:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5895:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5890:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5898:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5882:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5882:35:2"
                },
                {
                  "expression": {
                    "id": 353,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 276,
                    "src": "5934:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 256,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "5927:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4992:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5015:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5007:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:20:2"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5050:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5049:10:2"
            },
            "scope": 1827,
            "src": "4983:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "6080:607:2",
              "statements": [
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6098:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6090:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6090:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6144:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 365,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "6120:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2151,
                      "src": "6120:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6090:79:2"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6191:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6179:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 370,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6179:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6179:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6179:18:2"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "6363:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 381,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "6377:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 382,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "6386:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 387,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 94,
                                      "src": "6420:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 388,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "6445:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 385,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2168,
                                      "src": "6400:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2105,
                                    "src": "6400:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6400:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6392:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6392:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6392:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6386:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "6377:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "6377:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 394,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6467:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "6467:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 396,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6506:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6506:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6467:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 399,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6525:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "6525:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 401,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "6541:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6525:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6467:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 404,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "6551:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "6551:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 406,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6570:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6551:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6467:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 412,
                        "nodeType": "IfStatement",
                        "src": "6463:158:2",
                        "trueBody": {
                          "id": 411,
                          "nodeType": "Block",
                          "src": "6577:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6602:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 362,
                              "id": 410,
                              "nodeType": "Return",
                              "src": "6595:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 416,
                        "nodeType": "UncheckedBlock",
                        "src": "6634:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6644:3:2",
                              "subExpression": {
                                "id": 413,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6646:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 415,
                            "nodeType": "ExpressionStatement",
                            "src": "6644:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "6337:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 379,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "6341:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6337:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "initializationExpression": {
                    "assignments": [
                      375
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6331:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "6323:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6323:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 377,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6334:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6323:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6319:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6675:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 362,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "6668:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6008:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6043:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6035:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6034:16:2"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6074:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6074:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6073:6:2"
            },
            "scope": 1827,
            "src": "5999:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "6778:1313:2",
              "statements": [
                {
                  "assignments": [
                    432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 432,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6796:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "6788:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6842:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 433,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "6818:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2151,
                      "src": "6818:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6818:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6788:79:2"
                },
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6889:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "6877:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 439,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 438,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6877:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6877:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6877:18:2"
                },
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "6913:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "6905:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6905:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6905:14:2"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "6937:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "6929:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6929:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6943:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6929:15:2"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "6999:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 456,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7013:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 461,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7050:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 462,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "7076:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 459,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2168,
                                    "src": "7030:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2105,
                                  "src": "7030:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7030:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7022:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 457,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7022:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7022:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7013:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "7013:66:2"
                      },
                      {
                        "expression": {
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 467,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "7093:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 468,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7102:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 470,
                            "indexExpression": {
                              "id": 469,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "7108:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7102:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7093:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "7093:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 473,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7133:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7133:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 475,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7172:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7172:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7133:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 478,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7191:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "7191:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 480,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "7211:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7191:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7133:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 488,
                        "nodeType": "IfStatement",
                        "src": "7129:140:2",
                        "trueBody": {
                          "id": 487,
                          "nodeType": "Block",
                          "src": "7218:51:2",
                          "statements": [
                            {
                              "id": 486,
                              "nodeType": "UncheckedBlock",
                              "src": "7236:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7246:7:2",
                                    "subExpression": {
                                      "id": 483,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 446,
                                      "src": "7248:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 485,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7246:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 492,
                        "nodeType": "UncheckedBlock",
                        "src": "7282:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7292:3:2",
                              "subExpression": {
                                "id": 489,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "7294:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 491,
                            "nodeType": "ExpressionStatement",
                            "src": "7292:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 453,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "6973:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 454,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "6977:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6973:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 494,
                  "initializationExpression": {
                    "assignments": [
                      450
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6967:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "6959:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6959:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 452,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6970:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6959:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6955:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 495,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "7364:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7371:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7364:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 520,
                  "nodeType": "IfStatement",
                  "src": "7360:172:2",
                  "trueBody": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "7374:158:2",
                    "statements": [
                      {
                        "assignments": [
                          502
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 502,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "7402:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 519,
                            "src": "7388:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 500,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 499,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7388:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7388:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 501,
                              "nodeType": "ArrayTypeName",
                              "src": "7388:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 509,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7423:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7412:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 504,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 503,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7416:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7416:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 505,
                              "nodeType": "ArrayTypeName",
                              "src": "7416:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7412:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7388:37:2"
                      },
                      {
                        "expression": {
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 510,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "7439:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Governance.Task memory[] memory"
                                }
                              },
                              "id": 512,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7448:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7439:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "NFTID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "7439:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "393939",
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7457:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_999_by_1",
                              "typeString": "int_const 999"
                            },
                            "value": "999"
                          },
                          "src": "7439:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "id": 516,
                        "nodeType": "ExpressionStatement",
                        "src": "7439:21:2"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "7513:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "functionReturnParameters": 430,
                        "id": 518,
                        "nodeType": "Return",
                        "src": "7506:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "7550:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "7542:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7542:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7560:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7542:19:2"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "7585:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 597,
                      "src": "7571:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 527,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 526,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7571:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7571:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 528,
                        "nodeType": "ArrayTypeName",
                        "src": "7571:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 534,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "7606:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7595:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 531,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 530,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7599:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7599:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 532,
                        "nodeType": "ArrayTypeName",
                        "src": "7599:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7595:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7571:41:2"
                },
                {
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "7666:395:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 544,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7680:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 549,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7717:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 550,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 538,
                                    "src": "7743:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 547,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2168,
                                    "src": "7697:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2105,
                                  "src": "7697:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7697:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7689:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 545,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7689:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7689:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7680:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 554,
                        "nodeType": "ExpressionStatement",
                        "src": "7680:66:2"
                      },
                      {
                        "expression": {
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 555,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "7760:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 556,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7769:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 558,
                            "indexExpression": {
                              "id": 557,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "7775:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7769:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7760:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "7760:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 561,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7800:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7800:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 563,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7839:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7839:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7800:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 566,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7858:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "7858:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 568,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "7878:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7858:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7800:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 588,
                        "nodeType": "IfStatement",
                        "src": "7796:227:2",
                        "trueBody": {
                          "id": 587,
                          "nodeType": "Block",
                          "src": "7885:138:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 571,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 529,
                                    "src": "7903:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 573,
                                  "indexExpression": {
                                    "id": 572,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "7911:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7903:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 574,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "7922:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "7903:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 576,
                              "nodeType": "ExpressionStatement",
                              "src": "7903:25:2"
                            },
                            {
                              "id": 580,
                              "nodeType": "UncheckedBlock",
                              "src": "7946:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7956:9:2",
                                    "subExpression": {
                                      "id": 577,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 522,
                                      "src": "7958:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 579,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7956:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 581,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "7987:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 582,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "7995:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7987:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 586,
                              "nodeType": "IfStatement",
                              "src": "7984:25:2",
                              "trueBody": {
                                "id": 585,
                                "nodeType": "Block",
                                "src": "8001:8:2",
                                "statements": [
                                  {
                                    "id": 584,
                                    "nodeType": "Break",
                                    "src": "8002:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 592,
                        "nodeType": "UncheckedBlock",
                        "src": "8036:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8046:3:2",
                              "subExpression": {
                                "id": 589,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 538,
                                "src": "8048:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 591,
                            "nodeType": "ExpressionStatement",
                            "src": "8046:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 541,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "7640:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 542,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "7644:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7640:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 594,
                  "initializationExpression": {
                    "assignments": [
                      538
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7634:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "7626:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7626:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 540,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7637:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7626:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7622:439:2"
                },
                {
                  "expression": {
                    "id": 595,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 529,
                    "src": "8077:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "8070:14:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "6703:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6732:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6725:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6725:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6724:15:2"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6763:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 426,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 72,
                        "src": "6763:4:2"
                      },
                      "referencedDeclaration": 72,
                      "src": "6763:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 428,
                    "nodeType": "ArrayTypeName",
                    "src": "6763:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:15:2"
            },
            "scope": 1827,
            "src": "6694:1397:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "8255:1412:2",
              "statements": [
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "8273:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "8265:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8265:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8265:13:2"
                },
                {
                  "body": {
                    "id": 659,
                    "nodeType": "Block",
                    "src": "8326:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 617,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8343:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 619,
                                      "indexExpression": {
                                        "id": 618,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 610,
                                        "src": "8353:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8343:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "8343:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 622,
                                  "indexExpression": {
                                    "id": 621,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "8380:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8343:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 623,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8390:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8390:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8343:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 626,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "8421:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 628,
                                    "indexExpression": {
                                      "id": 627,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 610,
                                      "src": "8431:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8421:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "8421:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 630,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8450:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8450:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8421:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8343:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 634,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "8469:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 636,
                                  "indexExpression": {
                                    "id": 635,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 610,
                                    "src": "8479:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8469:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "8469:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 638,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8497:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8497:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8469:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8343:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 642,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8528:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 644,
                                "indexExpression": {
                                  "id": 643,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 610,
                                  "src": "8538:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8528:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "8528:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8558:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8528:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8343:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 654,
                        "nodeType": "IfStatement",
                        "src": "8340:285:2",
                        "trueBody": {
                          "id": 653,
                          "nodeType": "Block",
                          "src": "8574:51:2",
                          "statements": [
                            {
                              "id": 652,
                              "nodeType": "UncheckedBlock",
                              "src": "8592:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8602:7:2",
                                    "subExpression": {
                                      "id": 649,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 607,
                                      "src": "8604:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 651,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8602:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 658,
                        "nodeType": "UncheckedBlock",
                        "src": "8807:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8817:3:2",
                              "subExpression": {
                                "id": 655,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 610,
                                "src": "8819:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 657,
                            "nodeType": "ExpressionStatement",
                            "src": "8817:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 613,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "8305:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 614,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8308:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8308:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8305:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 660,
                  "initializationExpression": {
                    "assignments": [
                      610
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8300:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "8292:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8292:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 612,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8302:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8292:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8288:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 661,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "8889:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8896:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8889:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "8885:139:2",
                  "trueBody": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "8899:125:2",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "8929:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8913:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 666,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8913:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 667,
                              "nodeType": "ArrayTypeName",
                              "src": "8913:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 674,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8952:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8939:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 669,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8943:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 670,
                              "nodeType": "ArrayTypeName",
                              "src": "8943:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8939:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8913:41:2"
                      },
                      {
                        "expression": {
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 675,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "8968:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 677,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8977:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8968:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8982:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "8968:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "8968:16:2"
                      },
                      {
                        "expression": {
                          "id": 681,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "9005:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 605,
                        "id": 682,
                        "nodeType": "Return",
                        "src": "8998:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9050:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "9034:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 687,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9034:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 688,
                        "nodeType": "ArrayTypeName",
                        "src": "9034:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 693,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "9073:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9060:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 690,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9064:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 691,
                        "nodeType": "ArrayTypeName",
                        "src": "9064:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9060:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9034:45:2"
                },
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9097:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "9089:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 696,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9089:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 699,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9107:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9089:19:2"
                },
                {
                  "body": {
                    "id": 765,
                    "nodeType": "Block",
                    "src": "9156:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 708,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "9173:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 710,
                                      "indexExpression": {
                                        "id": 709,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 701,
                                        "src": "9183:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9173:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 711,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "9173:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 713,
                                  "indexExpression": {
                                    "id": 712,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "9210:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9173:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 714,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9220:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9220:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9173:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 717,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9251:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 719,
                                    "indexExpression": {
                                      "id": 718,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 701,
                                      "src": "9261:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9251:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 720,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "9251:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 721,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9280:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9280:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9251:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9173:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 725,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "9299:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 727,
                                  "indexExpression": {
                                    "id": 726,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 701,
                                    "src": "9309:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9299:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "9299:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 729,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9327:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9327:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9299:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9173:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 733,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "9358:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 735,
                                "indexExpression": {
                                  "id": 734,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "9368:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9358:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "9358:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9388:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9358:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9173:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 760,
                        "nodeType": "IfStatement",
                        "src": "9170:429:2",
                        "trueBody": {
                          "id": 759,
                          "nodeType": "Block",
                          "src": "9404:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 740,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 689,
                                    "src": "9422:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 742,
                                  "indexExpression": {
                                    "id": 741,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "9430:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9422:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 743,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9441:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 745,
                                    "indexExpression": {
                                      "id": 744,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 701,
                                      "src": "9451:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9441:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "9441:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "9422:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 748,
                              "nodeType": "ExpressionStatement",
                              "src": "9422:40:2"
                            },
                            {
                              "id": 752,
                              "nodeType": "UncheckedBlock",
                              "src": "9480:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9490:9:2",
                                    "subExpression": {
                                      "id": 749,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 697,
                                      "src": "9492:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 751,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9490:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 753,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 697,
                                  "src": "9521:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 754,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 607,
                                  "src": "9532:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9521:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 758,
                              "nodeType": "IfStatement",
                              "src": "9518:67:2",
                              "trueBody": {
                                "id": 757,
                                "nodeType": "Block",
                                "src": "9539:46:2",
                                "statements": [
                                  {
                                    "id": 756,
                                    "nodeType": "Break",
                                    "src": "9561:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 764,
                        "nodeType": "UncheckedBlock",
                        "src": "9612:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9622:3:2",
                              "subExpression": {
                                "id": 761,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "9624:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 763,
                            "nodeType": "ExpressionStatement",
                            "src": "9622:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 704,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "9135:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 705,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "9138:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9138:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9135:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 766,
                  "initializationExpression": {
                    "assignments": [
                      701
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9130:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 766,
                        "src": "9122:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9122:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 703,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9132:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9122:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9118:519:2"
                },
                {
                  "expression": {
                    "id": 767,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 689,
                    "src": "9653:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 605,
                  "id": 768,
                  "nodeType": "Return",
                  "src": "9646:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "8176:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "8207:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8200:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8200:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8199:15:2"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8238:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 602,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "8238:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 603,
                    "nodeType": "ArrayTypeName",
                    "src": "8238:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8237:17:2"
            },
            "scope": 1827,
            "src": "8167:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "9834:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 777,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "9844:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5899",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 779,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "9865:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 778,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5899,
                        "src": "9857:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5899_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9857:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5899",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "9844:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5899",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "9844:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 775,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 774,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4234,
                  "src": "9824:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9824:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "9786:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "9808:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "9800:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9800:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9799:15:2"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9834:0:2"
            },
            "scope": 1827,
            "src": "9777:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 859,
              "nodeType": "Block",
              "src": "10072:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 857,
                    "nodeType": "Block",
                    "src": "10119:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 800,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10163:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 802,
                                      "indexExpression": {
                                        "id": 801,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 790,
                                        "src": "10173:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10163:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 803,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "10163:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 798,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10146:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10146:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10146:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 797,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10136:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10136:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 809,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 786,
                                    "src": "10217:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 807,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10200:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10200:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10200:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 806,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10190:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10190:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10136:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 852,
                        "nodeType": "IfStatement",
                        "src": "10133:1048:2",
                        "trueBody": {
                          "id": 851,
                          "nodeType": "Block",
                          "src": "10229:952:2",
                          "statements": [
                            {
                              "assignments": [
                                815
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 815,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "10328:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 851,
                                  "src": "10311:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 814,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 813,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10311:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10311:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 819,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 816,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10341:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 818,
                                "indexExpression": {
                                  "id": 817,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "10351:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10341:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10311:42:2"
                            },
                            {
                              "assignments": [
                                822
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 822,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "10388:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 851,
                                  "src": "10371:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 821,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 820,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10371:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10371:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 829,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 823,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10408:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 828,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 824,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "10418:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10418:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10435:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10418:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10408:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10371:66:2"
                            },
                            {
                              "expression": {
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 830,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "10553:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 831,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "10566:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "10553:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 833,
                              "nodeType": "ExpressionStatement",
                              "src": "10553:30:2"
                            },
                            {
                              "expression": {
                                "id": 840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "10601:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 834,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "10608:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 839,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 835,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10618:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "10618:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10635:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10618:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10608:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 841,
                              "nodeType": "ExpressionStatement",
                              "src": "10601:36:2"
                            },
                            {
                              "expression": {
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11107:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 842,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "11114:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 847,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 843,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "11124:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 844,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11124:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 845,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11141:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11124:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11114:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 849,
                              "nodeType": "ExpressionStatement",
                              "src": "11107:36:2"
                            },
                            {
                              "id": 850,
                              "nodeType": "Break",
                              "src": "11161:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 856,
                        "nodeType": "UncheckedBlock",
                        "src": "11194:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "11204:3:2",
                              "subExpression": {
                                "id": 853,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 790,
                                "src": "11206:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 855,
                            "nodeType": "ExpressionStatement",
                            "src": "11204:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 793,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "10099:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 794,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "10101:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10101:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10099:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 858,
                  "initializationExpression": {
                    "assignments": [
                      790
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 790,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10094:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "10086:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 789,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10086:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 792,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10096:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10086:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10082:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "10013:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10052:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "10038:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10038:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10037:25:2"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10072:0:2"
            },
            "scope": 1827,
            "src": "10004:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "11458:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 866,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "11512:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5899",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 868,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 863,
                          "src": "11533:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 867,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5899,
                        "src": "11525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5899_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11525:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5899",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "11512:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5899",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "11512:26:2"
                }
              ]
            },
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "11339:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 873,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "11453:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "11445:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11445:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11444:14:2"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11458:0:2"
            },
            "scope": 1827,
            "src": "11433:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "11673:7:2",
              "statements": []
            },
            "id": 877,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11653:2:2"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11673:0:2"
            },
            "scope": 1827,
            "src": "11646:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "11770:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 889,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "11788:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 890,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "11801:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11788:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11817:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11780:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11780:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "11780:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 898,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "11873:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 896,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "11854:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5899",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2444,
                            "src": "11854:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11854:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 900,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11881:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11881:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11854:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11893:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11846:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11846:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "11846:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 907,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "11930:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 909,
                            "indexExpression": {
                              "id": 908,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "11949:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11930:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 911,
                          "indexExpression": {
                            "id": 910,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 881,
                            "src": "11961:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11930:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11969:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11930:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11972:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11922:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11922:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "11922:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "12006:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12013:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12006:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 921,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "12018:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 922,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "12027:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 924,
                              "indexExpression": {
                                "id": 923,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 879,
                                "src": "12037:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12027:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 925,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "12027:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12018:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12006:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11998:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11998:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "11998:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 931,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12083:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12083:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 933,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "12101:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 935,
                            "indexExpression": {
                              "id": 934,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "12111:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12101:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "12101:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "12083:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12075:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12075:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:61:2"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 940,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "12146:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 943,
                        "indexExpression": {
                          "id": 941,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "12165:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12146:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 944,
                      "indexExpression": {
                        "id": 942,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "12177:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12146:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 945,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "12186:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12194:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12186:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12146:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "12146:49:2"
                },
                {
                  "expression": {
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 950,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "12238:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 952,
                          "indexExpression": {
                            "id": 951,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "12248:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12238:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "12238:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 955,
                      "indexExpression": {
                        "id": 954,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "12266:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12238:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12276:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12238:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "12238:39:2"
                },
                {
                  "expression": {
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 959,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "12306:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 961,
                        "indexExpression": {
                          "id": 960,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "12316:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12306:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "12306:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12342:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12306:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "12306:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 885,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1817,
                  "src": "11759:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11759:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "11695:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "11708:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "11700:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11700:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "11728:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "11720:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11720:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "11743:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "11735:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11735:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11699:50:2"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11770:0:2"
            },
            "scope": 1827,
            "src": "11686:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "12578:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 985,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "12596:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12615:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12596:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 988,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "12620:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12639:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "12620:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12596:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12644:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12588:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12588:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "12588:84:2"
                },
                {
                  "expression": {
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 995,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12682:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12700:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12682:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "12682:19:2"
                },
                {
                  "assignments": [
                    1001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1001,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "12749:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1043,
                      "src": "12732:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 1000,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 999,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "12732:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "12732:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1005,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1002,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "12762:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 1004,
                    "indexExpression": {
                      "id": 1003,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12772:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12762:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12732:55:2"
                },
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1006,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "12801:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "12801:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1009,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "12827:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12801:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "12801:39:2"
                },
                {
                  "expression": {
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1012,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "12854:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "12854:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1015,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "12880:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12854:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "12854:39:2"
                },
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1018,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "12907:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "12907:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1021,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "12936:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "12907:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "12907:45:2"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1024,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "12966:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "12966:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1027,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "12988:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "12966:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "12966:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "13024:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1034,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "13042:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13035:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1032,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13035:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13035:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13059:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1037,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "13062:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "13074:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1039,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "13089:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1040,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "13104:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1030,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "13008:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13008:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "13008:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 982,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 981,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1826,
                  "src": "12568:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12568:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "12405:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "12436:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12420:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12420:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "12454:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12447:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12447:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "12479:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12472:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "12498:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12491:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12491:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "12520:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12513:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12513:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "12542:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12535:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12535:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12419:139:2"
            },
            "returnParameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12578:0:2"
            },
            "scope": 1827,
            "src": "12396:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1071,
              "nodeType": "Block",
              "src": "13362:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1062,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "13388:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13399:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1064,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "13402:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1065,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "13420:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1066,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "13432:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "13447:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1068,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "13462:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1061,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "13372:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13372:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "13372:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1059,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1058,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1826,
                  "src": "13352:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13352:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "13174:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13205:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13189:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13189:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13222:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13216:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13216:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13247:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13240:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13240:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13266:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13259:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13259:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13304:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13297:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13297:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13326:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "13319:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13319:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13188:154:2"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13362:0:2"
            },
            "scope": 1827,
            "src": "13165:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "13696:726:2",
              "statements": [
                {
                  "assignments": [
                    1090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1090,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "13714:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1164,
                      "src": "13706:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13706:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1093,
                  "initialValue": {
                    "expression": {
                      "id": 1091,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13732:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "13732:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13706:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1094,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "13758:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "13758:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13758:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "13758:16:2"
                },
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "13801:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1164,
                      "src": "13784:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1100,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1099,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "13784:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "13784:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1102,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13815:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1104,
                    "indexExpression": {
                      "id": 1103,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "13825:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13815:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13784:57:2"
                },
                {
                  "expression": {
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1106,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "13855:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "13855:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1109,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "13877:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13855:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "13855:31:2"
                },
                {
                  "expression": {
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1112,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "13900:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "13900:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13921:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13900:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "13900:26:2"
                },
                {
                  "expression": {
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1118,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "13940:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "13940:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1121,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "13965:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13940:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "13940:36:2"
                },
                {
                  "expression": {
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1124,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "13990:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "13990:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1127,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1078,
                      "src": "14020:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13990:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "13990:46:2"
                },
                {
                  "expression": {
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1130,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "14050:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14050:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1133,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "14074:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "14050:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "14050:34:2"
                },
                {
                  "expression": {
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1136,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "14098:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14098:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1139,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "14125:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14098:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "14098:40:2"
                },
                {
                  "expression": {
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1142,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "14152:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14152:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1145,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "14179:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14152:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:40:2"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1148,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "14206:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "14206:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1151,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "14235:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14206:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "14206:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1155,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "14315:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1156,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "14326:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1157,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "14339:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1158,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "14357:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1159,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "14369:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1160,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "14384:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1161,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "14399:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1154,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "14296:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14296:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "EmitStatement",
                  "src": "14291:124:2"
                }
              ]
            },
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "13500:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13532:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13516:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13516:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "13550:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13543:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13543:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13569:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13563:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13563:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13594:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13587:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13587:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13626:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13619:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13619:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13648:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13641:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13641:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13670:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13663:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13663:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13515:171:2"
            },
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13696:0:2"
            },
            "scope": 1827,
            "src": "13491:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "14494:1063:2",
              "statements": [
                {
                  "assignments": [
                    1171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1171,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "14512:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "14504:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14504:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1176,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1174,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "14558:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1172,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "14534:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2151,
                      "src": "14534:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14534:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14504:79:2"
                },
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "14605:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "14593:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1178,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1177,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "14593:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "14593:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1180,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14593:18:2"
                },
                {
                  "assignments": [
                    1182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "14629:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "14621:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14621:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1183,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14621:14:2"
                },
                {
                  "body": {
                    "id": 1264,
                    "nodeType": "Block",
                    "src": "14776:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1191,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1182,
                            "src": "14790:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1196,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "14827:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1197,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1185,
                                    "src": "14853:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1194,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2168,
                                    "src": "14807:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2105,
                                  "src": "14807:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1846_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14807:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14799:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1192,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14799:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14799:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14790:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1201,
                        "nodeType": "ExpressionStatement",
                        "src": "14790:66:2"
                      },
                      {
                        "expression": {
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1202,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "14870:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1203,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "14879:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1205,
                            "indexExpression": {
                              "id": 1204,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1182,
                              "src": "14885:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14879:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "14870:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "14870:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1208,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "14910:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "14910:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1210,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14949:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14949:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14910:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1213,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "14968:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1214,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "14968:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1215,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1167,
                                "src": "14984:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14968:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14910:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1218,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1179,
                                "src": "14994:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "14994:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1220,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1167,
                              "src": "15013:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14994:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14910:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1259,
                        "nodeType": "IfStatement",
                        "src": "14906:554:2",
                        "trueBody": {
                          "id": 1258,
                          "nodeType": "Block",
                          "src": "15020:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1223,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "15198:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "15198:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1228,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1167,
                                      "src": "15225:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15218:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1226,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15218:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15218:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "15198:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "15198:34:2"
                            },
                            {
                              "expression": {
                                "id": 1242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1232,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "15250:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "15250:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1237,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15296:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1238,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15296:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1239,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "15314:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15296:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15289:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1235,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15289:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15289:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "15250:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1243,
                              "nodeType": "ExpressionStatement",
                              "src": "15250:81:2"
                            },
                            {
                              "expression": {
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1244,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "15349:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1246,
                                  "indexExpression": {
                                    "id": 1245,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1182,
                                    "src": "15355:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15349:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1247,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "15365:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "15349:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1249,
                              "nodeType": "ExpressionStatement",
                              "src": "15349:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1251,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "15415:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1252,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1182,
                                    "src": "15423:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1253,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 106,
                                      "src": "15431:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1255,
                                    "indexExpression": {
                                      "id": 1254,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1182,
                                      "src": "15437:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15431:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1250,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "15394:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$72_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15394:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1257,
                              "nodeType": "EmitStatement",
                              "src": "15389:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1263,
                        "nodeType": "UncheckedBlock",
                        "src": "15473:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "15483:3:2",
                              "subExpression": {
                                "id": 1260,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1185,
                                "src": "15485:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1262,
                            "nodeType": "ExpressionStatement",
                            "src": "15483:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1188,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "14750:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1189,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "14754:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14750:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1265,
                  "initializationExpression": {
                    "assignments": [
                      1185
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14744:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "14736:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14736:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1187,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14747:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14736:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "14732:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "14438:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "14477:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "14469:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14469:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14468:16:2"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14494:0:2"
            },
            "scope": 1827,
            "src": "14429:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1404,
              "nodeType": "Block",
              "src": "15649:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1402,
                    "nodeType": "Block",
                    "src": "15782:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1287,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15820:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1289,
                                      "indexExpression": {
                                        "id": 1288,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "15830:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15820:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1290,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "15820:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1285,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15809:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15809:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15809:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1284,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15799:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15799:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1296,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "15868:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1294,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15857:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15857:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15857:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1293,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15847:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15847:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "15799:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1397,
                        "nodeType": "IfStatement",
                        "src": "15796:989:2",
                        "trueBody": {
                          "id": 1396,
                          "nodeType": "Block",
                          "src": "15880:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1301,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15966:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1303,
                                          "indexExpression": {
                                            "id": 1302,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1277,
                                            "src": "15976:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15966:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1304,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "15966:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1305,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15995:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1306,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15995:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15966:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1308,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16014:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16014:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1310,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "16033:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1312,
                                          "indexExpression": {
                                            "id": 1311,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1277,
                                            "src": "16043:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16033:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1313,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "16033:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "16014:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "15966:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16060:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1300,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15958:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15958:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1318,
                              "nodeType": "ExpressionStatement",
                              "src": "15958:124:2"
                            },
                            {
                              "assignments": [
                                1321
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1321,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "16147:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1396,
                                  "src": "16135:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1320,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1319,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "16135:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "16135:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1340,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1323,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "16161:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1324,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1273,
                                    "src": "16171:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1325,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1271,
                                    "src": "16179:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16186:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1327,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16189:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1329,
                                      "indexExpression": {
                                        "id": 1328,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "16199:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16189:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "16189:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1331,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16219:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1333,
                                      "indexExpression": {
                                        "id": 1332,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "16229:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16219:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1334,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "16219:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16243:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16246:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1337,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16249:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16252:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1322,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "16156:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16156:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16135:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1344,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "16298:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1347,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "16332:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1346,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16324:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1345,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16324:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1348,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16324:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1846_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1341,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2168,
                                    "src": "16272:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2168_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1878,
                                  "src": "16272:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$1846_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16272:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1350,
                              "nodeType": "ExpressionStatement",
                              "src": "16272:81:2"
                            },
                            {
                              "expression": {
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1351,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "16371:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1353,
                                  "indexExpression": {
                                    "id": 1352,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "16377:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16371:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1354,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1321,
                                  "src": "16400:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16371:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1356,
                              "nodeType": "ExpressionStatement",
                              "src": "16371:35:2"
                            },
                            {
                              "expression": {
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1357,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "16424:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16445:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16424:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1360,
                              "nodeType": "ExpressionStatement",
                              "src": "16424:22:2"
                            },
                            {
                              "expression": {
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1361,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16501:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1363,
                                      "indexExpression": {
                                        "id": 1362,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "16511:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16501:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1364,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "16501:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1366,
                                  "indexExpression": {
                                    "id": 1365,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1273,
                                    "src": "16538:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16501:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1367,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16548:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1368,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16548:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16566:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16548:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16501:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1372,
                              "nodeType": "ExpressionStatement",
                              "src": "16501:71:2"
                            },
                            {
                              "expression": {
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1373,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "16590:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1375,
                                    "indexExpression": {
                                      "id": 1374,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1277,
                                      "src": "16600:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16590:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1376,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "16590:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1377,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16620:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1379,
                                      "indexExpression": {
                                        "id": 1378,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "16630:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16620:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "16620:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16650:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16620:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16590:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1384,
                              "nodeType": "ExpressionStatement",
                              "src": "16590:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1386,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1273,
                                    "src": "16689:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1387,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 108,
                                      "src": "16696:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16717:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "16696:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1390,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "16720:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1391,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16731:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16731:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1385,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "16675:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16675:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1394,
                              "nodeType": "EmitStatement",
                              "src": "16670:77:2"
                            },
                            {
                              "id": 1395,
                              "nodeType": "Break",
                              "src": "16765:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1401,
                        "nodeType": "UncheckedBlock",
                        "src": "16798:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16808:3:2",
                              "subExpression": {
                                "id": 1398,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1277,
                                "src": "16810:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1400,
                            "nodeType": "ExpressionStatement",
                            "src": "16808:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1280,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "15762:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1281,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "15764:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15764:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15762:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1403,
                  "initializationExpression": {
                    "assignments": [
                      1277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15755:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "15747:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15747:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1279,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15759:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15747:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15743:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "15572:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "15599:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "15585:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15585:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "15618:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "15610:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15610:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15632:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "15625:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15625:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15584:55:2"
            },
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15649:0:2"
            },
            "scope": 1827,
            "src": "15563:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "16946:412:2",
              "statements": [
                {
                  "assignments": [
                    1416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1416,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "16969:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "16956:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1415,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16956:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1423,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1419,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1410,
                          "src": "16998:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1421,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17006:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16998:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1417,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16981:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "16981:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16981:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16956:53:2"
                },
                {
                  "condition": {
                    "id": 1424,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1412,
                    "src": "17022:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1453,
                  "nodeType": "IfStatement",
                  "src": "17019:193:2",
                  "trueBody": {
                    "id": 1452,
                    "nodeType": "Block",
                    "src": "17032:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1450,
                          "nodeType": "Block",
                          "src": "17085:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1433,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1410,
                                    "src": "17103:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1435,
                                  "indexExpression": {
                                    "id": 1434,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1426,
                                    "src": "17111:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17103:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1439,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1410,
                                            "src": "17143:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1441,
                                          "indexExpression": {
                                            "id": 1440,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1426,
                                            "src": "17151:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17143:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1437,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "17126:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "17126:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17126:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1436,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "17116:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17116:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "17103:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1445,
                              "nodeType": "ExpressionStatement",
                              "src": "17103:52:2"
                            },
                            {
                              "id": 1449,
                              "nodeType": "UncheckedBlock",
                              "src": "17173:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "17183:3:2",
                                    "subExpression": {
                                      "id": 1446,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1426,
                                      "src": "17185:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1448,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17183:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1429,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "17065:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1430,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1410,
                              "src": "17069:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17069:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17065:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1451,
                        "initializationExpression": {
                          "assignments": [
                            1426
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1426,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17058:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1451,
                              "src": "17050:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1425,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17050:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1428,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17062:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17050:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17046:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1455,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "17229:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "17221:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17221:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1462,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1459,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1410,
                            "src": "17265:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1457,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17248:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17248:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17248:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1456,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "17238:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17238:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17221:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1464,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "17301:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1465,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1455,
                          "src": "17309:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1466,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1407,
                          "src": "17317:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "17309:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1468,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1410,
                          "src": "17329:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1470,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17337:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17329:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1471,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "17341:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1463,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "17289:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17289:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1473,
                  "nodeType": "EmitStatement",
                  "src": "17284:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "16864:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "16884:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "16876:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16876:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "16913:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "16896:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1408,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "16896:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1409,
                    "nodeType": "ArrayTypeName",
                    "src": "16896:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "16927:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "16922:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16922:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16875:61:2"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16946:0:2"
            },
            "scope": 1827,
            "src": "16855:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1780,
              "nodeType": "Block",
              "src": "18160:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1488,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1477,
                                "src": "18247:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1486,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "18228:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$5899",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2444,
                              "src": "18228:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18228:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1490,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18258:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18258:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18228:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1493,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "18272:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1495,
                              "indexExpression": {
                                "id": 1494,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1479,
                                "src": "18278:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18272:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "18272:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1497,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "18299:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18272:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18228:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18307:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18220:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18220:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "18220:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "18360:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18360:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18377:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18360:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18352:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18352:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "18352:27:2"
                },
                {
                  "assignments": [
                    1512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1512,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "18403:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1780,
                      "src": "18390:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1511,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1510,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "18390:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "18390:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1516,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1513,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "18412:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1515,
                    "indexExpression": {
                      "id": 1514,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "18418:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18412:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18390:36:2"
                },
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "18444:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1780,
                      "src": "18436:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18436:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1520,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18452:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18436:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1521,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1512,
                        "src": "18983:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "18983:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19002:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18983:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1553,
                  "nodeType": "IfStatement",
                  "src": "18980:205:2",
                  "trueBody": {
                    "id": 1552,
                    "nodeType": "Block",
                    "src": "19005:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1550,
                          "nodeType": "Block",
                          "src": "19058:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1533,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1482,
                                    "src": "19076:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1535,
                                  "indexExpression": {
                                    "id": 1534,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1526,
                                    "src": "19084:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19076:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1539,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1482,
                                            "src": "19116:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1541,
                                          "indexExpression": {
                                            "id": 1540,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1526,
                                            "src": "19124:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19116:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1537,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19099:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1538,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19099:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1542,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19099:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1536,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19089:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19089:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19076:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1545,
                              "nodeType": "ExpressionStatement",
                              "src": "19076:52:2"
                            },
                            {
                              "id": 1549,
                              "nodeType": "UncheckedBlock",
                              "src": "19146:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19156:3:2",
                                    "subExpression": {
                                      "id": 1546,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1526,
                                      "src": "19158:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1548,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19156:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1529,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "19038:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1530,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "19042:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19042:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19038:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1551,
                        "initializationExpression": {
                          "assignments": [
                            1526
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1526,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19031:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1551,
                              "src": "19023:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1525,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19023:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1528,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19035:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19023:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "19019:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19202:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1780,
                      "src": "19194:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1554,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19194:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1562,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1559,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
                            "src": "19238:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1557,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19221:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19221:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19221:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1556,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19211:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19211:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19194:53:2"
                },
                {
                  "assignments": [
                    1564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1564,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19266:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1780,
                      "src": "19258:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1563,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19258:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1572,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1565,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1512,
                          "src": "19280:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "19280:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1567,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "19295:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19280:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19308:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19280:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19304:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19258:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1574,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "19347:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1575,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1512,
                          "src": "19355:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "19355:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1577,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "19369:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1578,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "19378:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1579,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1564,
                          "src": "19386:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19399:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19386:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1573,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "19325:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19325:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1583,
                  "nodeType": "EmitStatement",
                  "src": "19320:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1584,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "19416:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19430:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19416:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1778,
                    "nodeType": "Block",
                    "src": "20277:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1667,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1512,
                              "src": "20425:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "20425:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1669,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "20445:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "20425:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1776,
                          "nodeType": "Block",
                          "src": "21261:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1750
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1750,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21375:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "21367:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1749,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21367:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1753,
                              "initialValue": {
                                "expression": {
                                  "id": 1751,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1512,
                                  "src": "21383:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1752,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "21383:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21367:30:2"
                            },
                            {
                              "expression": {
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21415:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1754,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "21422:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1756,
                                  "indexExpression": {
                                    "id": 1755,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "21428:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21422:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1758,
                              "nodeType": "ExpressionStatement",
                              "src": "21415:21:2"
                            },
                            {
                              "assignments": [
                                1760,
                                1762
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1760,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21460:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "21455:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1759,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21455:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1762,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21479:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "21466:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1761,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21466:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1770,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21514:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1763,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4220,
                                        "src": "21487:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1764,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21487:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21487:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1766,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1750,
                                      "src": "21507:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21487:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21487:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21454:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1772,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1760,
                                    "src": "21593:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21599:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1771,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21585:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21585:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1775,
                              "nodeType": "ExpressionStatement",
                              "src": "21585:37:2"
                            }
                          ]
                        },
                        "id": 1777,
                        "nodeType": "IfStatement",
                        "src": "20422:1246:2",
                        "trueBody": {
                          "id": 1748,
                          "nodeType": "Block",
                          "src": "20452:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1672
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1672,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20478:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1748,
                                  "src": "20470:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1671,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20470:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1677,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1673,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1512,
                                    "src": "20486:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1674,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20486:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20501:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "20486:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20470:32:2"
                            },
                            {
                              "assignments": [
                                1679
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1679,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "20536:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1748,
                                  "src": "20520:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1678,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20520:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1688,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1684,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1512,
                                          "src": "20577:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1685,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "20577:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1682,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "20558:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$5899",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2444,
                                      "src": "20558:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1686,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20558:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20550:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1680,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20550:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20550:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20520:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1692,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1512,
                                      "src": "20636:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1693,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "20636:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1694,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20654:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1689,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20614:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5899",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5546,
                                  "src": "20614:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20614:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1696,
                              "nodeType": "ExpressionStatement",
                              "src": "20614:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1700,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1477,
                                    "src": "20720:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1701,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20728:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1697,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20698:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5899",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5546,
                                  "src": "20698:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20698:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1703,
                              "nodeType": "ExpressionStatement",
                              "src": "20698:56:2"
                            },
                            {
                              "expression": {
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1704,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1512,
                                    "src": "20773:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20773:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1707,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20788:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20773:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1709,
                              "nodeType": "ExpressionStatement",
                              "src": "20773:16:2"
                            },
                            {
                              "expression": {
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20836:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1710,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20843:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1712,
                                  "indexExpression": {
                                    "id": 1711,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "20849:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20843:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1714,
                              "nodeType": "ExpressionStatement",
                              "src": "20836:21:2"
                            },
                            {
                              "assignments": [
                                1716,
                                1718
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1716,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20924:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1748,
                                  "src": "20919:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1715,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20919:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1718,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20943:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1748,
                                  "src": "20930:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1717,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20930:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1725,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1723,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20982:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1719,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1679,
                                      "src": "20951:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20951:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1721,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1672,
                                      "src": "20975:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20951:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20951:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20918:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1727,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1716,
                                    "src": "21011:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21017:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1726,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21003:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21003:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1730,
                              "nodeType": "ExpressionStatement",
                              "src": "21003:37:2"
                            },
                            {
                              "expression": {
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1731,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1716,
                                      "src": "21096:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1732,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1718,
                                      "src": "21102:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1733,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21095:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21140:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1734,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21110:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1735,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21110:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1736,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21110:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1737,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1672,
                                        "src": "21133:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21110:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21110:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21095:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1742,
                              "nodeType": "ExpressionStatement",
                              "src": "21095:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1744,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1716,
                                    "src": "21169:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21175:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1743,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21161:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21161:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1747,
                              "nodeType": "ExpressionStatement",
                              "src": "21161:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1779,
                  "nodeType": "IfStatement",
                  "src": "19412:2266:2",
                  "trueBody": {
                    "id": 1666,
                    "nodeType": "Block",
                    "src": "19432:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1588
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1588,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19518:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1666,
                            "src": "19510:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1587,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19510:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1593,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1589,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1512,
                              "src": "19526:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19526:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19541:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19526:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19510:32:2"
                      },
                      {
                        "assignments": [
                          1595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1595,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "19572:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1666,
                            "src": "19556:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1594,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19556:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1604,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1600,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1512,
                                    "src": "19615:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1601,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "19615:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1598,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "19596:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$5899",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2444,
                                "src": "19596:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19596:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19588:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1596,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19588:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19588:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19556:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1608,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1512,
                                "src": "19725:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1609,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "19725:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1610,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1512,
                                "src": "19739:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1611,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "19739:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1605,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19703:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5899",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5546,
                            "src": "19703:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19703:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "19703:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1617,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1512,
                                "src": "19792:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "19792:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1619,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "19811:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1614,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19770:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5899",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5546,
                            "src": "19770:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19770:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1621,
                        "nodeType": "ExpressionStatement",
                        "src": "19770:67:2"
                      },
                      {
                        "expression": {
                          "id": 1626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1622,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1512,
                              "src": "19852:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1624,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19852:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19867:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19852:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1627,
                        "nodeType": "ExpressionStatement",
                        "src": "19852:16:2"
                      },
                      {
                        "expression": {
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "19911:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1628,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19918:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1630,
                            "indexExpression": {
                              "id": 1629,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "19924:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19918:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1632,
                        "nodeType": "ExpressionStatement",
                        "src": "19911:21:2"
                      },
                      {
                        "assignments": [
                          1634,
                          1636
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1634,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "19991:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1666,
                            "src": "19986:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1633,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19986:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1636,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20010:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1666,
                            "src": "19997:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1635,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "19997:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1643,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20051:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1637,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "20018:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20018:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1639,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "20044:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20018:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20018:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19985:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1645,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1634,
                              "src": "20076:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20082:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1644,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20068:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20068:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1648,
                        "nodeType": "ExpressionStatement",
                        "src": "20068:37:2"
                      },
                      {
                        "expression": {
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1649,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1634,
                                "src": "20153:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1650,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1636,
                                "src": "20159:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1651,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20152:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20197:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1652,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20167:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20167:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20167:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1655,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1588,
                                  "src": "20190:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20167:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20167:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20152:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "20152:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1662,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1634,
                              "src": "20222:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20228:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20214:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20214:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1665,
                        "nodeType": "ExpressionStatement",
                        "src": "20214:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "18073:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "18100:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "18092:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18092:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "18116:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "18108:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18108:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "18142:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "18125:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1480,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18125:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1481,
                    "nodeType": "ArrayTypeName",
                    "src": "18125:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18091:59:2"
            },
            "returnParameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18160:0:2"
            },
            "scope": 1827,
            "src": "18064:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1789,
              "nodeType": "Block",
              "src": "21793:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21811:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21817:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21803:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21803:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1787,
                  "nodeType": "ExpressionStatement",
                  "src": "21803:30:2"
                },
                {
                  "id": 1788,
                  "nodeType": "PlaceholderStatement",
                  "src": "21843:1:2"
                }
              ]
            },
            "id": 1790,
            "name": "onlyAdmin",
            "nameLocation": "21781:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21790:2:2"
            },
            "src": "21772:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1798,
              "nodeType": "Block",
              "src": "21881:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21899:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21905:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21891:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21891:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "21891:30:2"
                },
                {
                  "id": 1797,
                  "nodeType": "PlaceholderStatement",
                  "src": "21931:1:2"
                }
              ]
            },
            "id": 1799,
            "name": "onlyNFTOwner",
            "nameLocation": "21866:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21878:2:2"
            },
            "src": "21857:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1807,
              "nodeType": "Block",
              "src": "21967:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21985:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21991:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21977:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21977:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "21977:31:2"
                },
                {
                  "id": 1806,
                  "nodeType": "PlaceholderStatement",
                  "src": "22018:1:2"
                }
              ]
            },
            "id": 1808,
            "name": "onlyLessee",
            "nameLocation": "21954:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21964:2:2"
            },
            "src": "21945:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "22054:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22094:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22100:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22086:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22086:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1814,
                  "nodeType": "ExpressionStatement",
                  "src": "22086:31:2"
                },
                {
                  "id": 1815,
                  "nodeType": "PlaceholderStatement",
                  "src": "22127:1:2"
                }
              ]
            },
            "id": 1817,
            "name": "onlyMember",
            "nameLocation": "22041:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22051:2:2"
            },
            "src": "22032:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "22185:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22203:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22208:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22195:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22195:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "22195:36:2"
                },
                {
                  "id": 1824,
                  "nodeType": "PlaceholderStatement",
                  "src": "22262:1:2"
                }
              ]
            },
            "id": 1826,
            "name": "onlyBoard",
            "nameLocation": "22173:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22182:2:2"
            },
            "src": "22164:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1828,
        "src": "743:21534:2",
        "usedErrors": [
          1837
        ]
      }
    ],
    "src": "0:22277:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b5060405162003ed238038062003ed28339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b613dc7806200010b6000396000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063e95d23471161006f578063e95d234714610421578063f18c51d314610461578063f2fde38b14610481578063f4739bd9146104a1578063f713b7ed146104d1578063ff981099146104f157600080fd5b80638da5cb5b1461034957806390b293d814610371578063976217cd14610387578063b2bad544146103b4578063beca3a16146103e1578063d374a2171461040157600080fd5b806369d037381161010857806369d037381461027e578063715018a61461029e57806372e185ce146102b3578063826b8ebd146102d35780638a6655d6146102f35780638d9776721461031357600080fd5b8063013cf08b1461015b57806309265ce61461019557806310190ef1146101b75780634b50f16a146101eb57806361f9e9a8146102185780636215597b1461023857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004612ef4565b61051e565b60405161018c959493929190612f65565b60405180910390f35b3480156101a157600080fd5b506101b56101b036600461306e565b6105ea565b005b3480156101c357600080fd5b506101d76101d2366004612ef4565b610730565b60405161018c9897969594939291906130cd565b3480156101f757600080fd5b5061020b61020636600461314c565b61083a565b60405161018c9190613238565b34801561022457600080fd5b506101b5610233366004613307565b610c6c565b34801561024457600080fd5b506102706102533660046133a4565b600360209081526000928352604080842090915290825290205481565b60405190815260200161018c565b34801561028a57600080fd5b506101b56102993660046133db565b610c94565b3480156102aa57600080fd5b506101b5610ce0565b3480156102bf57600080fd5b506101b56102ce366004613467565b610d16565b3480156102df57600080fd5b506102706102ee366004612ef4565b61119a565b3480156102ff57600080fd5b506101b561030e3660046134bd565b6113b0565b34801561031f57600080fd5b5061033361032e366004612ef4565b6113e9565b60405161018c9a999897969594939291906134e9565b34801561035557600080fd5b506001546040516001600160a01b03909116815260200161018c565b34801561037d57600080fd5b50610270600a5481565b34801561039357600080fd5b506103a76103a2366004612ef4565b6114eb565b60405161018c919061356a565b3480156103c057600080fd5b506103d46103cf36600461314c565b61162d565b60405161018c919061357d565b3480156103ed57600080fd5b506101b56103fc3660046135d2565b6119f3565b34801561040d57600080fd5b506101b561041c366004612ef4565b611b08565b34801561042d57600080fd5b5060055461044790600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161018c565b34801561046d57600080fd5b506101b561047c366004613622565b611e44565b34801561048d57600080fd5b506101b561049c3660046133db565b6125ea565b3480156104ad57600080fd5b506104c16104bc366004612ef4565b612685565b604051901515815260200161018c565b3480156104dd57600080fd5b506101b56104ec366004613671565b612855565b3480156104fd57600080fd5b5061051161050c366004612ef4565b6129f2565b60405161018c91906136ad565b600760205260009081526040902080548190610539906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610565906136f5565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105ff576105ff61372f565b602002602001015160405160200161061991815260200190565b604051602081830303815290604052905081156106a55760005b83518110156106a35783818151811061064e5761064e61372f565b602002602001015160405160200161066891815260200190565b604051602081830303815290604052805190602001208482815181106106905761069061372f565b6020908102919091010152600101610633565b505b6000836040516020016106b89190613745565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106107085761070861372f565b602002602001015185604051610721949392919061377b565b60405180910390a15050505050565b6004818154811061074057600080fd5b9060005260206000209060030201600091509050806001018054610763906136f5565b80601f016020809104026020016040519081016040528092919081815260200182805461078f906136f5565b80156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000610857600554600f81810b600160801b909204900b0390565b9050610861612e56565b600080805b848110156109e957610879600582612b17565b600081815260096020526040908190208151610140810190925280549295509091829082906108a7906136f5565b80601f01602080910402602001604051908101604052809291908181526020018280546108d3906136f5565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519195504291161180156109d557508664ffffffffff168460e0015161ffff16145b156109e1578160010191505b600101610866565b5080600003610a5e57604080516001808252818301909252600091816020015b610a11612e56565b815260200190600190039081610a095790505090506103e781600081518110610a3c57610a3c61372f565b60209081029190910181015164ffffffffff9092169101529695505050505050565b600080826001600160401b03811115610a7957610a79612fa9565b604051908082528060200260200182016040528015610ab257816020015b610a9f612e56565b815260200190600190039081610a975790505b50905060005b86811015610c6057610acb600582612b17565b60008181526009602052604090819020815161014081019092528054929750909182908290610af9906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b25906136f5565b8015610b725780601f10610b4757610100808354040283529160200191610b72565b820191906000526020600020905b815481529060010190602001808311610b5557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919750429116118015610c2757508864ffffffffff168660e0015161ffff16145b15610c585785828481518110610c3f57610c3f61372f565b6020026020010181905250826001019250838311610c60575b600101610ab8565b50979650505050505050565b610c7a565b60405180910390fd5b610c8b878760008888888888612b88565b50505050505050565b6001546001600160a01b03163314610cbe5760405162461bcd60e51b8152600401610c71906137ac565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610d0a5760405162461bcd60e51b8152600401610c71906137ac565b610d146000612d07565b565b60005b6004548110156111945783604051602001610d3491906137e1565b6040516020818303038152906040528051906020012060048281548110610d5d57610d5d61372f565b9060005260206000209060030201600101604051602001610d7e9190613871565b604051602081830303815290604052805190602001200361118c574260048281548110610dad57610dad61372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610e11575060048181548110610deb57610deb61372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610e535760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610c71565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610e9657610e9661372f565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610ed057610ed061372f565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610f6e90826138d3565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a80546000906110729084906139a8565b90915550611085905042620151806139a8565b600483815481106110985761109861372f565b6000918252602080832064ffffffffff881684526003909202909101905260409020556004805460019190849081106110d3576110d361372f565b906000526020600020906003020160020160149054906101000a900461ffff166110fd91906139c0565b600483815481106111105761111061372f565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600a5461116c91906139e3565b874260405161117e94939291906139fa565b60405180910390a150611194565b600101610d19565b50505050565b600060085482106111e05760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c71565b600082815260076020526040902060030154600160501b900464ffffffffff1642116112445760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610c71565b6000806000805b60008681526007602052604090206001015461ffff168110156113655760008681526007602052604090208390600201826008811061128c5761128c61372f565b601091828204019190066002029054906101000a900461ffff1661ffff16111561130757600086815260076020526040902060020181600881106112d2576112d261372f565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361130257600091505b611353565b60008681526007602052604090208390600201826008811061132b5761132b61372f565b601091828204019190066002029054906101000a900461ffff1661ffff160361135357600191505b8061135d81613a31565b91505061124b565b5080156113a75760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610c71565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610c71565b600960205260009081526040902080548190611404906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611430906136f5565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6114f3612e56565b600082815260096020526040908190208151610140810190925280548290829061151c906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611548906136f5565b80156115955780601f1061156a57610100808354040283529160200191611595565b820191906000526020600020905b81548152906001019060200180831161157857829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6004548110156117455742600482815481106116515761165161372f565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156116b5575042600482815481106116905761169061372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156116f4575042600482815481106116d0576116d061372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561173157506001600482815481106117105761171061372f565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561173d578160010191505b600101611633565b50806000036117b157604080516001808252818301909252600091816020015b6060815260200190600190039081611765579050509050604051806020016040528060008152508160008151811061179f5761179f61372f565b60209081029190910101529392505050565b6000816001600160401b038111156117cb576117cb612fa9565b6040519080825280602002602001820160405280156117fe57816020015b60608152602001906001900390816117e95790505b5090506000805b6004548110156119e95742600482815481106118235761182361372f565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611887575042600482815481106118625761186261372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156118c6575042600482815481106118a2576118a261372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561190357506001600482815481106118e2576118e261372f565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156119e1576004818154811061191b5761191b61372f565b90600052602060002090600302016001018054611937906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611963906136f5565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b50505050508383815181106119c7576119c761372f565b6020026020010181905250816001019150838210156119e9575b600101611805565b5090949350505050565b60018561ffff16118015611a0c57506101018561ffff16105b611a585760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610c71565b600160086000828254611a6b91906139a8565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611aea888a83613a67565b50611afe8888600854600089898989612b88565b5050505050505050565b6000611b23600554600f81810b600160801b909204900b0390565b9050611b2d612e56565b6000805b83811015611e3d57611b44600582612b17565b60008181526009602052604090819020815161014081019092528054929450909182908290611b72906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9e906136f5565b8015611beb5780601f10611bc057610100808354040283529160200191611beb565b820191906000526020600020905b815481529060010190602001808311611bce57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611c9d575084836020015164ffffffffff1614155b8015611cb257508483610100015161ffff1614155b15611e355761ffff851660e0840152600b54611cce90426139a8565b64ffffffffff16610120840152600082815260096020526040902083518491908190611cfa90826138d3565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b949092169390930217909255600084815260099092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611e2c9188918691613b26565b60405180910390a15b600101611b31565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb19190613a4a565b6001600160a01b0316148015611ee25750600082815260096020526040902060040154600160701b900461ffff1683145b611f2e5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610c71565b6000815111611f3c57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611fd75760005b8351811015611fd557838181518110611f8057611f8061372f565b6020026020010151604051602001611f9a91815260200190565b60405160208183030381529060405280519060200120848281518110611fc257611fc261372f565b6020908102919091010152600101611f65565b505b600083604051602001611fea9190613745565b604051602081830303815290604052805190602001209050600081846002015414612016576000612019565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361237f5760048401546000906120a990600290600160201b90046001600160501b0316613bf1565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121399190613a4a565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156121a357600080fd5b505af11580156121b7573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561221f57600080fd5b505af1158015612233573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff0000000019169055506000888152600960205260408120906122698282612eaa565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146122e7576040519150601f19603f3d011682016040523d82523d6000602084013e6122ec565b606091505b50915091508161230e5760405162461bcd60e51b8152600401610c7190613c25565b60405133908590600081818185875af1925050503d806000811461234e576040519150601f19603f3d011682016040523d82523d6000602084013e612353565b606091505b509092509050816123765760405162461bcd60e51b8152600401610c7190613c25565b50505050610c8b565b818460030154036124f65760048401546000906123ae90600290600160201b90046001600160501b0316613bf1565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561241a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243e9190613a4a565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156124a257600080fd5b505af11580156124b6573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401612205565b60048401546000878152600960205260408120600160201b9092046001600160501b031691906125268282612eaa565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061256d6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146125b7576040519150601f19603f3d011682016040523d82523d6000602084013e6125bc565b606091505b5091509150816125de5760405162461bcd60e51b8152600401610c7190613c25565b50505050505050505050565b6001546001600160a01b031633146126145760405162461bcd60e51b8152600401610c71906137ac565b6001600160a01b0381166126795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c71565b61268281612d07565b50565b6000806126a1600554600f81810b600160801b909204900b0390565b90506126ab612e56565b60005b8281101561284a57600960006126c5600584612b17565b60001c8152602001908152602001600020604051806101400160405290816000820180546126f2906136f5565b80601f016020809104026020016040519081016040528092919081815260200182805461271e906136f5565b801561276b5780601f106127405761010080835404028352916020019161276b565b820191906000526020600020905b81548152906001019060200180831161274e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b900482166101209182015282015191935042911610801561281d575084826020015164ffffffffff1614155b801561283257508482610100015161ffff1614155b1561284257506001949350505050565b6001016126ae565b506000949350505050565b60005b6004548110156129ee57816040516020016128739190613c53565b604051602081830303815290604052805190602001206004828154811061289c5761289c61372f565b90600052602060002090600302016001016040516020016128bd9190613c6f565b60405160208183030381529060405280519060200120036129e6576000600482815481106128ed576128ed61372f565b9060005260206000209060030201905060006004600160048054905061291391906139e3565b815481106129235761292361372f565b906000526020600020906003020190508091506004600160048054905061294a91906139e3565b8154811061295a5761295a61372f565b9060005260206000209060030201600060018201600061297a9190612eaa565b5060020180546001600160b01b03191690556004805461299c906001906139e3565b815481106129ac576129ac61372f565b906000526020600020906003020160006001820160006129cc9190612eaa565b5060020180546001600160b01b0319169055506129ee9050565b600101612858565b5050565b60606008548210612a385760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c71565b60008281526007602052604081206001015461ffff166001600160401b03811115612a6557612a65612fa9565b604051908082528060200260200182016040528015612a8e578160200160208202803683370190505b50905060005b8151811015612b105760008481526007602052604090206002018160088110612abf57612abf61372f565b601091828204019190066002029054906101000a900461ffff16828281518110612aeb57612aeb61372f565b61ffff9092166020928302919091019091015280612b0881613a31565b915050612a94565b5092915050565b600080612b3a612b2684612d59565b8554612b359190600f0b613ce1565b612dc7565b8454909150600160801b9004600f90810b9082900b12612b6d57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b6004805460018101808355600083815291929083908110612bab57612bab61372f565b60009182526020909120600390910201905060018101612bcc8a8c83613a67565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051612cf3989796959493929190613d22565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160ff1b03821115612dc35760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610c71565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612dfa57506f7fffffffffffffffffffffffffffffff8213155b612dc35760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610c71565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b508054612eb6906136f5565b6000825580601f10612ec6575050565b601f01602090049060005260206000209081019061268291905b80821115612dc35760008155600101612ee0565b600060208284031215612f0657600080fd5b5035919050565b60005b83811015612f28578181015183820152602001612f10565b838111156111945750506000910152565b60008151808452612f51816020860160208601612f0d565b601f01601f19169290920160200192915050565b60a081526000612f7860a0830188612f39565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612fe757612fe7612fa9565b604052919050565b600082601f83011261300057600080fd5b813560206001600160401b0382111561301b5761301b612fa9565b8160051b61302a828201612fbf565b928352848101820192828101908785111561304457600080fd5b83870192505b848310156130635782358252918301919083019061304a565b979650505050505050565b60008060006060848603121561308357600080fd5b8335925060208401356001600160401b038111156130a057600080fd5b6130ac86828701612fef565b925050604084013580151581146130c257600080fd5b809150509250925092565b60006101008083526130e18184018c612f39565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461314757600080fd5b919050565b60006020828403121561315e57600080fd5b61316782613132565b9392505050565b6000610140825181855261318482860182612f39565b915050602083015161319f602086018264ffffffffff169052565b50604083015160408501526060830151606085015260808301516131c8608086018260ff169052565b5060a08301516131df60a086018262ffffff169052565b5060c08301516131fa60c08601826001600160501b03169052565b5060e083015161321060e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff8116828701526119e9565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561328d57603f1988860301845261327b85835161316e565b9450928501929085019060010161325f565b5092979650505050505050565b60008083601f8401126132ac57600080fd5b5081356001600160401b038111156132c357600080fd5b6020830191508360208285010111156132db57600080fd5b9250929050565b803562ffffff8116811461314757600080fd5b803561ffff8116811461314757600080fd5b600080600080600080600060c0888a03121561332257600080fd5b87356001600160401b0381111561333857600080fd5b6133448a828b0161329a565b909850965050602088013560ff8116811461335e57600080fd5b945061336c604089016132e2565b935061337a60608901613132565b925061338860808901613132565b915061339660a089016132f5565b905092959891949750929550565b600080604083850312156133b757600080fd5b50508035926020909101359150565b6001600160a01b038116811461268257600080fd5b6000602082840312156133ed57600080fd5b8135613167816133c6565b600082601f83011261340957600080fd5b81356001600160401b0381111561342257613422612fa9565b613435601f8201601f1916602001612fbf565b81815284602083860101111561344a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561347c57600080fd5b83356001600160401b0381111561349257600080fd5b61349e868287016133f8565b935050602084013591506134b460408501613132565b90509250925092565b6000806000606084860312156134d257600080fd5b505081359360208301359350604090920135919050565b60006101408083526134fd8184018e612f39565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b602081526000613167602083018461316e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561328d57603f198886030184526135c0858351612f39565b945092850192908501906001016135a4565b600080600080600080600060c0888a0312156135ed57600080fd5b87356001600160401b0381111561360357600080fd5b61360f8a828b0161329a565b909850965061335e9050602089016132f5565b60008060006060848603121561363757600080fd5b833592506020840135915060408401356001600160401b0381111561365b57600080fd5b61366786828701612fef565b9150509250925092565b60006020828403121561368357600080fd5b81356001600160401b0381111561369957600080fd5b6136a5848285016133f8565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156136e957835161ffff16835292840192918401916001016136c9565b50909695505050505050565b600181811c9082168061370957607f821691505b60208210810361372957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561376f57815185529382019390820190600101613753565b50929695505050505050565b84815283151560208201528260408201526080606082015260006137a26080830184612f39565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260006131676020830184612f39565b60008154613801816136f5565b80855260206001838116801561381e576001811461383857613866565b60ff1985168884015283151560051b880183019550613866565b866000528260002060005b8581101561385e5781548a8201860152908301908401613843565b890184019650505b505050505092915050565b60208152600061316760208301846137f4565b601f8211156138ce57600081815260208120601f850160051c810160208610156138ab5750805b601f850160051c820191505b818110156138ca578281556001016138b7565b5050505b505050565b81516001600160401b038111156138ec576138ec612fa9565b613900816138fa84546136f5565b84613884565b602080601f831160018114613935576000841561391d5750858301515b600019600386901b1c1916600185901b1785556138ca565b600085815260208120601f198616915b8281101561396457888601518255948401946001909101908401613945565b50858210156139825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156139bb576139bb613992565b500190565b600061ffff838116908316818110156139db576139db613992565b039392505050565b6000828210156139f5576139f5613992565b500390565b64ffffffffff85168152836020820152608060408201526000613a206080830185612f39565b905082606083015295945050505050565b600060018201613a4357613a43613992565b5060010190565b600060208284031215613a5c57600080fd5b8151613167816133c6565b6001600160401b03831115613a7e57613a7e612fa9565b613a9283613a8c83546136f5565b83613884565b6000601f841160018114613ac65760008515613aae5750838201355b600019600387901b1c1916600186901b178355611e3d565b600083815260209020601f19861690835b82811015613af75786850135825560209485019460019092019101613ad7565b5086821015613b145760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613b4f6101a08401856137f4565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613bd36101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613c1957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613c65818460208701612f0d565b9190910192915050565b6000808354613c7d816136f5565b60018281168015613c955760018114613caa5761376f565b60ff198416875282151583028701945061376f565b8760005260208060002060005b85811015613cd05781548a820152908401908201613cb7565b505050959091019695505050505050565b600080821280156001600160ff1b0384900385131615613d0357613d03613992565b600160ff1b8390038412811615613d1c57613d1c613992565b50500190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea26469706673582212204abaec2742c5a39066361bbb37b11a8ab12ba8a7d2468591721f4fb39d22f8d864736f6c634300080f0033",
  "bytecodeSha1": "f416ac3c8c244f9f313f95633b95a0889785a0ff",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "162": [
            26367,
            26392,
            false
          ],
          "163": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "161": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "159": [
            4843,
            4860,
            false
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "154": [
            6467,
            6521,
            false
          ],
          "155": [
            6525,
            6547,
            false
          ],
          "156": [
            6551,
            6576,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "142": [
            14910,
            14964,
            false
          ],
          "143": [
            14968,
            14990,
            false
          ],
          "144": [
            14994,
            15019,
            false
          ]
        },
        "Governance.completeTask": {
          "121": [
            15799,
            15879,
            false
          ],
          "122": [
            15966,
            16010,
            false
          ],
          "123": [
            16014,
            16058,
            true
          ]
        },
        "Governance.createProposal": {
          "140": [
            12596,
            12616,
            false
          ],
          "141": [
            12620,
            12642,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "157": [
            10136,
            10228,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "130": [
            8343,
            8405,
            false
          ],
          "131": [
            8421,
            8465,
            false
          ],
          "132": [
            8469,
            8512,
            false
          ],
          "133": [
            8528,
            8559,
            false
          ],
          "134": [
            8889,
            8897,
            false
          ],
          "135": [
            9173,
            9235,
            false
          ],
          "136": [
            9251,
            9295,
            false
          ],
          "137": [
            9299,
            9342,
            false
          ],
          "138": [
            9358,
            9389,
            false
          ],
          "139": [
            9521,
            9537,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "115": [
            7133,
            7187,
            false
          ],
          "116": [
            7191,
            7217,
            false
          ],
          "117": [
            7364,
            7372,
            false
          ],
          "118": [
            7800,
            7854,
            false
          ],
          "119": [
            7858,
            7884,
            false
          ],
          "120": [
            7987,
            8000,
            false
          ]
        },
        "Governance.getVotes": {
          "158": [
            4684,
            4711,
            true
          ]
        },
        "Governance.getWinningVote": {
          "124": [
            5078,
            5105,
            true
          ],
          "125": [
            5145,
            5197,
            true
          ],
          "126": [
            5544,
            5594,
            false
          ],
          "127": [
            5719,
            5725,
            false
          ],
          "128": [
            5773,
            5824,
            false
          ],
          "129": [
            5890,
            5896,
            true
          ]
        },
        "Governance.submitVerification": {
          "145": [
            18228,
            18268,
            false
          ],
          "146": [
            18272,
            18305,
            true
          ],
          "147": [
            18360,
            18378,
            true
          ],
          "148": [
            18983,
            19003,
            false
          ],
          "149": [
            19280,
            19301,
            true
          ],
          "150": [
            19416,
            19431,
            false
          ],
          "151": [
            20076,
            20080,
            true
          ],
          "152": [
            20425,
            20451,
            false
          ],
          "153": [
            21593,
            21597,
            true
          ]
        },
        "Governance.testHashing": {
          "114": [
            17022,
            17030,
            false
          ]
        }
      },
      "20": {},
      "3": {},
      "9": {
        "Ownable.transferOwnership": {
          "160": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "113": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "111": [
            35401,
            35488
          ],
          "112": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "97": [
            4839,
            4882
          ],
          "98": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "4": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "24": [
            2207,
            2237
          ],
          "25": [
            2271,
            2297
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance._createTaskType": {
          "99": [
            13758,
            13774
          ],
          "100": [
            13855,
            13886
          ],
          "101": [
            13900,
            13926
          ],
          "102": [
            13940,
            13976
          ],
          "103": [
            13990,
            14036
          ],
          "104": [
            14050,
            14084
          ],
          "105": [
            14098,
            14138
          ],
          "106": [
            14152,
            14192
          ],
          "107": [
            14206,
            14250
          ],
          "108": [
            14291,
            14415
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "84": [
            6377,
            6449
          ],
          "85": [
            6595,
            6606
          ],
          "86": [
            6644,
            6647
          ],
          "87": [
            6668,
            6680
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "59": [
            14790,
            14856
          ],
          "60": [
            14870,
            14892
          ],
          "61": [
            15198,
            15232
          ],
          "62": [
            15250,
            15331
          ],
          "63": [
            15349,
            15371
          ],
          "64": [
            15389,
            15445
          ],
          "65": [
            15483,
            15486
          ]
        },
        "Governance.completeTask": {
          "22": [
            15958,
            16082
          ],
          "23": [
            16272,
            16353
          ],
          "26": [
            16371,
            16406
          ],
          "27": [
            16424,
            16446
          ],
          "28": [
            16501,
            16572
          ],
          "29": [
            16590,
            16651
          ],
          "30": [
            16670,
            16747
          ],
          "31": [
            16765,
            16770
          ],
          "32": [
            16808,
            16811
          ]
        },
        "Governance.createProposal": {
          "52": [
            12588,
            12672
          ],
          "53": [
            12682,
            12701
          ],
          "54": [
            12801,
            12840
          ],
          "55": [
            12854,
            12893
          ],
          "56": [
            12907,
            12952
          ],
          "57": [
            12966,
            12997
          ],
          "58": [
            13008,
            13120
          ]
        },
        "Governance.createTaskType": {
          "18": [
            13372,
            13478
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "88": [
            10553,
            10583
          ],
          "89": [
            10601,
            10637
          ],
          "90": [
            11107,
            11143
          ],
          "91": [
            11161,
            11166
          ],
          "92": [
            11204,
            11207
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "43": [
            8602,
            8609
          ],
          "44": [
            8817,
            8820
          ],
          "45": [
            8968,
            8984
          ],
          "46": [
            8998,
            9013
          ],
          "47": [
            9422,
            9462
          ],
          "48": [
            9490,
            9499
          ],
          "49": [
            9561,
            9566
          ],
          "50": [
            9622,
            9625
          ],
          "51": [
            9646,
            9660
          ]
        },
        "Governance.getTaskById": {
          "42": [
            4554,
            4575
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "5": [
            7013,
            7079
          ],
          "6": [
            7093,
            7115
          ],
          "7": [
            7246,
            7253
          ],
          "8": [
            7292,
            7295
          ],
          "9": [
            7439,
            7460
          ],
          "10": [
            7506,
            7521
          ],
          "11": [
            7680,
            7746
          ],
          "12": [
            7760,
            7782
          ],
          "13": [
            7903,
            7928
          ],
          "14": [
            7956,
            7965
          ],
          "15": [
            8002,
            8007
          ],
          "16": [
            8046,
            8049
          ],
          "17": [
            8070,
            8084
          ]
        },
        "Governance.getVotes": {
          "93": [
            4676,
            4732
          ],
          "94": [
            4889,
            4934
          ],
          "95": [
            4871,
            4874
          ],
          "96": [
            4954,
            4970
          ]
        },
        "Governance.getWinningVote": {
          "33": [
            5070,
            5126
          ],
          "34": [
            5136,
            5221
          ],
          "35": [
            5614,
            5664
          ],
          "36": [
            5682,
            5697
          ],
          "37": [
            5729,
            5736
          ],
          "38": [
            5843,
            5848
          ],
          "39": [
            5487,
            5490
          ],
          "40": [
            5882,
            5917
          ],
          "41": [
            5927,
            5945
          ]
        },
        "Governance.setNFTAddress": {
          "20": [
            9844,
            9871
          ]
        },
        "Governance.submitVerification": {
          "66": [
            18220,
            18342
          ],
          "67": [
            18352,
            18379
          ],
          "68": [
            19076,
            19128
          ],
          "69": [
            19156,
            19159
          ],
          "70": [
            19320,
            19401
          ],
          "71": [
            19703,
            19756
          ],
          "72": [
            19770,
            19837
          ],
          "73": [
            19852,
            19868
          ],
          "74": [
            19911,
            19932
          ],
          "75": [
            20068,
            20105
          ],
          "76": [
            20152,
            20200
          ],
          "77": [
            20214,
            20251
          ],
          "78": [
            20614,
            20680
          ],
          "79": [
            20698,
            20754
          ],
          "80": [
            21415,
            21436
          ],
          "81": [
            21585,
            21622
          ]
        },
        "Governance.testHashing": {
          "1": [
            17103,
            17155
          ],
          "2": [
            17183,
            17186
          ],
          "3": [
            17284,
            17351
          ]
        }
      },
      "20": {},
      "3": {
        "Context._msgSender": {
          "19": [
            672,
            689
          ]
        }
      },
      "9": {
        "Ownable._setOwner": {
          "109": [
            2193,
            2210
          ],
          "110": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "82": [
            1982,
            2055
          ],
          "83": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063e95d23471161006f578063e95d234714610421578063f18c51d314610461578063f2fde38b14610481578063f4739bd9146104a1578063f713b7ed146104d1578063ff981099146104f157600080fd5b80638da5cb5b1461034957806390b293d814610371578063976217cd14610387578063b2bad544146103b4578063beca3a16146103e1578063d374a2171461040157600080fd5b806369d037381161010857806369d037381461027e578063715018a61461029e57806372e185ce146102b3578063826b8ebd146102d35780638a6655d6146102f35780638d9776721461031357600080fd5b8063013cf08b1461015b57806309265ce61461019557806310190ef1146101b75780634b50f16a146101eb57806361f9e9a8146102185780636215597b1461023857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004612ef4565b61051e565b60405161018c959493929190612f65565b60405180910390f35b3480156101a157600080fd5b506101b56101b036600461306e565b6105ea565b005b3480156101c357600080fd5b506101d76101d2366004612ef4565b610730565b60405161018c9897969594939291906130cd565b3480156101f757600080fd5b5061020b61020636600461314c565b61083a565b60405161018c9190613238565b34801561022457600080fd5b506101b5610233366004613307565b610c6c565b34801561024457600080fd5b506102706102533660046133a4565b600360209081526000928352604080842090915290825290205481565b60405190815260200161018c565b34801561028a57600080fd5b506101b56102993660046133db565b610c94565b3480156102aa57600080fd5b506101b5610ce0565b3480156102bf57600080fd5b506101b56102ce366004613467565b610d16565b3480156102df57600080fd5b506102706102ee366004612ef4565b61119a565b3480156102ff57600080fd5b506101b561030e3660046134bd565b6113b0565b34801561031f57600080fd5b5061033361032e366004612ef4565b6113e9565b60405161018c9a999897969594939291906134e9565b34801561035557600080fd5b506001546040516001600160a01b03909116815260200161018c565b34801561037d57600080fd5b50610270600a5481565b34801561039357600080fd5b506103a76103a2366004612ef4565b6114eb565b60405161018c919061356a565b3480156103c057600080fd5b506103d46103cf36600461314c565b61162d565b60405161018c919061357d565b3480156103ed57600080fd5b506101b56103fc3660046135d2565b6119f3565b34801561040d57600080fd5b506101b561041c366004612ef4565b611b08565b34801561042d57600080fd5b5060055461044790600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161018c565b34801561046d57600080fd5b506101b561047c366004613622565b611e44565b34801561048d57600080fd5b506101b561049c3660046133db565b6125ea565b3480156104ad57600080fd5b506104c16104bc366004612ef4565b612685565b604051901515815260200161018c565b3480156104dd57600080fd5b506101b56104ec366004613671565b612855565b3480156104fd57600080fd5b5061051161050c366004612ef4565b6129f2565b60405161018c91906136ad565b600760205260009081526040902080548190610539906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610565906136f5565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105ff576105ff61372f565b602002602001015160405160200161061991815260200190565b604051602081830303815290604052905081156106a55760005b83518110156106a35783818151811061064e5761064e61372f565b602002602001015160405160200161066891815260200190565b604051602081830303815290604052805190602001208482815181106106905761069061372f565b6020908102919091010152600101610633565b505b6000836040516020016106b89190613745565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106107085761070861372f565b602002602001015185604051610721949392919061377b565b60405180910390a15050505050565b6004818154811061074057600080fd5b9060005260206000209060030201600091509050806001018054610763906136f5565b80601f016020809104026020016040519081016040528092919081815260200182805461078f906136f5565b80156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000610857600554600f81810b600160801b909204900b0390565b9050610861612e56565b600080805b848110156109e957610879600582612b17565b600081815260096020526040908190208151610140810190925280549295509091829082906108a7906136f5565b80601f01602080910402602001604051908101604052809291908181526020018280546108d3906136f5565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519195504291161180156109d557508664ffffffffff168460e0015161ffff16145b156109e1578160010191505b600101610866565b5080600003610a5e57604080516001808252818301909252600091816020015b610a11612e56565b815260200190600190039081610a095790505090506103e781600081518110610a3c57610a3c61372f565b60209081029190910181015164ffffffffff9092169101529695505050505050565b600080826001600160401b03811115610a7957610a79612fa9565b604051908082528060200260200182016040528015610ab257816020015b610a9f612e56565b815260200190600190039081610a975790505b50905060005b86811015610c6057610acb600582612b17565b60008181526009602052604090819020815161014081019092528054929750909182908290610af9906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b25906136f5565b8015610b725780601f10610b4757610100808354040283529160200191610b72565b820191906000526020600020905b815481529060010190602001808311610b5557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919750429116118015610c2757508864ffffffffff168660e0015161ffff16145b15610c585785828481518110610c3f57610c3f61372f565b6020026020010181905250826001019250838311610c60575b600101610ab8565b50979650505050505050565b610c7a565b60405180910390fd5b610c8b878760008888888888612b88565b50505050505050565b6001546001600160a01b03163314610cbe5760405162461bcd60e51b8152600401610c71906137ac565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610d0a5760405162461bcd60e51b8152600401610c71906137ac565b610d146000612d07565b565b60005b6004548110156111945783604051602001610d3491906137e1565b6040516020818303038152906040528051906020012060048281548110610d5d57610d5d61372f565b9060005260206000209060030201600101604051602001610d7e9190613871565b604051602081830303815290604052805190602001200361118c574260048281548110610dad57610dad61372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610e11575060048181548110610deb57610deb61372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610e535760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610c71565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610e9657610e9661372f565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610ed057610ed061372f565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610f6e90826138d3565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a80546000906110729084906139a8565b90915550611085905042620151806139a8565b600483815481106110985761109861372f565b6000918252602080832064ffffffffff881684526003909202909101905260409020556004805460019190849081106110d3576110d361372f565b906000526020600020906003020160020160149054906101000a900461ffff166110fd91906139c0565b600483815481106111105761111061372f565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600a5461116c91906139e3565b874260405161117e94939291906139fa565b60405180910390a150611194565b600101610d19565b50505050565b600060085482106111e05760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c71565b600082815260076020526040902060030154600160501b900464ffffffffff1642116112445760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610c71565b6000806000805b60008681526007602052604090206001015461ffff168110156113655760008681526007602052604090208390600201826008811061128c5761128c61372f565b601091828204019190066002029054906101000a900461ffff1661ffff16111561130757600086815260076020526040902060020181600881106112d2576112d261372f565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361130257600091505b611353565b60008681526007602052604090208390600201826008811061132b5761132b61372f565b601091828204019190066002029054906101000a900461ffff1661ffff160361135357600191505b8061135d81613a31565b91505061124b565b5080156113a75760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610c71565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610c71565b600960205260009081526040902080548190611404906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611430906136f5565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6114f3612e56565b600082815260096020526040908190208151610140810190925280548290829061151c906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611548906136f5565b80156115955780601f1061156a57610100808354040283529160200191611595565b820191906000526020600020905b81548152906001019060200180831161157857829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6004548110156117455742600482815481106116515761165161372f565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156116b5575042600482815481106116905761169061372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156116f4575042600482815481106116d0576116d061372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561173157506001600482815481106117105761171061372f565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561173d578160010191505b600101611633565b50806000036117b157604080516001808252818301909252600091816020015b6060815260200190600190039081611765579050509050604051806020016040528060008152508160008151811061179f5761179f61372f565b60209081029190910101529392505050565b6000816001600160401b038111156117cb576117cb612fa9565b6040519080825280602002602001820160405280156117fe57816020015b60608152602001906001900390816117e95790505b5090506000805b6004548110156119e95742600482815481106118235761182361372f565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611887575042600482815481106118625761186261372f565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156118c6575042600482815481106118a2576118a261372f565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561190357506001600482815481106118e2576118e261372f565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156119e1576004818154811061191b5761191b61372f565b90600052602060002090600302016001018054611937906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611963906136f5565b80156119b05780601f10611985576101008083540402835291602001916119b0565b820191906000526020600020905b81548152906001019060200180831161199357829003601f168201915b50505050508383815181106119c7576119c761372f565b6020026020010181905250816001019150838210156119e9575b600101611805565b5090949350505050565b60018561ffff16118015611a0c57506101018561ffff16105b611a585760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610c71565b600160086000828254611a6b91906139a8565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611aea888a83613a67565b50611afe8888600854600089898989612b88565b5050505050505050565b6000611b23600554600f81810b600160801b909204900b0390565b9050611b2d612e56565b6000805b83811015611e3d57611b44600582612b17565b60008181526009602052604090819020815161014081019092528054929450909182908290611b72906136f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9e906136f5565b8015611beb5780601f10611bc057610100808354040283529160200191611beb565b820191906000526020600020905b815481529060010190602001808311611bce57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611c9d575084836020015164ffffffffff1614155b8015611cb257508483610100015161ffff1614155b15611e355761ffff851660e0840152600b54611cce90426139a8565b64ffffffffff16610120840152600082815260096020526040902083518491908190611cfa90826138d3565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b949092169390930217909255600084815260099092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611e2c9188918691613b26565b60405180910390a15b600101611b31565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb19190613a4a565b6001600160a01b0316148015611ee25750600082815260096020526040902060040154600160701b900461ffff1683145b611f2e5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610c71565b6000815111611f3c57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611fd75760005b8351811015611fd557838181518110611f8057611f8061372f565b6020026020010151604051602001611f9a91815260200190565b60405160208183030381529060405280519060200120848281518110611fc257611fc261372f565b6020908102919091010152600101611f65565b505b600083604051602001611fea9190613745565b604051602081830303815290604052805190602001209050600081846002015414612016576000612019565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361237f5760048401546000906120a990600290600160201b90046001600160501b0316613bf1565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121399190613a4a565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156121a357600080fd5b505af11580156121b7573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561221f57600080fd5b505af1158015612233573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff0000000019169055506000888152600960205260408120906122698282612eaa565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146122e7576040519150601f19603f3d011682016040523d82523d6000602084013e6122ec565b606091505b50915091508161230e5760405162461bcd60e51b8152600401610c7190613c25565b60405133908590600081818185875af1925050503d806000811461234e576040519150601f19603f3d011682016040523d82523d6000602084013e612353565b606091505b509092509050816123765760405162461bcd60e51b8152600401610c7190613c25565b50505050610c8b565b818460030154036124f65760048401546000906123ae90600290600160201b90046001600160501b0316613bf1565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561241a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243e9190613a4a565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156124a257600080fd5b505af11580156124b6573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401612205565b60048401546000878152600960205260408120600160201b9092046001600160501b031691906125268282612eaa565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061256d6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146125b7576040519150601f19603f3d011682016040523d82523d6000602084013e6125bc565b606091505b5091509150816125de5760405162461bcd60e51b8152600401610c7190613c25565b50505050505050505050565b6001546001600160a01b031633146126145760405162461bcd60e51b8152600401610c71906137ac565b6001600160a01b0381166126795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c71565b61268281612d07565b50565b6000806126a1600554600f81810b600160801b909204900b0390565b90506126ab612e56565b60005b8281101561284a57600960006126c5600584612b17565b60001c8152602001908152602001600020604051806101400160405290816000820180546126f2906136f5565b80601f016020809104026020016040519081016040528092919081815260200182805461271e906136f5565b801561276b5780601f106127405761010080835404028352916020019161276b565b820191906000526020600020905b81548152906001019060200180831161274e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b900482166101209182015282015191935042911610801561281d575084826020015164ffffffffff1614155b801561283257508482610100015161ffff1614155b1561284257506001949350505050565b6001016126ae565b506000949350505050565b60005b6004548110156129ee57816040516020016128739190613c53565b604051602081830303815290604052805190602001206004828154811061289c5761289c61372f565b90600052602060002090600302016001016040516020016128bd9190613c6f565b60405160208183030381529060405280519060200120036129e6576000600482815481106128ed576128ed61372f565b9060005260206000209060030201905060006004600160048054905061291391906139e3565b815481106129235761292361372f565b906000526020600020906003020190508091506004600160048054905061294a91906139e3565b8154811061295a5761295a61372f565b9060005260206000209060030201600060018201600061297a9190612eaa565b5060020180546001600160b01b03191690556004805461299c906001906139e3565b815481106129ac576129ac61372f565b906000526020600020906003020160006001820160006129cc9190612eaa565b5060020180546001600160b01b0319169055506129ee9050565b600101612858565b5050565b60606008548210612a385760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c71565b60008281526007602052604081206001015461ffff166001600160401b03811115612a6557612a65612fa9565b604051908082528060200260200182016040528015612a8e578160200160208202803683370190505b50905060005b8151811015612b105760008481526007602052604090206002018160088110612abf57612abf61372f565b601091828204019190066002029054906101000a900461ffff16828281518110612aeb57612aeb61372f565b61ffff9092166020928302919091019091015280612b0881613a31565b915050612a94565b5092915050565b600080612b3a612b2684612d59565b8554612b359190600f0b613ce1565b612dc7565b8454909150600160801b9004600f90810b9082900b12612b6d57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b6004805460018101808355600083815291929083908110612bab57612bab61372f565b60009182526020909120600390910201905060018101612bcc8a8c83613a67565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051612cf3989796959493929190613d22565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160ff1b03821115612dc35760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610c71565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612dfa57506f7fffffffffffffffffffffffffffffff8213155b612dc35760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610c71565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b508054612eb6906136f5565b6000825580601f10612ec6575050565b601f01602090049060005260206000209081019061268291905b80821115612dc35760008155600101612ee0565b600060208284031215612f0657600080fd5b5035919050565b60005b83811015612f28578181015183820152602001612f10565b838111156111945750506000910152565b60008151808452612f51816020860160208601612f0d565b601f01601f19169290920160200192915050565b60a081526000612f7860a0830188612f39565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612fe757612fe7612fa9565b604052919050565b600082601f83011261300057600080fd5b813560206001600160401b0382111561301b5761301b612fa9565b8160051b61302a828201612fbf565b928352848101820192828101908785111561304457600080fd5b83870192505b848310156130635782358252918301919083019061304a565b979650505050505050565b60008060006060848603121561308357600080fd5b8335925060208401356001600160401b038111156130a057600080fd5b6130ac86828701612fef565b925050604084013580151581146130c257600080fd5b809150509250925092565b60006101008083526130e18184018c612f39565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461314757600080fd5b919050565b60006020828403121561315e57600080fd5b61316782613132565b9392505050565b6000610140825181855261318482860182612f39565b915050602083015161319f602086018264ffffffffff169052565b50604083015160408501526060830151606085015260808301516131c8608086018260ff169052565b5060a08301516131df60a086018262ffffff169052565b5060c08301516131fa60c08601826001600160501b03169052565b5060e083015161321060e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff8116828701526119e9565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561328d57603f1988860301845261327b85835161316e565b9450928501929085019060010161325f565b5092979650505050505050565b60008083601f8401126132ac57600080fd5b5081356001600160401b038111156132c357600080fd5b6020830191508360208285010111156132db57600080fd5b9250929050565b803562ffffff8116811461314757600080fd5b803561ffff8116811461314757600080fd5b600080600080600080600060c0888a03121561332257600080fd5b87356001600160401b0381111561333857600080fd5b6133448a828b0161329a565b909850965050602088013560ff8116811461335e57600080fd5b945061336c604089016132e2565b935061337a60608901613132565b925061338860808901613132565b915061339660a089016132f5565b905092959891949750929550565b600080604083850312156133b757600080fd5b50508035926020909101359150565b6001600160a01b038116811461268257600080fd5b6000602082840312156133ed57600080fd5b8135613167816133c6565b600082601f83011261340957600080fd5b81356001600160401b0381111561342257613422612fa9565b613435601f8201601f1916602001612fbf565b81815284602083860101111561344a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561347c57600080fd5b83356001600160401b0381111561349257600080fd5b61349e868287016133f8565b935050602084013591506134b460408501613132565b90509250925092565b6000806000606084860312156134d257600080fd5b505081359360208301359350604090920135919050565b60006101408083526134fd8184018e612f39565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b602081526000613167602083018461316e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561328d57603f198886030184526135c0858351612f39565b945092850192908501906001016135a4565b600080600080600080600060c0888a0312156135ed57600080fd5b87356001600160401b0381111561360357600080fd5b61360f8a828b0161329a565b909850965061335e9050602089016132f5565b60008060006060848603121561363757600080fd5b833592506020840135915060408401356001600160401b0381111561365b57600080fd5b61366786828701612fef565b9150509250925092565b60006020828403121561368357600080fd5b81356001600160401b0381111561369957600080fd5b6136a5848285016133f8565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156136e957835161ffff16835292840192918401916001016136c9565b50909695505050505050565b600181811c9082168061370957607f821691505b60208210810361372957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561376f57815185529382019390820190600101613753565b50929695505050505050565b84815283151560208201528260408201526080606082015260006137a26080830184612f39565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260006131676020830184612f39565b60008154613801816136f5565b80855260206001838116801561381e576001811461383857613866565b60ff1985168884015283151560051b880183019550613866565b866000528260002060005b8581101561385e5781548a8201860152908301908401613843565b890184019650505b505050505092915050565b60208152600061316760208301846137f4565b601f8211156138ce57600081815260208120601f850160051c810160208610156138ab5750805b601f850160051c820191505b818110156138ca578281556001016138b7565b5050505b505050565b81516001600160401b038111156138ec576138ec612fa9565b613900816138fa84546136f5565b84613884565b602080601f831160018114613935576000841561391d5750858301515b600019600386901b1c1916600185901b1785556138ca565b600085815260208120601f198616915b8281101561396457888601518255948401946001909101908401613945565b50858210156139825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156139bb576139bb613992565b500190565b600061ffff838116908316818110156139db576139db613992565b039392505050565b6000828210156139f5576139f5613992565b500390565b64ffffffffff85168152836020820152608060408201526000613a206080830185612f39565b905082606083015295945050505050565b600060018201613a4357613a43613992565b5060010190565b600060208284031215613a5c57600080fd5b8151613167816133c6565b6001600160401b03831115613a7e57613a7e612fa9565b613a9283613a8c83546136f5565b83613884565b6000601f841160018114613ac65760008515613aae5750838201355b600019600387901b1c1916600186901b178355611e3d565b600083815260209020601f19861690835b82811015613af75786850135825560209485019460019092019101613ad7565b5086821015613b145760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613b4f6101a08401856137f4565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613bd36101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613c1957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613c65818460208701612f0d565b9190910192915050565b6000808354613c7d816136f5565b60018281168015613c955760018114613caa5761376f565b60ff198416875282151583028701945061376f565b8760005260208060002060005b85811015613cd05781548a820152908401908201613cb7565b505050959091019695505050505050565b600080821280156001600160ff1b0384900385131615613d0357613d03613992565b600160ff1b8390038412811615613d1c57613d1c613992565b50500190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea26469706673582212204abaec2742c5a39066361bbb37b11a8ab12ba8a7d2468591721f4fb39d22f8d864736f6c634300080f0033",
  "deployedSourceMap": "743:21534:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;16855:503;;;;;;;;;;-1:-1:-1;16855:503:2;;;;;:::i;:::-;;:::i;:::-;;2388:27;;;;;;;;;;-1:-1:-1;2388:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;6694:1397::-;;;;;;;;;;-1:-1:-1;6694:1397:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13165:320::-;;;;;;;;;;-1:-1:-1;13165:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8654:25:21;;;8642:2;8627:18;957:75:2;8508:177:21;9777:101:2;;;;;;;;;;-1:-1:-1;9777:101:2;;;;;:::i;:::-;;:::i;1652:94:9:-;;;;;;;;;;;;;:::i;15563:1286:2:-;;;;;;;;;;-1:-1:-1;15563:1286:2;;;;;:::i;:::-;;:::i;4983:969::-;;;;;;;;;;-1:-1:-1;4983:969:2;;;;;:::i;:::-;;:::i;11686:664::-;;;;;;;;;;-1:-1:-1;11686:664:2;;;;;:::i;:::-;;:::i;2783:38::-;;;;;;;;;;-1:-1:-1;2783:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:9:-;;;;;;;;;;-1:-1:-1;1074:6:9;;1001:87;;-1:-1:-1;;;;;1074:6:9;;;11571:51:21;;11559:2;11544:18;1001:87:9;11425:203:21;2827:34:2;;;;;;;;;;;;;;;;4470:112;;;;;;;;;;-1:-1:-1;4470:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8167:1500::-;;;;;;;;;;-1:-1:-1;8167:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12396:762::-;;;;;;;;;;-1:-1:-1;12396:762:2;;;;;:::i;:::-;;:::i;14429:1128::-;;;;;;;;;;-1:-1:-1;14429:1128:2;;;;;:::i;:::-;;:::i;2525:61::-;;;;;;;;;;-1:-1:-1;2525:61:2;;;;;;;;;-1:-1:-1;;;2525:61:2;;;;;;;;;;13669:2:21;13658:22;;;13640:41;;13717:22;;;;13712:2;13697:18;;13690:50;13613:18;2525:61:2;13470:276:21;18064:3620:2;;;;;;;;;;-1:-1:-1;18064:3620:2;;;;;:::i;:::-;;:::i;1901:192:9:-;;;;;;;;;;-1:-1:-1;1901:192:9;;;;;:::i;:::-;;:::i;5999:688:2:-;;;;;;;;;;-1:-1:-1;5999:688:2;;;;;:::i;:::-;;:::i;:::-;;;14405:14:21;;14398:22;14380:41;;14368:2;14353:18;5999:688:2;14240:187:21;10004:1221:2;;;;;;;;;;-1:-1:-1;10004:1221:2;;;;;:::i;:::-;;:::i;4588:389::-;;;;;;;;;;-1:-1:-1;4588:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2702:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2702:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;;-1:-1:-1;;;2702:46:2;;;;:::o;16855:503::-;16956:22;16998:7;17006:1;16998:10;;;;;;;;:::i;:::-;;;;;;;16981:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;16981:28:2;;;;;;;;;;;;;16956:53;;17022:8;17019:193;;;17050:9;17046:156;17069:7;:14;17065:1;:18;17046:156;;;17143:7;17151:1;17143:10;;;;;;;;:::i;:::-;;;;;;;17126:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;17126:28:2;;;;;;;;;;;;;17116:39;;;;;;17103:7;17111:1;17103:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;17183:3;;17046:156;;;;17019:193;17221:14;17265:7;17248:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;17238:36;;;;;;17221:53;;17289:62;17301:6;17317:10;17309:6;:18;17329:7;17337:1;17329:10;;;;;;;;:::i;:::-;;;;;;;17341:9;17289:62;;;;;;;;;:::i;:::-;;;;;;;;16946:412;;16855:503;;;:::o;2388:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;2388:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;-1:-1:-1;;;2388:27:2;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;;2388:27:2;;;;;:::o;6694:1397::-;6763:13;6788:27;6818:49;6842:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6818:49:2;6788:79;;6877:18;;:::i;:::-;6905:14;;;6955:352;6977:19;6973:1;:23;6955:352;;;7030:48;7050:24;7076:1;7030:19;:48::i;:::-;7022:57;7102:13;;;:5;:13;;;;;;;7093:22;;;;;;;;;;7022:57;;-1:-1:-1;7093:22:2;;;;7102:13;;7093:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7093:22:2;;;-1:-1:-1;;7093:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7093:22:2;;-1:-1:-1;;;;;7093:22:2;;;;;-1:-1:-1;;;7093:22:2;;;;;;;;;;-1:-1:-1;;;7093:22:2;;;;;;;-1:-1:-1;;;7093:22:2;;;;;;;;;7133:36;;;;;-1:-1:-1;7172:15:2;7133:54;;;:84;;;;;7211:6;7191:26;;:6;:17;;;:26;;;7133:84;7129:140;;;7246:7;;;;;7129:140;7292:3;;6955:352;;;;7364:5;7371:1;7364:8;7360:172;;7412:13;;;7423:1;7412:13;;;;;;;;;7388:22;;7412:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7388:37;;7457:3;7439:8;7448:1;7439:11;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;:17;;:21;7513:8;6694:1397;-1:-1:-1;;;;;;6694:1397:2:o;7360:172::-;7542:15;7571:21;7606:5;-1:-1:-1;;;;;7595:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7571:41;;7626:9;7622:439;7644:19;7640:1;:23;7622:439;;;7697:48;7717:24;7743:1;7697:19;:48::i;:::-;7689:57;7769:13;;;:5;:13;;;;;;;7760:22;;;;;;;;;;7689:57;;-1:-1:-1;7760:22:2;;;;7769:13;;7760:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7760:22:2;;;-1:-1:-1;;7760:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7760:22:2;;-1:-1:-1;;;;;7760:22:2;;;;;-1:-1:-1;;;7760:22:2;;;;;;;;;;-1:-1:-1;;;7760:22:2;;;;;;;-1:-1:-1;;;7760:22:2;;;;;;;;;7800:36;;;;;-1:-1:-1;7839:15:2;7800:54;;;:84;;;;;7878:6;7858:26;;:6;:17;;;:26;;;7800:84;7796:227;;;7922:6;7903:7;7911;7903:16;;;;;;;;:::i;:::-;;;;;;:25;;;;7956:9;;;;;7995:5;7987:7;:13;8002:5;7984:25;;8046:3;;7622:439;;;-1:-1:-1;8077:7:2;6694:1397;-1:-1:-1;;;;;;;6694:1397:2:o;13165:320::-;22195:36;;;;;;;;;;;13372:106:::1;13388:9;;13399:1;13402:16;13420:10;13432:13;13447;13462:15;13372;:106::i;:::-;13165:320:::0;;;;;;;:::o;9777:101::-;1074:6:9;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;9844:10:2::1;:27:::0;;-1:-1:-1;;;;;;9844:27:2::1;-1:-1:-1::0;;;;;9844:27:2;;;::::1;::::0;;;::::1;::::0;;9777:101::o;1652:94:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;15563:1286:2:-;15747:9;15743:1080;15764:9;:16;15762:18;;15743:1080;;;15868:9;15857:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15847:32;;;;;;15820:9;15830:1;15820:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;15809:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;15799:44;;;;;;:80;15796:989;;15995:15;15966:9;15976:1;15966:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15966:25:2;;;;:44;;;;:92;;;16033:9;16043:1;16033:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16033:25:2;;;;16014:15;:44;;15966:92;15958:124;;;;-1:-1:-1;;;15958:124:2;;19377:2:21;15958:124:2;;;19359:21:21;19416:2;19396:18;;;19389:30;-1:-1:-1;;;19435:18:21;;;19428:49;19494:18;;15958:124:2;19175:343:21;15958:124:2;16135:18;16156:98;;;;;;;;16161:9;16156:98;;;;16171:6;16156:98;;;;;;16179:5;16156:98;;;;16186:1;16156:98;;;;;;16189:9;16199:1;16189:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;16156:98;;;;;;16219:9;16229:1;16219:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;16219:22:2;;;;16156:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;16332:19;;16298:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;16371::2;;:5;:26;;;:35;;;;-1:-1:-1;16371:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;16371:35:2;;;;;;;;;;-1:-1:-1;;16371:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16371:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;16371:35:2;-1:-1:-1;;;;;;;;16371:35:2;;;;;;;-1:-1:-1;;;;16371:35:2;;-1:-1:-1;;;16371:35:2;;;;;;-1:-1:-1;;;;16371:35:2;-1:-1:-1;;;16371:35:2;;;;;-1:-1:-1;;;;16371:35:2;;;;;-1:-1:-1;;;16371:35:2;;;;;;;;;;;;16424:19;:22;;-1:-1:-1;;16424:22:2;;16371:35;;16424:22;:::i;:::-;;;;-1:-1:-1;16548:24:2;;-1:-1:-1;16548:15:2;16566:6;16548:24;:::i;:::-;16501:9;16511:1;16501:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;16620:9;:12;;16650:1;;16620:9;16630:1;;16620:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;16590:9;16600:1;16590:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;16675:72;16689:6;16717:1;16696:19;;:22;;;;:::i;:::-;16720:9;16731:15;16675:72;;;;;;;;;:::i;:::-;;;;;;;;16765:5;;;15796:989;16808:3;;15743:1080;;;;15563:1286;;;:::o;4983:969::-;5050:7;5091:14;;5078:10;:27;5070:56;;;;-1:-1:-1;;;5070:56:2;;22878:2:21;5070:56:2;;;22860:21:21;22917:2;22897:18;;;22890:30;-1:-1:-1;;;22936:18:21;;;22929:46;22992:18;;5070:56:2;22676:340:21;5070:56:2;5163:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5163:34:2;;;;5145:15;:52;5136:85;;;;-1:-1:-1;;;5136:85:2;;23223:2:21;5136:85:2;;;23205:21:21;23262:2;23242:18;;;23235:30;-1:-1:-1;;;23281:18:21;;;23274:49;23340:18;;5136:85:2;23021:343:21;5136:85:2;5341:19;5370:25;5405:11;5432:9;5428:445;5448:21;;;;:9;:21;;;;;:37;;;;;5445:40;;5428:445;;;5544:21;;;;:9;:21;;;;;5577:17;;5544:27;;5572:1;5544:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5541:322;;;5634:21;;;;:9;:21;;;;;:27;;5662:1;5634:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5614:50;;;;5696:1;5682:15;;5719:3;5724:1;5719:6;5715:23;;5735:1;5729:7;;5715:23;5541:322;;;5773:21;;;;:9;:21;;;;;5807:17;;5773:27;;5801:1;5773:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5770:93;;5847:1;5843:5;;5770:93;5487:3;;;;:::i;:::-;;;;5428:445;;;-1:-1:-1;5890:6:2;;5882:35;;;;-1:-1:-1;;;5882:35:2;;23711:2:21;5882:35:2;;;23693:21:21;23750:2;23730:18;;;23723:30;-1:-1:-1;;;23769:18:21;;;23762:46;23825:18;;5882:35:2;23509:340:21;5882:35:2;-1:-1:-1;5934:11:2;;4983:969;-1:-1:-1;;;4983:969:2:o;11686:664::-;22086:31;;-1:-1:-1;;;22086:31:2;;24056:2:21;22086:31:2;;;24038:21:21;24095:2;24075:18;;;24068:30;-1:-1:-1;;;24114:18:21;;;24107:44;24168:18;;22086:31:2;23854:338:21;2783:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2783:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2783:38:2;-1:-1:-1;2783:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;;-1:-1:-1;;;2783:38:2;;;;;:::o;4470:112::-;4531:11;;:::i;:::-;4561:14;;;;:5;:14;;;;;;;4554:21;;;;;;;;;;;;4561:14;;4554:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;-1:-1:-1;;4554:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;-1:-1:-1;;;;;4554:21:2;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;;;-1:-1:-1;;4470:112:2:o;8167:1500::-;8238:15;8265:13;;8288:544;8308:9;:16;8305:19;;8288:544;;;8390:15;8343:9;8353:1;8343:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;8450:15;8421:9;8431:1;8421:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8421:25:2;;;;:44;;8343:122;:169;;;;;8497:15;8469:9;8479:1;8469:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8469:25:2;;;;:43;8343:169;:216;;;;;8558:1;8528:9;8538:1;8528:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;8528:27:2;;;;:31;8343:216;8340:285;;;8602:7;;;;;8340:285;8817:3;;8288:544;;;;8889:5;8896:1;8889:8;8885:139;;8939:15;;;8952:1;8939:15;;;;;;;;;8913:24;;8939:15;;;;;;;;;;;;;;;;;;;;8913:41;;8968:16;;;;;;;;;;;;:8;8977:1;8968:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;9005:8;8167:1500;-1:-1:-1;;;8167:1500:2:o;8885:139::-;9034:23;9073:5;-1:-1:-1;;;;;9060:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9034:45;;9089:15;9122:9;9118:519;9138:9;:16;9135:19;;9118:519;;;9220:15;9173:9;9183:1;9173:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9280:15;9251:9;9261:1;9251:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9251:25:2;;;;:44;;9173:122;:169;;;;;9327:15;9299:9;9309:1;9299:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9299:25:2;;;;:43;9173:169;:216;;;;;9388:1;9358:9;9368:1;9358:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9358:27:2;;;;:31;9173:216;9170:429;;;9441:9;9451:1;9441:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;9422:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;9430;9422:16;;;;;;;;:::i;:::-;;;;;;:40;;;;9490:9;;;;;9532:5;9521:7;:16;9518:67;9561:5;9518:67;;9622:3;;9118:519;;;-1:-1:-1;9653:7:2;;8167:1500;-1:-1:-1;;;;8167:1500:2:o;12396:762::-;12615:1:::1;12596:16;:20;;;:46;;;;;12639:3;12620:16;:22;;;12596:46;12588:84;;;::::0;-1:-1:-1;;;12588:84:2;;25806:2:21;12588:84:2::1;::::0;::::1;25788:21:21::0;25845:2;25825:18;;;25818:30;25884:27;25864:18;;;25857:55;25929:18;;12588:84:2::1;25604:349:21::0;12588:84:2::1;12700:1;12682:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;12772:14:2::1;::::0;12732:27:::1;12762:25:::0;;;:9:::1;:25;::::0;;;;12801:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;12854:39:2;12801;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;12854:39:2;;;;;-1:-1:-1;;;12854:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;12907:26:2;::::1;:45:::0;;-1:-1:-1;;12907:45:2::1;;::::0;::::1;;::::0;;12762:25;12966:31:::1;12988:9:::0;;12762:25;12966:31:::1;:::i;:::-;;13008:112;13024:9;;13042:14;;13059:1;13062:10;13074:13;13089;13104:15;13008;:112::i;:::-;12578:580;12396:762:::0;;;;;;;:::o;14429:1128::-;14504:27;14534:49;14558:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;14534:49:2;14504:79;;14593:18;;:::i;:::-;14621:14;;14732:766;14754:19;14750:1;:23;14732:766;;;14807:48;14827:24;14853:1;14807:19;:48::i;:::-;14799:57;14879:13;;;:5;:13;;;;;;;14870:22;;;;;;;;;;14799:57;;-1:-1:-1;14870:22:2;;;;14879:13;;14870:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14870:22:2;;;-1:-1:-1;;14870:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14870:22:2;;-1:-1:-1;;;;;14870:22:2;;;;;-1:-1:-1;;;14870:22:2;;;;;;;;;;-1:-1:-1;;;14870:22:2;;;;;;;-1:-1:-1;;;14870:22:2;;;;;;;;;14910:36;;;;;-1:-1:-1;14949:15:2;14910:54;;;:80;;;;;14984:6;14968;:12;;;:22;;;;14910:80;:109;;;;;15013:6;14994;:16;;;:25;;;;14910:109;14906:554;;;15198:34;;;:17;;;:34;15314:16;;15296:34;;:15;:34;:::i;:::-;15250:81;;:36;;;:81;15349:13;;;;:5;:13;;;;;:22;;15250:6;;15349:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;15349:22:2;;;;;;;;;;-1:-1:-1;;15349:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15349:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;15349:22:2;-1:-1:-1;;;;;;;;15349:22:2;;;;;;;-1:-1:-1;;;;15349:22:2;;-1:-1:-1;;;15349:22:2;;;;;;-1:-1:-1;;;;15349:22:2;-1:-1:-1;;;15349:22:2;;;;;-1:-1:-1;;;;15349:22:2;;;;;-1:-1:-1;;;15349:22:2;;;;;;;;;;;;-1:-1:-1;15431:13:2;;;:5;:13;;;;;;;15394:51;;;;;;15415:6;;15431:13;;15394:51;:::i;:::-;;;;;;;;14906:554;15483:3;;14732:766;;;;14494:1063;;;14429:1128;:::o;18064:3620::-;18228:10;;:26;;-1:-1:-1;;;18228:26:2;;;;;8654:25:21;;;18258:10:2;;-1:-1:-1;;;;;18228:10:2;;:18;;8627::21;;18228:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18228:40:2;;:77;;;;-1:-1:-1;18272:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;18272:25:2;;;;:33;;18228:77;18220:122;;;;-1:-1:-1;;;18220:122:2;;28833:2:21;18220:122:2;;;28815:21:21;;;28852:18;;;28845:30;28911:34;28891:18;;;28884:62;28963:18;;18220:122:2;28631:356:21;18220:122:2;18377:1;18360:7;:14;:18;18352:27;;;;;;18390:19;18412:14;;;:5;:14;;;;;18983:16;;;;18412:14;;18390:19;-1:-1:-1;;;18983:16:2;;;;:20;18980:205;;19023:9;19019:156;19042:7;:14;19038:1;:18;19019:156;;;19116:7;19124:1;19116:10;;;;;;;;:::i;:::-;;;;;;;19099:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;19099:28:2;;;;;;;;;;;;;19089:39;;;;;;19076:7;19084:1;19076:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19156:3;;19019:156;;;;18980:205;19194:14;19238:7;19221:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19211:36;;;;;;19194:53;;19258:19;19295:6;19280;:11;;;:21;:29;;19308:1;19280:29;;;19304:1;19280:29;19355:12;;;;;19325:76;;;29244:25:21;;;19355:12:2;;;;29300:2:21;29285:18;;29278:53;29347:18;;29340:34;;;29405:2;29390:18;;29383:34;;;19258:51:2;;;;;19386:14;;;29448:3:21;29433:19;;29426:51;19258::2;-1:-1:-1;19325:76:2;;29231:3:21;29216:19;19325:76:2;;;;;;;19416:11;19430:1;19416:15;19412:2266;;19526:14;;;;19510:13;;19526:16;;19541:1;;-1:-1:-1;;;19526:14:2;;-1:-1:-1;;;;;19526:14:2;:16;:::i;:::-;19596:10;;19615:17;;;;;19596:37;;-1:-1:-1;;;19596:37:2;;-1:-1:-1;;;19615:17:2;;;;;19596:37;;;29938:38:21;;;;-1:-1:-1;;;;;19510:32:2;;;;;-1:-1:-1;19556:29:2;;-1:-1:-1;;;;;19596:10:2;;;;:18;;29911::21;;19596:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19703:10;;;19725:12;;;19739:16;;;;;19703:53;;-1:-1:-1;;;19703:53:2;;19725:12;;;;19703:53;;;30159:44:21;;;;19703:10:2;19739:16;;;;30219:18:21;;;30212:49;19556:78:2;;-1:-1:-1;;;;;;19703:10:2;;:21;;30132:18:21;;19703:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19770:10:2;;19792:17;;;;;19811:25;;19770:67;;-1:-1:-1;;;19770:67:2;;-1:-1:-1;;;19792:17:2;;;;;19770:67;;;30445:38:21;;;;30499:18;;;30492:34;;;;-1:-1:-1;;;;;19770:10:2;;;;-1:-1:-1;19770:21:2;;-1:-1:-1;30418:18:21;;19770:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19852:14:2;;;:16;;-1:-1:-1;;19852:16:2;;;-1:-1:-1;19867:1:2;19918:14;;;:5;:14;;;;;;19911:21;19918:14;19867:1;19911:21;:::i;:::-;-1:-1:-1;19911:21:2;;;;;-1:-1:-1;;19911:21:2;;;-1:-1:-1;19911:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19911:21:2;;;20018:36;;-1:-1:-1;;;;;;;20018:18:2;;;20044:5;;-1:-1:-1;20018:36:2;-1:-1:-1;20018:36:2;20044:5;20018:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19985:69;;;;20076:4;20068:37;;;;-1:-1:-1;;;20068:37:2;;;;;;;:::i;:::-;20167:33;;:10;;20190:5;;20167:33;;;;20190:5;20167:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20152:48:2;;-1:-1:-1;20152:48:2;-1:-1:-1;20152:48:2;20214:37;;;;-1:-1:-1;;;20214:37:2;;;;;;;:::i;:::-;19432:831;;;;19412:2266;;;20445:6;20425;:18;;;:26;20422:1246;;20486:14;;;;20470:13;;20486:16;;20501:1;;-1:-1:-1;;;20486:14:2;;-1:-1:-1;;;;;20486:14:2;:16;:::i;:::-;20558:10;;20577:16;;;;;20558:36;;-1:-1:-1;;;20558:36:2;;-1:-1:-1;;;20577:16:2;;;;;20558:36;;;29938:38:21;;;;-1:-1:-1;;;;;20470:32:2;;;;;-1:-1:-1;20520:27:2;;-1:-1:-1;;;;;20558:10:2;;;;:18;;29911::21;;20558:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20614:10;;20636:16;;;;;20654:25;;20614:66;;-1:-1:-1;;;20614:66:2;;-1:-1:-1;;;20636:16:2;;;;;20614:66;;;30445:38:21;;;;30499:18;;;30492:34;;;;20520:75:2;;-1:-1:-1;;;;;;20614:10:2;;:21;;30418:18:21;;20614:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20698:10:2;;20728:25;;20698:56;;-1:-1:-1;;;20698:56:2;;;;;31270:25:21;;;31311:18;;;31304:34;;;;-1:-1:-1;;;;;20698:10:2;;;;-1:-1:-1;20698:21:2;;-1:-1:-1;31243:18:21;;20698:56:2;31096:248:21;20422:1246:2;21383:14;;;;21367:13;21422:14;;;:5;:14;;;;;-1:-1:-1;;;21383:14:2;;;-1:-1:-1;;;;;21383:14:2;;21422;21415:21;21422:14;21367:13;21415:21;:::i;:::-;-1:-1:-1;21415:21:2;;;;;-1:-1:-1;;21415:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21415:21:2;;;;21487:7;1074:6:9;;-1:-1:-1;;;;;1074:6:9;;1001:87;21487:7:2;-1:-1:-1;;;;;21487:12:2;21507:5;21487:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21454:63;;;;21593:4;21585:37;;;;-1:-1:-1;;;21585:37:2;;;;;;;:::i;:::-;21261:407;;;18160:3524;;;;18064:3620;;;:::o;1901:192:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:9;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:9;;31551:2:21;1982:73:9::1;::::0;::::1;31533:21:21::0;31590:2;31570:18;;;31563:30;31629:34;31609:18;;;31602:62;-1:-1:-1;;;31680:18:21;;;31673:36;31726:19;;1982:73:9::1;31349:402:21::0;1982:73:9::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;5999:688:2:-;6074:4;6090:27;6120:49;6144:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6120:49:2;6090:79;;6179:18;;:::i;:::-;6323:9;6319:340;6341:19;6337:1;:23;6319:340;;;6386:5;:63;6400:47;6420:24;6445:1;6400:19;:47::i;:::-;6392:56;;6386:63;;;;;;;;;;;6377:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;-1:-1:-1;;6377:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;-1:-1:-1;;;;;6377:72:2;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;6467:36;;;;;-1:-1:-1;6506:15:2;6467:54;;;:80;;;;;6541:6;6525;:12;;;:22;;;;6467:80;:109;;;;;6570:6;6551;:16;;;:25;;;;6467:109;6463:158;;;-1:-1:-1;6602:4:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;6463:158::-;6644:3;;6319:340;;;-1:-1:-1;6675:5:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;10004:1221::-;10086:9;10082:1137;10101:9;:16;10099:18;;10082:1137;;;10217:9;10200:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;10190:38;;;;;;10163:9;10173:1;10163:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10146:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;10136:50;;;;;;:92;10133:1048;;10311:27;10341:9;10351:1;10341:12;;;;;;;;:::i;:::-;;;;;;;;;;;10311:42;;10371:34;10408:9;10435:1;10418:9;:16;;;;:18;;;;:::i;:::-;10408:29;;;;;;;;:::i;:::-;;;;;;;;;;;10371:66;;10566:17;10553:30;;10608:9;10635:1;10618:9;:16;;;;:18;;;;:::i;:::-;10608:29;;;;;;;;:::i;:::-;;;;;;;;;;;;10601:36;;;;;;;;:::i;:::-;-1:-1:-1;10601:36:2;;;;-1:-1:-1;;;;;;10601:36:2;;;11114:9;11124:16;;:18;;10601:36;;11124:18;:::i;:::-;11114:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11107:36;;;;;;;;:::i;:::-;-1:-1:-1;11107:36:2;;;;-1:-1:-1;;;;;;11107:36:2;;;-1:-1:-1;11161:5:2;;-1:-1:-1;11161:5:2;10133:1048;11204:3;;10082:1137;;;;10004:1221;:::o;4588:389::-;4649:15;4697:14;;4684:10;:27;4676:56;;;;-1:-1:-1;;;4676:56:2;;22878:2:21;4676:56:2;;;22860:21:21;22917:2;22897:18;;;22890:30;-1:-1:-1;;;22936:18:21;;;22929:46;22992:18;;4676:56:2;22676:340:21;4676:56:2;4742:25;4783:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;4770:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4770:51:2;;4742:79;;4835:9;4831:114;4853:9;:16;4850:1;:19;4831:114;;;4904:21;;;;:9;:21;;;;;:27;;4932:1;4904:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4889:9;4899:1;4889:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4871:3;;;;:::i;:::-;;;;4831:114;;;-1:-1:-1;4961:9:2;4588:389;-1:-1:-1;;4588:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;13491:931:2:-;13732:9;:16;;13758;;;;;;13706:23;13758:16;;;13732;;:9;:16;;13815:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;13855:20:2;;;:31;13877:9;;13855:20;:31;:::i;:::-;;13921:5;13900:11;:18;;;:26;;;;;;;;;;;;;;;;;;13965:11;13940;:22;;;:36;;;;;;;;;;;;;;;;;;14020:16;13990:11;:27;;;:46;;;;;;;;;;;;;;;;;;14074:10;14050:11;:21;;;:34;;;;;;;;;;;;;;;;;;14125:13;14098:11;:24;;;:40;;;;;;;;;;;;;;;;;;14179:13;14152:11;:24;;;:40;;;;;;;;;;;;;;;;;;14235:15;14206:11;:26;;;:44;;;;;;;;;;;;;;;;;;14296:119;14315:9;;14326:11;14339:16;14357:10;14369:13;14384;14399:15;14296:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;13696:726;;13491:931;;;;;;;;:::o;2101:173:9:-;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;34289:2:21;35401:87:0;;;34271:21:21;34328:2;34308:18;;;34301:30;34367:34;34347:18;;;34340:62;-1:-1:-1;;;34418:18:21;;;34411:38;34466:19;;35401:87:0;34087:404:21;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;34698:2:21;26359:106:0;;;34680:21:21;34737:2;34717:18;;;34710:30;34776:34;34756:18;;;34749:62;-1:-1:-1;;;34827:18:21;;;34820:37;34874:19;;26359:106:0;34496:403:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:21;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:21;;14:180;-1:-1:-1;14:180:21:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:21;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:21;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:21:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:21;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:21:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:21;1729:40;;-1:-1:-1;;;;;1784:34:21;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:21:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:21;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:21:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:21;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:21;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:21:o;4225:165::-;4292:20;;4352:12;4341:24;;4331:35;;4321:63;;4380:1;4377;4370:12;4321:63;4225:165;;;:::o;4395:184::-;4453:6;4506:2;4494:9;4485:7;4481:23;4477:32;4474:52;;;4522:1;4519;4512:12;4474:52;4545:28;4563:9;4545:28;:::i;:::-;4535:38;4395:184;-1:-1:-1;;;4395:184:21:o;4695:1175::-;4742:3;4770:6;4811:5;4805:12;4838:2;4833:3;4826:15;4862:45;4903:2;4898:3;4894:12;4880;4862:45;:::i;:::-;4850:57;;;4955:4;4948:5;4944:16;4938:23;4970:49;5013:4;5008:3;5004:14;4988;896:12;885:24;873:37;;820:96;4970:49;;5068:4;5061:5;5057:16;5051:23;5044:4;5039:3;5035:14;5028:47;5124:4;5117:5;5113:16;5107:23;5100:4;5095:3;5091:14;5084:47;5179:4;5172:5;5168:16;5162:23;5194:48;5236:4;5231:3;5227:14;5211;3274:4;3263:16;3251:29;;3207:75;5194:48;;5290:4;5283:5;5279:16;5273:23;5305:49;5348:4;5343:3;5339:14;5323;3363:8;3352:20;3340:33;;3287:92;5305:49;;5402:4;5395:5;5391:16;5385:23;5417:49;5460:4;5455:3;5451:14;5435;-1:-1:-1;;;;;4649:34:21;4637:47;;4584:106;5417:49;;5514:4;5507:5;5503:16;5497:23;5529:49;5572:4;5567:3;5563:14;5547;801:6;790:18;778:31;;725:90;5529:49;-1:-1:-1;5597:6:21;5640:14;;;5634:21;801:6;790:18;5698:12;;;778:31;5730:6;5773:14;;;5767:21;896:12;885:24;;5831:12;;;873:37;5797:47;820:96;5875:828;6057:4;6086:2;6126;6115:9;6111:18;6156:2;6145:9;6138:21;6179:6;6214;6208:13;6245:6;6237;6230:22;6283:2;6272:9;6268:18;6261:25;;6345:2;6335:6;6332:1;6328:14;6317:9;6313:30;6309:39;6295:53;;6383:2;6375:6;6371:15;6404:1;6414:260;6428:6;6425:1;6422:13;6414:260;;;6521:2;6517:7;6505:9;6497:6;6493:22;6489:36;6484:3;6477:49;6549:45;6587:6;6578;6572:13;6549:45;:::i;:::-;6539:55;-1:-1:-1;6652:12:21;;;;6617:15;;;;6450:1;6443:9;6414:260;;;-1:-1:-1;6691:6:21;;5875:828;-1:-1:-1;;;;;;;5875:828:21:o;6708:348::-;6760:8;6770:6;6824:3;6817:4;6809:6;6805:17;6801:27;6791:55;;6842:1;6839;6832:12;6791:55;-1:-1:-1;6865:20:21;;-1:-1:-1;;;;;6897:30:21;;6894:50;;;6940:1;6937;6930:12;6894:50;6977:4;6969:6;6965:17;6953:29;;7029:3;7022:4;7013:6;7005;7001:19;6997:30;6994:39;6991:59;;;7046:1;7043;7036:12;6991:59;6708:348;;;;;:::o;7061:161::-;7128:20;;7188:8;7177:20;;7167:31;;7157:59;;7212:1;7209;7202:12;7227:159;7294:20;;7354:6;7343:18;;7333:29;;7323:57;;7376:1;7373;7366:12;7391:859;7501:6;7509;7517;7525;7533;7541;7549;7602:3;7590:9;7581:7;7577:23;7573:33;7570:53;;;7619:1;7616;7609:12;7570:53;7659:9;7646:23;-1:-1:-1;;;;;7684:6:21;7681:30;7678:50;;;7724:1;7721;7714:12;7678:50;7763:59;7814:7;7805:6;7794:9;7790:22;7763:59;:::i;:::-;7841:8;;-1:-1:-1;7737:85:21;-1:-1:-1;;7926:2:21;7911:18;;7898:32;7970:4;7959:16;;7949:27;;7939:55;;7990:1;7987;7980:12;7939:55;8013:5;-1:-1:-1;8037:37:21;8070:2;8055:18;;8037:37;:::i;:::-;8027:47;;8093:37;8126:2;8115:9;8111:18;8093:37;:::i;:::-;8083:47;;8149:38;8182:3;8171:9;8167:19;8149:38;:::i;:::-;8139:48;;8206:38;8239:3;8228:9;8224:19;8206:38;:::i;:::-;8196:48;;7391:859;;;;;;;;;;:::o;8255:248::-;8323:6;8331;8384:2;8372:9;8363:7;8359:23;8355:32;8352:52;;;8400:1;8397;8390:12;8352:52;-1:-1:-1;;8423:23:21;;;8493:2;8478:18;;;8465:32;;-1:-1:-1;8255:248:21:o;8690:131::-;-1:-1:-1;;;;;8765:31:21;;8755:42;;8745:70;;8811:1;8808;8801:12;8826:247;8885:6;8938:2;8926:9;8917:7;8913:23;8909:32;8906:52;;;8954:1;8951;8944:12;8906:52;8993:9;8980:23;9012:31;9037:5;9012:31;:::i;9078:531::-;9121:5;9174:3;9167:4;9159:6;9155:17;9151:27;9141:55;;9192:1;9189;9182:12;9141:55;9228:6;9215:20;-1:-1:-1;;;;;9250:2:21;9247:26;9244:52;;;9276:18;;:::i;:::-;9320:55;9363:2;9344:13;;-1:-1:-1;;9340:27:21;9369:4;9336:38;9320:55;:::i;:::-;9400:2;9391:7;9384:19;9446:3;9439:4;9434:2;9426:6;9422:15;9418:26;9415:35;9412:55;;;9463:1;9460;9453:12;9412:55;9528:2;9521:4;9513:6;9509:17;9502:4;9493:7;9489:18;9476:55;9576:1;9551:16;;;9569:4;9547:27;9540:38;;;;9555:7;9078:531;-1:-1:-1;;;9078:531:21:o;9614:462::-;9700:6;9708;9716;9769:2;9757:9;9748:7;9744:23;9740:32;9737:52;;;9785:1;9782;9775:12;9737:52;9825:9;9812:23;-1:-1:-1;;;;;9850:6:21;9847:30;9844:50;;;9890:1;9887;9880:12;9844:50;9913;9955:7;9946:6;9935:9;9931:22;9913:50;:::i;:::-;9903:60;;;10010:2;9999:9;9995:18;9982:32;9972:42;;10033:37;10066:2;10055:9;10051:18;10033:37;:::i;:::-;10023:47;;9614:462;;;;;:::o;10081:316::-;10158:6;10166;10174;10227:2;10215:9;10206:7;10202:23;10198:32;10195:52;;;10243:1;10240;10233:12;10195:52;-1:-1:-1;;10266:23:21;;;10336:2;10321:18;;10308:32;;-1:-1:-1;10387:2:21;10372:18;;;10359:32;;10081:316;-1:-1:-1;10081:316:21:o;10402:1018::-;10750:4;10779:3;10809:2;10798:9;10791:21;10829:45;10870:2;10859:9;10855:18;10847:6;10829:45;:::i;:::-;10893:12;10941:15;;;10936:2;10921:18;;10914:43;10988:2;10973:18;;10966:34;;;;-1:-1:-1;;11031:2:21;11016:18;;11009:34;;;;11092:4;11080:17;;;;11074:3;11059:19;;11052:46;11147:8;11135:21;;;;11129:3;11114:19;;11107:50;-1:-1:-1;;;;;11194:35:21;;;;11188:3;11173:19;;11166:64;11249:6;11292:15;;;11286:3;11271:19;;11264:44;11345:15;11339:3;11324:19;;11317:44;11398:15;;;11392:3;11377:19;;;11370:44;;;;10821:53;10402:1018;-1:-1:-1;10402:1018:21:o;11633:245::-;11802:2;11791:9;11784:21;11765:4;11822:50;11868:2;11857:9;11853:18;11845:6;11822:50;:::i;11883:803::-;12045:4;12074:2;12114;12103:9;12099:18;12144:2;12133:9;12126:21;12167:6;12202;12196:13;12233:6;12225;12218:22;12271:2;12260:9;12256:18;12249:25;;12333:2;12323:6;12320:1;12316:14;12305:9;12301:30;12297:39;12283:53;;12371:2;12363:6;12359:15;12392:1;12402:255;12416:6;12413:1;12410:13;12402:255;;;12509:2;12505:7;12493:9;12485:6;12481:22;12477:36;12472:3;12465:49;12537:40;12570:6;12561;12555:13;12537:40;:::i;:::-;12527:50;-1:-1:-1;12635:12:21;;;;12600:15;;;;12438:1;12431:9;12402:255;;12691:774;12802:6;12810;12818;12826;12834;12842;12850;12903:3;12891:9;12882:7;12878:23;12874:33;12871:53;;;12920:1;12917;12910:12;12871:53;12960:9;12947:23;-1:-1:-1;;;;;12985:6:21;12982:30;12979:50;;;13025:1;13022;13015:12;12979:50;13064:59;13115:7;13106:6;13095:9;13091:22;13064:59;:::i;:::-;13142:8;;-1:-1:-1;13038:85:21;-1:-1:-1;13196:37:21;;-1:-1:-1;13229:2:21;13214:18;;13196:37;:::i;13751:484::-;13853:6;13861;13869;13922:2;13910:9;13901:7;13897:23;13893:32;13890:52;;;13938:1;13935;13928:12;13890:52;13974:9;13961:23;13951:33;;14031:2;14020:9;14016:18;14003:32;13993:42;;14086:2;14075:9;14071:18;14058:32;-1:-1:-1;;;;;14105:6:21;14102:30;14099:50;;;14145:1;14142;14135:12;14099:50;14168:61;14221:7;14212:6;14201:9;14197:22;14168:61;:::i;:::-;14158:71;;;13751:484;;;;;:::o;14432:322::-;14501:6;14554:2;14542:9;14533:7;14529:23;14525:32;14522:52;;;14570:1;14567;14560:12;14522:52;14610:9;14597:23;-1:-1:-1;;;;;14635:6:21;14632:30;14629:50;;;14675:1;14672;14665:12;14629:50;14698;14740:7;14731:6;14720:9;14716:22;14698:50;:::i;:::-;14688:60;14432:322;-1:-1:-1;;;;14432:322:21:o;14759:643::-;14928:2;14980:21;;;15050:13;;14953:18;;;15072:22;;;14899:4;;14928:2;15151:15;;;;15125:2;15110:18;;;14899:4;15194:182;15208:6;15205:1;15202:13;15194:182;;;15273:13;;15288:6;15269:26;15257:39;;15351:15;;;;15316:12;;;;15230:1;15223:9;15194:182;;;-1:-1:-1;15393:3:21;;14759:643;-1:-1:-1;;;;;;14759:643:21:o;15407:380::-;15486:1;15482:12;;;;15529;;;15550:61;;15604:4;15596:6;15592:17;15582:27;;15550:61;15657:2;15649:6;15646:14;15626:18;15623:38;15620:161;;15703:10;15698:3;15694:20;15691:1;15684:31;15738:4;15735:1;15728:15;15766:4;15763:1;15756:15;15620:161;;15407:380;;;:::o;15792:127::-;15853:10;15848:3;15844:20;15841:1;15834:31;15884:4;15881:1;15874:15;15908:4;15905:1;15898:15;16111:543;16329:13;;16272:3;;16303;;16382:4;16409:15;;;16272:3;16452:175;16466:6;16463:1;16460:13;16452:175;;;16529:13;;16515:28;;16565:14;;;;16602:15;;;;16488:1;16481:9;16452:175;;;-1:-1:-1;16643:5:21;;16111:543;-1:-1:-1;;;;;;16111:543:21:o;16659:443::-;16884:6;16873:9;16866:25;16941:6;16934:14;16927:22;16922:2;16911:9;16907:18;16900:50;16986:6;16981:2;16970:9;16966:18;16959:34;17029:3;17024:2;17013:9;17009:18;17002:31;16847:4;17050:46;17091:3;17080:9;17076:19;17068:6;17050:46;:::i;:::-;17042:54;16659:443;-1:-1:-1;;;;;;16659:443:21:o;17456:356::-;17658:2;17640:21;;;17677:18;;;17670:30;17736:34;17731:2;17716:18;;17709:62;17803:2;17788:18;;17456:356::o;17817:220::-;17966:2;17955:9;17948:21;17929:4;17986:45;18027:2;18016:9;18012:18;18004:6;17986:45;:::i;18168:772::-;18218:3;18259:5;18253:12;18288:36;18314:9;18288:36;:::i;:::-;18333:19;;;18371:4;18394:1;18411:18;;;18438:146;;;;18598:1;18593:341;;;;18404:530;;18438:146;-1:-1:-1;;18480:24:21;;18466:12;;;18459:46;18552:14;;18545:22;18542:1;18538:30;18529:40;;18525:49;;;-1:-1:-1;18438:146:21;;18593:341;18624:5;18621:1;18614:16;18671:2;18668:1;18658:16;18696:1;18710:174;18724:6;18721:1;18718:13;18710:174;;;18811:14;;18793:11;;;18789:20;;18782:44;18854:16;;;;18739:10;;18710:174;;;18908:11;;18904:20;;;-1:-1:-1;;18404:530:21;;;;;;18168:772;;;;:::o;18945:225::-;19091:2;19080:9;19073:21;19054:4;19111:53;19160:2;19149:9;19145:18;19137:6;19111:53;:::i;19523:545::-;19625:2;19620:3;19617:11;19614:448;;;19661:1;19686:5;19682:2;19675:17;19731:4;19727:2;19717:19;19801:2;19789:10;19785:19;19782:1;19778:27;19772:4;19768:38;19837:4;19825:10;19822:20;19819:47;;;-1:-1:-1;19860:4:21;19819:47;19915:2;19910:3;19906:12;19903:1;19899:20;19893:4;19889:31;19879:41;;19970:82;19988:2;19981:5;19978:13;19970:82;;;20033:17;;;20014:1;20003:13;19970:82;;;19974:3;;;19614:448;19523:545;;;:::o;20244:1352::-;20370:3;20364:10;-1:-1:-1;;;;;20389:6:21;20386:30;20383:56;;;20419:18;;:::i;:::-;20448:97;20538:6;20498:38;20530:4;20524:11;20498:38;:::i;:::-;20492:4;20448:97;:::i;:::-;20600:4;;20664:2;20653:14;;20681:1;20676:663;;;;21383:1;21400:6;21397:89;;;-1:-1:-1;21452:19:21;;;21446:26;21397:89;-1:-1:-1;;20201:1:21;20197:11;;;20193:24;20189:29;20179:40;20225:1;20221:11;;;20176:57;21499:81;;20646:944;;20676:663;18115:1;18108:14;;;18152:4;18139:18;;-1:-1:-1;;20712:20:21;;;20830:236;20844:7;20841:1;20838:14;20830:236;;;20933:19;;;20927:26;20912:42;;21025:27;;;;20993:1;20981:14;;;;20860:19;;20830:236;;;20834:3;21094:6;21085:7;21082:19;21079:201;;;21155:19;;;21149:26;-1:-1:-1;;21238:1:21;21234:14;;;21250:3;21230:24;21226:37;21222:42;21207:58;21192:74;;21079:201;-1:-1:-1;;;;;21326:1:21;21310:14;;;21306:22;21293:36;;-1:-1:-1;20244:1352:21:o;21601:127::-;21662:10;21657:3;21653:20;21650:1;21643:31;21693:4;21690:1;21683:15;21717:4;21714:1;21707:15;21733:128;21773:3;21804:1;21800:6;21797:1;21794:13;21791:39;;;21810:18;;:::i;:::-;-1:-1:-1;21846:9:21;;21733:128::o;21866:217::-;21905:4;21934:6;21990:10;;;;21960;;22012:12;;;22009:38;;;22027:18;;:::i;:::-;22064:13;;21866:217;-1:-1:-1;;;21866:217:21:o;22088:125::-;22128:4;22156:1;22153;22150:8;22147:34;;;22161:18;;:::i;:::-;-1:-1:-1;22198:9:21;;22088:125::o;22218:453::-;22462:12;22454:6;22450:25;22439:9;22432:44;22512:6;22507:2;22496:9;22492:18;22485:34;22555:3;22550:2;22539:9;22535:18;22528:31;22413:4;22576:46;22617:3;22606:9;22602:19;22594:6;22576:46;:::i;:::-;22568:54;;22658:6;22653:2;22642:9;22638:18;22631:34;22218:453;;;;;;;:::o;23369:135::-;23408:3;23429:17;;;23426:43;;23449:18;;:::i;:::-;-1:-1:-1;23496:1:21;23485:13;;23369:135::o;24197:251::-;24267:6;24320:2;24308:9;24299:7;24295:23;24291:32;24288:52;;;24336:1;24333;24326:12;24288:52;24368:9;24362:16;24387:31;24412:5;24387:31;:::i;25958:1206::-;-1:-1:-1;;;;;26077:3:21;26074:27;26071:53;;;26104:18;;:::i;:::-;26133:94;26223:3;26183:38;26215:4;26209:11;26183:38;:::i;:::-;26177:4;26133:94;:::i;:::-;26253:1;26278:2;26273:3;26270:11;26295:1;26290:616;;;;26950:1;26967:3;26964:93;;;-1:-1:-1;27023:19:21;;;27010:33;26964:93;-1:-1:-1;;20201:1:21;20197:11;;;20193:24;20189:29;20179:40;20225:1;20221:11;;;20176:57;27070:78;;26263:895;;26290:616;18115:1;18108:14;;;18152:4;18139:18;;-1:-1:-1;;26326:17:21;;;26427:9;26449:229;26463:7;26460:1;26457:14;26449:229;;;26552:19;;;26539:33;26524:49;;26659:4;26644:20;;;;26612:1;26600:14;;;;26479:12;26449:229;;;26453:3;26706;26697:7;26694:16;26691:159;;;26830:1;26826:6;26820:3;26814;26811:1;26807:11;26803:21;26799:34;26795:39;26782:9;26777:3;26773:19;26760:33;26756:79;26748:6;26741:95;26691:159;;;26893:1;26887:3;26884:1;26880:11;26876:19;26870:4;26863:33;26263:895;;25958:1206;;;:::o;27304:1322::-;27526:6;27515:9;27508:25;27569:6;27564:2;27553:9;27549:18;27542:34;27612:2;27607;27596:9;27592:18;27585:30;27489:4;27634:6;27676:2;27671;27660:9;27656:18;27649:30;27702:54;27751:3;27740:9;27736:19;27728:6;27702:54;:::i;:::-;27845:4;27833:17;;27827:24;27280:12;27264:29;896:12;885:24;;27908:3;27893:19;;873:37;-1:-1:-1;27968:4:21;27956:17;;27950:24;27944:3;27929:19;;27922:53;28030:4;28018:17;;28012:24;28006:3;27991:19;;27984:53;28081:4;28069:17;;28063:24;28128:4;28113:20;;28150:3;28135:19;;3251:29;28190:1;28186:17;;;28205:8;28182:32;28231:3;28216:19;;3340:33;28271:2;28267:18;;;-1:-1:-1;;;;;28263:47:21;28327:3;28312:19;;4637:47;28351:6;28392:3;28388:19;;;28384:28;;28414:18;;;778:31;28442:68;28505:3;28494:9;28490:19;28485:2;28473:9;28468:3;28464:19;28460:28;801:6;790:18;778:31;;725:90;28442:68;-1:-1:-1;28545:3:21;28541:19;;;28562:12;28537:38;28592:3;28577:19;;873:37;-1:-1:-1;28614:6:21;27304:1322;-1:-1:-1;;;;;;27304:1322:21:o;29488:300::-;29527:1;-1:-1:-1;;;;;29602:2:21;29599:1;29595:10;29624:3;29614:134;;29670:10;29665:3;29661:20;29658:1;29651:31;29705:4;29702:1;29695:15;29733:4;29730:1;29723:15;29614:134;29766:10;;29762:20;;;;;29488:300;-1:-1:-1;;29488:300:21:o;30747:344::-;30949:2;30931:21;;;30988:2;30968:18;;;30961:30;-1:-1:-1;;;31022:2:21;31007:18;;31000:50;31082:2;31067:18;;30747:344::o;31756:276::-;31887:3;31925:6;31919:13;31941:53;31987:6;31982:3;31975:4;31967:6;31963:17;31941:53;:::i;:::-;32010:16;;;;;31756:276;-1:-1:-1;;31756:276:21:o;32037:842::-;32165:3;32194:1;32227:6;32221:13;32257:36;32283:9;32257:36;:::i;:::-;32312:1;32329:18;;;32356:133;;;;32503:1;32498:356;;;;32322:532;;32356:133;-1:-1:-1;;32389:24:21;;32377:37;;32462:14;;32455:22;32443:35;;32434:45;;;-1:-1:-1;32356:133:21;;32498:356;32529:6;32526:1;32519:17;32559:4;32604:2;32601:1;32591:16;32629:1;32643:165;32657:6;32654:1;32651:13;32643:165;;;32735:14;;32722:11;;;32715:35;32778:16;;;;32672:10;;32643:165;;;-1:-1:-1;;;32828:16:21;;;;;32870:3;-1:-1:-1;;;;;;32037:842:21:o;32884:265::-;32923:3;32951:9;;;32976:10;;-1:-1:-1;;;;;32995:27:21;;;32988:35;;32972:52;32969:78;;;33027:18;;:::i;:::-;-1:-1:-1;;;33074:19:21;;;33067:27;;33059:36;;33056:62;;;33098:18;;:::i;:::-;-1:-1:-1;;33134:9:21;;32884:265::o;33154:928::-;33467:3;33456:9;33449:22;33508:6;33502:3;33491:9;33487:19;33480:35;33430:4;33534:3;33587:6;33579;33574:2;33563:9;33559:18;33546:48;33643:1;33614:22;;;33610:31;;33603:42;33735:12;33785:15;;;33778:4;33763:20;;33756:45;33849:4;33837:17;;;;33832:2;33817:18;;33810:45;-1:-1:-1;33903:8:21;33891:21;;;;33886:2;33871:18;;33864:49;33950:15;;;33944:3;33929:19;;33922:44;34003:15;;;33997:3;33982:19;;33975:44;34068:6;34056:19;;;34050:3;34035:19;;34028:48;33706:2;33685:15;;;-1:-1:-1;;33681:29:21;33666:45;33662:54;;;-1:-1:-1;33154:928:21:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    22277
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE95D2347 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D03738 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x314C JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3238 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x3307 JUMP JUMPDEST PUSH2 0xC6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x33DB JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0xCE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3467 JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x119A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x34BD JUMP JUMPDEST PUSH2 0x13B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x356A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x314C JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x357D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x19F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x1B08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x447 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x3622 JUMP JUMPDEST PUSH2 0x1E44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x33DB JUMP JUMPDEST PUSH2 0x25EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x3671 JUMP JUMPDEST PUSH2 0x2855 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x511 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF4 JUMP JUMPDEST PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x36AD JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x539 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x565 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x587 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x595 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5FF JUMPI PUSH2 0x5FF PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x619 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6A3 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x668 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x633 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x763 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78F SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x857 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x861 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x879 PUSH1 0x5 DUP3 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x8A7 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D3 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x920 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x920 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x903 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0x9D5 JUMPI POP DUP7 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x9E1 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x866 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xA5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA11 PUSH2 0x2E56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA09 JUMPI SWAP1 POP POP SWAP1 POP PUSH2 0x3E7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA3C JUMPI PUSH2 0xA3C PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA79 JUMPI PUSH2 0xA79 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA9F PUSH2 0x2E56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA97 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xC60 JUMPI PUSH2 0xACB PUSH1 0x5 DUP3 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP8 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xAF9 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB25 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP8 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xC27 JUMPI POP DUP9 PUSH5 0xFFFFFFFFFF AND DUP7 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC58 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC3F JUMPI PUSH2 0xC3F PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP DUP4 DUP4 GT PUSH2 0xC60 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xAB8 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2B88 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x37AC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x37AC JUMP JUMPDEST PUSH2 0xD14 PUSH1 0x0 PUSH2 0x2D07 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1194 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x37E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x3871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x118C JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDAD JUMPI PUSH2 0xDAD PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xE11 JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDEB JUMPI PUSH2 0xDEB PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xED0 JUMPI PUSH2 0xED0 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xF6E SWAP1 DUP3 PUSH2 0x38D3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1072 SWAP1 DUP5 SWAP1 PUSH2 0x39A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1085 SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x39A8 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1098 JUMPI PUSH2 0x1098 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x10D3 JUMPI PUSH2 0x10D3 PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x39C0 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x1110 PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x39E3 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x117E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x128C JUMPI PUSH2 0x128C PUSH2 0x372F JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x12D2 JUMPI PUSH2 0x12D2 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x1302 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x132B JUMPI PUSH2 0x132B PUSH2 0x372F JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1353 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x135D DUP2 PUSH2 0x3A31 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124B JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1404 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1430 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x147D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1452 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x147D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1460 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x14F3 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x151C SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1548 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x156A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1745 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1651 JUMPI PUSH2 0x1651 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x16B5 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1690 JUMPI PUSH2 0x1690 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16F4 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16D0 JUMPI PUSH2 0x16D0 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1731 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x173D JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1633 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x17B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1765 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x179F JUMPI PUSH2 0x179F PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CB PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17FE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17E9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x19E9 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1887 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1862 JUMPI PUSH2 0x1862 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18C6 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18A2 JUMPI PUSH2 0x18A2 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1903 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18E2 JUMPI PUSH2 0x18E2 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x19E1 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x191B JUMPI PUSH2 0x191B PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1937 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1993 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19C7 JUMPI PUSH2 0x19C7 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x19E9 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1805 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1A0C JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1A58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A6B SWAP2 SWAP1 PUSH2 0x39A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1AEA DUP9 DUP11 DUP4 PUSH2 0x3A67 JUMP JUMPDEST POP PUSH2 0x1AFE DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2B88 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B2D PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1B44 PUSH1 0x5 DUP3 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1B72 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B9E SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x1C9D JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CB2 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E35 JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x1CCE SWAP1 TIMESTAMP PUSH2 0x39A8 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1CFA SWAP1 DUP3 PUSH2 0x38D3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x1E2C SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x3B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B31 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB1 SWAP2 SWAP1 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1EE2 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x1F2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x1FD7 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1FD5 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F80 JUMPI PUSH2 0x1F80 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F9A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FC2 JUMPI PUSH2 0x1FC2 PUSH2 0x372F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1F65 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FEA SWAP2 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x2016 JUMPI PUSH1 0x0 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x237F JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x20A9 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3BF1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2115 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2139 SWAP2 SWAP1 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2233 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x2269 DUP3 DUP3 PUSH2 0x2EAA JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x230E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x3C25 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x234E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x3C25 JUMP JUMPDEST POP POP POP POP PUSH2 0xC8B JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x24F6 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x23AE SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3BF1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243E SWAP2 SWAP1 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x2526 DUP3 DUP3 PUSH2 0x2EAA JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x256D PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x3C25 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x37AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x2682 DUP2 PUSH2 0x2D07 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26A1 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x26AB PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x284A JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x26C5 PUSH1 0x5 DUP5 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x26F2 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x271E SWAP1 PUSH2 0x36F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x276B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2740 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x276B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x274E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x281D JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2832 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2842 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x26AE JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x29EE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2873 SWAP2 SWAP1 PUSH2 0x3C53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x289C JUMPI PUSH2 0x289C PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28BD SWAP2 SWAP1 PUSH2 0x3C6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x29E6 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28ED JUMPI PUSH2 0x28ED PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2913 SWAP2 SWAP1 PUSH2 0x39E3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2923 JUMPI PUSH2 0x2923 PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x294A SWAP2 SWAP1 PUSH2 0x39E3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x295A JUMPI PUSH2 0x295A PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x297A SWAP2 SWAP1 PUSH2 0x2EAA JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0x299C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x39E3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29AC JUMPI PUSH2 0x29AC PUSH2 0x372F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x29CC SWAP2 SWAP1 PUSH2 0x2EAA JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x29EE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2858 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x2A38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A65 JUMPI PUSH2 0x2A65 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A8E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B10 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2ABF JUMPI PUSH2 0x2ABF PUSH2 0x372F JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AEB JUMPI PUSH2 0x2AEB PUSH2 0x372F JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2B08 DUP2 PUSH2 0x3A31 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A94 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B3A PUSH2 0x2B26 DUP5 PUSH2 0x2D59 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2B35 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3CE1 JUMP JUMPDEST PUSH2 0x2DC7 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x2B6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2BAB JUMPI PUSH2 0x2BAB PUSH2 0x372F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x2BCC DUP11 DUP13 DUP4 PUSH2 0x3A67 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2CF3 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC71 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x2DFA JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2DC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2EB6 SWAP1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2EC6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2682 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F28 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F10 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1194 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2F51 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F78 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2F39 JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2FE7 JUMPI PUSH2 0x2FE7 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x301B JUMPI PUSH2 0x301B PUSH2 0x2FA9 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x302A DUP3 DUP3 ADD PUSH2 0x2FBF JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x3044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3063 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x304A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x30A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30AC DUP7 DUP3 DUP8 ADD PUSH2 0x2FEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x30C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x30E1 DUP2 DUP5 ADD DUP13 PUSH2 0x2F39 JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3167 DUP3 PUSH2 0x3132 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x3184 DUP3 DUP7 ADD DUP3 PUSH2 0x2F39 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x319F PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x31C8 PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31DF PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x31FA PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3210 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x328D JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x327B DUP6 DUP4 MLOAD PUSH2 0x316E JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x325F JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x32AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x32C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x32DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x3147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3344 DUP11 DUP3 DUP12 ADD PUSH2 0x329A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x335E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x336C PUSH1 0x40 DUP10 ADD PUSH2 0x32E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x337A PUSH1 0x60 DUP10 ADD PUSH2 0x3132 JUMP JUMPDEST SWAP3 POP PUSH2 0x3388 PUSH1 0x80 DUP10 ADD PUSH2 0x3132 JUMP JUMPDEST SWAP2 POP PUSH2 0x3396 PUSH1 0xA0 DUP10 ADD PUSH2 0x32F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3167 DUP2 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3422 JUMPI PUSH2 0x3422 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x3435 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2FBF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x344A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x347C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x349E DUP7 DUP3 DUP8 ADD PUSH2 0x33F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x34B4 PUSH1 0x40 DUP6 ADD PUSH2 0x3132 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x34FD DUP2 DUP5 ADD DUP15 PUSH2 0x2F39 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3167 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x328D JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x35C0 DUP6 DUP4 MLOAD PUSH2 0x2F39 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x35ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x360F DUP11 DUP3 DUP12 ADD PUSH2 0x329A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x335E SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x365B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3667 DUP7 DUP3 DUP8 ADD PUSH2 0x2FEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36A5 DUP5 DUP3 DUP6 ADD PUSH2 0x33F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36E9 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x36C9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3709 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3729 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x376F JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3753 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x37A2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2F39 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3167 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3801 DUP2 PUSH2 0x36F5 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x381E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3838 JUMPI PUSH2 0x3866 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x3866 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x385E JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3843 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3167 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37F4 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38CE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x38AB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38CA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38B7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38EC PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x3900 DUP2 PUSH2 0x38FA DUP5 SLOAD PUSH2 0x36F5 JUMP JUMPDEST DUP5 PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3935 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x391D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x38CA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3964 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3945 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3982 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x39BB JUMPI PUSH2 0x39BB PUSH2 0x3992 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x39DB JUMPI PUSH2 0x39DB PUSH2 0x3992 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x39F5 JUMPI PUSH2 0x39F5 PUSH2 0x3992 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3A20 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3A43 JUMPI PUSH2 0x3A43 PUSH2 0x3992 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3167 DUP2 PUSH2 0x33C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x3A7E JUMPI PUSH2 0x3A7E PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x3A92 DUP4 PUSH2 0x3A8C DUP4 SLOAD PUSH2 0x36F5 JUMP JUMPDEST DUP4 PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AC6 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x3AAE JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AF7 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3AD7 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x3B14 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3B4F PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x37F4 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x3BD3 PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x3C19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3C65 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F0D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x3C7D DUP2 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3C95 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3CAA JUMPI PUSH2 0x376F JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x376F JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3CD0 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3CB7 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3D03 JUMPI PUSH2 0x3D03 PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3D1C JUMPI PUSH2 0x3D1C PUSH2 0x3992 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xBA 0xEC 0x27 TIMESTAMP 0xC5 LOG3 SWAP1 PUSH7 0x361BBB37B11A8A 0xB1 0x2B 0xA8 0xA7 0xD2 CHAINID DUP6 SWAP2 PUSH19 0x1F4FB39D22F8D864736F6C634300080F003300 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x421"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x461"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x481"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A1"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F1"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x349"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x387"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B4"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E1"
    },
    "166": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x401"
    },
    "177": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "REVERT",
      "path": "2"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "GT",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3"
    },
    "237": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3"
    },
    "248": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313"
    },
    "259": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "REVERT",
      "path": "2"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x195"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B7"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "308": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218"
    },
    "319": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "EQ",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x238"
    },
    "330": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "REVERT",
      "path": "2"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156"
    },
    "340": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "STOP",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "345": {
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "346": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        22277
      ],
      "op": "REVERT",
      "path": "2"
    },
    "347": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "349": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "351": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "354": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "REVERT",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B"
    },
    "364": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "367": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "370": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "373": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51E"
    },
    "378": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "382": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "386": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "387": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F65"
    },
    "395": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "399": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "400": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "RETURN",
      "path": "2"
    },
    "405": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "407": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "409": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "412": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "413": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "416": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "REVERT",
      "path": "2"
    },
    "417": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "422": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "425": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "426": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "428": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306E"
    },
    "431": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "432": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EA"
    },
    "436": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "STOP",
      "path": "2"
    },
    "439": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "441": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "442": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "443": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3"
    },
    "446": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "447": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "450": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "451": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7"
    },
    "456": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "465": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x730"
    },
    "470": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "474": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "475": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "478": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "484": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "485": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30CD"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F7"
    },
    "498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "REVERT",
      "path": "2"
    },
    "503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206"
    },
    "511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314C"
    },
    "517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83A"
    },
    "522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3238"
    },
    "535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "536": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "537": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "538": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "DUP1",
      "path": "2"
    },
    "539": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "540": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224"
    },
    "543": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "544": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "546": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "DUP1",
      "path": "2"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "REVERT",
      "path": "2"
    },
    "548": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "553": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "557": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "559": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3307"
    },
    "562": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMP",
      "path": "2"
    },
    "563": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "564": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6C"
    },
    "567": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMP",
      "path": "2"
    },
    "568": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "569": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "570": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "571": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "575": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "576": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "578": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "579": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "585": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "588": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "589": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "591": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33A4"
    },
    "594": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "595": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "598": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "600": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "601": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "605": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "606": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "607": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "610": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "617": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "623": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "625": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "627": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "628": {
      "op": "SWAP1"
    },
    "629": {
      "op": "DUP2"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "637": {
      "op": "JUMP"
    },
    "638": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "640": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "641": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "642": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28A"
    },
    "645": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "646": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "648": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "REVERT",
      "path": "2"
    },
    "650": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "655": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299"
    },
    "658": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "659": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "661": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33DB"
    },
    "664": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "665": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "666": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC94"
    },
    "669": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AA"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "9"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "9"
    },
    "684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCE0"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "691": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "692": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "693": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "694": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "695": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "698": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "699": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "REVERT",
      "path": "2"
    },
    "703": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "708": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "712": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "714": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3467"
    },
    "717": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "718": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD16"
    },
    "722": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF"
    },
    "730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "REVERT",
      "path": "2"
    },
    "735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "749": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "750": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119A"
    },
    "754": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "755": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "756": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "757": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "758": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "759": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "765": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "REVERT",
      "path": "2"
    },
    "767": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "772": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E"
    },
    "775": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "776": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "778": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BD"
    },
    "781": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "782": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "783": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B0"
    },
    "786": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "787": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "788": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "789": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "790": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "794": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "795": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "797": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "REVERT",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x333"
    },
    "804": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E"
    },
    "807": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "808": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "810": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "813": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "814": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "815": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E9"
    },
    "818": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "819": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "820": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "822": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "826": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "829": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "833": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "835": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "836": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E9"
    },
    "840": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x355"
    },
    "848": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "9"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "872": {
      "op": "DUP2"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18C"
    },
    "880": {
      "op": "JUMP"
    },
    "881": {
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "882": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D"
    },
    "888": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "891": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "893": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "894": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "POP",
      "path": "2"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "898": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "900": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "902": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "903": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "907": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x393"
    },
    "910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "REVERT",
      "path": "2"
    },
    "915": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "920": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A2"
    },
    "923": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "924": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "926": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "929": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14EB"
    },
    "934": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "938": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "939": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "942": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "943": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "944": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x356A"
    },
    "947": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0"
    },
    "955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "REVERT",
      "path": "2"
    },
    "960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CF"
    },
    "968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314C"
    },
    "974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162D"
    },
    "979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357D"
    },
    "992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "993": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "994": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "995": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "996": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "997": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED"
    },
    "1000": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1003": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1005": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1010": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC"
    },
    "1013": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1014": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1016": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D2"
    },
    "1019": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1020": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1021": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F3"
    },
    "1024": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40D"
    },
    "1032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "1051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B08"
    },
    "1056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1057": {
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42D"
    },
    "1064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DIV",
      "path": "2"
    },
    "1091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1102": {
      "op": "SWAP4"
    },
    "1103": {
      "op": "DUP5"
    },
    "1104": {
      "op": "SIGNEXTEND"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "SWAP2"
    },
    "1108": {
      "op": "SWAP1"
    },
    "1109": {
      "op": "SWAP3"
    },
    "1110": {
      "op": "SIGNEXTEND"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1120": {
      "op": "JUMP"
    },
    "1121": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1122": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46D"
    },
    "1128": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1131": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1132": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1138": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47C"
    },
    "1141": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1142": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1144": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3622"
    },
    "1147": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1148": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E44"
    },
    "1152": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x48D"
    },
    "1160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1166": {
      "op": "POP"
    },
    "1167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "1170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x49C"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x33DB"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25EA"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1185": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AD"
    },
    "1192": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1193": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1195": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1198": {
      "op": "POP"
    },
    "1199": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C1"
    },
    "1202": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "1205": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1206": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1208": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "1211": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2685"
    },
    "1216": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1221": {
      "op": "SWAP1"
    },
    "1222": {
      "op": "ISZERO"
    },
    "1223": {
      "op": "ISZERO"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1235": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "1240": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1241": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1243": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1244": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1250": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EC"
    },
    "1253": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1254": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1256": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3671"
    },
    "1259": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1260": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1261": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2855"
    },
    "1264": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1275": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x511"
    },
    "1282": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50C"
    },
    "1285": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF4"
    },
    "1291": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1292": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1293": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F2"
    },
    "1296": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1300": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1304": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1305": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36AD"
    },
    "1309": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1310": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1313": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1318": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1319": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1323": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1327": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1329": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x539"
    },
    "1332": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1336": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1338": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1341": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1344": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1351": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1353": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1356": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1357": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1359": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1365": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1366": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1369": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1370": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1371": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x565"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1388": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1389": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1391": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "LT",
      "path": "2"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x587"
    },
    "1395": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1402": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1403": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1407": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1418": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1422": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1425": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1427": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1430": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1438": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1439": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1442": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1443": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "GT",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x595"
    },
    "1448": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1451": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1470": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1476": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1487": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1502": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.testHashing",
      "offset": [
        16956,
        16978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1517": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17005
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        17006,
        17007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1520": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "LT",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1527": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1531": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "1534": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16998,
        17008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1535": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1538": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "MUL",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1541": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "ADD",
      "path": "2"
    },
    "1542": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "ADD",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        16998,
        17008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1544": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1546": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1549": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "ADD",
      "path": "2"
    },
    "1550": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x619"
    },
    "1553": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "SWAP1"
    },
    "1560": {
      "op": "JUMP"
    },
    "1561": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1564": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1565": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1567": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1568": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "SUB",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "SUB",
      "path": "2"
    },
    "1571": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        16981,
        17009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        16956,
        17009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1578": {
      "fn": "Governance.testHashing",
      "offset": [
        16956,
        17009
      ],
      "op": "POP",
      "path": "2"
    },
    "1579": {
      "branch": 114,
      "fn": "Governance.testHashing",
      "offset": [
        17022,
        17030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.testHashing",
      "offset": [
        17019,
        17212
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.testHashing",
      "offset": [
        17019,
        17212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A5"
    },
    "1584": {
      "branch": 114,
      "fn": "Governance.testHashing",
      "offset": [
        17019,
        17212
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.testHashing",
      "offset": [
        17050,
        17059
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.testHashing",
      "offset": [
        17069,
        17076
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1589": {
      "fn": "Governance.testHashing",
      "offset": [
        17069,
        17083
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        17065,
        17066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        17065,
        17083
      ],
      "op": "LT",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1593": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A3"
    },
    "1596": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17150
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        17151,
        17152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "LT",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64E"
    },
    "1606": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1607": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64E"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "1613": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17143,
        17153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1614": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1615": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1617": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "MUL",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1620": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "ADD",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "ADD",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17143,
        17153
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "ADD",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x668"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1633": {
      "op": "DUP2"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "SWAP1"
    },
    "1639": {
      "op": "JUMP"
    },
    "1640": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "SUB",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "SUB",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        17126,
        17154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "ADD",
      "path": "2"
    },
    "1662": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17155
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17110
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        17111,
        17112
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1666": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "LT",
      "path": "2"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17103,
        17113
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1683": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "MUL",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1687": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "ADD",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17113
      ],
      "op": "ADD",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.testHashing",
      "offset": [
        17103,
        17155
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1692": {
      "fn": "Governance.testHashing",
      "offset": [
        17183,
        17186
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1694": {
      "fn": "Governance.testHashing",
      "offset": [
        17183,
        17186
      ],
      "op": "ADD",
      "path": "2"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x633"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17046,
        17202
      ],
      "op": "POP",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        17019,
        17212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1702": {
      "fn": "Governance.testHashing",
      "offset": [
        17221,
        17235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        17265,
        17272
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "ADD",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B8"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3745"
    },
    "1719": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17248,
        17273
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1720": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1727": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "SUB",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "SUB",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1735": {
      "fn": "Governance.testHashing",
      "offset": [
        17248,
        17273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1738": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1741": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "ADD",
      "path": "2"
    },
    "1742": {
      "fn": "Governance.testHashing",
      "offset": [
        17238,
        17274
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        17221,
        17274
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        17221,
        17274
      ],
      "op": "POP",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1778": {
      "fn": "Governance.testHashing",
      "offset": [
        17301,
        17307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        17317,
        17327
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        17309,
        17315
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        17309,
        17327
      ],
      "op": "EQ",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17336
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.testHashing",
      "offset": [
        17337,
        17338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "LT",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17329,
        17339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "MUL",
      "path": "2"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "ADD",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "ADD",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        17329,
        17339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        17341,
        17350
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x721"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1817": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x377B"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17289,
        17351
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1825": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SUB",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1833": {
      "fn": "Governance.testHashing",
      "offset": [
        17289,
        17351
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        17358
      ],
      "op": "POP",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        17358
      ],
      "op": "POP",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "POP",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "POP",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        16855,
        17358
      ],
      "op": "POP",
      "path": "2"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        16855,
        17358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1840": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1854": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1858": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1860": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1863": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1865": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1869": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1873": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1877": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1880": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1883": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x763"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1892": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1898": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1913": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1919": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1923": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78F"
    },
    "1930": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1935": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DC"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1960": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1961": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1963": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DC"
    },
    "1968": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1970": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1971": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1972": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1976": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1977": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1979": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1981": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1982": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1983": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1991": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1992": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1993": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1995": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1996": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1997": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "GT",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BF"
    },
    "2002": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SUB",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2008": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2009": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2018": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2019": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2020": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2028": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2038": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2041": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2054": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2066": {
      "op": "SHL"
    },
    "2067": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2068": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2077": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2078": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2079": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2087": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2088": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2089": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2090": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2091": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2092": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2101": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2102": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2105": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6763,
        6776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6818,
        6867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x857"
    },
    "2114": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2116": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 4
    },
    "2117": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2119": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2120": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2121": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2128": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2129": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2130": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2131": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2132": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2133": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2134": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6818,
        6867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2137": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6867
      ],
      "op": "POP",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "2141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "2144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6877,
        6895
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2149": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6977,
        6996
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        6974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        6996
      ],
      "op": "LT",
      "path": "2"
    },
    "2154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E9"
    },
    "2158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7078
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x879"
    },
    "2162": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7050,
        7074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7076,
        7077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2165": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B17"
    },
    "2168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7030,
        7078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7078
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "2173": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2180": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2184": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2187": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2191": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2192": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2194": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2202": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "2214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2219": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2220": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MUL",
      "path": "2"
    },
    "2226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2229": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2231": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2232": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2238": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D3"
    },
    "2254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "2258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x920"
    },
    "2265": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2266": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "LT",
      "path": "2"
    },
    "2270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F5"
    },
    "2273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2274": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2278": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MUL",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2285": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2287": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x920"
    },
    "2292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2300": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2301": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2303": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "GT",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2327": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SUB",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2341": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2356": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2361": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2371": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2372": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2381": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2393": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2402": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2403": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2404": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2413": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2421": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2433": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2434": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2442": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2446": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2447": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2448": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2452": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2453": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2460": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2463": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2478": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2480": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2481": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "ADD",
      "path": "2"
    },
    "2484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7172,
        7187
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "AND",
      "path": "2"
    },
    "2491": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "GT",
      "path": "2"
    },
    "2492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D5"
    },
    "2497": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "POP",
      "path": "2"
    },
    "2499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7211,
        7217
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "AND",
      "path": "2"
    },
    "2507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7197
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2510": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "ADD",
      "path": "2"
    },
    "2511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2515": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "AND",
      "path": "2"
    },
    "2516": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "EQ",
      "path": "2"
    },
    "2517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E1"
    },
    "2522": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "2524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "ADD",
      "path": "2"
    },
    "2527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "POP",
      "path": "2"
    },
    "2529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7292,
        7295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "2532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7292,
        7295
      ],
      "op": "ADD",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "2536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2537": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2538": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "POP",
      "path": "2"
    },
    "2539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7364,
        7369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7371,
        7372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2542": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7364,
        7372
      ],
      "op": "SUB",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5E"
    },
    "2546": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2547": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2549": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7423,
        7424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2554": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA11"
    },
    "2573": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "2576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2577": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2578": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SUB",
      "path": "2"
    },
    "2588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA09"
    },
    "2593": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "POP",
      "path": "2"
    },
    "2596": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "POP",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7425
      ],
      "op": "POP",
      "path": "2"
    },
    "2599": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7457,
        7460
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x3E7"
    },
    "2602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2603": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7448,
        7449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2605": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "LT",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "2612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2613": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "2616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "2619": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7439,
        7450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2620": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "MUL",
      "path": "2"
    },
    "2626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2627": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2629": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "ADD",
      "path": "2"
    },
    "2630": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "ADD",
      "path": "2"
    },
    "2632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7460
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2639": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7460
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7460
      ],
      "op": "AND",
      "path": "2"
    },
    "2642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7456
      ],
      "op": "ADD",
      "path": "2"
    },
    "2644": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7460
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2645": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7513,
        7521
      ],
      "op": "SWAP7",
      "path": "2",
      "statement": 10
    },
    "2646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "POP"
    },
    "2653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7542,
        7557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2657": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7571,
        7592
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2658": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7611
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2665": {
      "op": "SHL"
    },
    "2666": {
      "op": "SUB"
    },
    "2667": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "GT",
      "path": "2"
    },
    "2669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2670": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA79"
    },
    "2673": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2674": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA79"
    },
    "2677": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA9"
    },
    "2680": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2687": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2688": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2690": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "MUL",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ADD",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2697": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ADD",
      "path": "2"
    },
    "2698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2700": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB2"
    },
    "2706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2708": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2710": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ADD",
      "path": "2"
    },
    "2711": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9F"
    },
    "2715": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "2718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2719": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2720": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2721": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2722": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2724": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "ADD",
      "path": "2"
    },
    "2725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2726": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2728": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2729": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SUB",
      "path": "2"
    },
    "2730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2731": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA97"
    },
    "2735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2736": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2737": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "POP",
      "path": "2"
    },
    "2738": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2739": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7595,
        7612
      ],
      "op": "POP",
      "path": "2"
    },
    "2740": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7571,
        7612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2741": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7571,
        7612
      ],
      "op": "POP",
      "path": "2"
    },
    "2742": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7626,
        7635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2744": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7644,
        7663
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2746": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7640,
        7641
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2747": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7640,
        7663
      ],
      "op": "LT",
      "path": "2"
    },
    "2748": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC60"
    },
    "2752": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7697,
        7745
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0xACB"
    },
    "2756": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2758": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7743,
        7744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2759": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7697,
        7716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B17"
    },
    "2762": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7697,
        7745
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2763": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7697,
        7745
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2764": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7689,
        7746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2766": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 12
    },
    "2767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2769": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2771": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2773": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2774": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2776": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2779": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2789": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7689,
        7746
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2793": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7689,
        7746
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7769,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF9"
    },
    "2804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2816": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2817": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MUL",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2822": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2823": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2825": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2829": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2834": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2835": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2836": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2841": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB25"
    },
    "2848": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "2852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2854": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2855": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB72"
    },
    "2859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2863": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "LT",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB47"
    },
    "2867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2872": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MUL",
      "path": "2"
    },
    "2876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB72"
    },
    "2886": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2887": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2888": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2891": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2892": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2894": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2914": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2915": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "GT",
      "path": "2"
    },
    "2917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB55"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2921": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2922": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2923": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SUB",
      "path": "2"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2937": {
      "op": "POP"
    },
    "2938": {
      "op": "POP"
    },
    "2939": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2943": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2956": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2957": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2960": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2962": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2970": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2971": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2972": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2973": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2975": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2976": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2977": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2980": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2983": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2984": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2986": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2987": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "2988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "2992": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2998": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "3004": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3006": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3022": {
      "op": "SHL"
    },
    "3023": {
      "op": "SUB"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "3025": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3034": {
      "op": "SHL"
    },
    "3035": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "3037": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3045": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "3055": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3057": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3058": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "3059": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3066": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DIV",
      "path": "2"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3068": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "AND",
      "path": "2"
    },
    "3069": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3073": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3074": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "ADD",
      "path": "2"
    },
    "3075": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3076": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3077": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7836
      ],
      "op": "ADD",
      "path": "2"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3079": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3080": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7836
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "3081": {
      "op": "POP"
    },
    "3082": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7839,
        7854
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3083": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7854
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3084": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7854
      ],
      "op": "AND",
      "path": "2"
    },
    "3085": {
      "branch": 118,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7854
      ],
      "op": "GT",
      "path": "2"
    },
    "3086": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3087": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC27"
    },
    "3091": {
      "branch": 118,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "POP",
      "path": "2"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7884
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3094": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7884
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3100": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7884
      ],
      "op": "AND",
      "path": "2"
    },
    "3101": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7864
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3102": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3104": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7875
      ],
      "op": "ADD",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7875
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7884
      ],
      "op": "AND",
      "path": "2"
    },
    "3110": {
      "branch": 119,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7858,
        7884
      ],
      "op": "EQ",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7800,
        7884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3112": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7796,
        8023
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3113": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7796,
        8023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC58"
    },
    "3116": {
      "branch": 119,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7796,
        8023
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3117": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7922,
        7928
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 13
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7910
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7911,
        7918
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3122": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3123": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "LT",
      "path": "2"
    },
    "3124": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3F"
    },
    "3127": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3F"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3134": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7903,
        7919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "MUL",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "ADD",
      "path": "2"
    },
    "3142": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7919
      ],
      "op": "ADD",
      "path": "2"
    },
    "3143": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7903,
        7928
      ],
      "op": "POP",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7956,
        7965
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 14
    },
    "3148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7956,
        7965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7956,
        7965
      ],
      "op": "ADD",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7956,
        7965
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7956,
        7965
      ],
      "op": "POP",
      "path": "2"
    },
    "3153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7995,
        8000
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7987,
        7994
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3155": {
      "branch": 120,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7987,
        8000
      ],
      "op": "GT",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8002,
        8007
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0xC60"
    },
    "3159": {
      "branch": 120,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7984,
        8009
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7984,
        8009
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8046,
        8049
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "3163": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8046,
        8049
      ],
      "op": "ADD",
      "path": "2"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB8"
    },
    "3167": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7622,
        8061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8077,
        8084
      ],
      "op": "SWAP8",
      "path": "2",
      "statement": 17
    },
    "3171": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8091
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        6694,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3180": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3181": {
      "offset": [
        22195,
        22231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7A"
    },
    "3184": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3185": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3186": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3188": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3189": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3190": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3191": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "SUB",
      "path": "2"
    },
    "3192": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3193": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3194": {
      "fn": "Governance.createTaskType",
      "offset": [
        22195,
        22231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3195": {
      "fn": "Governance.createTaskType",
      "offset": [
        13372,
        13478
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xC8B"
    },
    "3198": {
      "fn": "Governance.createTaskType",
      "offset": [
        13388,
        13397
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3199": {
      "fn": "Governance.createTaskType",
      "offset": [
        13388,
        13397
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.createTaskType",
      "offset": [
        13399,
        13400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3202": {
      "fn": "Governance.createTaskType",
      "offset": [
        13402,
        13418
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3203": {
      "fn": "Governance.createTaskType",
      "offset": [
        13420,
        13430
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.createTaskType",
      "offset": [
        13432,
        13445
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.createTaskType",
      "offset": [
        13447,
        13460
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.createTaskType",
      "offset": [
        13462,
        13477
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.createTaskType",
      "offset": [
        13372,
        13387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B88"
    },
    "3210": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13372,
        13478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.createTaskType",
      "offset": [
        13372,
        13478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3212": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3213": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3214": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3216": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3218": {
      "fn": "Governance.createTaskType",
      "offset": [
        13165,
        13485
      ],
      "op": "POP",
      "path": "2"
    },
    "3219": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        13165,
        13485
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3220": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3221": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3223": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "SUB"
    },
    "3232": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3233": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 19
    },
    "3234": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3235": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCBE"
    },
    "3238": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3239": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3241": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3250": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3251": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3253": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3254": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC71"
    },
    "3257": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3258": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37AC"
    },
    "3261": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3262": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3263": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9854
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x2"
    },
    "3265": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3266": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "op": "SUB"
    },
    "3275": {
      "op": "NOT"
    },
    "3276": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "AND",
      "path": "2"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "op": "SUB"
    },
    "3285": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3286": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3287": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3288": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "AND",
      "path": "2"
    },
    "3289": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3290": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3291": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "OR",
      "path": "2"
    },
    "3293": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3294": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9844,
        9871
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3295": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        9777,
        9878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3297": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3299": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3309": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3310": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3311": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD0A"
    },
    "3314": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3315": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3317": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3326": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3327": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3329": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3330": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC71"
    },
    "3333": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3334": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37AC"
    },
    "3337": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3338": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 21,
      "value": "0xD14"
    },
    "3342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D07"
    },
    "3347": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3349": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3350": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3351": {
      "fn": "Governance.completeTask",
      "offset": [
        15747,
        15756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3353": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3354": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3356": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3357": {
      "fn": "Governance.completeTask",
      "offset": [
        15762,
        15780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3358": {
      "fn": "Governance.completeTask",
      "offset": [
        15762,
        15780
      ],
      "op": "LT",
      "path": "2"
    },
    "3359": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3360": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1194"
    },
    "3363": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3364": {
      "fn": "Governance.completeTask",
      "offset": [
        15868,
        15877
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3365": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3367": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3368": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3370": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "ADD",
      "path": "2"
    },
    "3371": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD34"
    },
    "3374": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3375": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3376": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37E1"
    },
    "3379": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15857,
        15878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3380": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3381": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3383": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3384": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3386": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3387": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3388": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "SUB",
      "path": "2"
    },
    "3389": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "SUB",
      "path": "2"
    },
    "3390": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3391": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3395": {
      "fn": "Governance.completeTask",
      "offset": [
        15857,
        15878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3396": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3398": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3399": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3401": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "ADD",
      "path": "2"
    },
    "3402": {
      "fn": "Governance.completeTask",
      "offset": [
        15847,
        15879
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3403": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3405": {
      "fn": "Governance.completeTask",
      "offset": [
        15830,
        15831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3406": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3407": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3408": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "LT",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "3413": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3414": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "3417": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3420": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15820,
        15832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3421": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3422": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3423": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3425": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3426": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3428": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3430": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3431": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3432": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3434": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "MUL",
      "path": "2"
    },
    "3435": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15832
      ],
      "op": "ADD",
      "path": "2"
    },
    "3436": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3438": {
      "fn": "Governance.completeTask",
      "offset": [
        15820,
        15841
      ],
      "op": "ADD",
      "path": "2"
    },
    "3439": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3441": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3442": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3444": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "ADD",
      "path": "2"
    },
    "3445": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7E"
    },
    "3448": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3449": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3871"
    },
    "3453": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15809,
        15842
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3454": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3455": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3457": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3460": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3461": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3462": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "SUB",
      "path": "2"
    },
    "3463": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "SUB",
      "path": "2"
    },
    "3464": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3465": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3466": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3469": {
      "fn": "Governance.completeTask",
      "offset": [
        15809,
        15842
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3471": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3472": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3473": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3475": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "ADD",
      "path": "2"
    },
    "3476": {
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15843
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3477": {
      "branch": 121,
      "fn": "Governance.completeTask",
      "offset": [
        15799,
        15879
      ],
      "op": "SUB",
      "path": "2"
    },
    "3478": {
      "fn": "Governance.completeTask",
      "offset": [
        15796,
        16785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118C"
    },
    "3481": {
      "branch": 121,
      "fn": "Governance.completeTask",
      "offset": [
        15796,
        16785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3482": {
      "fn": "Governance.completeTask",
      "offset": [
        15995,
        16010
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 22
    },
    "3483": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3485": {
      "fn": "Governance.completeTask",
      "offset": [
        15976,
        15977
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3488": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3489": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "LT",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDAD"
    },
    "3493": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDAD"
    },
    "3497": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3500": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15966,
        15978
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3502": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3504": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3507": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3509": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3510": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3511": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3512": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3514": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3515": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3516": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "3517": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "3518": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3520": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "ADD",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3526": {
      "op": "SHL"
    },
    "3527": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "DIV",
      "path": "2"
    },
    "3529": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3535": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        15991
      ],
      "op": "AND",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16010
      ],
      "op": "GT",
      "path": "2"
    },
    "3537": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16010
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3538": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16010
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3539": {
      "branch": 122,
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE11"
    },
    "3543": {
      "branch": 122,
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16058
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3544": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16058
      ],
      "op": "POP",
      "path": "2"
    },
    "3545": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3547": {
      "fn": "Governance.completeTask",
      "offset": [
        16043,
        16044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3549": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3550": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "LT",
      "path": "2"
    },
    "3552": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEB"
    },
    "3555": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3556": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEB"
    },
    "3559": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3562": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16033,
        16045
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3566": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3567": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3568": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3571": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3572": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3573": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3574": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3576": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3578": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "MUL",
      "path": "2"
    },
    "3579": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16045
      ],
      "op": "ADD",
      "path": "2"
    },
    "3580": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3582": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "ADD",
      "path": "2"
    },
    "3583": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3588": {
      "op": "SHL"
    },
    "3589": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3590": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "DIV",
      "path": "2"
    },
    "3591": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3597": {
      "fn": "Governance.completeTask",
      "offset": [
        16033,
        16058
      ],
      "op": "AND",
      "path": "2"
    },
    "3598": {
      "fn": "Governance.completeTask",
      "offset": [
        16014,
        16029
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3599": {
      "fn": "Governance.completeTask",
      "offset": [
        16014,
        16058
      ],
      "op": "GT",
      "path": "2"
    },
    "3600": {
      "branch": 123,
      "fn": "Governance.completeTask",
      "offset": [
        16014,
        16058
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3601": {
      "fn": "Governance.completeTask",
      "offset": [
        15966,
        16058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3602": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE53"
    },
    "3605": {
      "branch": 123,
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3606": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3608": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3617": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3620": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3622": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "ADD",
      "path": "2"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3629": {
      "op": "DUP3"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3654": {
      "op": "SHL"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3657": {
      "op": "DUP3"
    },
    "3658": {
      "op": "ADD"
    },
    "3659": {
      "op": "MSTORE"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3662": {
      "op": "ADD"
    },
    "3663": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "3666": {
      "op": "JUMP"
    },
    "3667": {
      "fn": "Governance.completeTask",
      "offset": [
        15958,
        16082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.completeTask",
      "offset": [
        16135,
        16153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3670": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3672": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3674": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3677": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3680": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3681": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3682": {
      "fn": "Governance.completeTask",
      "offset": [
        16161,
        16170
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3683": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3684": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3685": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3687": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3688": {
      "fn": "Governance.completeTask",
      "offset": [
        16171,
        16177
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3689": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3695": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "AND",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3700": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.completeTask",
      "offset": [
        16179,
        16184
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3704": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3706": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3707": {
      "fn": "Governance.completeTask",
      "offset": [
        16186,
        16187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3709": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3710": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SHL",
      "path": "2"
    },
    "3711": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3712": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3715": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3718": {
      "fn": "Governance.completeTask",
      "offset": [
        16199,
        16200
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3719": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3720": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3721": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3722": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "LT",
      "path": "2"
    },
    "3723": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE96"
    },
    "3726": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3727": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE96"
    },
    "3730": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3733": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16189,
        16201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3734": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3735": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3736": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3738": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3739": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3741": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3743": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3744": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3745": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3747": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "MUL",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16201
      ],
      "op": "ADD",
      "path": "2"
    },
    "3749": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3751": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "ADD",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3754": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3755": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3756": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3757": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3760": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "EXP",
      "path": "2"
    },
    "3761": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3762": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "DIV",
      "path": "2"
    },
    "3763": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3765": {
      "fn": "Governance.completeTask",
      "offset": [
        16189,
        16217
      ],
      "op": "AND",
      "path": "2"
    },
    "3766": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3768": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "AND",
      "path": "2"
    },
    "3769": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3770": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3771": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3773": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3774": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3776": {
      "fn": "Governance.completeTask",
      "offset": [
        16229,
        16230
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3778": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3779": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3780": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "LT",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED0"
    },
    "3784": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3785": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED0"
    },
    "3788": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "3791": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16219,
        16231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3793": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3795": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3798": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3800": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3803": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3805": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3806": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3807": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3808": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "MUL",
      "path": "2"
    },
    "3809": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3810": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3811": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16231
      ],
      "op": "ADD",
      "path": "2"
    },
    "3812": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3814": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "ADD",
      "path": "2"
    },
    "3815": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3820": {
      "op": "SHL"
    },
    "3821": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3822": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "DIV",
      "path": "2"
    },
    "3823": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3827": {
      "fn": "Governance.completeTask",
      "offset": [
        16219,
        16241
      ],
      "op": "AND",
      "path": "2"
    },
    "3828": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3829": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3830": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3831": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3832": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3833": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3834": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3835": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3836": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3838": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3839": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3840": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3841": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3842": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3843": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3844": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3846": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3848": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3849": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3850": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3851": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3853": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3854": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3855": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "ADD",
      "path": "2"
    },
    "3856": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3857": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3858": {
      "fn": "Governance.completeTask",
      "offset": [
        16156,
        16254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3859": {
      "fn": "Governance.completeTask",
      "offset": [
        16332,
        16351
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0xA"
    },
    "3861": {
      "fn": "Governance.completeTask",
      "offset": [
        16332,
        16351
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3862": {
      "fn": "Governance.completeTask",
      "offset": [
        16298,
        16322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3864": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3865": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3870": {
      "op": "SHL"
    },
    "3871": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3872": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3873": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3874": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "3875": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "3877": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3878": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "3879": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3880": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3881": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "3883": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3884": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3885": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3886": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3887": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3888": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3889": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3890": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3891": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 25
    },
    "3892": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3893": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3910": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3911": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3912": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3913": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3915": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3916": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3917": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "3918": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3919": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3920": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3921": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "3922": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "3923": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3924": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3925": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 26
    },
    "3926": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3927": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3929": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3932": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3933": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3934": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3938": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3939": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3940": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF6E"
    },
    "3944": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3945": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16397
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38D3"
    },
    "3949": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16371,
        16406
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3950": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3951": {
      "op": "POP"
    },
    "3952": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3954": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3955": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "3956": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3957": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3959": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3960": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3961": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "3962": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3963": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3964": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3970": {
      "op": "NOT"
    },
    "3971": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "3972": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3978": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3979": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3980": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "3981": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "3982": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3983": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3984": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3986": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3987": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "3988": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3989": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3991": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3992": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "3993": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3994": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3996": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3997": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4001": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4003": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4006": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4007": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4008": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4009": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4011": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4012": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4013": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4018": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4019": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4020": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4021": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4023": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4024": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4025": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4028": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4029": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4030": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4031": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4034": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4035": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4036": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4037": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4038": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4041": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4042": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "4043": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "ADD",
      "path": "2"
    },
    "4044": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4045": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4047": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4048": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4049": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4050": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4055": {
      "op": "NOT"
    },
    "4056": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4057": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4058": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4059": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4060": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4061": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4067": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4068": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4069": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4070": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4071": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4072": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MUL",
      "path": "2"
    },
    "4073": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4074": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4075": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4076": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4077": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "4094": {
      "op": "NOT"
    },
    "4095": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "SHL"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4107": {
      "op": "SHL"
    },
    "4108": {
      "op": "SUB"
    },
    "4109": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4110": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4112": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4113": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4114": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4115": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MUL",
      "path": "2"
    },
    "4116": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4121": {
      "op": "SHL"
    },
    "4122": {
      "op": "NOT"
    },
    "4123": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4133": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4134": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MUL",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4138": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "NOT"
    },
    "4150": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4155": {
      "op": "SHL"
    },
    "4156": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4158": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4159": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MUL",
      "path": "2"
    },
    "4161": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "op": "NOT"
    },
    "4171": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4174": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4175": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4180": {
      "op": "SHL"
    },
    "4181": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4182": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4183": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4184": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "AND",
      "path": "2"
    },
    "4185": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4186": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4187": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4188": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "MUL",
      "path": "2"
    },
    "4189": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "OR",
      "path": "2"
    },
    "4190": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4191": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4192": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16443
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0xA"
    },
    "4195": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "SWAP1"
    },
    "4200": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1072"
    },
    "4203": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4204": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4205": {
      "fn": "Governance.completeTask",
      "offset": [
        16371,
        16406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4206": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A8"
    },
    "4209": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16424,
        16446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4210": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.completeTask",
      "offset": [
        16424,
        16446
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "fn": "Governance.completeTask",
      "offset": [
        16548,
        16572
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x1085"
    },
    "4218": {
      "fn": "Governance.completeTask",
      "offset": [
        16548,
        16572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4219": {
      "op": "POP"
    },
    "4220": {
      "fn": "Governance.completeTask",
      "offset": [
        16548,
        16563
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4221": {
      "fn": "Governance.completeTask",
      "offset": [
        16566,
        16572
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "4225": {
      "fn": "Governance.completeTask",
      "offset": [
        16548,
        16572
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A8"
    },
    "4228": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16548,
        16572
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4229": {
      "fn": "Governance.completeTask",
      "offset": [
        16548,
        16572
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4230": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        16511,
        16512
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4233": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4236": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "LT",
      "path": "2"
    },
    "4237": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1098"
    },
    "4240": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4241": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1098"
    },
    "4244": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4247": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16501,
        16513
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4248": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4251": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4252": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4253": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4256": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4257": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4258": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4265": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4266": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "AND",
      "path": "2"
    },
    "4267": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4268": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4269": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4272": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4273": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "MUL",
      "path": "2"
    },
    "4274": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16513
      ],
      "op": "ADD",
      "path": "2"
    },
    "4277": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4279": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16545
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4283": {
      "fn": "Governance.completeTask",
      "offset": [
        16501,
        16572
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4284": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16629
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x4"
    },
    "4286": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4287": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4288": {
      "fn": "Governance.completeTask",
      "offset": [
        16650,
        16651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "offset": [
        16650,
        16651
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16629
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16630,
        16631
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4293": {
      "fn": "Governance.completeTask",
      "offset": [
        16630,
        16631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "LT",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D3"
    },
    "4299": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4300": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D3"
    },
    "4303": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16620,
        16632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4307": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4308": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4316": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4318": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4320": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "MUL",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16632
      ],
      "op": "ADD",
      "path": "2"
    },
    "4322": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "ADD",
      "path": "2"
    },
    "4325": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4328": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4329": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4330": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4333": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "EXP",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "DIV",
      "path": "2"
    },
    "4336": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4339": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16647
      ],
      "op": "AND",
      "path": "2"
    },
    "4340": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FD"
    },
    "4343": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16651
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4344": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4345": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C0"
    },
    "4348": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16620,
        16651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4349": {
      "fn": "Governance.completeTask",
      "offset": [
        16620,
        16651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4350": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4352": {
      "fn": "Governance.completeTask",
      "offset": [
        16600,
        16601
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4355": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4356": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "LT",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1110"
    },
    "4360": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4361": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1110"
    },
    "4364": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4367": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16590,
        16602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4368": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4369": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4370": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4372": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4373": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4375": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4377": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4378": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4379": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4381": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "MUL",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16602
      ],
      "op": "ADD",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4385": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16617
      ],
      "op": "ADD",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4388": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4391": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "EXP",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4393": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4394": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4395": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4398": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "MUL",
      "path": "2"
    },
    "4399": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "NOT",
      "path": "2"
    },
    "4400": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "AND",
      "path": "2"
    },
    "4401": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4402": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4403": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4406": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "AND",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "MUL",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "OR",
      "path": "2"
    },
    "4409": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4410": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        16590,
        16651
      ],
      "op": "POP",
      "path": "2"
    },
    "4412": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 30,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "4445": {
      "fn": "Governance.completeTask",
      "offset": [
        16689,
        16695
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4446": {
      "fn": "Governance.completeTask",
      "offset": [
        16717,
        16718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4448": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4450": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16715
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4451": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116C"
    },
    "4454": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16718
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4455": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4456": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E3"
    },
    "4459": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16696,
        16718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4460": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4461": {
      "fn": "Governance.completeTask",
      "offset": [
        16720,
        16729
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.completeTask",
      "offset": [
        16731,
        16746
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4463": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4465": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4466": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117E"
    },
    "4469": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4470": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4471": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4472": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4474": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39FA"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16675,
        16747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4478": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4479": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4482": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4483": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4484": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SUB",
      "path": "2"
    },
    "4485": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4486": {
      "fn": "Governance.completeTask",
      "offset": [
        16675,
        16747
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "offset": [
        16765,
        16770
      ],
      "op": "POP",
      "path": "2",
      "statement": 31
    },
    "4488": {
      "fn": "Governance.completeTask",
      "offset": [
        16765,
        16770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1194"
    },
    "4491": {
      "fn": "Governance.completeTask",
      "offset": [
        16765,
        16770
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4492": {
      "fn": "Governance.completeTask",
      "offset": [
        15796,
        16785
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4493": {
      "fn": "Governance.completeTask",
      "offset": [
        16808,
        16811
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x1"
    },
    "4495": {
      "fn": "Governance.completeTask",
      "offset": [
        16808,
        16811
      ],
      "op": "ADD",
      "path": "2"
    },
    "4496": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD19"
    },
    "4499": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4500": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4501": {
      "fn": "Governance.completeTask",
      "offset": [
        15743,
        16823
      ],
      "op": "POP",
      "path": "2"
    },
    "4502": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "POP",
      "path": "2"
    },
    "4503": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "POP",
      "path": "2"
    },
    "4504": {
      "fn": "Governance.completeTask",
      "offset": [
        15563,
        16849
      ],
      "op": "POP",
      "path": "2"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        15563,
        16849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4506": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4507": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5050,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4509": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x8"
    },
    "4511": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4512": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5088
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4513": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5105
      ],
      "op": "LT",
      "path": "2"
    },
    "4514": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E0"
    },
    "4517": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4518": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4520": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4532": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4534": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4535": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "ADD",
      "path": "2"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "4575": {
      "op": "JUMP"
    },
    "4576": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4577": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x0"
    },
    "4579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4580": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4581": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4582": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4584": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4586": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4587": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4589": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4591": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "ADD",
      "path": "2"
    },
    "4594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4599": {
      "op": "SHL"
    },
    "4600": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4601": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "DIV",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4608": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "AND",
      "path": "2"
    },
    "4609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5160
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4610": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5197
      ],
      "op": "GT",
      "path": "2"
    },
    "4611": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1244"
    },
    "4614": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4615": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4617": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4626": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4632": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "ADD",
      "path": "2"
    },
    "4633": {
      "op": "MSTORE"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4638": {
      "op": "DUP3"
    },
    "4639": {
      "op": "ADD"
    },
    "4640": {
      "op": "MSTORE"
    },
    "4641": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4666": {
      "op": "DUP3"
    },
    "4667": {
      "op": "ADD"
    },
    "4668": {
      "op": "MSTORE"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4671": {
      "op": "ADD"
    },
    "4672": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "4675": {
      "op": "JUMP"
    },
    "4676": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5341,
        5360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5370,
        5395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4680": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5405,
        5416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4682": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5432,
        5441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4684": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4686": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4687": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4688": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4694": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "ADD",
      "path": "2"
    },
    "4701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4705": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "AND",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "LT",
      "path": "2"
    },
    "4708": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4709": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1365"
    },
    "4712": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4713": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4715": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4718": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4720": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4729": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "ADD",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5572,
        5573
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "LT",
      "path": "2"
    },
    "4737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128C"
    },
    "4740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128C"
    },
    "4744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4747": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4754": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "ADD",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MOD",
      "path": "2"
    },
    "4759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MUL",
      "path": "2"
    },
    "4762": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4763": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "EXP",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4770": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4774": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "AND",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4778": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "AND",
      "path": "2"
    },
    "4779": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "GT",
      "path": "2"
    },
    "4780": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1307"
    },
    "4784": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4785": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x0"
    },
    "4787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4789": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4794": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4799": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4801": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "ADD",
      "path": "2"
    },
    "4802": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5662,
        5663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4805": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "LT",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D2"
    },
    "4810": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D2"
    },
    "4814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4817": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4821": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4825": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "ADD",
      "path": "2"
    },
    "4826": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4828": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MOD",
      "path": "2"
    },
    "4829": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4831": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MUL",
      "path": "2"
    },
    "4832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4833": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4834": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4835": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4838": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "EXP",
      "path": "2"
    },
    "4839": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4841": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4844": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4845": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "POP",
      "path": "2"
    },
    "4851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5696,
        5697
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 36
    },
    "4852": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "POP",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5724,
        5725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4857": {
      "branch": 127,
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5725
      ],
      "op": "SUB",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1302"
    },
    "4861": {
      "branch": 127,
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5735,
        5736
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "4864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4865": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "POP",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1353"
    },
    "4870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4874": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4875": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4877": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4879": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4881": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4882": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4884": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4885": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4886": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4887": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4890": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "ADD",
      "path": "2"
    },
    "4891": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5801,
        5802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4892": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4894": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4895": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "LT",
      "path": "2"
    },
    "4896": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "4899": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "4903": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "4906": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4908": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4910": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4912": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4913": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "4914": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "ADD",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4916": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4917": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MOD",
      "path": "2"
    },
    "4918": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4920": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MUL",
      "path": "2"
    },
    "4921": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4922": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4923": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4927": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "EXP",
      "path": "2"
    },
    "4928": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4929": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "4930": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4933": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "AND",
      "path": "2"
    },
    "4934": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4937": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "AND",
      "path": "2"
    },
    "4938": {
      "branch": 128,
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "SUB",
      "path": "2"
    },
    "4939": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1353"
    },
    "4942": {
      "branch": 128,
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4943": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5847,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x1"
    },
    "4945": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "POP",
      "path": "2"
    },
    "4947": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4948": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "4949": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x135D"
    },
    "4952": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A31"
    },
    "4956": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4957": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4958": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4959": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "4960": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124B"
    },
    "4964": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 40
    },
    "4968": {
      "branch": 129,
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4969": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13A7"
    },
    "4972": {
      "branch": 129,
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4973": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4975": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4984": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4987": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4989": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4990": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "ADD",
      "path": "2"
    },
    "4991": {
      "op": "MSTORE"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4996": {
      "op": "DUP3"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "5030": {
      "op": "JUMP"
    },
    "5031": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5032": {
      "op": "POP"
    },
    "5033": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 41
    },
    "5034": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5035": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5040": {
      "fn": "Governance.vote",
      "offset": [
        11686,
        12350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5041": {
      "offset": [
        22086,
        22117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5043": {
      "fn": "Governance.vote",
      "offset": [
        22086,
        22117
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5050": {
      "op": "SHL"
    },
    "5051": {
      "offset": [
        22086,
        22117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.vote",
      "offset": [
        22086,
        22117
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5055": {
      "offset": [
        22086,
        22117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5057": {
      "fn": "Governance.vote",
      "offset": [
        22086,
        22117
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5058": {
      "fn": "Governance.vote",
      "offset": [
        22086,
        22117
      ],
      "op": "ADD",
      "path": "2"
    },
    "5059": {
      "op": "MSTORE"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "ADD"
    },
    "5066": {
      "op": "MSTORE"
    },
    "5067": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5084": {
      "op": "SHL"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5087": {
      "op": "DUP3"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "op": "MSTORE"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5092": {
      "op": "ADD"
    },
    "5093": {
      "offset": [
        22086,
        22117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "5096": {
      "op": "JUMP"
    },
    "5097": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5098": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5100": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5102": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5103": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5105": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5106": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5107": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5108": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5110": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5111": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5112": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5113": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5114": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5115": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5116": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1404"
    },
    "5119": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5120": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5123": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5124": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5125": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5126": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5128": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5129": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5131": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5133": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5134": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5135": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5137": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5138": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5140": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5141": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5142": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5143": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5146": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5147": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5148": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5149": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5150": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5151": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5153": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5154": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5156": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5157": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5158": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5159": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5160": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1430"
    },
    "5163": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5167": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5168": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5169": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5170": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5171": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x147D"
    },
    "5174": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5175": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5176": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5178": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "LT",
      "path": "2"
    },
    "5179": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1452"
    },
    "5182": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5183": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5186": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5188": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5189": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5191": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5192": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5193": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5196": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5197": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5198": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x147D"
    },
    "5201": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5209": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5212": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5214": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5216": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5217": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5218": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5219": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5220": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5224": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5226": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5228": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5229": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5230": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "GT",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1460"
    },
    "5235": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5237": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5238": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SUB",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5241": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5243": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5244": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5245": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "op": "POP"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5251": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5252": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5253": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5254": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5256": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5258": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5259": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5261": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5262": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5263": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5266": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5267": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5269": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5270": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5271": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5278": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5279": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5282": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5283": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5286": {
      "op": "POP"
    },
    "5287": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5289": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5290": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5292": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5296": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5299": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5300": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5302": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5309": {
      "op": "SHL"
    },
    "5310": {
      "op": "SUB"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5315": {
      "op": "SHL"
    },
    "5316": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5317": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5327": {
      "op": "SHL"
    },
    "5328": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5329": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5330": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5331": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5332": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5337": {
      "op": "SHL"
    },
    "5338": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5339": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5340": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5341": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5342": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5343": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5348": {
      "op": "SHL"
    },
    "5349": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5350": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5351": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5352": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5353": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5354": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5355": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5356": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F3"
    },
    "5359": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "5362": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5364": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x0"
    },
    "5366": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5368": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5369": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5371": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5373": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5374": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5376": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5377": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5378": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5379": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5380": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5381": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5385": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5386": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5387": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5388": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5390": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5391": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5392": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5393": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5394": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5395": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5396": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151C"
    },
    "5399": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5400": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5403": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5404": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5405": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5406": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5408": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5409": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5411": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5414": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5415": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5417": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5418": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5420": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5421": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5422": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5423": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5424": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5426": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5427": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5428": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5430": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5431": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5432": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5433": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5434": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5436": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5437": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5438": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1548"
    },
    "5443": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5444": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5447": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5448": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5449": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5450": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5451": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1595"
    },
    "5454": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5455": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5456": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5458": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "LT",
      "path": "2"
    },
    "5459": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156A"
    },
    "5462": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5463": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5466": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5467": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5468": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5469": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5470": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5471": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5472": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5473": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5474": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5476": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5477": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1595"
    },
    "5481": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5482": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5483": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5484": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5485": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5486": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5487": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5489": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5490": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5492": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5494": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5495": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5496": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5497": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5498": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5499": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5500": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5501": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5502": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5504": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5506": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5508": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5510": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5511": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "GT",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1578"
    },
    "5515": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5516": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5517": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5518": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SUB",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5521": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5523": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5524": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5525": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5526": {
      "op": "POP"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5531": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5536": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5537": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5538": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5539": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5545": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5546": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5547": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5548": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5550": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5551": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5552": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5553": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5555": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5556": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5557": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5558": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5560": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5561": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5563": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5565": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5566": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5567": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5568": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5570": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5571": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5572": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5575": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5576": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5577": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5578": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5579": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5581": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5582": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5583": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5585": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5586": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5587": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5588": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5591": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5592": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5593": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5598": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5599": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5601": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5602": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5603": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5608": {
      "op": "SHL"
    },
    "5609": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5610": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5617": {
      "op": "SHL"
    },
    "5618": {
      "op": "SUB"
    },
    "5619": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5622": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5629": {
      "op": "SHL"
    },
    "5630": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5635": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5640": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5642": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5649": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5650": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5651": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5653": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5654": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5659": {
      "op": "SHL"
    },
    "5660": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5662": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5663": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5664": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5668": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5674": {
      "op": "POP"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8238,
        8253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8265,
        8278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8265,
        8278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8324
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8324
      ],
      "op": "LT",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1745"
    },
    "5693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8390,
        8405
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8353,
        8354
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "LT",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1651"
    },
    "5705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1651"
    },
    "5709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "5712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8343,
        8355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5730": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "AND",
      "path": "2"
    },
    "5732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5736": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "MUL",
      "path": "2"
    },
    "5739": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8355
      ],
      "op": "ADD",
      "path": "2"
    },
    "5742": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5743": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5749": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8405
      ],
      "op": "LT",
      "path": "2"
    },
    "5750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B5"
    },
    "5755": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "POP",
      "path": "2"
    },
    "5757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8450,
        8465
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8431,
        8432
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "LT",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1690"
    },
    "5768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1690"
    },
    "5772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "5775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "MUL",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8433
      ],
      "op": "ADD",
      "path": "2"
    },
    "5793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "ADD",
      "path": "2"
    },
    "5796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "DIV",
      "path": "2"
    },
    "5804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8446
      ],
      "op": "AND",
      "path": "2"
    },
    "5811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8465
      ],
      "op": "GT",
      "path": "2"
    },
    "5812": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8421,
        8465
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F4"
    },
    "5819": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "POP",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8497,
        8512
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8479,
        8480
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "LT",
      "path": "2"
    },
    "5829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D0"
    },
    "5832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D0"
    },
    "5836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "5839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8469,
        8481
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "MUL",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8481
      ],
      "op": "ADD",
      "path": "2"
    },
    "5857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "ADD",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "5865": {
      "op": "SHL"
    },
    "5866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "DIV",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8494
      ],
      "op": "AND",
      "path": "2"
    },
    "5875": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8469,
        8512
      ],
      "op": "GT",
      "path": "2"
    },
    "5876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1731"
    },
    "5882": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "POP",
      "path": "2"
    },
    "5884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8558,
        8559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8538,
        8539
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5890": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "LT",
      "path": "2"
    },
    "5893": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1710"
    },
    "5896": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1710"
    },
    "5900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "5903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8528,
        8540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "MUL",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8540
      ],
      "op": "ADD",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "ADD",
      "path": "2"
    },
    "5924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "DIV",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8555
      ],
      "op": "AND",
      "path": "2"
    },
    "5936": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8528,
        8559
      ],
      "op": "GT",
      "path": "2"
    },
    "5937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8343,
        8559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8340,
        8625
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8340,
        8625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173D"
    },
    "5942": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8340,
        8625
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8609
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 43
    },
    "5944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8609
      ],
      "op": "ADD",
      "path": "2"
    },
    "5947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8609
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8609
      ],
      "op": "POP",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8340,
        8625
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8817,
        8820
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x1"
    },
    "5952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8817,
        8820
      ],
      "op": "ADD",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1633"
    },
    "5956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8288,
        8832
      ],
      "op": "POP",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8889,
        8894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8896,
        8897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5962": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8889,
        8897
      ],
      "op": "SUB",
      "path": "2"
    },
    "5963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8885,
        9024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B1"
    },
    "5966": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8885,
        9024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8952,
        8953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "ADD",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8913,
        8937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8913,
        8937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5986": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "ADD",
      "path": "2"
    },
    "5989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5994": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "ADD",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SUB",
      "path": "2"
    },
    "6002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1765"
    },
    "6007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "POP",
      "path": "2"
    },
    "6010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8954
      ],
      "op": "POP",
      "path": "2"
    },
    "6011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8913,
        8954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8913,
        8954
      ],
      "op": "POP",
      "path": "2"
    },
    "6013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x40"
    },
    "6015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "ADD",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "POP",
      "path": "2"
    },
    "6029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8977,
        8978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "LT",
      "path": "2"
    },
    "6036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x179F"
    },
    "6039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x179F"
    },
    "6043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8968,
        8979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6047": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "MUL",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "ADD",
      "path": "2"
    },
    "6057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8979
      ],
      "op": "ADD",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8968,
        8984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9005,
        9013
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 46
    },
    "6060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6061": {
      "op": "POP"
    },
    "6062": {
      "op": "POP"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8885,
        9024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9034,
        9057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9073,
        9078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6075": {
      "op": "SHL"
    },
    "6076": {
      "op": "SUB"
    },
    "6077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "GT",
      "path": "2"
    },
    "6079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CB"
    },
    "6083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CB"
    },
    "6087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA9"
    },
    "6090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "MUL",
      "path": "2"
    },
    "6103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ADD",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ADD",
      "path": "2"
    },
    "6108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FE"
    },
    "6116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ADD",
      "path": "2"
    },
    "6121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "ADD",
      "path": "2"
    },
    "6129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SUB",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6135": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6136": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E9"
    },
    "6139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6140": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "POP",
      "path": "2"
    },
    "6142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6143": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9060,
        9079
      ],
      "op": "POP",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9034,
        9079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9034,
        9079
      ],
      "op": "POP",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9089,
        9104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9122,
        9131
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9154
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6153": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9135,
        9154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9135,
        9154
      ],
      "op": "LT",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E9"
    },
    "6159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9220,
        9235
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6161": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9183,
        9184
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "LT",
      "path": "2"
    },
    "6168": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1823"
    },
    "6171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1823"
    },
    "6175": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9173,
        9185
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6196": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "DUP12",
      "path": "2"
    },
    "6197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "AND",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6202": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "MUL",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6207": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9185
      ],
      "op": "ADD",
      "path": "2"
    },
    "6208": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9217
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6215": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9235
      ],
      "op": "LT",
      "path": "2"
    },
    "6216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1887"
    },
    "6221": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "POP",
      "path": "2"
    },
    "6223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9280,
        9295
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9261,
        9262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "LT",
      "path": "2"
    },
    "6231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1862"
    },
    "6234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1862"
    },
    "6238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9251,
        9263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6255": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "MUL",
      "path": "2"
    },
    "6258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9263
      ],
      "op": "ADD",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6261": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "ADD",
      "path": "2"
    },
    "6262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6267": {
      "op": "SHL"
    },
    "6268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "DIV",
      "path": "2"
    },
    "6270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9276
      ],
      "op": "AND",
      "path": "2"
    },
    "6277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9295
      ],
      "op": "GT",
      "path": "2"
    },
    "6278": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9251,
        9295
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9295
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C6"
    },
    "6285": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "POP",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9327,
        9342
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6288": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9309,
        9310
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "LT",
      "path": "2"
    },
    "6295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A2"
    },
    "6298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A2"
    },
    "6302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6305": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9299,
        9311
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6312": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6319": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "MUL",
      "path": "2"
    },
    "6322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9311
      ],
      "op": "ADD",
      "path": "2"
    },
    "6323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "ADD",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6331": {
      "op": "SHL"
    },
    "6332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "DIV",
      "path": "2"
    },
    "6334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9324
      ],
      "op": "AND",
      "path": "2"
    },
    "6341": {
      "branch": 137,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9299,
        9342
      ],
      "op": "GT",
      "path": "2"
    },
    "6342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9342
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1903"
    },
    "6348": {
      "branch": 137,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "POP",
      "path": "2"
    },
    "6350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9388,
        9389
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9368,
        9369
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "LT",
      "path": "2"
    },
    "6359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E2"
    },
    "6362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E2"
    },
    "6366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9358,
        9370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "MUL",
      "path": "2"
    },
    "6386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9370
      ],
      "op": "ADD",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "ADD",
      "path": "2"
    },
    "6390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "DIV",
      "path": "2"
    },
    "6398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9385
      ],
      "op": "AND",
      "path": "2"
    },
    "6402": {
      "branch": 138,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9358,
        9389
      ],
      "op": "GT",
      "path": "2"
    },
    "6403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9173,
        9389
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9170,
        9599
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9170,
        9599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E1"
    },
    "6408": {
      "branch": 138,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9170,
        9599
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x4"
    },
    "6411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9451,
        9452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "LT",
      "path": "2"
    },
    "6416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191B"
    },
    "6419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191B"
    },
    "6423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9441,
        9453
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "MUL",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9453
      ],
      "op": "ADD",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9441,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6446": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6447": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1937"
    },
    "6450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6454": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6463": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DIV",
      "path": "2"
    },
    "6465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MUL",
      "path": "2"
    },
    "6466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1963"
    },
    "6494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B0"
    },
    "6505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "LT",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1985"
    },
    "6513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DIV",
      "path": "2"
    },
    "6521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MUL",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B0"
    },
    "6532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6543": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "GT",
      "path": "2"
    },
    "6563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1993"
    },
    "6566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SUB",
      "path": "2"
    },
    "6570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "AND",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "ADD",
      "path": "2"
    },
    "6575": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6581": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9429
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9430,
        9437
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "LT",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C7"
    },
    "6591": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C7"
    },
    "6595": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "6598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9422,
        9438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "MUL",
      "path": "2"
    },
    "6603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "ADD",
      "path": "2"
    },
    "6606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9438
      ],
      "op": "ADD",
      "path": "2"
    },
    "6607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6609": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9422,
        9462
      ],
      "op": "POP",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9490,
        9499
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9490,
        9499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6614": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9490,
        9499
      ],
      "op": "ADD",
      "path": "2"
    },
    "6615": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9490,
        9499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9490,
        9499
      ],
      "op": "POP",
      "path": "2"
    },
    "6617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9532,
        9537
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9521,
        9528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6619": {
      "branch": 139,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9521,
        9537
      ],
      "op": "LT",
      "path": "2"
    },
    "6620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9518,
        9585
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9561,
        9566
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 49,
      "value": "0x19E9"
    },
    "6624": {
      "branch": 139,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9518,
        9585
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9518,
        9585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9622,
        9625
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x1"
    },
    "6628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9622,
        9625
      ],
      "op": "ADD",
      "path": "2"
    },
    "6629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1805"
    },
    "6632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6633": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9118,
        9637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 51
    },
    "6636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8167,
        9667
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "op": "POP"
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "op": "POP"
    },
    "6642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8167,
        9667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6643": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6644": {
      "fn": "Governance.createProposal",
      "offset": [
        12615,
        12616
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x1"
    },
    "6646": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12612
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6650": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12616
      ],
      "op": "AND",
      "path": "2"
    },
    "6651": {
      "branch": 140,
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12616
      ],
      "op": "GT",
      "path": "2"
    },
    "6652": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6653": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0C"
    },
    "6657": {
      "branch": 140,
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "POP",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.createProposal",
      "offset": [
        12639,
        12642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "6662": {
      "fn": "Governance.createProposal",
      "offset": [
        12620,
        12636
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6663": {
      "fn": "Governance.createProposal",
      "offset": [
        12620,
        12642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6666": {
      "fn": "Governance.createProposal",
      "offset": [
        12620,
        12642
      ],
      "op": "AND",
      "path": "2"
    },
    "6667": {
      "branch": 141,
      "fn": "Governance.createProposal",
      "offset": [
        12620,
        12642
      ],
      "op": "LT",
      "path": "2"
    },
    "6668": {
      "fn": "Governance.createProposal",
      "offset": [
        12596,
        12642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6669": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A58"
    },
    "6672": {
      "branch": 141,
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6673": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6675": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6682": {
      "op": "SHL"
    },
    "6683": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6687": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6689": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6690": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "ADD",
      "path": "2"
    },
    "6691": {
      "op": "MSTORE"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6696": {
      "op": "DUP3"
    },
    "6697": {
      "op": "ADD"
    },
    "6698": {
      "op": "MSTORE"
    },
    "6699": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6734": {
      "op": "DUP3"
    },
    "6735": {
      "op": "ADD"
    },
    "6736": {
      "op": "MSTORE"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6739": {
      "op": "ADD"
    },
    "6740": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "6743": {
      "op": "JUMP"
    },
    "6744": {
      "fn": "Governance.createProposal",
      "offset": [
        12588,
        12672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6745": {
      "fn": "Governance.createProposal",
      "offset": [
        12700,
        12701
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x1"
    },
    "6747": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6749": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6751": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6752": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6753": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6754": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6B"
    },
    "6757": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6758": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6759": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A8"
    },
    "6762": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12682,
        12701
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6763": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6764": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6765": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6766": {
      "fn": "Governance.createProposal",
      "offset": [
        12682,
        12701
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6767": {
      "op": "POP"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "fn": "Governance.createProposal",
      "offset": [
        12772,
        12786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6771": {
      "fn": "Governance.createProposal",
      "offset": [
        12772,
        12786
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6772": {
      "fn": "Governance.createProposal",
      "offset": [
        12732,
        12759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6774": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6775": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6776": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6777": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6779": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6781": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6782": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6784": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6785": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6786": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12824
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x3"
    },
    "6788": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6789": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12824
      ],
      "op": "ADD",
      "path": "2"
    },
    "6790": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6791": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6792": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "6808": {
      "op": "NOT"
    },
    "6809": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "AND",
      "path": "2",
      "statement": 55
    },
    "6810": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "6817": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6823": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6824": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6825": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "AND",
      "path": "2"
    },
    "6826": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6827": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6828": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6829": {
      "fn": "Governance.createProposal",
      "offset": [
        12801,
        12840
      ],
      "op": "MUL",
      "path": "2"
    },
    "6830": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6838": {
      "op": "SHL"
    },
    "6839": {
      "op": "NOT"
    },
    "6840": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "AND",
      "path": "2"
    },
    "6841": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6843": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6844": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "OR",
      "path": "2"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6849": {
      "op": "SHL"
    },
    "6850": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6851": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6852": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "AND",
      "path": "2"
    },
    "6853": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6854": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6855": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6856": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "MUL",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "OR",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6859": {
      "fn": "Governance.createProposal",
      "offset": [
        12854,
        12893
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12933
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 56
    },
    "6863": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12933
      ],
      "op": "ADD",
      "path": "2"
    },
    "6864": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6865": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6869": {
      "op": "NOT"
    },
    "6870": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "AND",
      "path": "2"
    },
    "6871": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6874": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6875": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "AND",
      "path": "2"
    },
    "6876": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "OR",
      "path": "2"
    },
    "6877": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6878": {
      "fn": "Governance.createProposal",
      "offset": [
        12907,
        12952
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6879": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6880": {
      "fn": "Governance.createProposal",
      "offset": [
        12966,
        12997
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0x1AEA"
    },
    "6883": {
      "fn": "Governance.createProposal",
      "offset": [
        12988,
        12997
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6884": {
      "fn": "Governance.createProposal",
      "offset": [
        12988,
        12997
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6885": {
      "fn": "Governance.createProposal",
      "offset": [
        12762,
        12787
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6886": {
      "fn": "Governance.createProposal",
      "offset": [
        12966,
        12997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A67"
    },
    "6889": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12966,
        12997
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6890": {
      "fn": "Governance.createProposal",
      "offset": [
        12966,
        12997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6891": {
      "fn": "Governance.createProposal",
      "offset": [
        12966,
        12997
      ],
      "op": "POP",
      "path": "2"
    },
    "6892": {
      "fn": "Governance.createProposal",
      "offset": [
        13008,
        13120
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1AFE"
    },
    "6895": {
      "fn": "Governance.createProposal",
      "offset": [
        13024,
        13033
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6896": {
      "fn": "Governance.createProposal",
      "offset": [
        13024,
        13033
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6897": {
      "fn": "Governance.createProposal",
      "offset": [
        13042,
        13056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6899": {
      "fn": "Governance.createProposal",
      "offset": [
        13042,
        13056
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6900": {
      "fn": "Governance.createProposal",
      "offset": [
        13059,
        13060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6902": {
      "fn": "Governance.createProposal",
      "offset": [
        13062,
        13072
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6903": {
      "fn": "Governance.createProposal",
      "offset": [
        13074,
        13087
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.createProposal",
      "offset": [
        13089,
        13102
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.createProposal",
      "offset": [
        13104,
        13119
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.createProposal",
      "offset": [
        13008,
        13023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B88"
    },
    "6909": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13008,
        13120
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6910": {
      "fn": "Governance.createProposal",
      "offset": [
        13008,
        13120
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6911": {
      "fn": "Governance.createProposal",
      "offset": [
        12578,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6912": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6913": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6914": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6915": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6916": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6917": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6918": {
      "fn": "Governance.createProposal",
      "offset": [
        12396,
        13158
      ],
      "op": "POP",
      "path": "2"
    },
    "6919": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        12396,
        13158
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6921": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14504,
        14531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6923": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14534,
        14583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B23"
    },
    "6926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14558,
        14582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6928": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6929": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "6931": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6932": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6933": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6938": {
      "op": "SHL"
    },
    "6939": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6940": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6941": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "6942": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6943": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6944": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "6945": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6946": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14534,
        14583
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14504,
        14583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14504,
        14583
      ],
      "op": "POP",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14593,
        14611
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2D"
    },
    "6953": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14593,
        14611
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "6956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14593,
        14611
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14593,
        14611
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14621,
        14635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14621,
        14635
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14754,
        14773
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14750,
        14751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14750,
        14773
      ],
      "op": "LT",
      "path": "2"
    },
    "6965": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6966": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3D"
    },
    "6969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6970": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14807,
        14855
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 59,
      "value": "0x1B44"
    },
    "6973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14827,
        14851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14853,
        14854
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14807,
        14826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B17"
    },
    "6979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14807,
        14855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6980": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14807,
        14855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14799,
        14856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 60
    },
    "6984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6999": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "7002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14799,
        14856
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14799,
        14856
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7011": {
      "op": "POP"
    },
    "7012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14879,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B72"
    },
    "7021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "7025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MUL",
      "path": "2"
    },
    "7037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9E"
    },
    "7065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "7069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEB"
    },
    "7076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "LT",
      "path": "2"
    },
    "7081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC0"
    },
    "7084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MUL",
      "path": "2"
    },
    "7093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEB"
    },
    "7103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "GT",
      "path": "2"
    },
    "7134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCE"
    },
    "7137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SUB",
      "path": "2"
    },
    "7141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7148": {
      "op": "POP"
    },
    "7149": {
      "op": "POP"
    },
    "7150": {
      "op": "POP"
    },
    "7151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7154": {
      "op": "POP"
    },
    "7155": {
      "op": "POP"
    },
    "7156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7190": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7209": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7224": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7230": {
      "op": "SHL"
    },
    "7231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7232": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7239": {
      "op": "SHL"
    },
    "7240": {
      "op": "SUB"
    },
    "7241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7251": {
      "op": "SHL"
    },
    "7252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7254": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7262": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7269": {
      "op": "SHL"
    },
    "7270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7281": {
      "op": "SHL"
    },
    "7282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DIV",
      "path": "2"
    },
    "7284": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "7286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14870,
        14892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7293": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14946
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14946
      ],
      "op": "ADD",
      "path": "2"
    },
    "7295": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14946
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7296": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14946
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7297": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14946
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7298": {
      "op": "POP"
    },
    "7299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14949,
        14964
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14964
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14964
      ],
      "op": "AND",
      "path": "2"
    },
    "7302": {
      "branch": 142,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14964
      ],
      "op": "LT",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7305": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C9D"
    },
    "7308": {
      "branch": 142,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "POP",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14984,
        14990
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14980
      ],
      "op": "ADD",
      "path": "2"
    },
    "7315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14980
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7316": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14990
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14990
      ],
      "op": "AND",
      "path": "2"
    },
    "7323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14990
      ],
      "op": "EQ",
      "path": "2"
    },
    "7324": {
      "branch": 143,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14968,
        14990
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7325": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        14990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7326": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7328": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB2"
    },
    "7331": {
      "branch": 143,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "POP",
      "path": "2"
    },
    "7333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15013,
        15019
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7334": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15000
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7335": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7338": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15010
      ],
      "op": "ADD",
      "path": "2"
    },
    "7339": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15010
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7340": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15019
      ],
      "op": "AND",
      "path": "2"
    },
    "7344": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15019
      ],
      "op": "EQ",
      "path": "2"
    },
    "7345": {
      "branch": 144,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14994,
        15019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14910,
        15019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7347": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14906,
        15460
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7348": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14906,
        15460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E35"
    },
    "7351": {
      "branch": 144,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14906,
        15460
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7352": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15232
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 61,
      "value": "0xFFFF"
    },
    "7355": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15232
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15232
      ],
      "op": "AND",
      "path": "2"
    },
    "7357": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7359": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15215
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7360": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15215
      ],
      "op": "ADD",
      "path": "2"
    },
    "7361": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15198,
        15232
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7362": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15330
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0xB"
    },
    "7364": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15296,
        15330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCE"
    },
    "7368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15296,
        15330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7369": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15296,
        15311
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15296,
        15330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A8"
    },
    "7373": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15296,
        15330
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7374": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15296,
        15330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7375": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15331
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15331
      ],
      "op": "AND",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7385": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15286
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7386": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15286
      ],
      "op": "ADD",
      "path": "2"
    },
    "7387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15331
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x0"
    },
    "7390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7391": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15354
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7395": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7400": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7401": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7403": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7404": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15256
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7405": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15250,
        15256
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7406": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7407": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFA"
    },
    "7412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15362
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38D3"
    },
    "7417": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15349,
        15371
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7418": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7419": {
      "op": "POP"
    },
    "7420": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7422": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7423": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7428": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7429": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7430": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7431": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7432": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7438": {
      "op": "NOT"
    },
    "7439": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7440": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7449": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7450": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7451": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7452": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7455": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7457": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7460": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7461": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7462": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7463": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7465": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7466": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7467": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7468": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7471": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7472": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7473": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7475": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7476": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7478": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7482": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7487": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7488": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7489": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7490": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7492": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7493": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7494": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7495": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7497": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7498": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7499": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7500": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP12",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "7512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "ADD",
      "path": "2"
    },
    "7513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7514": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "7518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7519": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7524": {
      "op": "NOT"
    },
    "7525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7532": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7536": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7537": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7540": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MUL",
      "path": "2"
    },
    "7542": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7546": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7563": {
      "op": "NOT"
    },
    "7564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7569": {
      "op": "SHL"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7576": {
      "op": "SHL"
    },
    "7577": {
      "op": "SUB"
    },
    "7578": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7579": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7580": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7581": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7583": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MUL",
      "path": "2"
    },
    "7585": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7590": {
      "op": "SHL"
    },
    "7591": {
      "op": "NOT"
    },
    "7592": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7598": {
      "op": "SHL"
    },
    "7599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MUL",
      "path": "2"
    },
    "7606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7607": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7617": {
      "op": "SHL"
    },
    "7618": {
      "op": "NOT"
    },
    "7619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7624": {
      "op": "SHL"
    },
    "7625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "7628": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MUL",
      "path": "2"
    },
    "7630": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7638": {
      "op": "SHL"
    },
    "7639": {
      "op": "NOT"
    },
    "7640": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7642": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7643": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7644": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7649": {
      "op": "SHL"
    },
    "7650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "AND",
      "path": "2"
    },
    "7654": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7655": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7656": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "MUL",
      "path": "2"
    },
    "7658": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "OR",
      "path": "2"
    },
    "7659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15349,
        15371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 64
    },
    "7665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7667": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7670": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7672": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7677": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "7711": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7712": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E2C"
    },
    "7715": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15415,
        15421
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15415,
        15421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7719": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15431,
        15444
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7720": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B26"
    },
    "7723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15394,
        15445
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SUB",
      "path": "2"
    },
    "7731": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7732": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15394,
        15445
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7733": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14906,
        15460
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15483,
        15486
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0x1"
    },
    "7736": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15483,
        15486
      ],
      "op": "ADD",
      "path": "2"
    },
    "7737": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B31"
    },
    "7740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14732,
        15498
      ],
      "op": "POP",
      "path": "2"
    },
    "7743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14494,
        15557
      ],
      "op": "POP",
      "path": "2"
    },
    "7744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14494,
        15557
      ],
      "op": "POP",
      "path": "2"
    },
    "7745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14494,
        15557
      ],
      "op": "POP",
      "path": "2"
    },
    "7746": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14429,
        15557
      ],
      "op": "POP",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        14429,
        15557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7748": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7749": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18238
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x2"
    },
    "7751": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18238
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7754": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7755": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7762": {
      "op": "SHL"
    },
    "7763": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7764": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7767": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7768": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ADD",
      "path": "2"
    },
    "7769": {
      "op": "DUP6"
    },
    "7770": {
      "op": "SWAP1"
    },
    "7771": {
      "op": "MSTORE"
    },
    "7772": {
      "fn": "Governance.submitVerification",
      "offset": [
        18258,
        18268
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.submitVerification",
      "offset": [
        18258,
        18268
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7780": {
      "op": "SHL"
    },
    "7781": {
      "op": "SUB"
    },
    "7782": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18238
      ],
      "op": "AND",
      "path": "2"
    },
    "7783": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7784": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18246
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7789": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7792": {
      "op": "ADD"
    },
    "7793": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7795": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7797": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7798": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7799": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7800": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "SUB",
      "path": "2"
    },
    "7801": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7802": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7803": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "GAS",
      "path": "2"
    },
    "7804": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7805": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7806": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7807": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7808": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8D"
    },
    "7811": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7812": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7813": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7815": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7816": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7817": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7818": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7820": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7821": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7822": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "POP",
      "path": "2"
    },
    "7823": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "POP",
      "path": "2"
    },
    "7824": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "POP",
      "path": "2"
    },
    "7825": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "POP",
      "path": "2"
    },
    "7826": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7828": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7829": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7832": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "NOT",
      "path": "2"
    },
    "7833": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7835": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7836": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ADD",
      "path": "2"
    },
    "7837": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "AND",
      "path": "2"
    },
    "7838": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7839": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ADD",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7843": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7844": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "POP",
      "path": "2"
    },
    "7845": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "ADD",
      "path": "2"
    },
    "7847": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB1"
    },
    "7851": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7852": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A4A"
    },
    "7856": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18228,
        18254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7857": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7864": {
      "op": "SHL"
    },
    "7865": {
      "op": "SUB"
    },
    "7866": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18268
      ],
      "op": "AND",
      "path": "2"
    },
    "7867": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18268
      ],
      "op": "EQ",
      "path": "2"
    },
    "7868": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18305
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7869": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18305
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7870": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE2"
    },
    "7873": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18305
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7874": {
      "op": "POP"
    },
    "7875": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7877": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7878": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7879": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7880": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7882": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7884": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7885": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7887": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7888": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18286
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7889": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7891": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "ADD",
      "path": "2"
    },
    "7892": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7897": {
      "op": "SHL"
    },
    "7898": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7899": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "DIV",
      "path": "2"
    },
    "7900": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7903": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18297
      ],
      "op": "AND",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18305
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7905": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        18272,
        18305
      ],
      "op": "EQ",
      "path": "2"
    },
    "7906": {
      "fn": "Governance.submitVerification",
      "offset": [
        18228,
        18305
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F2E"
    },
    "7910": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7913": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7922": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7925": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "ADD",
      "path": "2"
    },
    "7929": {
      "op": "DUP2"
    },
    "7930": {
      "op": "SWAP1"
    },
    "7931": {
      "op": "MSTORE"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7934": {
      "op": "DUP3"
    },
    "7935": {
      "op": "ADD"
    },
    "7936": {
      "op": "MSTORE"
    },
    "7937": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7972": {
      "op": "DUP3"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7977": {
      "op": "ADD"
    },
    "7978": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "7981": {
      "op": "JUMP"
    },
    "7982": {
      "fn": "Governance.submitVerification",
      "offset": [
        18220,
        18342
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7983": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18378
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x0"
    },
    "7985": {
      "fn": "Governance.submitVerification",
      "offset": [
        18360,
        18367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7986": {
      "fn": "Governance.submitVerification",
      "offset": [
        18360,
        18374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7987": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        18360,
        18378
      ],
      "op": "GT",
      "path": "2"
    },
    "7988": {
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F3C"
    },
    "7991": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7992": {
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7994": {
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7996": {
      "fn": "Governance.submitVerification",
      "offset": [
        18352,
        18379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7997": {
      "fn": "Governance.submitVerification",
      "offset": [
        18390,
        18409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7999": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8000": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8001": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8004": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8006": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8011": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8013": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "ADD",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8016": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8017": {
      "fn": "Governance.submitVerification",
      "offset": [
        18412,
        18426
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8018": {
      "fn": "Governance.submitVerification",
      "offset": [
        18390,
        18409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8023": {
      "op": "SHL"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8025": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "DIV",
      "path": "2"
    },
    "8026": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8029": {
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        18999
      ],
      "op": "AND",
      "path": "2"
    },
    "8030": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        18983,
        19003
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8031": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        19185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD7"
    },
    "8034": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        19185
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19023,
        19032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8037": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8038": {
      "fn": "Governance.submitVerification",
      "offset": [
        19042,
        19049
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8039": {
      "fn": "Governance.submitVerification",
      "offset": [
        19042,
        19056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19038,
        19039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19038,
        19056
      ],
      "op": "LT",
      "path": "2"
    },
    "8042": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8043": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD5"
    },
    "8046": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19123
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 68
    },
    "8048": {
      "fn": "Governance.submitVerification",
      "offset": [
        19124,
        19125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8051": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "LT",
      "path": "2"
    },
    "8053": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F80"
    },
    "8056": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8057": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F80"
    },
    "8060": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "8063": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19116,
        19126
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8065": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8067": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "MUL",
      "path": "2"
    },
    "8068": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8070": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "ADD",
      "path": "2"
    },
    "8071": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "ADD",
      "path": "2"
    },
    "8072": {
      "fn": "Governance.submitVerification",
      "offset": [
        19116,
        19126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8073": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8075": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8076": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8078": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "ADD",
      "path": "2"
    },
    "8079": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9A"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8083": {
      "op": "DUP2"
    },
    "8084": {
      "op": "MSTORE"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "op": "SWAP1"
    },
    "8089": {
      "op": "JUMP"
    },
    "8090": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8093": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8097": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8098": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "SUB",
      "path": "2"
    },
    "8099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "SUB",
      "path": "2"
    },
    "8100": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8101": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8102": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8105": {
      "fn": "Governance.submitVerification",
      "offset": [
        19099,
        19127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8106": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8107": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8108": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8109": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8111": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "ADD",
      "path": "2"
    },
    "8112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19128
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19083
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8114": {
      "fn": "Governance.submitVerification",
      "offset": [
        19084,
        19085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8115": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8117": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8118": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "LT",
      "path": "2"
    },
    "8119": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC2"
    },
    "8122": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC2"
    },
    "8126": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "8129": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19076,
        19086
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8130": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8133": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8135": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "MUL",
      "path": "2"
    },
    "8136": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8138": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8139": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "ADD",
      "path": "2"
    },
    "8140": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19086
      ],
      "op": "ADD",
      "path": "2"
    },
    "8141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        19128
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8142": {
      "fn": "Governance.submitVerification",
      "offset": [
        19156,
        19159
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x1"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        19156,
        19159
      ],
      "op": "ADD",
      "path": "2"
    },
    "8145": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F65"
    },
    "8148": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8149": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19175
      ],
      "op": "POP",
      "path": "2"
    },
    "8151": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        19185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19194,
        19208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8154": {
      "fn": "Governance.submitVerification",
      "offset": [
        19238,
        19245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8157": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "ADD",
      "path": "2"
    },
    "8161": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FEA"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3745"
    },
    "8169": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19221,
        19246
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8170": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8171": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8174": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8176": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "SUB",
      "path": "2"
    },
    "8179": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "SUB",
      "path": "2"
    },
    "8180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8183": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19246
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8186": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8187": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8188": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8191": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "ADD",
      "path": "2"
    },
    "8192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.submitVerification",
      "offset": [
        19194,
        19247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8194": {
      "fn": "Governance.submitVerification",
      "offset": [
        19194,
        19247
      ],
      "op": "POP",
      "path": "2"
    },
    "8195": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8197": {
      "fn": "Governance.submitVerification",
      "offset": [
        19295,
        19301
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19286
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8201": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19291
      ],
      "op": "ADD",
      "path": "2"
    },
    "8202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19291
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8203": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19301
      ],
      "op": "EQ",
      "path": "2"
    },
    "8204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2016"
    },
    "8207": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19308,
        19309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8210": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2019"
    },
    "8213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8214": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8217": {
      "fn": "Governance.submitVerification",
      "offset": [
        19280,
        19309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8220": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "ADD",
      "path": "2"
    },
    "8223": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8224": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8226": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8227": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8228": {
      "op": "DUP12"
    },
    "8229": {
      "op": "DUP2"
    },
    "8230": {
      "op": "MSTORE"
    },
    "8231": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8237": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8238": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8239": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19367
      ],
      "op": "AND",
      "path": "2"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8242": {
      "op": "DUP4"
    },
    "8243": {
      "op": "ADD"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "DUP2"
    },
    "8246": {
      "op": "ADD"
    },
    "8247": {
      "op": "DUP10"
    },
    "8248": {
      "op": "SWAP1"
    },
    "8249": {
      "op": "MSTORE"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8252": {
      "op": "DUP2"
    },
    "8253": {
      "op": "ADD"
    },
    "8254": {
      "op": "DUP6"
    },
    "8255": {
      "op": "SWAP1"
    },
    "8256": {
      "op": "MSTORE"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8260": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8261": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "AND",
      "path": "2"
    },
    "8263": {
      "fn": "Governance.submitVerification",
      "offset": [
        19386,
        19400
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19386,
        19400
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19386,
        19400
      ],
      "op": "EQ",
      "path": "2"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8268": {
      "op": "DUP4"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "MSTORE"
    },
    "8271": {
      "fn": "Governance.submitVerification",
      "offset": [
        19258,
        19309
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8272": {
      "op": "POP"
    },
    "8273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8309": {
      "op": "ADD"
    },
    "8310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8312": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8315": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "SUB",
      "path": "2"
    },
    "8316": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8317": {
      "fn": "Governance.submitVerification",
      "offset": [
        19325,
        19401
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8318": {
      "fn": "Governance.submitVerification",
      "offset": [
        19416,
        19427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8319": {
      "fn": "Governance.submitVerification",
      "offset": [
        19430,
        19431
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8321": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        19416,
        19431
      ],
      "op": "SUB",
      "path": "2"
    },
    "8322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19412,
        21678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x237F"
    },
    "8325": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        19412,
        21678
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8328": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8329": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "ADD",
      "path": "2"
    },
    "8330": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8331": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20A9"
    },
    "8337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19542
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19541,
        19542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8340": {
      "fn": "Governance.submitVerification",
      "offset": [
        19541,
        19542
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8345": {
      "op": "SHL"
    },
    "8346": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8347": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "DIV",
      "path": "2"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8354": {
      "op": "SHL"
    },
    "8355": {
      "op": "SUB"
    },
    "8356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19540
      ],
      "op": "AND",
      "path": "2"
    },
    "8357": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BF1"
    },
    "8360": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19526,
        19542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8365": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8367": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8368": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8369": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "ADD",
      "path": "2"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8371": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8374": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8381": {
      "op": "SHL"
    },
    "8382": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8388": {
      "op": "SHL"
    },
    "8389": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8390": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "DIV",
      "path": "2"
    },
    "8392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19632
      ],
      "op": "AND",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8398": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ADD",
      "path": "2"
    },
    "8399": {
      "op": "SWAP2"
    },
    "8400": {
      "op": "SWAP1"
    },
    "8401": {
      "op": "SWAP2"
    },
    "8402": {
      "op": "MSTORE"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8409": {
      "op": "SHL"
    },
    "8410": {
      "op": "SUB"
    },
    "8411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19542
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19542
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19542
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8414": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19542
      ],
      "op": "AND",
      "path": "2"
    },
    "8415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19510,
        19542
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8416": {
      "op": "POP"
    },
    "8417": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8419": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19585
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8426": {
      "op": "SHL"
    },
    "8427": {
      "op": "SUB"
    },
    "8428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "AND",
      "path": "2"
    },
    "8431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8432": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19614
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8445": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8447": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8448": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "SUB",
      "path": "2"
    },
    "8449": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8450": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8451": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "GAS",
      "path": "2"
    },
    "8452": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8453": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8454": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2115"
    },
    "8459": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8461": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8463": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8465": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8466": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8468": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8469": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8470": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "POP",
      "path": "2"
    },
    "8471": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "POP",
      "path": "2"
    },
    "8472": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "POP",
      "path": "2"
    },
    "8473": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "POP",
      "path": "2"
    },
    "8474": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8476": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8477": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8478": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8480": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "NOT",
      "path": "2"
    },
    "8481": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8483": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8484": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ADD",
      "path": "2"
    },
    "8485": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "AND",
      "path": "2"
    },
    "8486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8487": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ADD",
      "path": "2"
    },
    "8488": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8492": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "POP",
      "path": "2"
    },
    "8493": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8494": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "ADD",
      "path": "2"
    },
    "8495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8496": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2139"
    },
    "8499": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8500": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8501": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A4A"
    },
    "8504": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19596,
        19633
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8505": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19633
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8506": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x2"
    },
    "8508": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8509": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8511": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8512": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "ADD",
      "path": "2"
    },
    "8513": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8514": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8516": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8517": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8518": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "ADD",
      "path": "2"
    },
    "8519": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8520": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8522": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8523": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8530": {
      "op": "SHL"
    },
    "8531": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8532": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8533": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8539": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8540": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8541": {
      "fn": "Governance.submitVerification",
      "offset": [
        19725,
        19737
      ],
      "op": "AND",
      "path": "2"
    },
    "8542": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8543": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "ADD",
      "path": "2"
    },
    "8545": {
      "op": "SWAP2"
    },
    "8546": {
      "op": "SWAP1"
    },
    "8547": {
      "op": "SWAP2"
    },
    "8548": {
      "op": "MSTORE"
    },
    "8549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "DIV",
      "path": "2"
    },
    "8554": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19739,
        19755
      ],
      "op": "AND",
      "path": "2"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8561": {
      "op": "DUP3"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "op": "MSTORE"
    },
    "8564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19634
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8566": {
      "op": "POP"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "op": "SUB"
    },
    "8575": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "AND",
      "path": "2"
    },
    "8576": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19724
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8582": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8585": {
      "op": "ADD"
    },
    "8586": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8588": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8590": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8591": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8592": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8593": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "SUB",
      "path": "2"
    },
    "8594": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8595": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8597": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8598": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8600": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8601": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8602": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8603": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A3"
    },
    "8606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8607": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8609": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8610": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8611": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "POP",
      "path": "2"
    },
    "8613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "GAS",
      "path": "2"
    },
    "8614": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "CALL",
      "path": "2"
    },
    "8615": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8616": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8617": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8618": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B7"
    },
    "8621": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8622": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8623": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8625": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8626": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8627": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8628": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8630": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8631": {
      "fn": "Governance.submitVerification",
      "offset": [
        19703,
        19756
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8632": {
      "op": "POP"
    },
    "8633": {
      "op": "POP"
    },
    "8634": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x2"
    },
    "8636": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8637": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8639": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8640": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8641": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "ADD",
      "path": "2"
    },
    "8642": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8643": {
      "fn": "Governance.submitVerification",
      "offset": [
        19811,
        19836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8645": {
      "fn": "Governance.submitVerification",
      "offset": [
        19811,
        19836
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8646": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8648": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8649": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8656": {
      "op": "SHL"
    },
    "8657": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8658": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8663": {
      "op": "SHL"
    },
    "8664": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8665": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8666": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "DIV",
      "path": "2"
    },
    "8667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8670": {
      "fn": "Governance.submitVerification",
      "offset": [
        19792,
        19809
      ],
      "op": "AND",
      "path": "2"
    },
    "8671": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8672": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8673": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "ADD",
      "path": "2"
    },
    "8674": {
      "op": "SWAP3"
    },
    "8675": {
      "op": "SWAP1"
    },
    "8676": {
      "op": "SWAP3"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8680": {
      "op": "DUP2"
    },
    "8681": {
      "op": "ADD"
    },
    "8682": {
      "op": "SWAP2"
    },
    "8683": {
      "op": "SWAP1"
    },
    "8684": {
      "op": "SWAP2"
    },
    "8685": {
      "op": "MSTORE"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8692": {
      "op": "SHL"
    },
    "8693": {
      "op": "SUB"
    },
    "8694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8695": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "AND",
      "path": "2"
    },
    "8697": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19780
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8698": {
      "op": "POP"
    },
    "8699": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19791
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8704": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8705": {
      "op": "POP"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8708": {
      "op": "ADD"
    },
    "8709": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8710": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8712": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8714": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8715": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8716": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8717": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "SUB",
      "path": "2"
    },
    "8718": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8719": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8723": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8724": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8725": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8726": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8727": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221F"
    },
    "8730": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8733": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8734": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8736": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "POP",
      "path": "2"
    },
    "8737": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "GAS",
      "path": "2"
    },
    "8738": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "CALL",
      "path": "2"
    },
    "8739": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8740": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2233"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8749": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8750": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8751": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8752": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8754": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8755": {
      "fn": "Governance.submitVerification",
      "offset": [
        19770,
        19837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8756": {
      "op": "POP"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "POP"
    },
    "8759": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19866
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x4"
    },
    "8761": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19866
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19866
      ],
      "op": "ADD",
      "path": "2"
    },
    "8763": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19868
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8764": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19868
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8765": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "8780": {
      "op": "NOT"
    },
    "8781": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19868
      ],
      "op": "AND",
      "path": "2"
    },
    "8782": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19852,
        19868
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8784": {
      "op": "POP"
    },
    "8785": {
      "fn": "Governance.submitVerification",
      "offset": [
        19867,
        19868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 74
    },
    "8788": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8790": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8792": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8794": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8797": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8798": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8799": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8800": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2269"
    },
    "8803": {
      "fn": "Governance.submitVerification",
      "offset": [
        19918,
        19932
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8804": {
      "fn": "Governance.submitVerification",
      "offset": [
        19867,
        19868
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EAA"
    },
    "8808": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19911,
        19932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8809": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8810": {
      "op": "POP"
    },
    "8811": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8813": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8814": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "ADD",
      "path": "2"
    },
    "8815": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8817": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8823": {
      "op": "NOT"
    },
    "8824": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "AND",
      "path": "2"
    },
    "8825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8831": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8832": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "ADD",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "ADD",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8841": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8842": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8843": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8845": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "ADD",
      "path": "2"
    },
    "8848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8849": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "SUB"
    },
    "8858": {
      "op": "NOT"
    },
    "8859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "AND",
      "path": "2"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19911,
        19932
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8864": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8865": {
      "op": "DUP2"
    },
    "8866": {
      "op": "SWAP1"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8873": {
      "op": "SHL"
    },
    "8874": {
      "op": "SUB"
    },
    "8875": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20036
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8876": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20036
      ],
      "op": "AND",
      "path": "2"
    },
    "8877": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        20044,
        20049
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8879": {
      "fn": "Governance.submitVerification",
      "offset": [
        20044,
        20049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8880": {
      "op": "DUP4"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8882": {
      "op": "DUP2"
    },
    "8883": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        20044,
        20049
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20036
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "GAS",
      "path": "2"
    },
    "8887": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "CALL",
      "path": "2"
    },
    "8888": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8890": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8891": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8892": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8897": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "EQ",
      "path": "2"
    },
    "8898": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E7"
    },
    "8901": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8902": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8904": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8905": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8906": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8907": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8909": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "NOT",
      "path": "2"
    },
    "8910": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "ADD",
      "path": "2"
    },
    "8914": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "AND",
      "path": "2"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "ADD",
      "path": "2"
    },
    "8917": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8920": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8921": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8923": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8924": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8926": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8928": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8929": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "ADD",
      "path": "2"
    },
    "8930": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8931": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "8934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8936": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20018,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8942": {
      "fn": "Governance.submitVerification",
      "offset": [
        19985,
        20054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8943": {
      "fn": "Governance.submitVerification",
      "offset": [
        19985,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8944": {
      "fn": "Governance.submitVerification",
      "offset": [
        19985,
        20054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8945": {
      "fn": "Governance.submitVerification",
      "offset": [
        19985,
        20054
      ],
      "op": "POP",
      "path": "2"
    },
    "8946": {
      "branch": 151,
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20080
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 75
    },
    "8947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230E"
    },
    "8950": {
      "branch": 151,
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8951": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8953": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8960": {
      "op": "SHL"
    },
    "8961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8963": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8965": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "ADD",
      "path": "2"
    },
    "8966": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "8969": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8970": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C25"
    },
    "8973": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20068,
        20105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20068,
        20105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x40"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8978": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20177
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8979": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20190,
        20195
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8981": {
      "fn": "Governance.submitVerification",
      "offset": [
        20190,
        20195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8986": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20190,
        20195
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20177
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "GAS",
      "path": "2"
    },
    "8990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "CALL",
      "path": "2"
    },
    "8991": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "POP",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "POP",
      "path": "2"
    },
    "8994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "POP",
      "path": "2"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "EQ",
      "path": "2"
    },
    "9001": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234E"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9005": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "POP",
      "path": "2"
    },
    "9010": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "NOT",
      "path": "2"
    },
    "9013": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "ADD",
      "path": "2"
    },
    "9017": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "AND",
      "path": "2"
    },
    "9018": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "ADD",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9024": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9026": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9031": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "ADD",
      "path": "2"
    },
    "9033": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2353"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9038": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9039": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "POP",
      "path": "2"
    },
    "9043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20167,
        20200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9044": {
      "op": "POP"
    },
    "9045": {
      "fn": "Governance.submitVerification",
      "offset": [
        20152,
        20200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20152,
        20200
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9047": {
      "op": "POP"
    },
    "9048": {
      "fn": "Governance.submitVerification",
      "offset": [
        20152,
        20200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9049": {
      "op": "POP"
    },
    "9050": {
      "fn": "Governance.submitVerification",
      "offset": [
        20152,
        20200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9051": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x2376"
    },
    "9054": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9055": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9057": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9064": {
      "op": "SHL"
    },
    "9065": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9066": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9067": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "ADD",
      "path": "2"
    },
    "9070": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "9073": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9074": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C25"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20214,
        20251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9078": {
      "fn": "Governance.submitVerification",
      "offset": [
        20214,
        20251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9079": {
      "fn": "Governance.submitVerification",
      "offset": [
        19432,
        20263
      ],
      "op": "POP",
      "path": "2"
    },
    "9080": {
      "fn": "Governance.submitVerification",
      "offset": [
        19432,
        20263
      ],
      "op": "POP",
      "path": "2"
    },
    "9081": {
      "fn": "Governance.submitVerification",
      "offset": [
        19432,
        20263
      ],
      "op": "POP",
      "path": "2"
    },
    "9082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19432,
        20263
      ],
      "op": "POP",
      "path": "2"
    },
    "9083": {
      "fn": "Governance.submitVerification",
      "offset": [
        19412,
        21678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8B"
    },
    "9086": {
      "fn": "Governance.submitVerification",
      "offset": [
        19412,
        21678
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9087": {
      "fn": "Governance.submitVerification",
      "offset": [
        19412,
        21678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20445,
        20451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.submitVerification",
      "offset": [
        20425,
        20431
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9090": {
      "fn": "Governance.submitVerification",
      "offset": [
        20425,
        20443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9092": {
      "fn": "Governance.submitVerification",
      "offset": [
        20425,
        20443
      ],
      "op": "ADD",
      "path": "2"
    },
    "9093": {
      "fn": "Governance.submitVerification",
      "offset": [
        20425,
        20443
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9094": {
      "branch": 152,
      "fn": "Governance.submitVerification",
      "offset": [
        20425,
        20451
      ],
      "op": "SUB",
      "path": "2"
    },
    "9095": {
      "fn": "Governance.submitVerification",
      "offset": [
        20422,
        21668
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24F6"
    },
    "9098": {
      "branch": 152,
      "fn": "Governance.submitVerification",
      "offset": [
        20422,
        21668
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9099": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9101": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9102": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "ADD",
      "path": "2"
    },
    "9103": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9104": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20483
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23AE"
    },
    "9110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20501,
        20502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9113": {
      "fn": "Governance.submitVerification",
      "offset": [
        20501,
        20502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9118": {
      "op": "SHL"
    },
    "9119": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9120": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "DIV",
      "path": "2"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "SUB"
    },
    "9129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20500
      ],
      "op": "AND",
      "path": "2"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BF1"
    },
    "9133": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20486,
        20502
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20486,
        20502
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9135": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9137": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9138": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9142": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "ADD",
      "path": "2"
    },
    "9143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9147": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9154": {
      "op": "SHL"
    },
    "9155": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9161": {
      "op": "SHL"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "DIV",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20577,
        20593
      ],
      "op": "AND",
      "path": "2"
    },
    "9169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9170": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ADD",
      "path": "2"
    },
    "9172": {
      "op": "SWAP2"
    },
    "9173": {
      "op": "SWAP1"
    },
    "9174": {
      "op": "SWAP2"
    },
    "9175": {
      "op": "MSTORE"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9182": {
      "op": "SHL"
    },
    "9183": {
      "op": "SUB"
    },
    "9184": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20502
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20502
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20502
      ],
      "op": "AND",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20470,
        20502
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9189": {
      "op": "POP"
    },
    "9190": {
      "fn": "Governance.submitVerification",
      "offset": [
        20520,
        20547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20520,
        20547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "SUB"
    },
    "9201": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9202": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "AND",
      "path": "2"
    },
    "9204": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9205": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20576
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9210": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9213": {
      "op": "ADD"
    },
    "9214": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9216": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9220": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9221": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "SUB",
      "path": "2"
    },
    "9222": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9224": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "GAS",
      "path": "2"
    },
    "9225": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9226": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9227": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9229": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241A"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9234": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9236": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9238": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9239": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "POP",
      "path": "2"
    },
    "9244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "POP",
      "path": "2"
    },
    "9245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "POP",
      "path": "2"
    },
    "9246": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "POP",
      "path": "2"
    },
    "9247": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9249": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9250": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9253": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "NOT",
      "path": "2"
    },
    "9254": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9256": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ADD",
      "path": "2"
    },
    "9258": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "AND",
      "path": "2"
    },
    "9259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9260": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ADD",
      "path": "2"
    },
    "9261": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9264": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9265": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "POP",
      "path": "2"
    },
    "9266": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9267": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "ADD",
      "path": "2"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x243E"
    },
    "9272": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9273": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9274": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A4A"
    },
    "9277": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20558,
        20594
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9278": {
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9279": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20624
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x2"
    },
    "9281": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20624
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9282": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "ADD",
      "path": "2"
    },
    "9287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9288": {
      "fn": "Governance.submitVerification",
      "offset": [
        20654,
        20679
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9290": {
      "fn": "Governance.submitVerification",
      "offset": [
        20654,
        20679
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9293": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9294": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9301": {
      "op": "SHL"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9308": {
      "op": "SHL"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9311": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "DIV",
      "path": "2"
    },
    "9312": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9315": {
      "fn": "Governance.submitVerification",
      "offset": [
        20636,
        20652
      ],
      "op": "AND",
      "path": "2"
    },
    "9316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9317": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9318": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "ADD",
      "path": "2"
    },
    "9319": {
      "op": "SWAP3"
    },
    "9320": {
      "op": "SWAP1"
    },
    "9321": {
      "op": "SWAP3"
    },
    "9322": {
      "op": "MSTORE"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9325": {
      "op": "DUP2"
    },
    "9326": {
      "op": "ADD"
    },
    "9327": {
      "op": "SWAP2"
    },
    "9328": {
      "op": "SWAP1"
    },
    "9329": {
      "op": "SWAP2"
    },
    "9330": {
      "op": "MSTORE"
    },
    "9331": {
      "fn": "Governance.submitVerification",
      "offset": [
        20520,
        20595
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20520,
        20595
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9333": {
      "op": "POP"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9340": {
      "op": "SHL"
    },
    "9341": {
      "op": "SUB"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20624
      ],
      "op": "AND",
      "path": "2"
    },
    "9343": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9344": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20635
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9349": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20635
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9352": {
      "op": "ADD"
    },
    "9353": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9355": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9357": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9358": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9359": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9360": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "SUB",
      "path": "2"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9362": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9365": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9366": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9367": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9368": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9369": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9370": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A2"
    },
    "9373": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9374": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9376": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9377": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9378": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9379": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "POP",
      "path": "2"
    },
    "9380": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "GAS",
      "path": "2"
    },
    "9381": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "CALL",
      "path": "2"
    },
    "9382": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9383": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9384": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9385": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24B6"
    },
    "9388": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9389": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9392": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9393": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9394": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9395": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9397": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9398": {
      "fn": "Governance.submitVerification",
      "offset": [
        20614,
        20680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9399": {
      "op": "POP"
    },
    "9400": {
      "op": "POP"
    },
    "9401": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x2"
    },
    "9403": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9404": {
      "fn": "Governance.submitVerification",
      "offset": [
        20728,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9406": {
      "fn": "Governance.submitVerification",
      "offset": [
        20728,
        20753
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9407": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9409": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9410": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9417": {
      "op": "SHL"
    },
    "9418": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9419": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9420": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9422": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9423": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "ADD",
      "path": "2"
    },
    "9424": {
      "op": "DUP15"
    },
    "9425": {
      "op": "SWAP1"
    },
    "9426": {
      "op": "MSTORE"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9429": {
      "op": "DUP2"
    },
    "9430": {
      "op": "ADD"
    },
    "9431": {
      "op": "SWAP2"
    },
    "9432": {
      "op": "SWAP1"
    },
    "9433": {
      "op": "SWAP2"
    },
    "9434": {
      "op": "MSTORE"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9441": {
      "op": "SHL"
    },
    "9442": {
      "op": "SUB"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9444": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9445": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "AND",
      "path": "2"
    },
    "9446": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20708
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9447": {
      "op": "POP"
    },
    "9448": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20719
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9453": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9454": {
      "op": "POP"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9457": {
      "op": "ADD"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "9461": {
      "op": "JUMP"
    },
    "9462": {
      "fn": "Governance.submitVerification",
      "offset": [
        20422,
        21668
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9463": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9465": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9466": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "ADD",
      "path": "2"
    },
    "9467": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9468": {
      "fn": "Governance.submitVerification",
      "offset": [
        21367,
        21380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9470": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 80
    },
    "9471": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9472": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9473": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "9475": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9477": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9478": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9480": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9481": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9486": {
      "op": "SHL"
    },
    "9487": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9488": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "DIV",
      "path": "2"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9496": {
      "op": "SHL"
    },
    "9497": {
      "op": "SUB"
    },
    "9498": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "AND",
      "path": "2"
    },
    "9499": {
      "fn": "Governance.submitVerification",
      "offset": [
        21383,
        21397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9500": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9501": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2526"
    },
    "9504": {
      "fn": "Governance.submitVerification",
      "offset": [
        21422,
        21436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9505": {
      "fn": "Governance.submitVerification",
      "offset": [
        21367,
        21380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9506": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EAA"
    },
    "9509": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21415,
        21436
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9510": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9514": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9515": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "ADD",
      "path": "2"
    },
    "9516": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9517": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9518": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9524": {
      "op": "NOT"
    },
    "9525": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "AND",
      "path": "2"
    },
    "9526": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9527": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9528": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9530": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9532": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9533": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "ADD",
      "path": "2"
    },
    "9534": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9535": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9536": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9537": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9539": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9540": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "ADD",
      "path": "2"
    },
    "9541": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9542": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9543": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9544": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9546": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9548": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "ADD",
      "path": "2"
    },
    "9549": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9550": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9557": {
      "op": "SHL"
    },
    "9558": {
      "op": "SUB"
    },
    "9559": {
      "op": "NOT"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "AND",
      "path": "2"
    },
    "9561": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9563": {
      "fn": "Governance.submitVerification",
      "offset": [
        21415,
        21436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21494
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x256D"
    },
    "9567": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9569": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9576": {
      "op": "SHL"
    },
    "9577": {
      "op": "SUB"
    },
    "9578": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9579": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9580": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9581": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21494
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9588": {
      "op": "SHL"
    },
    "9589": {
      "op": "SUB"
    },
    "9590": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21499
      ],
      "op": "AND",
      "path": "2"
    },
    "9591": {
      "fn": "Governance.submitVerification",
      "offset": [
        21507,
        21512
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9592": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9594": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9595": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9597": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9599": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9601": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9602": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "SUB",
      "path": "2"
    },
    "9603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9605": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9606": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "GAS",
      "path": "2"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "CALL",
      "path": "2"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9609": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9610": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9611": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9612": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9613": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9614": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9616": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9617": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "EQ",
      "path": "2"
    },
    "9618": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25B7"
    },
    "9621": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9622": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9626": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9627": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9629": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "NOT",
      "path": "2"
    },
    "9630": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9633": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "ADD",
      "path": "2"
    },
    "9634": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "AND",
      "path": "2"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "ADD",
      "path": "2"
    },
    "9637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9642": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9643": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9644": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9646": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "ADD",
      "path": "2"
    },
    "9650": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9651": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25BC"
    },
    "9654": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9655": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9656": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9658": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9659": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9660": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9661": {
      "fn": "Governance.submitVerification",
      "offset": [
        21487,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21454,
        21517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        21454,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9664": {
      "fn": "Governance.submitVerification",
      "offset": [
        21454,
        21517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9665": {
      "fn": "Governance.submitVerification",
      "offset": [
        21454,
        21517
      ],
      "op": "POP",
      "path": "2"
    },
    "9666": {
      "branch": 153,
      "fn": "Governance.submitVerification",
      "offset": [
        21593,
        21597
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 81
    },
    "9667": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25DE"
    },
    "9670": {
      "branch": 153,
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9671": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9673": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9680": {
      "op": "SHL"
    },
    "9681": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9682": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9683": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9685": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "ADD",
      "path": "2"
    },
    "9686": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "9689": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9690": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C25"
    },
    "9693": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21585,
        21622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9694": {
      "fn": "Governance.submitVerification",
      "offset": [
        21585,
        21622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9695": {
      "fn": "Governance.submitVerification",
      "offset": [
        21261,
        21668
      ],
      "op": "POP",
      "path": "2"
    },
    "9696": {
      "fn": "Governance.submitVerification",
      "offset": [
        21261,
        21668
      ],
      "op": "POP",
      "path": "2"
    },
    "9697": {
      "fn": "Governance.submitVerification",
      "offset": [
        21261,
        21668
      ],
      "op": "POP",
      "path": "2"
    },
    "9698": {
      "fn": "Governance.submitVerification",
      "offset": [
        18160,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9699": {
      "fn": "Governance.submitVerification",
      "offset": [
        18160,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9700": {
      "fn": "Governance.submitVerification",
      "offset": [
        18160,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9701": {
      "fn": "Governance.submitVerification",
      "offset": [
        18160,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9702": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9703": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9704": {
      "fn": "Governance.submitVerification",
      "offset": [
        18064,
        21684
      ],
      "op": "POP",
      "path": "2"
    },
    "9705": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        18064,
        21684
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9707": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9709": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9716": {
      "op": "SHL"
    },
    "9717": {
      "op": "SUB"
    },
    "9718": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9719": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9720": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "9721": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2614"
    },
    "9724": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9725": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9727": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9734": {
      "op": "SHL"
    },
    "9735": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9736": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9737": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9739": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "9740": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC71"
    },
    "9743": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9744": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37AC"
    },
    "9747": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9748": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9755": {
      "op": "SHL"
    },
    "9756": {
      "op": "SUB"
    },
    "9757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 82
    },
    "9758": {
      "branch": 160,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "9"
    },
    "9759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2679"
    },
    "9762": {
      "branch": 160,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9772": {
      "op": "SHL"
    },
    "9773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "9"
    },
    "9781": {
      "op": "MSTORE"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9786": {
      "op": "DUP3"
    },
    "9787": {
      "op": "ADD"
    },
    "9788": {
      "op": "MSTORE"
    },
    "9789": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9824": {
      "op": "DUP3"
    },
    "9825": {
      "op": "ADD"
    },
    "9826": {
      "op": "MSTORE"
    },
    "9827": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9836": {
      "op": "SHL"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9839": {
      "op": "DUP3"
    },
    "9840": {
      "op": "ADD"
    },
    "9841": {
      "op": "MSTORE"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC71"
    },
    "9848": {
      "op": "JUMP"
    },
    "9849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 83,
      "value": "0x2682"
    },
    "9853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D07"
    },
    "9857": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "9"
    },
    "9860": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9861": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9862": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6074,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9864": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9865": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A1"
    },
    "9868": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6144,
        6168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "9870": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9871": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9873": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9874": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9875": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9880": {
      "op": "SHL"
    },
    "9881": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9882": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9883": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "9884": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9885": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9886": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "9887": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9888": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9889": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9890": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9891": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "POP",
      "path": "2"
    },
    "9892": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26AB"
    },
    "9895": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E56"
    },
    "9898": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9899": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9900": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6323,
        6332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9902": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9903": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6341,
        6360
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9904": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9905": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6360
      ],
      "op": "LT",
      "path": "2"
    },
    "9906": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9907": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284A"
    },
    "9910": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9911": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6391
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x9"
    },
    "9913": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9915": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C5"
    },
    "9918": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6420,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "9920": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6445,
        6446
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9921": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B17"
    },
    "9924": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9925": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9926": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9928": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "SHR",
      "path": "2"
    },
    "9929": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9930": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9931": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9933": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9934": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9935": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9936": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9937": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9939": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9940": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9942": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9943": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9945": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9946": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9947": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "9950": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9951": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9953": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9954": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9955": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9956": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9958": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9959": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9960": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9961": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9962": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26F2"
    },
    "9965": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9966": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "9969": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9970": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9971": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9972": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9974": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9975": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9977": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9978": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9979": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "9980": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "9981": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9983": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9984": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9986": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9987": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9988": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9989": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9992": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9993": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9994": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9995": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9996": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9997": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9998": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9999": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10000": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10002": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10003": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10004": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10005": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10006": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271E"
    },
    "10009": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10010": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10013": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10014": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10015": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10016": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10017": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276B"
    },
    "10020": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10021": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10022": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10024": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "LT",
      "path": "2"
    },
    "10025": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2740"
    },
    "10028": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10029": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10032": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10033": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10034": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10035": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10036": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "10037": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10038": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10039": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10040": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10042": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10043": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10044": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276B"
    },
    "10047": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10048": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10049": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10050": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10051": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10052": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10053": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10055": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10056": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10058": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10060": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10061": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10062": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10063": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10064": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10065": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10066": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10067": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10068": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10070": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10071": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10072": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10074": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10075": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10076": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10077": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "GT",
      "path": "2"
    },
    "10078": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274E"
    },
    "10081": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10082": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10083": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10084": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SUB",
      "path": "2"
    },
    "10085": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10087": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10088": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10089": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10090": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10091": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10092": {
      "op": "POP"
    },
    "10093": {
      "op": "POP"
    },
    "10094": {
      "op": "POP"
    },
    "10095": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10096": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10097": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10098": {
      "op": "POP"
    },
    "10099": {
      "op": "POP"
    },
    "10100": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10102": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10103": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10104": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10105": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10111": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10112": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10113": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10114": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10116": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10117": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10118": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10119": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10121": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10122": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10123": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10124": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10126": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10127": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10128": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10129": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10131": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10132": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10133": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10134": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10136": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10137": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10138": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10139": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10141": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10142": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10143": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10144": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10145": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10147": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10148": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10149": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "10151": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10152": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10153": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10154": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10157": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10158": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10159": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10160": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10164": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10165": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "10167": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10168": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10169": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10174": {
      "op": "SHL"
    },
    "10175": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10176": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10181": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10183": {
      "op": "SHL"
    },
    "10184": {
      "op": "SUB"
    },
    "10185": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10190": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10193": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10195": {
      "op": "SHL"
    },
    "10196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10198": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10201": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10202": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10203": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10204": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10206": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10207": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10208": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10213": {
      "op": "SHL"
    },
    "10214": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10215": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10216": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10219": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10225": {
      "op": "SHL"
    },
    "10226": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10227": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10228": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10229": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10230": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10233": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10234": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10235": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10236": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10237": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10238": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "ADD",
      "path": "2"
    },
    "10239": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10240": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10241": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6506,
        6521
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "10244": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10245": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "AND",
      "path": "2"
    },
    "10246": {
      "branch": 154,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "LT",
      "path": "2"
    },
    "10247": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10248": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10249": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281D"
    },
    "10252": {
      "branch": 154,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10253": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "POP",
      "path": "2"
    },
    "10254": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6541,
        6547
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10255": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10256": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10258": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "ADD",
      "path": "2"
    },
    "10259": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10260": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10266": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "AND",
      "path": "2"
    },
    "10267": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "EQ",
      "path": "2"
    },
    "10268": {
      "branch": 155,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10269": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10270": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10271": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10272": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2832"
    },
    "10275": {
      "branch": 155,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10276": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "POP",
      "path": "2"
    },
    "10277": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6570,
        6576
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10278": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6557
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10279": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10282": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "ADD",
      "path": "2"
    },
    "10283": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10284": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10287": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "AND",
      "path": "2"
    },
    "10288": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "EQ",
      "path": "2"
    },
    "10289": {
      "branch": 156,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10290": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10291": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10292": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2842"
    },
    "10295": {
      "branch": 156,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10296": {
      "op": "POP"
    },
    "10297": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x1"
    },
    "10299": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10300": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10301": {
      "op": "POP"
    },
    "10302": {
      "op": "POP"
    },
    "10303": {
      "op": "POP"
    },
    "10304": {
      "op": "POP"
    },
    "10305": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10306": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x1"
    },
    "10309": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "ADD",
      "path": "2"
    },
    "10310": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26AE"
    },
    "10313": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10314": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10315": {
      "op": "POP"
    },
    "10316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x0"
    },
    "10318": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10320": {
      "op": "POP"
    },
    "10321": {
      "op": "POP"
    },
    "10322": {
      "op": "POP"
    },
    "10323": {
      "op": "POP"
    },
    "10324": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10325": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10326": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10086,
        10095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10328": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10329": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10331": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10117
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10332": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10099,
        10117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10333": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10099,
        10117
      ],
      "op": "LT",
      "path": "2"
    },
    "10334": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10335": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29EE"
    },
    "10338": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10217,
        10226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10340": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "ADD",
      "path": "2"
    },
    "10346": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2873"
    },
    "10349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10350": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C53"
    },
    "10354": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10200,
        10227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10356": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10359": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10363": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "SUB",
      "path": "2"
    },
    "10364": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "SUB",
      "path": "2"
    },
    "10365": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10366": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10368": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10370": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10200,
        10227
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10371": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10373": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10374": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10376": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "ADD",
      "path": "2"
    },
    "10377": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10190,
        10228
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10380": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10173,
        10174
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10381": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10382": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10383": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10384": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "LT",
      "path": "2"
    },
    "10385": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289C"
    },
    "10388": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10389": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289C"
    },
    "10392": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10395": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10163,
        10175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10396": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10397": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10398": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10400": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10401": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10403": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10405": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10406": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10407": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10409": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "MUL",
      "path": "2"
    },
    "10410": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10175
      ],
      "op": "ADD",
      "path": "2"
    },
    "10411": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10413": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10163,
        10184
      ],
      "op": "ADD",
      "path": "2"
    },
    "10414": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10416": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10417": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10419": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "ADD",
      "path": "2"
    },
    "10420": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28BD"
    },
    "10423": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10424": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10425": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C6F"
    },
    "10428": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10146,
        10185
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10429": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10430": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10432": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10433": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10435": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10436": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10437": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "SUB",
      "path": "2"
    },
    "10438": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "SUB",
      "path": "2"
    },
    "10439": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10440": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10441": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10442": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10444": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10146,
        10185
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10445": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10446": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10447": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10448": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10450": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "ADD",
      "path": "2"
    },
    "10451": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10186
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10452": {
      "branch": 157,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10136,
        10228
      ],
      "op": "SUB",
      "path": "2"
    },
    "10453": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10133,
        11181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E6"
    },
    "10456": {
      "branch": 157,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10133,
        11181
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10457": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10311,
        10338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10459": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10461": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10351,
        10352
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10462": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10463": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10464": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10465": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "LT",
      "path": "2"
    },
    "10466": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28ED"
    },
    "10469": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10470": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28ED"
    },
    "10473": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10476": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10341,
        10353
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10477": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10478": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10479": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10481": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10482": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10484": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10486": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10487": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10488": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10490": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "MUL",
      "path": "2"
    },
    "10491": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10341,
        10353
      ],
      "op": "ADD",
      "path": "2"
    },
    "10492": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10311,
        10353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10493": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10311,
        10353
      ],
      "op": "POP",
      "path": "2"
    },
    "10494": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10371,
        10405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10496": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10498": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10435,
        10436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10500": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10502": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10434
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10503": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10434
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10504": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10505": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10434
      ],
      "op": "POP",
      "path": "2"
    },
    "10506": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2913"
    },
    "10509": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10510": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10511": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E3"
    },
    "10514": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10418,
        10436
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10515": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10418,
        10436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10516": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10517": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10518": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10519": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "LT",
      "path": "2"
    },
    "10520": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2923"
    },
    "10523": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10524": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2923"
    },
    "10527": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10530": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10408,
        10437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10531": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10532": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10533": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10535": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10536": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10538": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10540": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10541": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10542": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10544": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "MUL",
      "path": "2"
    },
    "10545": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10408,
        10437
      ],
      "op": "ADD",
      "path": "2"
    },
    "10546": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10371,
        10437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10547": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10371,
        10437
      ],
      "op": "POP",
      "path": "2"
    },
    "10548": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10583
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 88
    },
    "10549": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10550": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10583
      ],
      "op": "POP",
      "path": "2"
    },
    "10551": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10617
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x4"
    },
    "10553": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10635,
        10636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10555": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10557": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10558": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10634
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10559": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10560": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10634
      ],
      "op": "POP",
      "path": "2"
    },
    "10561": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x294A"
    },
    "10564": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10636
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10565": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10566": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E3"
    },
    "10569": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10618,
        10636
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10570": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10618,
        10636
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10571": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10572": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10573": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10574": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "LT",
      "path": "2"
    },
    "10575": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x295A"
    },
    "10578": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10579": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x295A"
    },
    "10582": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10585": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10608,
        10637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10586": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10588": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10590": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10591": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10593": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10595": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10596": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10597": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10599": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "MUL",
      "path": "2"
    },
    "10600": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "ADD",
      "path": "2"
    },
    "10601": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10608,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10603": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10605": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10606": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "ADD",
      "path": "2"
    },
    "10607": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10609": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297A"
    },
    "10612": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10613": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10614": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EAA"
    },
    "10617": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10601,
        10637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10618": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10619": {
      "op": "POP"
    },
    "10620": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10622": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "ADD",
      "path": "2"
    },
    "10623": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10624": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10631": {
      "op": "SHL"
    },
    "10632": {
      "op": "SUB"
    },
    "10633": {
      "op": "NOT"
    },
    "10634": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "AND",
      "path": "2"
    },
    "10635": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10636": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10637": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11123
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x4"
    },
    "10639": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10640": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10641": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11142
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299C"
    },
    "10644": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10645": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10647": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10601,
        10637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10648": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11142
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E3"
    },
    "10651": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11124,
        11142
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10652": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11124,
        11142
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10653": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10654": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10655": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10656": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "LT",
      "path": "2"
    },
    "10657": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29AC"
    },
    "10660": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10661": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29AC"
    },
    "10664": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10667": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11114,
        11143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10668": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10669": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10670": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10672": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10673": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10675": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10677": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10678": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10679": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10681": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "MUL",
      "path": "2"
    },
    "10682": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "ADD",
      "path": "2"
    },
    "10683": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11114,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10685": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10687": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10688": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "ADD",
      "path": "2"
    },
    "10689": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10691": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29CC"
    },
    "10694": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10695": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10696": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EAA"
    },
    "10699": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11107,
        11143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10700": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10701": {
      "op": "POP"
    },
    "10702": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10704": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "ADD",
      "path": "2"
    },
    "10705": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10706": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10713": {
      "op": "SHL"
    },
    "10714": {
      "op": "SUB"
    },
    "10715": {
      "op": "NOT"
    },
    "10716": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "AND",
      "path": "2"
    },
    "10717": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10718": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11107,
        11143
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10719": {
      "op": "POP"
    },
    "10720": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11161,
        11166
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 91,
      "value": "0x29EE"
    },
    "10723": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11161,
        11166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10724": {
      "op": "POP"
    },
    "10725": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11161,
        11166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10726": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10133,
        11181
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10727": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11207
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 92,
      "value": "0x1"
    },
    "10729": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11207
      ],
      "op": "ADD",
      "path": "2"
    },
    "10730": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "10733": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10734": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10735": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10082,
        11219
      ],
      "op": "POP",
      "path": "2"
    },
    "10736": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10004,
        11225
      ],
      "op": "POP",
      "path": "2"
    },
    "10737": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        10004,
        11225
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10738": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10739": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10741": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0x8"
    },
    "10743": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10744": {
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10745": {
      "branch": 158,
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4711
      ],
      "op": "LT",
      "path": "2"
    },
    "10746": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A38"
    },
    "10749": {
      "branch": 158,
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10750": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10752": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10759": {
      "op": "SHL"
    },
    "10760": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10761": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10764": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10766": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10767": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "ADD",
      "path": "2"
    },
    "10768": {
      "op": "MSTORE"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10773": {
      "op": "DUP3"
    },
    "10774": {
      "op": "ADD"
    },
    "10775": {
      "op": "MSTORE"
    },
    "10776": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "10793": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "10795": {
      "op": "SHL"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10798": {
      "op": "DUP3"
    },
    "10799": {
      "op": "ADD"
    },
    "10800": {
      "op": "MSTORE"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10803": {
      "op": "ADD"
    },
    "10804": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC71"
    },
    "10807": {
      "op": "JUMP"
    },
    "10808": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10809": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10811": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10812": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10813": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10814": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10816": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10818": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10819": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10821": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10822": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10823": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10825": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "ADD",
      "path": "2"
    },
    "10826": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10827": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10830": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "AND",
      "path": "2"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10837": {
      "op": "SHL"
    },
    "10838": {
      "op": "SUB"
    },
    "10839": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10840": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "GT",
      "path": "2"
    },
    "10841": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10842": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A65"
    },
    "10845": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10846": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A65"
    },
    "10849": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA9"
    },
    "10852": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10853": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10854": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10856": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10857": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10858": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10859": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10860": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10861": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10862": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10864": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10865": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10867": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10868": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10869": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10870": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10872": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10873": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10874": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10875": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8E"
    },
    "10878": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10879": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10880": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10882": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10883": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10885": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10886": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10887": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10888": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "10889": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10890": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "10891": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10892": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10893": {
      "op": "POP"
    },
    "10894": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10895": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10896": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10897": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10898": {
      "fn": "Governance.getVotes",
      "offset": [
        4835,
        4844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10900": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10901": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4862
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10902": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4869
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10903": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10904": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4869
      ],
      "op": "LT",
      "path": "2"
    },
    "10905": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10906": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B10"
    },
    "10909": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10910": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x0"
    },
    "10912": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10913": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10914": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10915": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10917": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10919": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10920": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10922": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10923": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10924": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10926": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "ADD",
      "path": "2"
    },
    "10927": {
      "fn": "Governance.getVotes",
      "offset": [
        4932,
        4933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10928": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "10930": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10931": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "LT",
      "path": "2"
    },
    "10932": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ABF"
    },
    "10935": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10936": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ABF"
    },
    "10939": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10942": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10943": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10944": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "10946": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10947": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10948": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10949": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "10950": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "ADD",
      "path": "2"
    },
    "10951": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10952": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10953": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MOD",
      "path": "2"
    },
    "10954": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10956": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MUL",
      "path": "2"
    },
    "10957": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10958": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10959": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10960": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10963": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "EXP",
      "path": "2"
    },
    "10964": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10965": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "10966": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10969": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "10970": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10971": {
      "fn": "Governance.getVotes",
      "offset": [
        4899,
        4900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10972": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10973": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10974": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10975": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "LT",
      "path": "2"
    },
    "10976": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AEB"
    },
    "10979": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10980": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AEB"
    },
    "10983": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "10986": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10987": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10988": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10991": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10992": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10993": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "10994": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10996": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10997": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10998": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MUL",
      "path": "2"
    },
    "10999": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11000": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11001": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11002": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "11003": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11004": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11005": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "11006": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11007": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "11008": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B08"
    },
    "11011": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11012": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A31"
    },
    "11015": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11016": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11017": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11018": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "11019": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "11020": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A94"
    },
    "11023": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11024": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11025": {
      "op": "POP"
    },
    "11026": {
      "fn": "Governance.getVotes",
      "offset": [
        4961,
        4970
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 96
    },
    "11027": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11028": {
      "op": "POP"
    },
    "11029": {
      "op": "POP"
    },
    "11030": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11031": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11032": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11034": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11035": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B3A"
    },
    "11038": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B26"
    },
    "11041": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11042": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D59"
    },
    "11045": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11046": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11047": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11048": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11049": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B35"
    },
    "11052": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11053": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11054": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11056": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11057": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CE1"
    },
    "11060": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11061": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11062": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DC7"
    },
    "11065": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11066": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11067": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 97
    },
    "11068": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11069": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11070": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11071": {
      "op": "POP"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11076": {
      "op": "SHL"
    },
    "11077": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11078": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "11079": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11081": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11082": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11083": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11084": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11085": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11086": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11087": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11088": {
      "branch": 159,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "11089": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6D"
    },
    "11092": {
      "branch": 159,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11093": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11095": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11096": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "11103": {
      "op": "SHL"
    },
    "11104": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11105": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11106": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11108": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "11109": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11111": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11112": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11113": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11114": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "11115": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11116": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11117": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11118": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0xF"
    },
    "11120": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11121": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11123": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11124": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11125": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11126": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11128": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11129": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11130": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11131": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "11132": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11134": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11135": {
      "op": "POP"
    },
    "11136": {
      "op": "POP"
    },
    "11137": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11139": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11140": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11141": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11142": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11143": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11144": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11145": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11147": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11148": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11149": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x1"
    },
    "11151": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11152": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "ADD",
      "path": "2"
    },
    "11153": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11154": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11155": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11156": {
      "fn": "Governance._createTaskType",
      "offset": [
        13706,
        13729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11158": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11159": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11160": {
      "fn": "Governance._createTaskType",
      "offset": [
        13758,
        13774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11161": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11162": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11163": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11164": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11165": {
      "fn": "Governance._createTaskType",
      "offset": [
        13732,
        13748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11166": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11167": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "LT",
      "path": "2"
    },
    "11168": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BAB"
    },
    "11171": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11172": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BAB"
    },
    "11175": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372F"
    },
    "11178": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        13815,
        13841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11179": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11180": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11182": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11183": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11184": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11185": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11187": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11188": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11189": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11190": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11192": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11193": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11194": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "MUL",
      "path": "2"
    },
    "11195": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "ADD",
      "path": "2"
    },
    "11196": {
      "fn": "Governance._createTaskType",
      "offset": [
        13815,
        13841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11197": {
      "op": "POP"
    },
    "11198": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13875
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x1"
    },
    "11200": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13875
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11201": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13875
      ],
      "op": "ADD",
      "path": "2"
    },
    "11202": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BCC"
    },
    "11205": {
      "fn": "Governance._createTaskType",
      "offset": [
        13877,
        13886
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11206": {
      "fn": "Governance._createTaskType",
      "offset": [
        13877,
        13886
      ],
      "op": "DUP13",
      "path": "2"
    },
    "11207": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13875
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11208": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A67"
    },
    "11211": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        13855,
        13886
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11212": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11213": {
      "fn": "Governance._createTaskType",
      "offset": [
        13855,
        13886
      ],
      "op": "POP",
      "path": "2"
    },
    "11214": {
      "fn": "Governance._createTaskType",
      "offset": [
        13921,
        13926
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x0"
    },
    "11216": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13911
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11217": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11219": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13918
      ],
      "op": "ADD",
      "path": "2"
    },
    "11220": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11222": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11225": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "EXP",
      "path": "2"
    },
    "11226": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11227": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11228": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11229": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11231": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "MUL",
      "path": "2"
    },
    "11232": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "NOT",
      "path": "2"
    },
    "11233": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "AND",
      "path": "2"
    },
    "11234": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11235": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11236": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11237": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11238": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "MUL",
      "path": "2"
    },
    "11239": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "OR",
      "path": "2"
    },
    "11240": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11241": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11242": {
      "fn": "Governance._createTaskType",
      "offset": [
        13900,
        13926
      ],
      "op": "POP",
      "path": "2"
    },
    "11243": {
      "fn": "Governance._createTaskType",
      "offset": [
        13965,
        13976
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 102
    },
    "11244": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13951
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11245": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11247": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13962
      ],
      "op": "ADD",
      "path": "2"
    },
    "11248": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11250": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11253": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "EXP",
      "path": "2"
    },
    "11254": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11255": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11256": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11257": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11263": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "MUL",
      "path": "2"
    },
    "11264": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "NOT",
      "path": "2"
    },
    "11265": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "AND",
      "path": "2"
    },
    "11266": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11267": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11268": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11274": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "AND",
      "path": "2"
    },
    "11275": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "MUL",
      "path": "2"
    },
    "11276": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "OR",
      "path": "2"
    },
    "11277": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11278": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11279": {
      "fn": "Governance._createTaskType",
      "offset": [
        13940,
        13976
      ],
      "op": "POP",
      "path": "2"
    },
    "11280": {
      "fn": "Governance._createTaskType",
      "offset": [
        14020,
        14036
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 103
    },
    "11281": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11282": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11284": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14017
      ],
      "op": "ADD",
      "path": "2"
    },
    "11285": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11287": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11290": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "EXP",
      "path": "2"
    },
    "11291": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11292": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11293": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11294": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11296": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "MUL",
      "path": "2"
    },
    "11297": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "NOT",
      "path": "2"
    },
    "11298": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "AND",
      "path": "2"
    },
    "11299": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11300": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11301": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11303": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "AND",
      "path": "2"
    },
    "11304": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "MUL",
      "path": "2"
    },
    "11305": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "OR",
      "path": "2"
    },
    "11306": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11307": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11308": {
      "fn": "Governance._createTaskType",
      "offset": [
        13990,
        14036
      ],
      "op": "POP",
      "path": "2"
    },
    "11309": {
      "fn": "Governance._createTaskType",
      "offset": [
        14074,
        14084
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 104
    },
    "11310": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14061
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11311": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11313": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14071
      ],
      "op": "ADD",
      "path": "2"
    },
    "11314": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11316": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11319": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "EXP",
      "path": "2"
    },
    "11320": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11321": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11322": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11323": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11327": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "MUL",
      "path": "2"
    },
    "11328": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "NOT",
      "path": "2"
    },
    "11329": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "AND",
      "path": "2"
    },
    "11330": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11331": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11332": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11336": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "AND",
      "path": "2"
    },
    "11337": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "MUL",
      "path": "2"
    },
    "11338": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "OR",
      "path": "2"
    },
    "11339": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11340": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11341": {
      "fn": "Governance._createTaskType",
      "offset": [
        14050,
        14084
      ],
      "op": "POP",
      "path": "2"
    },
    "11342": {
      "fn": "Governance._createTaskType",
      "offset": [
        14125,
        14138
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 105
    },
    "11343": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11344": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11346": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14122
      ],
      "op": "ADD",
      "path": "2"
    },
    "11347": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "11349": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11352": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "EXP",
      "path": "2"
    },
    "11353": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11354": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11355": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11356": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11362": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "MUL",
      "path": "2"
    },
    "11363": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "NOT",
      "path": "2"
    },
    "11364": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "AND",
      "path": "2"
    },
    "11365": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11366": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11367": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11373": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "AND",
      "path": "2"
    },
    "11374": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "MUL",
      "path": "2"
    },
    "11375": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "OR",
      "path": "2"
    },
    "11376": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11377": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11378": {
      "fn": "Governance._createTaskType",
      "offset": [
        14098,
        14138
      ],
      "op": "POP",
      "path": "2"
    },
    "11379": {
      "fn": "Governance._createTaskType",
      "offset": [
        14179,
        14192
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 106
    },
    "11380": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14163
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11381": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11383": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14176
      ],
      "op": "ADD",
      "path": "2"
    },
    "11384": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11386": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11389": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "EXP",
      "path": "2"
    },
    "11390": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11391": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11392": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11393": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11399": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "MUL",
      "path": "2"
    },
    "11400": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "NOT",
      "path": "2"
    },
    "11401": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "AND",
      "path": "2"
    },
    "11402": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11403": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11404": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11410": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "AND",
      "path": "2"
    },
    "11411": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "MUL",
      "path": "2"
    },
    "11412": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "OR",
      "path": "2"
    },
    "11413": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11414": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11415": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14192
      ],
      "op": "POP",
      "path": "2"
    },
    "11416": {
      "fn": "Governance._createTaskType",
      "offset": [
        14235,
        14250
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 107
    },
    "11417": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11418": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11420": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14232
      ],
      "op": "ADD",
      "path": "2"
    },
    "11421": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "11423": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11426": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "EXP",
      "path": "2"
    },
    "11427": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11428": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11429": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11430": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11433": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "MUL",
      "path": "2"
    },
    "11434": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "NOT",
      "path": "2"
    },
    "11435": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "AND",
      "path": "2"
    },
    "11436": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11437": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11438": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11441": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "AND",
      "path": "2"
    },
    "11442": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "MUL",
      "path": "2"
    },
    "11443": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "OR",
      "path": "2"
    },
    "11444": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11445": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11446": {
      "fn": "Governance._createTaskType",
      "offset": [
        14206,
        14250
      ],
      "op": "POP",
      "path": "2"
    },
    "11447": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 108,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "11480": {
      "fn": "Governance._createTaskType",
      "offset": [
        14315,
        14324
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11481": {
      "fn": "Governance._createTaskType",
      "offset": [
        14315,
        14324
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11482": {
      "fn": "Governance._createTaskType",
      "offset": [
        14326,
        14337
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11483": {
      "fn": "Governance._createTaskType",
      "offset": [
        14339,
        14355
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11484": {
      "fn": "Governance._createTaskType",
      "offset": [
        14357,
        14367
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11485": {
      "fn": "Governance._createTaskType",
      "offset": [
        14369,
        14382
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11486": {
      "fn": "Governance._createTaskType",
      "offset": [
        14384,
        14397
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11487": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14414
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11488": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11490": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11491": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF3"
    },
    "11494": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "11495": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "11496": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "11497": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "11498": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11499": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11500": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11501": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11502": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11503": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D22"
    },
    "11506": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14296,
        14415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11507": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11508": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11510": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11511": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11512": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11513": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SUB",
      "path": "2"
    },
    "11514": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11515": {
      "fn": "Governance._createTaskType",
      "offset": [
        14296,
        14415
      ],
      "op": "LOG1",
      "path": "2"
    },
    "11516": {
      "fn": "Governance._createTaskType",
      "offset": [
        13696,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11517": {
      "fn": "Governance._createTaskType",
      "offset": [
        13696,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11518": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11519": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11520": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11521": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11522": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11523": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11524": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11525": {
      "fn": "Governance._createTaskType",
      "offset": [
        13491,
        14422
      ],
      "op": "POP",
      "path": "2"
    },
    "11526": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        13491,
        14422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11527": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "11528": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "11530": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "9"
    },
    "11531": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "11532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11538": {
      "op": "SHL"
    },
    "11539": {
      "op": "SUB"
    },
    "11540": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 109
    },
    "11541": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11542": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11549": {
      "op": "SHL"
    },
    "11550": {
      "op": "SUB"
    },
    "11551": {
      "op": "NOT"
    },
    "11552": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9"
    },
    "11553": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11554": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11555": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "9"
    },
    "11556": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11557": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "11558": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "11559": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 110,
      "value": "0x40"
    },
    "11561": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "11562": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11563": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "9"
    },
    "11564": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11565": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11566": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "9"
    },
    "11567": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11568": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11601": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11602": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "11604": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11605": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "9"
    },
    "11606": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11607": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11608": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "9"
    },
    "11609": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11610": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11618": {
      "op": "SHL"
    },
    "11619": {
      "op": "SUB"
    },
    "11620": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 111
    },
    "11621": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "11622": {
      "branch": 161,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11623": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC3"
    },
    "11626": {
      "branch": 161,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11627": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11629": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11636": {
      "op": "SHL"
    },
    "11637": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11638": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11641": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11643": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11644": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "11645": {
      "op": "MSTORE"
    },
    "11646": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11650": {
      "op": "DUP3"
    },
    "11651": {
      "op": "ADD"
    },
    "11652": {
      "op": "MSTORE"
    },
    "11653": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "11686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11688": {
      "op": "DUP3"
    },
    "11689": {
      "op": "ADD"
    },
    "11690": {
      "op": "MSTORE"
    },
    "11691": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "11700": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11702": {
      "op": "SHL"
    },
    "11703": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11705": {
      "op": "DUP3"
    },
    "11706": {
      "op": "ADD"
    },
    "11707": {
      "op": "MSTORE"
    },
    "11708": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11710": {
      "op": "ADD"
    },
    "11711": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "11714": {
      "op": "JUMP"
    },
    "11715": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11716": {
      "op": "POP"
    },
    "11717": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 112
    },
    "11718": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11719": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11720": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11722": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11739": {
      "op": "NOT"
    },
    "11740": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 113
    },
    "11741": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "11742": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11743": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11744": {
      "branch": 162,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11745": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DFA"
    },
    "11748": {
      "branch": 162,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11749": {
      "op": "POP"
    },
    "11750": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11767": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11768": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "11769": {
      "branch": 163,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11770": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11771": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC3"
    },
    "11774": {
      "branch": 163,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11775": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11777": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11784": {
      "op": "SHL"
    },
    "11785": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11786": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11789": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11791": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11792": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "11793": {
      "op": "MSTORE"
    },
    "11794": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11798": {
      "op": "DUP3"
    },
    "11799": {
      "op": "ADD"
    },
    "11800": {
      "op": "MSTORE"
    },
    "11801": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "11834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11836": {
      "op": "DUP3"
    },
    "11837": {
      "op": "ADD"
    },
    "11838": {
      "op": "MSTORE"
    },
    "11839": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "11847": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11849": {
      "op": "SHL"
    },
    "11850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11852": {
      "op": "DUP3"
    },
    "11853": {
      "op": "ADD"
    },
    "11854": {
      "op": "MSTORE"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11857": {
      "op": "ADD"
    },
    "11858": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC71"
    },
    "11861": {
      "op": "JUMP"
    },
    "11862": {
      "op": "JUMPDEST"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11865": {
      "op": "DUP1"
    },
    "11866": {
      "op": "MLOAD"
    },
    "11867": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11870": {
      "op": "DUP2"
    },
    "11871": {
      "op": "ADD"
    },
    "11872": {
      "op": "DUP3"
    },
    "11873": {
      "op": "MSTORE"
    },
    "11874": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11876": {
      "op": "DUP1"
    },
    "11877": {
      "op": "DUP3"
    },
    "11878": {
      "op": "MSTORE"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11883": {
      "op": "DUP4"
    },
    "11884": {
      "op": "ADD"
    },
    "11885": {
      "op": "DUP2"
    },
    "11886": {
      "op": "SWAP1"
    },
    "11887": {
      "op": "MSTORE"
    },
    "11888": {
      "op": "SWAP3"
    },
    "11889": {
      "op": "DUP3"
    },
    "11890": {
      "op": "ADD"
    },
    "11891": {
      "op": "DUP4"
    },
    "11892": {
      "op": "SWAP1"
    },
    "11893": {
      "op": "MSTORE"
    },
    "11894": {
      "op": "DUP2"
    },
    "11895": {
      "op": "ADD"
    },
    "11896": {
      "op": "DUP3"
    },
    "11897": {
      "op": "SWAP1"
    },
    "11898": {
      "op": "MSTORE"
    },
    "11899": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11901": {
      "op": "DUP2"
    },
    "11902": {
      "op": "ADD"
    },
    "11903": {
      "op": "DUP3"
    },
    "11904": {
      "op": "SWAP1"
    },
    "11905": {
      "op": "MSTORE"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11908": {
      "op": "DUP2"
    },
    "11909": {
      "op": "ADD"
    },
    "11910": {
      "op": "DUP3"
    },
    "11911": {
      "op": "SWAP1"
    },
    "11912": {
      "op": "MSTORE"
    },
    "11913": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11915": {
      "op": "DUP2"
    },
    "11916": {
      "op": "ADD"
    },
    "11917": {
      "op": "DUP3"
    },
    "11918": {
      "op": "SWAP1"
    },
    "11919": {
      "op": "MSTORE"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11922": {
      "op": "DUP2"
    },
    "11923": {
      "op": "ADD"
    },
    "11924": {
      "op": "DUP3"
    },
    "11925": {
      "op": "SWAP1"
    },
    "11926": {
      "op": "MSTORE"
    },
    "11927": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11930": {
      "op": "DUP2"
    },
    "11931": {
      "op": "ADD"
    },
    "11932": {
      "op": "DUP3"
    },
    "11933": {
      "op": "SWAP1"
    },
    "11934": {
      "op": "MSTORE"
    },
    "11935": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11938": {
      "op": "DUP2"
    },
    "11939": {
      "op": "ADD"
    },
    "11940": {
      "op": "SWAP2"
    },
    "11941": {
      "op": "SWAP1"
    },
    "11942": {
      "op": "SWAP2"
    },
    "11943": {
      "op": "MSTORE"
    },
    "11944": {
      "op": "SWAP1"
    },
    "11945": {
      "jump": "o",
      "op": "JUMP"
    },
    "11946": {
      "op": "JUMPDEST"
    },
    "11947": {
      "op": "POP"
    },
    "11948": {
      "op": "DUP1"
    },
    "11949": {
      "op": "SLOAD"
    },
    "11950": {
      "op": "PUSH2",
      "value": "0x2EB6"
    },
    "11953": {
      "op": "SWAP1"
    },
    "11954": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "11957": {
      "jump": "i",
      "op": "JUMP"
    },
    "11958": {
      "op": "JUMPDEST"
    },
    "11959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11961": {
      "op": "DUP3"
    },
    "11962": {
      "op": "SSTORE"
    },
    "11963": {
      "op": "DUP1"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11966": {
      "op": "LT"
    },
    "11967": {
      "op": "PUSH2",
      "value": "0x2EC6"
    },
    "11970": {
      "op": "JUMPI"
    },
    "11971": {
      "op": "POP"
    },
    "11972": {
      "op": "POP"
    },
    "11973": {
      "jump": "o",
      "op": "JUMP"
    },
    "11974": {
      "op": "JUMPDEST"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11977": {
      "op": "ADD"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11980": {
      "op": "SWAP1"
    },
    "11981": {
      "op": "DIV"
    },
    "11982": {
      "op": "SWAP1"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11985": {
      "op": "MSTORE"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11990": {
      "op": "KECCAK256"
    },
    "11991": {
      "op": "SWAP1"
    },
    "11992": {
      "op": "DUP2"
    },
    "11993": {
      "op": "ADD"
    },
    "11994": {
      "op": "SWAP1"
    },
    "11995": {
      "op": "PUSH2",
      "value": "0x2682"
    },
    "11998": {
      "op": "SWAP2"
    },
    "11999": {
      "op": "SWAP1"
    },
    "12000": {
      "op": "JUMPDEST"
    },
    "12001": {
      "op": "DUP1"
    },
    "12002": {
      "op": "DUP3"
    },
    "12003": {
      "op": "GT"
    },
    "12004": {
      "op": "ISZERO"
    },
    "12005": {
      "op": "PUSH2",
      "value": "0x2DC3"
    },
    "12008": {
      "op": "JUMPI"
    },
    "12009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12011": {
      "op": "DUP2"
    },
    "12012": {
      "op": "SSTORE"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12015": {
      "op": "ADD"
    },
    "12016": {
      "op": "PUSH2",
      "value": "0x2EE0"
    },
    "12019": {
      "op": "JUMP"
    },
    "12020": {
      "op": "JUMPDEST"
    },
    "12021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12025": {
      "op": "DUP3"
    },
    "12026": {
      "op": "DUP5"
    },
    "12027": {
      "op": "SUB"
    },
    "12028": {
      "op": "SLT"
    },
    "12029": {
      "op": "ISZERO"
    },
    "12030": {
      "op": "PUSH2",
      "value": "0x2F06"
    },
    "12033": {
      "op": "JUMPI"
    },
    "12034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12036": {
      "op": "DUP1"
    },
    "12037": {
      "op": "REVERT"
    },
    "12038": {
      "op": "JUMPDEST"
    },
    "12039": {
      "op": "POP"
    },
    "12040": {
      "op": "CALLDATALOAD"
    },
    "12041": {
      "op": "SWAP2"
    },
    "12042": {
      "op": "SWAP1"
    },
    "12043": {
      "op": "POP"
    },
    "12044": {
      "jump": "o",
      "op": "JUMP"
    },
    "12045": {
      "op": "JUMPDEST"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12048": {
      "op": "JUMPDEST"
    },
    "12049": {
      "op": "DUP4"
    },
    "12050": {
      "op": "DUP2"
    },
    "12051": {
      "op": "LT"
    },
    "12052": {
      "op": "ISZERO"
    },
    "12053": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12056": {
      "op": "JUMPI"
    },
    "12057": {
      "op": "DUP2"
    },
    "12058": {
      "op": "DUP2"
    },
    "12059": {
      "op": "ADD"
    },
    "12060": {
      "op": "MLOAD"
    },
    "12061": {
      "op": "DUP4"
    },
    "12062": {
      "op": "DUP3"
    },
    "12063": {
      "op": "ADD"
    },
    "12064": {
      "op": "MSTORE"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12067": {
      "op": "ADD"
    },
    "12068": {
      "op": "PUSH2",
      "value": "0x2F10"
    },
    "12071": {
      "op": "JUMP"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "DUP4"
    },
    "12074": {
      "op": "DUP2"
    },
    "12075": {
      "op": "GT"
    },
    "12076": {
      "op": "ISZERO"
    },
    "12077": {
      "op": "PUSH2",
      "value": "0x1194"
    },
    "12080": {
      "op": "JUMPI"
    },
    "12081": {
      "op": "POP"
    },
    "12082": {
      "op": "POP"
    },
    "12083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12085": {
      "op": "SWAP2"
    },
    "12086": {
      "op": "ADD"
    },
    "12087": {
      "op": "MSTORE"
    },
    "12088": {
      "jump": "o",
      "op": "JUMP"
    },
    "12089": {
      "op": "JUMPDEST"
    },
    "12090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12092": {
      "op": "DUP2"
    },
    "12093": {
      "op": "MLOAD"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "DUP5"
    },
    "12096": {
      "op": "MSTORE"
    },
    "12097": {
      "op": "PUSH2",
      "value": "0x2F51"
    },
    "12100": {
      "op": "DUP2"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12103": {
      "op": "DUP7"
    },
    "12104": {
      "op": "ADD"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12107": {
      "op": "DUP7"
    },
    "12108": {
      "op": "ADD"
    },
    "12109": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "12112": {
      "jump": "i",
      "op": "JUMP"
    },
    "12113": {
      "op": "JUMPDEST"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12116": {
      "op": "ADD"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12119": {
      "op": "NOT"
    },
    "12120": {
      "op": "AND"
    },
    "12121": {
      "op": "SWAP3"
    },
    "12122": {
      "op": "SWAP1"
    },
    "12123": {
      "op": "SWAP3"
    },
    "12124": {
      "op": "ADD"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12127": {
      "op": "ADD"
    },
    "12128": {
      "op": "SWAP3"
    },
    "12129": {
      "op": "SWAP2"
    },
    "12130": {
      "op": "POP"
    },
    "12131": {
      "op": "POP"
    },
    "12132": {
      "jump": "o",
      "op": "JUMP"
    },
    "12133": {
      "op": "JUMPDEST"
    },
    "12134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12136": {
      "op": "DUP2"
    },
    "12137": {
      "op": "MSTORE"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12140": {
      "op": "PUSH2",
      "value": "0x2F78"
    },
    "12143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12145": {
      "op": "DUP4"
    },
    "12146": {
      "op": "ADD"
    },
    "12147": {
      "op": "DUP9"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "12151": {
      "jump": "i",
      "op": "JUMP"
    },
    "12152": {
      "op": "JUMPDEST"
    },
    "12153": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12156": {
      "op": "SWAP7"
    },
    "12157": {
      "op": "SWAP1"
    },
    "12158": {
      "op": "SWAP7"
    },
    "12159": {
      "op": "AND"
    },
    "12160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12162": {
      "op": "DUP4"
    },
    "12163": {
      "op": "ADD"
    },
    "12164": {
      "op": "MSTORE"
    },
    "12165": {
      "op": "POP"
    },
    "12166": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12172": {
      "op": "SWAP4"
    },
    "12173": {
      "op": "DUP5"
    },
    "12174": {
      "op": "AND"
    },
    "12175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12177": {
      "op": "DUP3"
    },
    "12178": {
      "op": "ADD"
    },
    "12179": {
      "op": "MSTORE"
    },
    "12180": {
      "op": "SWAP2"
    },
    "12181": {
      "op": "DUP4"
    },
    "12182": {
      "op": "AND"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12185": {
      "op": "DUP4"
    },
    "12186": {
      "op": "ADD"
    },
    "12187": {
      "op": "MSTORE"
    },
    "12188": {
      "op": "SWAP1"
    },
    "12189": {
      "op": "SWAP2"
    },
    "12190": {
      "op": "AND"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12193": {
      "op": "SWAP1"
    },
    "12194": {
      "op": "SWAP2"
    },
    "12195": {
      "op": "ADD"
    },
    "12196": {
      "op": "MSTORE"
    },
    "12197": {
      "op": "SWAP2"
    },
    "12198": {
      "op": "SWAP1"
    },
    "12199": {
      "op": "POP"
    },
    "12200": {
      "jump": "o",
      "op": "JUMP"
    },
    "12201": {
      "op": "JUMPDEST"
    },
    "12202": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12209": {
      "op": "SHL"
    },
    "12210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12212": {
      "op": "MSTORE"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12217": {
      "op": "MSTORE"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12222": {
      "op": "REVERT"
    },
    "12223": {
      "op": "JUMPDEST"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12226": {
      "op": "MLOAD"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12229": {
      "op": "DUP3"
    },
    "12230": {
      "op": "ADD"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12233": {
      "op": "NOT"
    },
    "12234": {
      "op": "AND"
    },
    "12235": {
      "op": "DUP2"
    },
    "12236": {
      "op": "ADD"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12243": {
      "op": "SHL"
    },
    "12244": {
      "op": "SUB"
    },
    "12245": {
      "op": "DUP2"
    },
    "12246": {
      "op": "GT"
    },
    "12247": {
      "op": "DUP3"
    },
    "12248": {
      "op": "DUP3"
    },
    "12249": {
      "op": "LT"
    },
    "12250": {
      "op": "OR"
    },
    "12251": {
      "op": "ISZERO"
    },
    "12252": {
      "op": "PUSH2",
      "value": "0x2FE7"
    },
    "12255": {
      "op": "JUMPI"
    },
    "12256": {
      "op": "PUSH2",
      "value": "0x2FE7"
    },
    "12259": {
      "op": "PUSH2",
      "value": "0x2FA9"
    },
    "12262": {
      "jump": "i",
      "op": "JUMP"
    },
    "12263": {
      "op": "JUMPDEST"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12266": {
      "op": "MSTORE"
    },
    "12267": {
      "op": "SWAP2"
    },
    "12268": {
      "op": "SWAP1"
    },
    "12269": {
      "op": "POP"
    },
    "12270": {
      "jump": "o",
      "op": "JUMP"
    },
    "12271": {
      "op": "JUMPDEST"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12274": {
      "op": "DUP3"
    },
    "12275": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12277": {
      "op": "DUP4"
    },
    "12278": {
      "op": "ADD"
    },
    "12279": {
      "op": "SLT"
    },
    "12280": {
      "op": "PUSH2",
      "value": "0x3000"
    },
    "12283": {
      "op": "JUMPI"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12286": {
      "op": "DUP1"
    },
    "12287": {
      "op": "REVERT"
    },
    "12288": {
      "op": "JUMPDEST"
    },
    "12289": {
      "op": "DUP2"
    },
    "12290": {
      "op": "CALLDATALOAD"
    },
    "12291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12299": {
      "op": "SHL"
    },
    "12300": {
      "op": "SUB"
    },
    "12301": {
      "op": "DUP3"
    },
    "12302": {
      "op": "GT"
    },
    "12303": {
      "op": "ISZERO"
    },
    "12304": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "12307": {
      "op": "JUMPI"
    },
    "12308": {
      "op": "PUSH2",
      "value": "0x301B"
    },
    "12311": {
      "op": "PUSH2",
      "value": "0x2FA9"
    },
    "12314": {
      "jump": "i",
      "op": "JUMP"
    },
    "12315": {
      "op": "JUMPDEST"
    },
    "12316": {
      "op": "DUP2"
    },
    "12317": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12319": {
      "op": "SHL"
    },
    "12320": {
      "op": "PUSH2",
      "value": "0x302A"
    },
    "12323": {
      "op": "DUP3"
    },
    "12324": {
      "op": "DUP3"
    },
    "12325": {
      "op": "ADD"
    },
    "12326": {
      "op": "PUSH2",
      "value": "0x2FBF"
    },
    "12329": {
      "jump": "i",
      "op": "JUMP"
    },
    "12330": {
      "op": "JUMPDEST"
    },
    "12331": {
      "op": "SWAP3"
    },
    "12332": {
      "op": "DUP4"
    },
    "12333": {
      "op": "MSTORE"
    },
    "12334": {
      "op": "DUP5"
    },
    "12335": {
      "op": "DUP2"
    },
    "12336": {
      "op": "ADD"
    },
    "12337": {
      "op": "DUP3"
    },
    "12338": {
      "op": "ADD"
    },
    "12339": {
      "op": "SWAP3"
    },
    "12340": {
      "op": "DUP3"
    },
    "12341": {
      "op": "DUP2"
    },
    "12342": {
      "op": "ADD"
    },
    "12343": {
      "op": "SWAP1"
    },
    "12344": {
      "op": "DUP8"
    },
    "12345": {
      "op": "DUP6"
    },
    "12346": {
      "op": "GT"
    },
    "12347": {
      "op": "ISZERO"
    },
    "12348": {
      "op": "PUSH2",
      "value": "0x3044"
    },
    "12351": {
      "op": "JUMPI"
    },
    "12352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12354": {
      "op": "DUP1"
    },
    "12355": {
      "op": "REVERT"
    },
    "12356": {
      "op": "JUMPDEST"
    },
    "12357": {
      "op": "DUP4"
    },
    "12358": {
      "op": "DUP8"
    },
    "12359": {
      "op": "ADD"
    },
    "12360": {
      "op": "SWAP3"
    },
    "12361": {
      "op": "POP"
    },
    "12362": {
      "op": "JUMPDEST"
    },
    "12363": {
      "op": "DUP5"
    },
    "12364": {
      "op": "DUP4"
    },
    "12365": {
      "op": "LT"
    },
    "12366": {
      "op": "ISZERO"
    },
    "12367": {
      "op": "PUSH2",
      "value": "0x3063"
    },
    "12370": {
      "op": "JUMPI"
    },
    "12371": {
      "op": "DUP3"
    },
    "12372": {
      "op": "CALLDATALOAD"
    },
    "12373": {
      "op": "DUP3"
    },
    "12374": {
      "op": "MSTORE"
    },
    "12375": {
      "op": "SWAP2"
    },
    "12376": {
      "op": "DUP4"
    },
    "12377": {
      "op": "ADD"
    },
    "12378": {
      "op": "SWAP2"
    },
    "12379": {
      "op": "SWAP1"
    },
    "12380": {
      "op": "DUP4"
    },
    "12381": {
      "op": "ADD"
    },
    "12382": {
      "op": "SWAP1"
    },
    "12383": {
      "op": "PUSH2",
      "value": "0x304A"
    },
    "12386": {
      "op": "JUMP"
    },
    "12387": {
      "op": "JUMPDEST"
    },
    "12388": {
      "op": "SWAP8"
    },
    "12389": {
      "op": "SWAP7"
    },
    "12390": {
      "op": "POP"
    },
    "12391": {
      "op": "POP"
    },
    "12392": {
      "op": "POP"
    },
    "12393": {
      "op": "POP"
    },
    "12394": {
      "op": "POP"
    },
    "12395": {
      "op": "POP"
    },
    "12396": {
      "op": "POP"
    },
    "12397": {
      "jump": "o",
      "op": "JUMP"
    },
    "12398": {
      "op": "JUMPDEST"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12401": {
      "op": "DUP1"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12406": {
      "op": "DUP5"
    },
    "12407": {
      "op": "DUP7"
    },
    "12408": {
      "op": "SUB"
    },
    "12409": {
      "op": "SLT"
    },
    "12410": {
      "op": "ISZERO"
    },
    "12411": {
      "op": "PUSH2",
      "value": "0x3083"
    },
    "12414": {
      "op": "JUMPI"
    },
    "12415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12417": {
      "op": "DUP1"
    },
    "12418": {
      "op": "REVERT"
    },
    "12419": {
      "op": "JUMPDEST"
    },
    "12420": {
      "op": "DUP4"
    },
    "12421": {
      "op": "CALLDATALOAD"
    },
    "12422": {
      "op": "SWAP3"
    },
    "12423": {
      "op": "POP"
    },
    "12424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12426": {
      "op": "DUP5"
    },
    "12427": {
      "op": "ADD"
    },
    "12428": {
      "op": "CALLDATALOAD"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12435": {
      "op": "SHL"
    },
    "12436": {
      "op": "SUB"
    },
    "12437": {
      "op": "DUP2"
    },
    "12438": {
      "op": "GT"
    },
    "12439": {
      "op": "ISZERO"
    },
    "12440": {
      "op": "PUSH2",
      "value": "0x30A0"
    },
    "12443": {
      "op": "JUMPI"
    },
    "12444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12446": {
      "op": "DUP1"
    },
    "12447": {
      "op": "REVERT"
    },
    "12448": {
      "op": "JUMPDEST"
    },
    "12449": {
      "op": "PUSH2",
      "value": "0x30AC"
    },
    "12452": {
      "op": "DUP7"
    },
    "12453": {
      "op": "DUP3"
    },
    "12454": {
      "op": "DUP8"
    },
    "12455": {
      "op": "ADD"
    },
    "12456": {
      "op": "PUSH2",
      "value": "0x2FEF"
    },
    "12459": {
      "jump": "i",
      "op": "JUMP"
    },
    "12460": {
      "op": "JUMPDEST"
    },
    "12461": {
      "op": "SWAP3"
    },
    "12462": {
      "op": "POP"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12466": {
      "op": "DUP5"
    },
    "12467": {
      "op": "ADD"
    },
    "12468": {
      "op": "CALLDATALOAD"
    },
    "12469": {
      "op": "DUP1"
    },
    "12470": {
      "op": "ISZERO"
    },
    "12471": {
      "op": "ISZERO"
    },
    "12472": {
      "op": "DUP2"
    },
    "12473": {
      "op": "EQ"
    },
    "12474": {
      "op": "PUSH2",
      "value": "0x30C2"
    },
    "12477": {
      "op": "JUMPI"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12480": {
      "op": "DUP1"
    },
    "12481": {
      "op": "REVERT"
    },
    "12482": {
      "op": "JUMPDEST"
    },
    "12483": {
      "op": "DUP1"
    },
    "12484": {
      "op": "SWAP2"
    },
    "12485": {
      "op": "POP"
    },
    "12486": {
      "op": "POP"
    },
    "12487": {
      "op": "SWAP3"
    },
    "12488": {
      "op": "POP"
    },
    "12489": {
      "op": "SWAP3"
    },
    "12490": {
      "op": "POP"
    },
    "12491": {
      "op": "SWAP3"
    },
    "12492": {
      "jump": "o",
      "op": "JUMP"
    },
    "12493": {
      "op": "JUMPDEST"
    },
    "12494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12496": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12499": {
      "op": "DUP1"
    },
    "12500": {
      "op": "DUP4"
    },
    "12501": {
      "op": "MSTORE"
    },
    "12502": {
      "op": "PUSH2",
      "value": "0x30E1"
    },
    "12505": {
      "op": "DUP2"
    },
    "12506": {
      "op": "DUP5"
    },
    "12507": {
      "op": "ADD"
    },
    "12508": {
      "op": "DUP13"
    },
    "12509": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "12512": {
      "jump": "i",
      "op": "JUMP"
    },
    "12513": {
      "op": "JUMPDEST"
    },
    "12514": {
      "op": "SWAP10"
    },
    "12515": {
      "op": "ISZERO"
    },
    "12516": {
      "op": "ISZERO"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12519": {
      "op": "DUP5"
    },
    "12520": {
      "op": "ADD"
    },
    "12521": {
      "op": "MSTORE"
    },
    "12522": {
      "op": "POP"
    },
    "12523": {
      "op": "POP"
    },
    "12524": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12530": {
      "op": "SWAP7"
    },
    "12531": {
      "op": "DUP8"
    },
    "12532": {
      "op": "AND"
    },
    "12533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12535": {
      "op": "DUP3"
    },
    "12536": {
      "op": "ADD"
    },
    "12537": {
      "op": "MSTORE"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12540": {
      "op": "SWAP6"
    },
    "12541": {
      "op": "SWAP1"
    },
    "12542": {
      "op": "SWAP6"
    },
    "12543": {
      "op": "AND"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12546": {
      "op": "DUP7"
    },
    "12547": {
      "op": "ADD"
    },
    "12548": {
      "op": "MSTORE"
    },
    "12549": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12553": {
      "op": "SWAP4"
    },
    "12554": {
      "op": "SWAP1"
    },
    "12555": {
      "op": "SWAP4"
    },
    "12556": {
      "op": "AND"
    },
    "12557": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12559": {
      "op": "DUP6"
    },
    "12560": {
      "op": "ADD"
    },
    "12561": {
      "op": "MSTORE"
    },
    "12562": {
      "op": "SWAP1"
    },
    "12563": {
      "op": "DUP5"
    },
    "12564": {
      "op": "AND"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12567": {
      "op": "DUP5"
    },
    "12568": {
      "op": "ADD"
    },
    "12569": {
      "op": "MSTORE"
    },
    "12570": {
      "op": "SWAP1"
    },
    "12571": {
      "op": "SWAP3"
    },
    "12572": {
      "op": "AND"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12575": {
      "op": "DUP3"
    },
    "12576": {
      "op": "ADD"
    },
    "12577": {
      "op": "MSTORE"
    },
    "12578": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12581": {
      "op": "SWAP1"
    },
    "12582": {
      "op": "SWAP2"
    },
    "12583": {
      "op": "AND"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12586": {
      "op": "SWAP1"
    },
    "12587": {
      "op": "SWAP2"
    },
    "12588": {
      "op": "ADD"
    },
    "12589": {
      "op": "MSTORE"
    },
    "12590": {
      "op": "SWAP2"
    },
    "12591": {
      "op": "SWAP1"
    },
    "12592": {
      "op": "POP"
    },
    "12593": {
      "jump": "o",
      "op": "JUMP"
    },
    "12594": {
      "op": "JUMPDEST"
    },
    "12595": {
      "op": "DUP1"
    },
    "12596": {
      "op": "CALLDATALOAD"
    },
    "12597": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12603": {
      "op": "DUP2"
    },
    "12604": {
      "op": "AND"
    },
    "12605": {
      "op": "DUP2"
    },
    "12606": {
      "op": "EQ"
    },
    "12607": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "12610": {
      "op": "JUMPI"
    },
    "12611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12613": {
      "op": "DUP1"
    },
    "12614": {
      "op": "REVERT"
    },
    "12615": {
      "op": "JUMPDEST"
    },
    "12616": {
      "op": "SWAP2"
    },
    "12617": {
      "op": "SWAP1"
    },
    "12618": {
      "op": "POP"
    },
    "12619": {
      "jump": "o",
      "op": "JUMP"
    },
    "12620": {
      "op": "JUMPDEST"
    },
    "12621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12625": {
      "op": "DUP3"
    },
    "12626": {
      "op": "DUP5"
    },
    "12627": {
      "op": "SUB"
    },
    "12628": {
      "op": "SLT"
    },
    "12629": {
      "op": "ISZERO"
    },
    "12630": {
      "op": "PUSH2",
      "value": "0x315E"
    },
    "12633": {
      "op": "JUMPI"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12636": {
      "op": "DUP1"
    },
    "12637": {
      "op": "REVERT"
    },
    "12638": {
      "op": "JUMPDEST"
    },
    "12639": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "12642": {
      "op": "DUP3"
    },
    "12643": {
      "op": "PUSH2",
      "value": "0x3132"
    },
    "12646": {
      "jump": "i",
      "op": "JUMP"
    },
    "12647": {
      "op": "JUMPDEST"
    },
    "12648": {
      "op": "SWAP4"
    },
    "12649": {
      "op": "SWAP3"
    },
    "12650": {
      "op": "POP"
    },
    "12651": {
      "op": "POP"
    },
    "12652": {
      "op": "POP"
    },
    "12653": {
      "jump": "o",
      "op": "JUMP"
    },
    "12654": {
      "op": "JUMPDEST"
    },
    "12655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12657": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12660": {
      "op": "DUP3"
    },
    "12661": {
      "op": "MLOAD"
    },
    "12662": {
      "op": "DUP2"
    },
    "12663": {
      "op": "DUP6"
    },
    "12664": {
      "op": "MSTORE"
    },
    "12665": {
      "op": "PUSH2",
      "value": "0x3184"
    },
    "12668": {
      "op": "DUP3"
    },
    "12669": {
      "op": "DUP7"
    },
    "12670": {
      "op": "ADD"
    },
    "12671": {
      "op": "DUP3"
    },
    "12672": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "12675": {
      "jump": "i",
      "op": "JUMP"
    },
    "12676": {
      "op": "JUMPDEST"
    },
    "12677": {
      "op": "SWAP2"
    },
    "12678": {
      "op": "POP"
    },
    "12679": {
      "op": "POP"
    },
    "12680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12682": {
      "op": "DUP4"
    },
    "12683": {
      "op": "ADD"
    },
    "12684": {
      "op": "MLOAD"
    },
    "12685": {
      "op": "PUSH2",
      "value": "0x319F"
    },
    "12688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12690": {
      "op": "DUP7"
    },
    "12691": {
      "op": "ADD"
    },
    "12692": {
      "op": "DUP3"
    },
    "12693": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12699": {
      "op": "AND"
    },
    "12700": {
      "op": "SWAP1"
    },
    "12701": {
      "op": "MSTORE"
    },
    "12702": {
      "op": "JUMP"
    },
    "12703": {
      "op": "JUMPDEST"
    },
    "12704": {
      "op": "POP"
    },
    "12705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12707": {
      "op": "DUP4"
    },
    "12708": {
      "op": "ADD"
    },
    "12709": {
      "op": "MLOAD"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12712": {
      "op": "DUP6"
    },
    "12713": {
      "op": "ADD"
    },
    "12714": {
      "op": "MSTORE"
    },
    "12715": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12717": {
      "op": "DUP4"
    },
    "12718": {
      "op": "ADD"
    },
    "12719": {
      "op": "MLOAD"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12722": {
      "op": "DUP6"
    },
    "12723": {
      "op": "ADD"
    },
    "12724": {
      "op": "MSTORE"
    },
    "12725": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12727": {
      "op": "DUP4"
    },
    "12728": {
      "op": "ADD"
    },
    "12729": {
      "op": "MLOAD"
    },
    "12730": {
      "op": "PUSH2",
      "value": "0x31C8"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12735": {
      "op": "DUP7"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "DUP3"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12740": {
      "op": "AND"
    },
    "12741": {
      "op": "SWAP1"
    },
    "12742": {
      "op": "MSTORE"
    },
    "12743": {
      "op": "JUMP"
    },
    "12744": {
      "op": "JUMPDEST"
    },
    "12745": {
      "op": "POP"
    },
    "12746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12748": {
      "op": "DUP4"
    },
    "12749": {
      "op": "ADD"
    },
    "12750": {
      "op": "MLOAD"
    },
    "12751": {
      "op": "PUSH2",
      "value": "0x31DF"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12756": {
      "op": "DUP7"
    },
    "12757": {
      "op": "ADD"
    },
    "12758": {
      "op": "DUP3"
    },
    "12759": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12763": {
      "op": "AND"
    },
    "12764": {
      "op": "SWAP1"
    },
    "12765": {
      "op": "MSTORE"
    },
    "12766": {
      "op": "JUMP"
    },
    "12767": {
      "op": "JUMPDEST"
    },
    "12768": {
      "op": "POP"
    },
    "12769": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12771": {
      "op": "DUP4"
    },
    "12772": {
      "op": "ADD"
    },
    "12773": {
      "op": "MLOAD"
    },
    "12774": {
      "op": "PUSH2",
      "value": "0x31FA"
    },
    "12777": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12779": {
      "op": "DUP7"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "DUP3"
    },
    "12782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12786": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "12788": {
      "op": "SHL"
    },
    "12789": {
      "op": "SUB"
    },
    "12790": {
      "op": "AND"
    },
    "12791": {
      "op": "SWAP1"
    },
    "12792": {
      "op": "MSTORE"
    },
    "12793": {
      "op": "JUMP"
    },
    "12794": {
      "op": "JUMPDEST"
    },
    "12795": {
      "op": "POP"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12798": {
      "op": "DUP4"
    },
    "12799": {
      "op": "ADD"
    },
    "12800": {
      "op": "MLOAD"
    },
    "12801": {
      "op": "PUSH2",
      "value": "0x3210"
    },
    "12804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12806": {
      "op": "DUP7"
    },
    "12807": {
      "op": "ADD"
    },
    "12808": {
      "op": "DUP3"
    },
    "12809": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12812": {
      "op": "AND"
    },
    "12813": {
      "op": "SWAP1"
    },
    "12814": {
      "op": "MSTORE"
    },
    "12815": {
      "op": "JUMP"
    },
    "12816": {
      "op": "JUMPDEST"
    },
    "12817": {
      "op": "POP"
    },
    "12818": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12821": {
      "op": "DUP4"
    },
    "12822": {
      "op": "DUP2"
    },
    "12823": {
      "op": "ADD"
    },
    "12824": {
      "op": "MLOAD"
    },
    "12825": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12828": {
      "op": "AND"
    },
    "12829": {
      "op": "SWAP1"
    },
    "12830": {
      "op": "DUP6"
    },
    "12831": {
      "op": "ADD"
    },
    "12832": {
      "op": "MSTORE"
    },
    "12833": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12836": {
      "op": "DUP1"
    },
    "12837": {
      "op": "DUP5"
    },
    "12838": {
      "op": "ADD"
    },
    "12839": {
      "op": "MLOAD"
    },
    "12840": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12846": {
      "op": "DUP2"
    },
    "12847": {
      "op": "AND"
    },
    "12848": {
      "op": "DUP3"
    },
    "12849": {
      "op": "DUP8"
    },
    "12850": {
      "op": "ADD"
    },
    "12851": {
      "op": "MSTORE"
    },
    "12852": {
      "op": "PUSH2",
      "value": "0x19E9"
    },
    "12855": {
      "op": "JUMP"
    },
    "12856": {
      "op": "JUMPDEST"
    },
    "12857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12861": {
      "op": "DUP1"
    },
    "12862": {
      "op": "DUP4"
    },
    "12863": {
      "op": "ADD"
    },
    "12864": {
      "op": "DUP2"
    },
    "12865": {
      "op": "DUP5"
    },
    "12866": {
      "op": "MSTORE"
    },
    "12867": {
      "op": "DUP1"
    },
    "12868": {
      "op": "DUP6"
    },
    "12869": {
      "op": "MLOAD"
    },
    "12870": {
      "op": "DUP1"
    },
    "12871": {
      "op": "DUP4"
    },
    "12872": {
      "op": "MSTORE"
    },
    "12873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12875": {
      "op": "DUP7"
    },
    "12876": {
      "op": "ADD"
    },
    "12877": {
      "op": "SWAP2"
    },
    "12878": {
      "op": "POP"
    },
    "12879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12881": {
      "op": "DUP2"
    },
    "12882": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12884": {
      "op": "SHL"
    },
    "12885": {
      "op": "DUP8"
    },
    "12886": {
      "op": "ADD"
    },
    "12887": {
      "op": "ADD"
    },
    "12888": {
      "op": "SWAP3"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "op": "DUP4"
    },
    "12891": {
      "op": "DUP8"
    },
    "12892": {
      "op": "ADD"
    },
    "12893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12895": {
      "op": "JUMPDEST"
    },
    "12896": {
      "op": "DUP3"
    },
    "12897": {
      "op": "DUP2"
    },
    "12898": {
      "op": "LT"
    },
    "12899": {
      "op": "ISZERO"
    },
    "12900": {
      "op": "PUSH2",
      "value": "0x328D"
    },
    "12903": {
      "op": "JUMPI"
    },
    "12904": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12906": {
      "op": "NOT"
    },
    "12907": {
      "op": "DUP9"
    },
    "12908": {
      "op": "DUP7"
    },
    "12909": {
      "op": "SUB"
    },
    "12910": {
      "op": "ADD"
    },
    "12911": {
      "op": "DUP5"
    },
    "12912": {
      "op": "MSTORE"
    },
    "12913": {
      "op": "PUSH2",
      "value": "0x327B"
    },
    "12916": {
      "op": "DUP6"
    },
    "12917": {
      "op": "DUP4"
    },
    "12918": {
      "op": "MLOAD"
    },
    "12919": {
      "op": "PUSH2",
      "value": "0x316E"
    },
    "12922": {
      "jump": "i",
      "op": "JUMP"
    },
    "12923": {
      "op": "JUMPDEST"
    },
    "12924": {
      "op": "SWAP5"
    },
    "12925": {
      "op": "POP"
    },
    "12926": {
      "op": "SWAP3"
    },
    "12927": {
      "op": "DUP6"
    },
    "12928": {
      "op": "ADD"
    },
    "12929": {
      "op": "SWAP3"
    },
    "12930": {
      "op": "SWAP1"
    },
    "12931": {
      "op": "DUP6"
    },
    "12932": {
      "op": "ADD"
    },
    "12933": {
      "op": "SWAP1"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12936": {
      "op": "ADD"
    },
    "12937": {
      "op": "PUSH2",
      "value": "0x325F"
    },
    "12940": {
      "op": "JUMP"
    },
    "12941": {
      "op": "JUMPDEST"
    },
    "12942": {
      "op": "POP"
    },
    "12943": {
      "op": "SWAP3"
    },
    "12944": {
      "op": "SWAP8"
    },
    "12945": {
      "op": "SWAP7"
    },
    "12946": {
      "op": "POP"
    },
    "12947": {
      "op": "POP"
    },
    "12948": {
      "op": "POP"
    },
    "12949": {
      "op": "POP"
    },
    "12950": {
      "op": "POP"
    },
    "12951": {
      "op": "POP"
    },
    "12952": {
      "op": "POP"
    },
    "12953": {
      "jump": "o",
      "op": "JUMP"
    },
    "12954": {
      "op": "JUMPDEST"
    },
    "12955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12957": {
      "op": "DUP1"
    },
    "12958": {
      "op": "DUP4"
    },
    "12959": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12961": {
      "op": "DUP5"
    },
    "12962": {
      "op": "ADD"
    },
    "12963": {
      "op": "SLT"
    },
    "12964": {
      "op": "PUSH2",
      "value": "0x32AC"
    },
    "12967": {
      "op": "JUMPI"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12970": {
      "op": "DUP1"
    },
    "12971": {
      "op": "REVERT"
    },
    "12972": {
      "op": "JUMPDEST"
    },
    "12973": {
      "op": "POP"
    },
    "12974": {
      "op": "DUP2"
    },
    "12975": {
      "op": "CALLDATALOAD"
    },
    "12976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12982": {
      "op": "SHL"
    },
    "12983": {
      "op": "SUB"
    },
    "12984": {
      "op": "DUP2"
    },
    "12985": {
      "op": "GT"
    },
    "12986": {
      "op": "ISZERO"
    },
    "12987": {
      "op": "PUSH2",
      "value": "0x32C3"
    },
    "12990": {
      "op": "JUMPI"
    },
    "12991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12993": {
      "op": "DUP1"
    },
    "12994": {
      "op": "REVERT"
    },
    "12995": {
      "op": "JUMPDEST"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12998": {
      "op": "DUP4"
    },
    "12999": {
      "op": "ADD"
    },
    "13000": {
      "op": "SWAP2"
    },
    "13001": {
      "op": "POP"
    },
    "13002": {
      "op": "DUP4"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13005": {
      "op": "DUP3"
    },
    "13006": {
      "op": "DUP6"
    },
    "13007": {
      "op": "ADD"
    },
    "13008": {
      "op": "ADD"
    },
    "13009": {
      "op": "GT"
    },
    "13010": {
      "op": "ISZERO"
    },
    "13011": {
      "op": "PUSH2",
      "value": "0x32DB"
    },
    "13014": {
      "op": "JUMPI"
    },
    "13015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13017": {
      "op": "DUP1"
    },
    "13018": {
      "op": "REVERT"
    },
    "13019": {
      "op": "JUMPDEST"
    },
    "13020": {
      "op": "SWAP3"
    },
    "13021": {
      "op": "POP"
    },
    "13022": {
      "op": "SWAP3"
    },
    "13023": {
      "op": "SWAP1"
    },
    "13024": {
      "op": "POP"
    },
    "13025": {
      "jump": "o",
      "op": "JUMP"
    },
    "13026": {
      "op": "JUMPDEST"
    },
    "13027": {
      "op": "DUP1"
    },
    "13028": {
      "op": "CALLDATALOAD"
    },
    "13029": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13033": {
      "op": "DUP2"
    },
    "13034": {
      "op": "AND"
    },
    "13035": {
      "op": "DUP2"
    },
    "13036": {
      "op": "EQ"
    },
    "13037": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "13040": {
      "op": "JUMPI"
    },
    "13041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13043": {
      "op": "DUP1"
    },
    "13044": {
      "op": "REVERT"
    },
    "13045": {
      "op": "JUMPDEST"
    },
    "13046": {
      "op": "DUP1"
    },
    "13047": {
      "op": "CALLDATALOAD"
    },
    "13048": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13051": {
      "op": "DUP2"
    },
    "13052": {
      "op": "AND"
    },
    "13053": {
      "op": "DUP2"
    },
    "13054": {
      "op": "EQ"
    },
    "13055": {
      "op": "PUSH2",
      "value": "0x3147"
    },
    "13058": {
      "op": "JUMPI"
    },
    "13059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13061": {
      "op": "DUP1"
    },
    "13062": {
      "op": "REVERT"
    },
    "13063": {
      "op": "JUMPDEST"
    },
    "13064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13066": {
      "op": "DUP1"
    },
    "13067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13069": {
      "op": "DUP1"
    },
    "13070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13072": {
      "op": "DUP1"
    },
    "13073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13077": {
      "op": "DUP9"
    },
    "13078": {
      "op": "DUP11"
    },
    "13079": {
      "op": "SUB"
    },
    "13080": {
      "op": "SLT"
    },
    "13081": {
      "op": "ISZERO"
    },
    "13082": {
      "op": "PUSH2",
      "value": "0x3322"
    },
    "13085": {
      "op": "JUMPI"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13088": {
      "op": "DUP1"
    },
    "13089": {
      "op": "REVERT"
    },
    "13090": {
      "op": "JUMPDEST"
    },
    "13091": {
      "op": "DUP8"
    },
    "13092": {
      "op": "CALLDATALOAD"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13099": {
      "op": "SHL"
    },
    "13100": {
      "op": "SUB"
    },
    "13101": {
      "op": "DUP2"
    },
    "13102": {
      "op": "GT"
    },
    "13103": {
      "op": "ISZERO"
    },
    "13104": {
      "op": "PUSH2",
      "value": "0x3338"
    },
    "13107": {
      "op": "JUMPI"
    },
    "13108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13110": {
      "op": "DUP1"
    },
    "13111": {
      "op": "REVERT"
    },
    "13112": {
      "op": "JUMPDEST"
    },
    "13113": {
      "op": "PUSH2",
      "value": "0x3344"
    },
    "13116": {
      "op": "DUP11"
    },
    "13117": {
      "op": "DUP3"
    },
    "13118": {
      "op": "DUP12"
    },
    "13119": {
      "op": "ADD"
    },
    "13120": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13123": {
      "jump": "i",
      "op": "JUMP"
    },
    "13124": {
      "op": "JUMPDEST"
    },
    "13125": {
      "op": "SWAP1"
    },
    "13126": {
      "op": "SWAP9"
    },
    "13127": {
      "op": "POP"
    },
    "13128": {
      "op": "SWAP7"
    },
    "13129": {
      "op": "POP"
    },
    "13130": {
      "op": "POP"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13133": {
      "op": "DUP9"
    },
    "13134": {
      "op": "ADD"
    },
    "13135": {
      "op": "CALLDATALOAD"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13138": {
      "op": "DUP2"
    },
    "13139": {
      "op": "AND"
    },
    "13140": {
      "op": "DUP2"
    },
    "13141": {
      "op": "EQ"
    },
    "13142": {
      "op": "PUSH2",
      "value": "0x335E"
    },
    "13145": {
      "op": "JUMPI"
    },
    "13146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13148": {
      "op": "DUP1"
    },
    "13149": {
      "op": "REVERT"
    },
    "13150": {
      "op": "JUMPDEST"
    },
    "13151": {
      "op": "SWAP5"
    },
    "13152": {
      "op": "POP"
    },
    "13153": {
      "op": "PUSH2",
      "value": "0x336C"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13158": {
      "op": "DUP10"
    },
    "13159": {
      "op": "ADD"
    },
    "13160": {
      "op": "PUSH2",
      "value": "0x32E2"
    },
    "13163": {
      "jump": "i",
      "op": "JUMP"
    },
    "13164": {
      "op": "JUMPDEST"
    },
    "13165": {
      "op": "SWAP4"
    },
    "13166": {
      "op": "POP"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x337A"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13172": {
      "op": "DUP10"
    },
    "13173": {
      "op": "ADD"
    },
    "13174": {
      "op": "PUSH2",
      "value": "0x3132"
    },
    "13177": {
      "jump": "i",
      "op": "JUMP"
    },
    "13178": {
      "op": "JUMPDEST"
    },
    "13179": {
      "op": "SWAP3"
    },
    "13180": {
      "op": "POP"
    },
    "13181": {
      "op": "PUSH2",
      "value": "0x3388"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13186": {
      "op": "DUP10"
    },
    "13187": {
      "op": "ADD"
    },
    "13188": {
      "op": "PUSH2",
      "value": "0x3132"
    },
    "13191": {
      "jump": "i",
      "op": "JUMP"
    },
    "13192": {
      "op": "JUMPDEST"
    },
    "13193": {
      "op": "SWAP2"
    },
    "13194": {
      "op": "POP"
    },
    "13195": {
      "op": "PUSH2",
      "value": "0x3396"
    },
    "13198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13200": {
      "op": "DUP10"
    },
    "13201": {
      "op": "ADD"
    },
    "13202": {
      "op": "PUSH2",
      "value": "0x32F5"
    },
    "13205": {
      "jump": "i",
      "op": "JUMP"
    },
    "13206": {
      "op": "JUMPDEST"
    },
    "13207": {
      "op": "SWAP1"
    },
    "13208": {
      "op": "POP"
    },
    "13209": {
      "op": "SWAP3"
    },
    "13210": {
      "op": "SWAP6"
    },
    "13211": {
      "op": "SWAP9"
    },
    "13212": {
      "op": "SWAP2"
    },
    "13213": {
      "op": "SWAP5"
    },
    "13214": {
      "op": "SWAP8"
    },
    "13215": {
      "op": "POP"
    },
    "13216": {
      "op": "SWAP3"
    },
    "13217": {
      "op": "SWAP6"
    },
    "13218": {
      "op": "POP"
    },
    "13219": {
      "jump": "o",
      "op": "JUMP"
    },
    "13220": {
      "op": "JUMPDEST"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13223": {
      "op": "DUP1"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13226": {
      "op": "DUP4"
    },
    "13227": {
      "op": "DUP6"
    },
    "13228": {
      "op": "SUB"
    },
    "13229": {
      "op": "SLT"
    },
    "13230": {
      "op": "ISZERO"
    },
    "13231": {
      "op": "PUSH2",
      "value": "0x33B7"
    },
    "13234": {
      "op": "JUMPI"
    },
    "13235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13237": {
      "op": "DUP1"
    },
    "13238": {
      "op": "REVERT"
    },
    "13239": {
      "op": "JUMPDEST"
    },
    "13240": {
      "op": "POP"
    },
    "13241": {
      "op": "POP"
    },
    "13242": {
      "op": "DUP1"
    },
    "13243": {
      "op": "CALLDATALOAD"
    },
    "13244": {
      "op": "SWAP3"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13247": {
      "op": "SWAP1"
    },
    "13248": {
      "op": "SWAP2"
    },
    "13249": {
      "op": "ADD"
    },
    "13250": {
      "op": "CALLDATALOAD"
    },
    "13251": {
      "op": "SWAP2"
    },
    "13252": {
      "op": "POP"
    },
    "13253": {
      "jump": "o",
      "op": "JUMP"
    },
    "13254": {
      "op": "JUMPDEST"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13261": {
      "op": "SHL"
    },
    "13262": {
      "op": "SUB"
    },
    "13263": {
      "op": "DUP2"
    },
    "13264": {
      "op": "AND"
    },
    "13265": {
      "op": "DUP2"
    },
    "13266": {
      "op": "EQ"
    },
    "13267": {
      "op": "PUSH2",
      "value": "0x2682"
    },
    "13270": {
      "op": "JUMPI"
    },
    "13271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13273": {
      "op": "DUP1"
    },
    "13274": {
      "op": "REVERT"
    },
    "13275": {
      "op": "JUMPDEST"
    },
    "13276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13280": {
      "op": "DUP3"
    },
    "13281": {
      "op": "DUP5"
    },
    "13282": {
      "op": "SUB"
    },
    "13283": {
      "op": "SLT"
    },
    "13284": {
      "op": "ISZERO"
    },
    "13285": {
      "op": "PUSH2",
      "value": "0x33ED"
    },
    "13288": {
      "op": "JUMPI"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13291": {
      "op": "DUP1"
    },
    "13292": {
      "op": "REVERT"
    },
    "13293": {
      "op": "JUMPDEST"
    },
    "13294": {
      "op": "DUP2"
    },
    "13295": {
      "op": "CALLDATALOAD"
    },
    "13296": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "13299": {
      "op": "DUP2"
    },
    "13300": {
      "op": "PUSH2",
      "value": "0x33C6"
    },
    "13303": {
      "jump": "i",
      "op": "JUMP"
    },
    "13304": {
      "op": "JUMPDEST"
    },
    "13305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13307": {
      "op": "DUP3"
    },
    "13308": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13310": {
      "op": "DUP4"
    },
    "13311": {
      "op": "ADD"
    },
    "13312": {
      "op": "SLT"
    },
    "13313": {
      "op": "PUSH2",
      "value": "0x3409"
    },
    "13316": {
      "op": "JUMPI"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13319": {
      "op": "DUP1"
    },
    "13320": {
      "op": "REVERT"
    },
    "13321": {
      "op": "JUMPDEST"
    },
    "13322": {
      "op": "DUP2"
    },
    "13323": {
      "op": "CALLDATALOAD"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13330": {
      "op": "SHL"
    },
    "13331": {
      "op": "SUB"
    },
    "13332": {
      "op": "DUP2"
    },
    "13333": {
      "op": "GT"
    },
    "13334": {
      "op": "ISZERO"
    },
    "13335": {
      "op": "PUSH2",
      "value": "0x3422"
    },
    "13338": {
      "op": "JUMPI"
    },
    "13339": {
      "op": "PUSH2",
      "value": "0x3422"
    },
    "13342": {
      "op": "PUSH2",
      "value": "0x2FA9"
    },
    "13345": {
      "jump": "i",
      "op": "JUMP"
    },
    "13346": {
      "op": "JUMPDEST"
    },
    "13347": {
      "op": "PUSH2",
      "value": "0x3435"
    },
    "13350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13352": {
      "op": "DUP3"
    },
    "13353": {
      "op": "ADD"
    },
    "13354": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13356": {
      "op": "NOT"
    },
    "13357": {
      "op": "AND"
    },
    "13358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13360": {
      "op": "ADD"
    },
    "13361": {
      "op": "PUSH2",
      "value": "0x2FBF"
    },
    "13364": {
      "jump": "i",
      "op": "JUMP"
    },
    "13365": {
      "op": "JUMPDEST"
    },
    "13366": {
      "op": "DUP2"
    },
    "13367": {
      "op": "DUP2"
    },
    "13368": {
      "op": "MSTORE"
    },
    "13369": {
      "op": "DUP5"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13372": {
      "op": "DUP4"
    },
    "13373": {
      "op": "DUP7"
    },
    "13374": {
      "op": "ADD"
    },
    "13375": {
      "op": "ADD"
    },
    "13376": {
      "op": "GT"
    },
    "13377": {
      "op": "ISZERO"
    },
    "13378": {
      "op": "PUSH2",
      "value": "0x344A"
    },
    "13381": {
      "op": "JUMPI"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13384": {
      "op": "DUP1"
    },
    "13385": {
      "op": "REVERT"
    },
    "13386": {
      "op": "JUMPDEST"
    },
    "13387": {
      "op": "DUP2"
    },
    "13388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13390": {
      "op": "DUP6"
    },
    "13391": {
      "op": "ADD"
    },
    "13392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13394": {
      "op": "DUP4"
    },
    "13395": {
      "op": "ADD"
    },
    "13396": {
      "op": "CALLDATACOPY"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13399": {
      "op": "SWAP2"
    },
    "13400": {
      "op": "DUP2"
    },
    "13401": {
      "op": "ADD"
    },
    "13402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13404": {
      "op": "ADD"
    },
    "13405": {
      "op": "SWAP2"
    },
    "13406": {
      "op": "SWAP1"
    },
    "13407": {
      "op": "SWAP2"
    },
    "13408": {
      "op": "MSTORE"
    },
    "13409": {
      "op": "SWAP4"
    },
    "13410": {
      "op": "SWAP3"
    },
    "13411": {
      "op": "POP"
    },
    "13412": {
      "op": "POP"
    },
    "13413": {
      "op": "POP"
    },
    "13414": {
      "jump": "o",
      "op": "JUMP"
    },
    "13415": {
      "op": "JUMPDEST"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13418": {
      "op": "DUP1"
    },
    "13419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13421": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13423": {
      "op": "DUP5"
    },
    "13424": {
      "op": "DUP7"
    },
    "13425": {
      "op": "SUB"
    },
    "13426": {
      "op": "SLT"
    },
    "13427": {
      "op": "ISZERO"
    },
    "13428": {
      "op": "PUSH2",
      "value": "0x347C"
    },
    "13431": {
      "op": "JUMPI"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13434": {
      "op": "DUP1"
    },
    "13435": {
      "op": "REVERT"
    },
    "13436": {
      "op": "JUMPDEST"
    },
    "13437": {
      "op": "DUP4"
    },
    "13438": {
      "op": "CALLDATALOAD"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13445": {
      "op": "SHL"
    },
    "13446": {
      "op": "SUB"
    },
    "13447": {
      "op": "DUP2"
    },
    "13448": {
      "op": "GT"
    },
    "13449": {
      "op": "ISZERO"
    },
    "13450": {
      "op": "PUSH2",
      "value": "0x3492"
    },
    "13453": {
      "op": "JUMPI"
    },
    "13454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13456": {
      "op": "DUP1"
    },
    "13457": {
      "op": "REVERT"
    },
    "13458": {
      "op": "JUMPDEST"
    },
    "13459": {
      "op": "PUSH2",
      "value": "0x349E"
    },
    "13462": {
      "op": "DUP7"
    },
    "13463": {
      "op": "DUP3"
    },
    "13464": {
      "op": "DUP8"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "op": "PUSH2",
      "value": "0x33F8"
    },
    "13469": {
      "jump": "i",
      "op": "JUMP"
    },
    "13470": {
      "op": "JUMPDEST"
    },
    "13471": {
      "op": "SWAP4"
    },
    "13472": {
      "op": "POP"
    },
    "13473": {
      "op": "POP"
    },
    "13474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13476": {
      "op": "DUP5"
    },
    "13477": {
      "op": "ADD"
    },
    "13478": {
      "op": "CALLDATALOAD"
    },
    "13479": {
      "op": "SWAP2"
    },
    "13480": {
      "op": "POP"
    },
    "13481": {
      "op": "PUSH2",
      "value": "0x34B4"
    },
    "13484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13486": {
      "op": "DUP6"
    },
    "13487": {
      "op": "ADD"
    },
    "13488": {
      "op": "PUSH2",
      "value": "0x3132"
    },
    "13491": {
      "jump": "i",
      "op": "JUMP"
    },
    "13492": {
      "op": "JUMPDEST"
    },
    "13493": {
      "op": "SWAP1"
    },
    "13494": {
      "op": "POP"
    },
    "13495": {
      "op": "SWAP3"
    },
    "13496": {
      "op": "POP"
    },
    "13497": {
      "op": "SWAP3"
    },
    "13498": {
      "op": "POP"
    },
    "13499": {
      "op": "SWAP3"
    },
    "13500": {
      "jump": "o",
      "op": "JUMP"
    },
    "13501": {
      "op": "JUMPDEST"
    },
    "13502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13504": {
      "op": "DUP1"
    },
    "13505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13507": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13509": {
      "op": "DUP5"
    },
    "13510": {
      "op": "DUP7"
    },
    "13511": {
      "op": "SUB"
    },
    "13512": {
      "op": "SLT"
    },
    "13513": {
      "op": "ISZERO"
    },
    "13514": {
      "op": "PUSH2",
      "value": "0x34D2"
    },
    "13517": {
      "op": "JUMPI"
    },
    "13518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13520": {
      "op": "DUP1"
    },
    "13521": {
      "op": "REVERT"
    },
    "13522": {
      "op": "JUMPDEST"
    },
    "13523": {
      "op": "POP"
    },
    "13524": {
      "op": "POP"
    },
    "13525": {
      "op": "DUP2"
    },
    "13526": {
      "op": "CALLDATALOAD"
    },
    "13527": {
      "op": "SWAP4"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13530": {
      "op": "DUP4"
    },
    "13531": {
      "op": "ADD"
    },
    "13532": {
      "op": "CALLDATALOAD"
    },
    "13533": {
      "op": "SWAP4"
    },
    "13534": {
      "op": "POP"
    },
    "13535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13537": {
      "op": "SWAP1"
    },
    "13538": {
      "op": "SWAP3"
    },
    "13539": {
      "op": "ADD"
    },
    "13540": {
      "op": "CALLDATALOAD"
    },
    "13541": {
      "op": "SWAP2"
    },
    "13542": {
      "op": "SWAP1"
    },
    "13543": {
      "op": "POP"
    },
    "13544": {
      "jump": "o",
      "op": "JUMP"
    },
    "13545": {
      "op": "JUMPDEST"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13548": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13551": {
      "op": "DUP1"
    },
    "13552": {
      "op": "DUP4"
    },
    "13553": {
      "op": "MSTORE"
    },
    "13554": {
      "op": "PUSH2",
      "value": "0x34FD"
    },
    "13557": {
      "op": "DUP2"
    },
    "13558": {
      "op": "DUP5"
    },
    "13559": {
      "op": "ADD"
    },
    "13560": {
      "op": "DUP15"
    },
    "13561": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "13564": {
      "jump": "i",
      "op": "JUMP"
    },
    "13565": {
      "op": "JUMPDEST"
    },
    "13566": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13572": {
      "op": "SWAP13"
    },
    "13573": {
      "op": "DUP14"
    },
    "13574": {
      "op": "AND"
    },
    "13575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13577": {
      "op": "DUP6"
    },
    "13578": {
      "op": "ADD"
    },
    "13579": {
      "op": "MSTORE"
    },
    "13580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13582": {
      "op": "DUP5"
    },
    "13583": {
      "op": "ADD"
    },
    "13584": {
      "op": "SWAP12"
    },
    "13585": {
      "op": "SWAP1"
    },
    "13586": {
      "op": "SWAP12"
    },
    "13587": {
      "op": "MSTORE"
    },
    "13588": {
      "op": "POP"
    },
    "13589": {
      "op": "POP"
    },
    "13590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13592": {
      "op": "DUP2"
    },
    "13593": {
      "op": "ADD"
    },
    "13594": {
      "op": "SWAP8"
    },
    "13595": {
      "op": "SWAP1"
    },
    "13596": {
      "op": "SWAP8"
    },
    "13597": {
      "op": "MSTORE"
    },
    "13598": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13600": {
      "op": "SWAP6"
    },
    "13601": {
      "op": "SWAP1"
    },
    "13602": {
      "op": "SWAP6"
    },
    "13603": {
      "op": "AND"
    },
    "13604": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13606": {
      "op": "DUP8"
    },
    "13607": {
      "op": "ADD"
    },
    "13608": {
      "op": "MSTORE"
    },
    "13609": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13613": {
      "op": "SWAP4"
    },
    "13614": {
      "op": "SWAP1"
    },
    "13615": {
      "op": "SWAP4"
    },
    "13616": {
      "op": "AND"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13619": {
      "op": "DUP7"
    },
    "13620": {
      "op": "ADD"
    },
    "13621": {
      "op": "MSTORE"
    },
    "13622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13628": {
      "op": "SHL"
    },
    "13629": {
      "op": "SUB"
    },
    "13630": {
      "op": "SWAP2"
    },
    "13631": {
      "op": "SWAP1"
    },
    "13632": {
      "op": "SWAP2"
    },
    "13633": {
      "op": "AND"
    },
    "13634": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13636": {
      "op": "DUP6"
    },
    "13637": {
      "op": "ADD"
    },
    "13638": {
      "op": "MSTORE"
    },
    "13639": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13642": {
      "op": "SWAP1"
    },
    "13643": {
      "op": "DUP2"
    },
    "13644": {
      "op": "AND"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13647": {
      "op": "DUP6"
    },
    "13648": {
      "op": "ADD"
    },
    "13649": {
      "op": "MSTORE"
    },
    "13650": {
      "op": "AND"
    },
    "13651": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13654": {
      "op": "DUP4"
    },
    "13655": {
      "op": "ADD"
    },
    "13656": {
      "op": "MSTORE"
    },
    "13657": {
      "op": "SWAP1"
    },
    "13658": {
      "op": "SWAP3"
    },
    "13659": {
      "op": "AND"
    },
    "13660": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13663": {
      "op": "SWAP1"
    },
    "13664": {
      "op": "SWAP3"
    },
    "13665": {
      "op": "ADD"
    },
    "13666": {
      "op": "SWAP2"
    },
    "13667": {
      "op": "SWAP1"
    },
    "13668": {
      "op": "SWAP2"
    },
    "13669": {
      "op": "MSTORE"
    },
    "13670": {
      "op": "SWAP2"
    },
    "13671": {
      "op": "SWAP1"
    },
    "13672": {
      "op": "POP"
    },
    "13673": {
      "jump": "o",
      "op": "JUMP"
    },
    "13674": {
      "op": "JUMPDEST"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13677": {
      "op": "DUP2"
    },
    "13678": {
      "op": "MSTORE"
    },
    "13679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13681": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "13684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13686": {
      "op": "DUP4"
    },
    "13687": {
      "op": "ADD"
    },
    "13688": {
      "op": "DUP5"
    },
    "13689": {
      "op": "PUSH2",
      "value": "0x316E"
    },
    "13692": {
      "jump": "i",
      "op": "JUMP"
    },
    "13693": {
      "op": "JUMPDEST"
    },
    "13694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13698": {
      "op": "DUP1"
    },
    "13699": {
      "op": "DUP4"
    },
    "13700": {
      "op": "ADD"
    },
    "13701": {
      "op": "DUP2"
    },
    "13702": {
      "op": "DUP5"
    },
    "13703": {
      "op": "MSTORE"
    },
    "13704": {
      "op": "DUP1"
    },
    "13705": {
      "op": "DUP6"
    },
    "13706": {
      "op": "MLOAD"
    },
    "13707": {
      "op": "DUP1"
    },
    "13708": {
      "op": "DUP4"
    },
    "13709": {
      "op": "MSTORE"
    },
    "13710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13712": {
      "op": "DUP7"
    },
    "13713": {
      "op": "ADD"
    },
    "13714": {
      "op": "SWAP2"
    },
    "13715": {
      "op": "POP"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13718": {
      "op": "DUP2"
    },
    "13719": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13721": {
      "op": "SHL"
    },
    "13722": {
      "op": "DUP8"
    },
    "13723": {
      "op": "ADD"
    },
    "13724": {
      "op": "ADD"
    },
    "13725": {
      "op": "SWAP3"
    },
    "13726": {
      "op": "POP"
    },
    "13727": {
      "op": "DUP4"
    },
    "13728": {
      "op": "DUP8"
    },
    "13729": {
      "op": "ADD"
    },
    "13730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13732": {
      "op": "JUMPDEST"
    },
    "13733": {
      "op": "DUP3"
    },
    "13734": {
      "op": "DUP2"
    },
    "13735": {
      "op": "LT"
    },
    "13736": {
      "op": "ISZERO"
    },
    "13737": {
      "op": "PUSH2",
      "value": "0x328D"
    },
    "13740": {
      "op": "JUMPI"
    },
    "13741": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13743": {
      "op": "NOT"
    },
    "13744": {
      "op": "DUP9"
    },
    "13745": {
      "op": "DUP7"
    },
    "13746": {
      "op": "SUB"
    },
    "13747": {
      "op": "ADD"
    },
    "13748": {
      "op": "DUP5"
    },
    "13749": {
      "op": "MSTORE"
    },
    "13750": {
      "op": "PUSH2",
      "value": "0x35C0"
    },
    "13753": {
      "op": "DUP6"
    },
    "13754": {
      "op": "DUP4"
    },
    "13755": {
      "op": "MLOAD"
    },
    "13756": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "13759": {
      "jump": "i",
      "op": "JUMP"
    },
    "13760": {
      "op": "JUMPDEST"
    },
    "13761": {
      "op": "SWAP5"
    },
    "13762": {
      "op": "POP"
    },
    "13763": {
      "op": "SWAP3"
    },
    "13764": {
      "op": "DUP6"
    },
    "13765": {
      "op": "ADD"
    },
    "13766": {
      "op": "SWAP3"
    },
    "13767": {
      "op": "SWAP1"
    },
    "13768": {
      "op": "DUP6"
    },
    "13769": {
      "op": "ADD"
    },
    "13770": {
      "op": "SWAP1"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13773": {
      "op": "ADD"
    },
    "13774": {
      "op": "PUSH2",
      "value": "0x35A4"
    },
    "13777": {
      "op": "JUMP"
    },
    "13778": {
      "op": "JUMPDEST"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13781": {
      "op": "DUP1"
    },
    "13782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13784": {
      "op": "DUP1"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13787": {
      "op": "DUP1"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13792": {
      "op": "DUP9"
    },
    "13793": {
      "op": "DUP11"
    },
    "13794": {
      "op": "SUB"
    },
    "13795": {
      "op": "SLT"
    },
    "13796": {
      "op": "ISZERO"
    },
    "13797": {
      "op": "PUSH2",
      "value": "0x35ED"
    },
    "13800": {
      "op": "JUMPI"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13803": {
      "op": "DUP1"
    },
    "13804": {
      "op": "REVERT"
    },
    "13805": {
      "op": "JUMPDEST"
    },
    "13806": {
      "op": "DUP8"
    },
    "13807": {
      "op": "CALLDATALOAD"
    },
    "13808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13814": {
      "op": "SHL"
    },
    "13815": {
      "op": "SUB"
    },
    "13816": {
      "op": "DUP2"
    },
    "13817": {
      "op": "GT"
    },
    "13818": {
      "op": "ISZERO"
    },
    "13819": {
      "op": "PUSH2",
      "value": "0x3603"
    },
    "13822": {
      "op": "JUMPI"
    },
    "13823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13825": {
      "op": "DUP1"
    },
    "13826": {
      "op": "REVERT"
    },
    "13827": {
      "op": "JUMPDEST"
    },
    "13828": {
      "op": "PUSH2",
      "value": "0x360F"
    },
    "13831": {
      "op": "DUP11"
    },
    "13832": {
      "op": "DUP3"
    },
    "13833": {
      "op": "DUP12"
    },
    "13834": {
      "op": "ADD"
    },
    "13835": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13838": {
      "jump": "i",
      "op": "JUMP"
    },
    "13839": {
      "op": "JUMPDEST"
    },
    "13840": {
      "op": "SWAP1"
    },
    "13841": {
      "op": "SWAP9"
    },
    "13842": {
      "op": "POP"
    },
    "13843": {
      "op": "SWAP7"
    },
    "13844": {
      "op": "POP"
    },
    "13845": {
      "op": "PUSH2",
      "value": "0x335E"
    },
    "13848": {
      "op": "SWAP1"
    },
    "13849": {
      "op": "POP"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13852": {
      "op": "DUP10"
    },
    "13853": {
      "op": "ADD"
    },
    "13854": {
      "op": "PUSH2",
      "value": "0x32F5"
    },
    "13857": {
      "jump": "i",
      "op": "JUMP"
    },
    "13858": {
      "op": "JUMPDEST"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13861": {
      "op": "DUP1"
    },
    "13862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13866": {
      "op": "DUP5"
    },
    "13867": {
      "op": "DUP7"
    },
    "13868": {
      "op": "SUB"
    },
    "13869": {
      "op": "SLT"
    },
    "13870": {
      "op": "ISZERO"
    },
    "13871": {
      "op": "PUSH2",
      "value": "0x3637"
    },
    "13874": {
      "op": "JUMPI"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13877": {
      "op": "DUP1"
    },
    "13878": {
      "op": "REVERT"
    },
    "13879": {
      "op": "JUMPDEST"
    },
    "13880": {
      "op": "DUP4"
    },
    "13881": {
      "op": "CALLDATALOAD"
    },
    "13882": {
      "op": "SWAP3"
    },
    "13883": {
      "op": "POP"
    },
    "13884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13886": {
      "op": "DUP5"
    },
    "13887": {
      "op": "ADD"
    },
    "13888": {
      "op": "CALLDATALOAD"
    },
    "13889": {
      "op": "SWAP2"
    },
    "13890": {
      "op": "POP"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13893": {
      "op": "DUP5"
    },
    "13894": {
      "op": "ADD"
    },
    "13895": {
      "op": "CALLDATALOAD"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13902": {
      "op": "SHL"
    },
    "13903": {
      "op": "SUB"
    },
    "13904": {
      "op": "DUP2"
    },
    "13905": {
      "op": "GT"
    },
    "13906": {
      "op": "ISZERO"
    },
    "13907": {
      "op": "PUSH2",
      "value": "0x365B"
    },
    "13910": {
      "op": "JUMPI"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13913": {
      "op": "DUP1"
    },
    "13914": {
      "op": "REVERT"
    },
    "13915": {
      "op": "JUMPDEST"
    },
    "13916": {
      "op": "PUSH2",
      "value": "0x3667"
    },
    "13919": {
      "op": "DUP7"
    },
    "13920": {
      "op": "DUP3"
    },
    "13921": {
      "op": "DUP8"
    },
    "13922": {
      "op": "ADD"
    },
    "13923": {
      "op": "PUSH2",
      "value": "0x2FEF"
    },
    "13926": {
      "jump": "i",
      "op": "JUMP"
    },
    "13927": {
      "op": "JUMPDEST"
    },
    "13928": {
      "op": "SWAP2"
    },
    "13929": {
      "op": "POP"
    },
    "13930": {
      "op": "POP"
    },
    "13931": {
      "op": "SWAP3"
    },
    "13932": {
      "op": "POP"
    },
    "13933": {
      "op": "SWAP3"
    },
    "13934": {
      "op": "POP"
    },
    "13935": {
      "op": "SWAP3"
    },
    "13936": {
      "jump": "o",
      "op": "JUMP"
    },
    "13937": {
      "op": "JUMPDEST"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13942": {
      "op": "DUP3"
    },
    "13943": {
      "op": "DUP5"
    },
    "13944": {
      "op": "SUB"
    },
    "13945": {
      "op": "SLT"
    },
    "13946": {
      "op": "ISZERO"
    },
    "13947": {
      "op": "PUSH2",
      "value": "0x3683"
    },
    "13950": {
      "op": "JUMPI"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13953": {
      "op": "DUP1"
    },
    "13954": {
      "op": "REVERT"
    },
    "13955": {
      "op": "JUMPDEST"
    },
    "13956": {
      "op": "DUP2"
    },
    "13957": {
      "op": "CALLDATALOAD"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13964": {
      "op": "SHL"
    },
    "13965": {
      "op": "SUB"
    },
    "13966": {
      "op": "DUP2"
    },
    "13967": {
      "op": "GT"
    },
    "13968": {
      "op": "ISZERO"
    },
    "13969": {
      "op": "PUSH2",
      "value": "0x3699"
    },
    "13972": {
      "op": "JUMPI"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13975": {
      "op": "DUP1"
    },
    "13976": {
      "op": "REVERT"
    },
    "13977": {
      "op": "JUMPDEST"
    },
    "13978": {
      "op": "PUSH2",
      "value": "0x36A5"
    },
    "13981": {
      "op": "DUP5"
    },
    "13982": {
      "op": "DUP3"
    },
    "13983": {
      "op": "DUP6"
    },
    "13984": {
      "op": "ADD"
    },
    "13985": {
      "op": "PUSH2",
      "value": "0x33F8"
    },
    "13988": {
      "jump": "i",
      "op": "JUMP"
    },
    "13989": {
      "op": "JUMPDEST"
    },
    "13990": {
      "op": "SWAP5"
    },
    "13991": {
      "op": "SWAP4"
    },
    "13992": {
      "op": "POP"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "POP"
    },
    "13995": {
      "op": "POP"
    },
    "13996": {
      "jump": "o",
      "op": "JUMP"
    },
    "13997": {
      "op": "JUMPDEST"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14000": {
      "op": "DUP1"
    },
    "14001": {
      "op": "DUP3"
    },
    "14002": {
      "op": "MSTORE"
    },
    "14003": {
      "op": "DUP3"
    },
    "14004": {
      "op": "MLOAD"
    },
    "14005": {
      "op": "DUP3"
    },
    "14006": {
      "op": "DUP3"
    },
    "14007": {
      "op": "ADD"
    },
    "14008": {
      "op": "DUP2"
    },
    "14009": {
      "op": "SWAP1"
    },
    "14010": {
      "op": "MSTORE"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14013": {
      "op": "SWAP2"
    },
    "14014": {
      "op": "SWAP1"
    },
    "14015": {
      "op": "DUP5"
    },
    "14016": {
      "op": "DUP3"
    },
    "14017": {
      "op": "ADD"
    },
    "14018": {
      "op": "SWAP1"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14021": {
      "op": "DUP6"
    },
    "14022": {
      "op": "ADD"
    },
    "14023": {
      "op": "SWAP1"
    },
    "14024": {
      "op": "DUP5"
    },
    "14025": {
      "op": "JUMPDEST"
    },
    "14026": {
      "op": "DUP2"
    },
    "14027": {
      "op": "DUP2"
    },
    "14028": {
      "op": "LT"
    },
    "14029": {
      "op": "ISZERO"
    },
    "14030": {
      "op": "PUSH2",
      "value": "0x36E9"
    },
    "14033": {
      "op": "JUMPI"
    },
    "14034": {
      "op": "DUP4"
    },
    "14035": {
      "op": "MLOAD"
    },
    "14036": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14039": {
      "op": "AND"
    },
    "14040": {
      "op": "DUP4"
    },
    "14041": {
      "op": "MSTORE"
    },
    "14042": {
      "op": "SWAP3"
    },
    "14043": {
      "op": "DUP5"
    },
    "14044": {
      "op": "ADD"
    },
    "14045": {
      "op": "SWAP3"
    },
    "14046": {
      "op": "SWAP2"
    },
    "14047": {
      "op": "DUP5"
    },
    "14048": {
      "op": "ADD"
    },
    "14049": {
      "op": "SWAP2"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14052": {
      "op": "ADD"
    },
    "14053": {
      "op": "PUSH2",
      "value": "0x36C9"
    },
    "14056": {
      "op": "JUMP"
    },
    "14057": {
      "op": "JUMPDEST"
    },
    "14058": {
      "op": "POP"
    },
    "14059": {
      "op": "SWAP1"
    },
    "14060": {
      "op": "SWAP7"
    },
    "14061": {
      "op": "SWAP6"
    },
    "14062": {
      "op": "POP"
    },
    "14063": {
      "op": "POP"
    },
    "14064": {
      "op": "POP"
    },
    "14065": {
      "op": "POP"
    },
    "14066": {
      "op": "POP"
    },
    "14067": {
      "op": "POP"
    },
    "14068": {
      "jump": "o",
      "op": "JUMP"
    },
    "14069": {
      "op": "JUMPDEST"
    },
    "14070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14072": {
      "op": "DUP2"
    },
    "14073": {
      "op": "DUP2"
    },
    "14074": {
      "op": "SHR"
    },
    "14075": {
      "op": "SWAP1"
    },
    "14076": {
      "op": "DUP3"
    },
    "14077": {
      "op": "AND"
    },
    "14078": {
      "op": "DUP1"
    },
    "14079": {
      "op": "PUSH2",
      "value": "0x3709"
    },
    "14082": {
      "op": "JUMPI"
    },
    "14083": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14085": {
      "op": "DUP3"
    },
    "14086": {
      "op": "AND"
    },
    "14087": {
      "op": "SWAP2"
    },
    "14088": {
      "op": "POP"
    },
    "14089": {
      "op": "JUMPDEST"
    },
    "14090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14092": {
      "op": "DUP3"
    },
    "14093": {
      "op": "LT"
    },
    "14094": {
      "op": "DUP2"
    },
    "14095": {
      "op": "SUB"
    },
    "14096": {
      "op": "PUSH2",
      "value": "0x3729"
    },
    "14099": {
      "op": "JUMPI"
    },
    "14100": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14107": {
      "op": "SHL"
    },
    "14108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14110": {
      "op": "MSTORE"
    },
    "14111": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14113": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14115": {
      "op": "MSTORE"
    },
    "14116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14120": {
      "op": "REVERT"
    },
    "14121": {
      "op": "JUMPDEST"
    },
    "14122": {
      "op": "POP"
    },
    "14123": {
      "op": "SWAP2"
    },
    "14124": {
      "op": "SWAP1"
    },
    "14125": {
      "op": "POP"
    },
    "14126": {
      "jump": "o",
      "op": "JUMP"
    },
    "14127": {
      "op": "JUMPDEST"
    },
    "14128": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14135": {
      "op": "SHL"
    },
    "14136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14138": {
      "op": "MSTORE"
    },
    "14139": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14141": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14143": {
      "op": "MSTORE"
    },
    "14144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14148": {
      "op": "REVERT"
    },
    "14149": {
      "op": "JUMPDEST"
    },
    "14150": {
      "op": "DUP2"
    },
    "14151": {
      "op": "MLOAD"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14154": {
      "op": "SWAP1"
    },
    "14155": {
      "op": "DUP3"
    },
    "14156": {
      "op": "SWAP1"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14159": {
      "op": "DUP1"
    },
    "14160": {
      "op": "DUP7"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "DUP5"
    },
    "14163": {
      "op": "JUMPDEST"
    },
    "14164": {
      "op": "DUP4"
    },
    "14165": {
      "op": "DUP2"
    },
    "14166": {
      "op": "LT"
    },
    "14167": {
      "op": "ISZERO"
    },
    "14168": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "14171": {
      "op": "JUMPI"
    },
    "14172": {
      "op": "DUP2"
    },
    "14173": {
      "op": "MLOAD"
    },
    "14174": {
      "op": "DUP6"
    },
    "14175": {
      "op": "MSTORE"
    },
    "14176": {
      "op": "SWAP4"
    },
    "14177": {
      "op": "DUP3"
    },
    "14178": {
      "op": "ADD"
    },
    "14179": {
      "op": "SWAP4"
    },
    "14180": {
      "op": "SWAP1"
    },
    "14181": {
      "op": "DUP3"
    },
    "14182": {
      "op": "ADD"
    },
    "14183": {
      "op": "SWAP1"
    },
    "14184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14186": {
      "op": "ADD"
    },
    "14187": {
      "op": "PUSH2",
      "value": "0x3753"
    },
    "14190": {
      "op": "JUMP"
    },
    "14191": {
      "op": "JUMPDEST"
    },
    "14192": {
      "op": "POP"
    },
    "14193": {
      "op": "SWAP3"
    },
    "14194": {
      "op": "SWAP7"
    },
    "14195": {
      "op": "SWAP6"
    },
    "14196": {
      "op": "POP"
    },
    "14197": {
      "op": "POP"
    },
    "14198": {
      "op": "POP"
    },
    "14199": {
      "op": "POP"
    },
    "14200": {
      "op": "POP"
    },
    "14201": {
      "op": "POP"
    },
    "14202": {
      "jump": "o",
      "op": "JUMP"
    },
    "14203": {
      "op": "JUMPDEST"
    },
    "14204": {
      "op": "DUP5"
    },
    "14205": {
      "op": "DUP2"
    },
    "14206": {
      "op": "MSTORE"
    },
    "14207": {
      "op": "DUP4"
    },
    "14208": {
      "op": "ISZERO"
    },
    "14209": {
      "op": "ISZERO"
    },
    "14210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14212": {
      "op": "DUP3"
    },
    "14213": {
      "op": "ADD"
    },
    "14214": {
      "op": "MSTORE"
    },
    "14215": {
      "op": "DUP3"
    },
    "14216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14218": {
      "op": "DUP3"
    },
    "14219": {
      "op": "ADD"
    },
    "14220": {
      "op": "MSTORE"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14223": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14225": {
      "op": "DUP3"
    },
    "14226": {
      "op": "ADD"
    },
    "14227": {
      "op": "MSTORE"
    },
    "14228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14230": {
      "op": "PUSH2",
      "value": "0x37A2"
    },
    "14233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14235": {
      "op": "DUP4"
    },
    "14236": {
      "op": "ADD"
    },
    "14237": {
      "op": "DUP5"
    },
    "14238": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "14241": {
      "jump": "i",
      "op": "JUMP"
    },
    "14242": {
      "op": "JUMPDEST"
    },
    "14243": {
      "op": "SWAP7"
    },
    "14244": {
      "op": "SWAP6"
    },
    "14245": {
      "op": "POP"
    },
    "14246": {
      "op": "POP"
    },
    "14247": {
      "op": "POP"
    },
    "14248": {
      "op": "POP"
    },
    "14249": {
      "op": "POP"
    },
    "14250": {
      "op": "POP"
    },
    "14251": {
      "jump": "o",
      "op": "JUMP"
    },
    "14252": {
      "op": "JUMPDEST"
    },
    "14253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14255": {
      "op": "DUP1"
    },
    "14256": {
      "op": "DUP3"
    },
    "14257": {
      "op": "MSTORE"
    },
    "14258": {
      "op": "DUP2"
    },
    "14259": {
      "op": "DUP2"
    },
    "14260": {
      "op": "ADD"
    },
    "14261": {
      "op": "MSTORE"
    },
    "14262": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14297": {
      "op": "DUP3"
    },
    "14298": {
      "op": "ADD"
    },
    "14299": {
      "op": "MSTORE"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14302": {
      "op": "ADD"
    },
    "14303": {
      "op": "SWAP1"
    },
    "14304": {
      "jump": "o",
      "op": "JUMP"
    },
    "14305": {
      "op": "JUMPDEST"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14308": {
      "op": "DUP2"
    },
    "14309": {
      "op": "MSTORE"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14312": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "14315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14317": {
      "op": "DUP4"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "op": "DUP5"
    },
    "14320": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "14323": {
      "jump": "i",
      "op": "JUMP"
    },
    "14324": {
      "op": "JUMPDEST"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14327": {
      "op": "DUP2"
    },
    "14328": {
      "op": "SLOAD"
    },
    "14329": {
      "op": "PUSH2",
      "value": "0x3801"
    },
    "14332": {
      "op": "DUP2"
    },
    "14333": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "14336": {
      "jump": "i",
      "op": "JUMP"
    },
    "14337": {
      "op": "JUMPDEST"
    },
    "14338": {
      "op": "DUP1"
    },
    "14339": {
      "op": "DUP6"
    },
    "14340": {
      "op": "MSTORE"
    },
    "14341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14345": {
      "op": "DUP4"
    },
    "14346": {
      "op": "DUP2"
    },
    "14347": {
      "op": "AND"
    },
    "14348": {
      "op": "DUP1"
    },
    "14349": {
      "op": "ISZERO"
    },
    "14350": {
      "op": "PUSH2",
      "value": "0x381E"
    },
    "14353": {
      "op": "JUMPI"
    },
    "14354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14356": {
      "op": "DUP2"
    },
    "14357": {
      "op": "EQ"
    },
    "14358": {
      "op": "PUSH2",
      "value": "0x3838"
    },
    "14361": {
      "op": "JUMPI"
    },
    "14362": {
      "op": "PUSH2",
      "value": "0x3866"
    },
    "14365": {
      "op": "JUMP"
    },
    "14366": {
      "op": "JUMPDEST"
    },
    "14367": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14369": {
      "op": "NOT"
    },
    "14370": {
      "op": "DUP6"
    },
    "14371": {
      "op": "AND"
    },
    "14372": {
      "op": "DUP9"
    },
    "14373": {
      "op": "DUP5"
    },
    "14374": {
      "op": "ADD"
    },
    "14375": {
      "op": "MSTORE"
    },
    "14376": {
      "op": "DUP4"
    },
    "14377": {
      "op": "ISZERO"
    },
    "14378": {
      "op": "ISZERO"
    },
    "14379": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14381": {
      "op": "SHL"
    },
    "14382": {
      "op": "DUP9"
    },
    "14383": {
      "op": "ADD"
    },
    "14384": {
      "op": "DUP4"
    },
    "14385": {
      "op": "ADD"
    },
    "14386": {
      "op": "SWAP6"
    },
    "14387": {
      "op": "POP"
    },
    "14388": {
      "op": "PUSH2",
      "value": "0x3866"
    },
    "14391": {
      "op": "JUMP"
    },
    "14392": {
      "op": "JUMPDEST"
    },
    "14393": {
      "op": "DUP7"
    },
    "14394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14396": {
      "op": "MSTORE"
    },
    "14397": {
      "op": "DUP3"
    },
    "14398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14400": {
      "op": "KECCAK256"
    },
    "14401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14403": {
      "op": "JUMPDEST"
    },
    "14404": {
      "op": "DUP6"
    },
    "14405": {
      "op": "DUP2"
    },
    "14406": {
      "op": "LT"
    },
    "14407": {
      "op": "ISZERO"
    },
    "14408": {
      "op": "PUSH2",
      "value": "0x385E"
    },
    "14411": {
      "op": "JUMPI"
    },
    "14412": {
      "op": "DUP2"
    },
    "14413": {
      "op": "SLOAD"
    },
    "14414": {
      "op": "DUP11"
    },
    "14415": {
      "op": "DUP3"
    },
    "14416": {
      "op": "ADD"
    },
    "14417": {
      "op": "DUP7"
    },
    "14418": {
      "op": "ADD"
    },
    "14419": {
      "op": "MSTORE"
    },
    "14420": {
      "op": "SWAP1"
    },
    "14421": {
      "op": "DUP4"
    },
    "14422": {
      "op": "ADD"
    },
    "14423": {
      "op": "SWAP1"
    },
    "14424": {
      "op": "DUP5"
    },
    "14425": {
      "op": "ADD"
    },
    "14426": {
      "op": "PUSH2",
      "value": "0x3843"
    },
    "14429": {
      "op": "JUMP"
    },
    "14430": {
      "op": "JUMPDEST"
    },
    "14431": {
      "op": "DUP10"
    },
    "14432": {
      "op": "ADD"
    },
    "14433": {
      "op": "DUP5"
    },
    "14434": {
      "op": "ADD"
    },
    "14435": {
      "op": "SWAP7"
    },
    "14436": {
      "op": "POP"
    },
    "14437": {
      "op": "POP"
    },
    "14438": {
      "op": "JUMPDEST"
    },
    "14439": {
      "op": "POP"
    },
    "14440": {
      "op": "POP"
    },
    "14441": {
      "op": "POP"
    },
    "14442": {
      "op": "POP"
    },
    "14443": {
      "op": "POP"
    },
    "14444": {
      "op": "SWAP3"
    },
    "14445": {
      "op": "SWAP2"
    },
    "14446": {
      "op": "POP"
    },
    "14447": {
      "op": "POP"
    },
    "14448": {
      "jump": "o",
      "op": "JUMP"
    },
    "14449": {
      "op": "JUMPDEST"
    },
    "14450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14452": {
      "op": "DUP2"
    },
    "14453": {
      "op": "MSTORE"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14456": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "14459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14461": {
      "op": "DUP4"
    },
    "14462": {
      "op": "ADD"
    },
    "14463": {
      "op": "DUP5"
    },
    "14464": {
      "op": "PUSH2",
      "value": "0x37F4"
    },
    "14467": {
      "jump": "i",
      "op": "JUMP"
    },
    "14468": {
      "op": "JUMPDEST"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14471": {
      "op": "DUP3"
    },
    "14472": {
      "op": "GT"
    },
    "14473": {
      "op": "ISZERO"
    },
    "14474": {
      "op": "PUSH2",
      "value": "0x38CE"
    },
    "14477": {
      "op": "JUMPI"
    },
    "14478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14480": {
      "op": "DUP2"
    },
    "14481": {
      "op": "DUP2"
    },
    "14482": {
      "op": "MSTORE"
    },
    "14483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14485": {
      "op": "DUP2"
    },
    "14486": {
      "op": "KECCAK256"
    },
    "14487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14489": {
      "op": "DUP6"
    },
    "14490": {
      "op": "ADD"
    },
    "14491": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14493": {
      "op": "SHR"
    },
    "14494": {
      "op": "DUP2"
    },
    "14495": {
      "op": "ADD"
    },
    "14496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14498": {
      "op": "DUP7"
    },
    "14499": {
      "op": "LT"
    },
    "14500": {
      "op": "ISZERO"
    },
    "14501": {
      "op": "PUSH2",
      "value": "0x38AB"
    },
    "14504": {
      "op": "JUMPI"
    },
    "14505": {
      "op": "POP"
    },
    "14506": {
      "op": "DUP1"
    },
    "14507": {
      "op": "JUMPDEST"
    },
    "14508": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14510": {
      "op": "DUP6"
    },
    "14511": {
      "op": "ADD"
    },
    "14512": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14514": {
      "op": "SHR"
    },
    "14515": {
      "op": "DUP3"
    },
    "14516": {
      "op": "ADD"
    },
    "14517": {
      "op": "SWAP2"
    },
    "14518": {
      "op": "POP"
    },
    "14519": {
      "op": "JUMPDEST"
    },
    "14520": {
      "op": "DUP2"
    },
    "14521": {
      "op": "DUP2"
    },
    "14522": {
      "op": "LT"
    },
    "14523": {
      "op": "ISZERO"
    },
    "14524": {
      "op": "PUSH2",
      "value": "0x38CA"
    },
    "14527": {
      "op": "JUMPI"
    },
    "14528": {
      "op": "DUP3"
    },
    "14529": {
      "op": "DUP2"
    },
    "14530": {
      "op": "SSTORE"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14533": {
      "op": "ADD"
    },
    "14534": {
      "op": "PUSH2",
      "value": "0x38B7"
    },
    "14537": {
      "op": "JUMP"
    },
    "14538": {
      "op": "JUMPDEST"
    },
    "14539": {
      "op": "POP"
    },
    "14540": {
      "op": "POP"
    },
    "14541": {
      "op": "POP"
    },
    "14542": {
      "op": "JUMPDEST"
    },
    "14543": {
      "op": "POP"
    },
    "14544": {
      "op": "POP"
    },
    "14545": {
      "op": "POP"
    },
    "14546": {
      "jump": "o",
      "op": "JUMP"
    },
    "14547": {
      "op": "JUMPDEST"
    },
    "14548": {
      "op": "DUP2"
    },
    "14549": {
      "op": "MLOAD"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14556": {
      "op": "SHL"
    },
    "14557": {
      "op": "SUB"
    },
    "14558": {
      "op": "DUP2"
    },
    "14559": {
      "op": "GT"
    },
    "14560": {
      "op": "ISZERO"
    },
    "14561": {
      "op": "PUSH2",
      "value": "0x38EC"
    },
    "14564": {
      "op": "JUMPI"
    },
    "14565": {
      "op": "PUSH2",
      "value": "0x38EC"
    },
    "14568": {
      "op": "PUSH2",
      "value": "0x2FA9"
    },
    "14571": {
      "jump": "i",
      "op": "JUMP"
    },
    "14572": {
      "op": "JUMPDEST"
    },
    "14573": {
      "op": "PUSH2",
      "value": "0x3900"
    },
    "14576": {
      "op": "DUP2"
    },
    "14577": {
      "op": "PUSH2",
      "value": "0x38FA"
    },
    "14580": {
      "op": "DUP5"
    },
    "14581": {
      "op": "SLOAD"
    },
    "14582": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "14585": {
      "jump": "i",
      "op": "JUMP"
    },
    "14586": {
      "op": "JUMPDEST"
    },
    "14587": {
      "op": "DUP5"
    },
    "14588": {
      "op": "PUSH2",
      "value": "0x3884"
    },
    "14591": {
      "jump": "i",
      "op": "JUMP"
    },
    "14592": {
      "op": "JUMPDEST"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14595": {
      "op": "DUP1"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14598": {
      "op": "DUP4"
    },
    "14599": {
      "op": "GT"
    },
    "14600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14602": {
      "op": "DUP2"
    },
    "14603": {
      "op": "EQ"
    },
    "14604": {
      "op": "PUSH2",
      "value": "0x3935"
    },
    "14607": {
      "op": "JUMPI"
    },
    "14608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14610": {
      "op": "DUP5"
    },
    "14611": {
      "op": "ISZERO"
    },
    "14612": {
      "op": "PUSH2",
      "value": "0x391D"
    },
    "14615": {
      "op": "JUMPI"
    },
    "14616": {
      "op": "POP"
    },
    "14617": {
      "op": "DUP6"
    },
    "14618": {
      "op": "DUP4"
    },
    "14619": {
      "op": "ADD"
    },
    "14620": {
      "op": "MLOAD"
    },
    "14621": {
      "op": "JUMPDEST"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14624": {
      "op": "NOT"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14627": {
      "op": "DUP7"
    },
    "14628": {
      "op": "SWAP1"
    },
    "14629": {
      "op": "SHL"
    },
    "14630": {
      "op": "SHR"
    },
    "14631": {
      "op": "NOT"
    },
    "14632": {
      "op": "AND"
    },
    "14633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14635": {
      "op": "DUP6"
    },
    "14636": {
      "op": "SWAP1"
    },
    "14637": {
      "op": "SHL"
    },
    "14638": {
      "op": "OR"
    },
    "14639": {
      "op": "DUP6"
    },
    "14640": {
      "op": "SSTORE"
    },
    "14641": {
      "op": "PUSH2",
      "value": "0x38CA"
    },
    "14644": {
      "op": "JUMP"
    },
    "14645": {
      "op": "JUMPDEST"
    },
    "14646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14648": {
      "op": "DUP6"
    },
    "14649": {
      "op": "DUP2"
    },
    "14650": {
      "op": "MSTORE"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14653": {
      "op": "DUP2"
    },
    "14654": {
      "op": "KECCAK256"
    },
    "14655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14657": {
      "op": "NOT"
    },
    "14658": {
      "op": "DUP7"
    },
    "14659": {
      "op": "AND"
    },
    "14660": {
      "op": "SWAP2"
    },
    "14661": {
      "op": "JUMPDEST"
    },
    "14662": {
      "op": "DUP3"
    },
    "14663": {
      "op": "DUP2"
    },
    "14664": {
      "op": "LT"
    },
    "14665": {
      "op": "ISZERO"
    },
    "14666": {
      "op": "PUSH2",
      "value": "0x3964"
    },
    "14669": {
      "op": "JUMPI"
    },
    "14670": {
      "op": "DUP9"
    },
    "14671": {
      "op": "DUP7"
    },
    "14672": {
      "op": "ADD"
    },
    "14673": {
      "op": "MLOAD"
    },
    "14674": {
      "op": "DUP3"
    },
    "14675": {
      "op": "SSTORE"
    },
    "14676": {
      "op": "SWAP5"
    },
    "14677": {
      "op": "DUP5"
    },
    "14678": {
      "op": "ADD"
    },
    "14679": {
      "op": "SWAP5"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14682": {
      "op": "SWAP1"
    },
    "14683": {
      "op": "SWAP2"
    },
    "14684": {
      "op": "ADD"
    },
    "14685": {
      "op": "SWAP1"
    },
    "14686": {
      "op": "DUP5"
    },
    "14687": {
      "op": "ADD"
    },
    "14688": {
      "op": "PUSH2",
      "value": "0x3945"
    },
    "14691": {
      "op": "JUMP"
    },
    "14692": {
      "op": "JUMPDEST"
    },
    "14693": {
      "op": "POP"
    },
    "14694": {
      "op": "DUP6"
    },
    "14695": {
      "op": "DUP3"
    },
    "14696": {
      "op": "LT"
    },
    "14697": {
      "op": "ISZERO"
    },
    "14698": {
      "op": "PUSH2",
      "value": "0x3982"
    },
    "14701": {
      "op": "JUMPI"
    },
    "14702": {
      "op": "DUP8"
    },
    "14703": {
      "op": "DUP6"
    },
    "14704": {
      "op": "ADD"
    },
    "14705": {
      "op": "MLOAD"
    },
    "14706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14708": {
      "op": "NOT"
    },
    "14709": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14711": {
      "op": "DUP9"
    },
    "14712": {
      "op": "SWAP1"
    },
    "14713": {
      "op": "SHL"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14716": {
      "op": "AND"
    },
    "14717": {
      "op": "SHR"
    },
    "14718": {
      "op": "NOT"
    },
    "14719": {
      "op": "AND"
    },
    "14720": {
      "op": "DUP2"
    },
    "14721": {
      "op": "SSTORE"
    },
    "14722": {
      "op": "JUMPDEST"
    },
    "14723": {
      "op": "POP"
    },
    "14724": {
      "op": "POP"
    },
    "14725": {
      "op": "POP"
    },
    "14726": {
      "op": "POP"
    },
    "14727": {
      "op": "POP"
    },
    "14728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14730": {
      "op": "SWAP1"
    },
    "14731": {
      "op": "DUP2"
    },
    "14732": {
      "op": "SHL"
    },
    "14733": {
      "op": "ADD"
    },
    "14734": {
      "op": "SWAP1"
    },
    "14735": {
      "op": "SSTORE"
    },
    "14736": {
      "op": "POP"
    },
    "14737": {
      "jump": "o",
      "op": "JUMP"
    },
    "14738": {
      "op": "JUMPDEST"
    },
    "14739": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14744": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14746": {
      "op": "SHL"
    },
    "14747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14749": {
      "op": "MSTORE"
    },
    "14750": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14752": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14754": {
      "op": "MSTORE"
    },
    "14755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14759": {
      "op": "REVERT"
    },
    "14760": {
      "op": "JUMPDEST"
    },
    "14761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14763": {
      "op": "DUP3"
    },
    "14764": {
      "op": "NOT"
    },
    "14765": {
      "op": "DUP3"
    },
    "14766": {
      "op": "GT"
    },
    "14767": {
      "op": "ISZERO"
    },
    "14768": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14771": {
      "op": "JUMPI"
    },
    "14772": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "14778": {
      "jump": "i",
      "op": "JUMP"
    },
    "14779": {
      "op": "JUMPDEST"
    },
    "14780": {
      "op": "POP"
    },
    "14781": {
      "op": "ADD"
    },
    "14782": {
      "op": "SWAP1"
    },
    "14783": {
      "jump": "o",
      "op": "JUMP"
    },
    "14784": {
      "op": "JUMPDEST"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14787": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14790": {
      "op": "DUP4"
    },
    "14791": {
      "op": "DUP2"
    },
    "14792": {
      "op": "AND"
    },
    "14793": {
      "op": "SWAP1"
    },
    "14794": {
      "op": "DUP4"
    },
    "14795": {
      "op": "AND"
    },
    "14796": {
      "op": "DUP2"
    },
    "14797": {
      "op": "DUP2"
    },
    "14798": {
      "op": "LT"
    },
    "14799": {
      "op": "ISZERO"
    },
    "14800": {
      "op": "PUSH2",
      "value": "0x39DB"
    },
    "14803": {
      "op": "JUMPI"
    },
    "14804": {
      "op": "PUSH2",
      "value": "0x39DB"
    },
    "14807": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "14810": {
      "jump": "i",
      "op": "JUMP"
    },
    "14811": {
      "op": "JUMPDEST"
    },
    "14812": {
      "op": "SUB"
    },
    "14813": {
      "op": "SWAP4"
    },
    "14814": {
      "op": "SWAP3"
    },
    "14815": {
      "op": "POP"
    },
    "14816": {
      "op": "POP"
    },
    "14817": {
      "op": "POP"
    },
    "14818": {
      "jump": "o",
      "op": "JUMP"
    },
    "14819": {
      "op": "JUMPDEST"
    },
    "14820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14822": {
      "op": "DUP3"
    },
    "14823": {
      "op": "DUP3"
    },
    "14824": {
      "op": "LT"
    },
    "14825": {
      "op": "ISZERO"
    },
    "14826": {
      "op": "PUSH2",
      "value": "0x39F5"
    },
    "14829": {
      "op": "JUMPI"
    },
    "14830": {
      "op": "PUSH2",
      "value": "0x39F5"
    },
    "14833": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "14836": {
      "jump": "i",
      "op": "JUMP"
    },
    "14837": {
      "op": "JUMPDEST"
    },
    "14838": {
      "op": "POP"
    },
    "14839": {
      "op": "SUB"
    },
    "14840": {
      "op": "SWAP1"
    },
    "14841": {
      "jump": "o",
      "op": "JUMP"
    },
    "14842": {
      "op": "JUMPDEST"
    },
    "14843": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14849": {
      "op": "DUP6"
    },
    "14850": {
      "op": "AND"
    },
    "14851": {
      "op": "DUP2"
    },
    "14852": {
      "op": "MSTORE"
    },
    "14853": {
      "op": "DUP4"
    },
    "14854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14856": {
      "op": "DUP3"
    },
    "14857": {
      "op": "ADD"
    },
    "14858": {
      "op": "MSTORE"
    },
    "14859": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14863": {
      "op": "DUP3"
    },
    "14864": {
      "op": "ADD"
    },
    "14865": {
      "op": "MSTORE"
    },
    "14866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14868": {
      "op": "PUSH2",
      "value": "0x3A20"
    },
    "14871": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14873": {
      "op": "DUP4"
    },
    "14874": {
      "op": "ADD"
    },
    "14875": {
      "op": "DUP6"
    },
    "14876": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "14879": {
      "jump": "i",
      "op": "JUMP"
    },
    "14880": {
      "op": "JUMPDEST"
    },
    "14881": {
      "op": "SWAP1"
    },
    "14882": {
      "op": "POP"
    },
    "14883": {
      "op": "DUP3"
    },
    "14884": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14886": {
      "op": "DUP4"
    },
    "14887": {
      "op": "ADD"
    },
    "14888": {
      "op": "MSTORE"
    },
    "14889": {
      "op": "SWAP6"
    },
    "14890": {
      "op": "SWAP5"
    },
    "14891": {
      "op": "POP"
    },
    "14892": {
      "op": "POP"
    },
    "14893": {
      "op": "POP"
    },
    "14894": {
      "op": "POP"
    },
    "14895": {
      "op": "POP"
    },
    "14896": {
      "jump": "o",
      "op": "JUMP"
    },
    "14897": {
      "op": "JUMPDEST"
    },
    "14898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14902": {
      "op": "DUP3"
    },
    "14903": {
      "op": "ADD"
    },
    "14904": {
      "op": "PUSH2",
      "value": "0x3A43"
    },
    "14907": {
      "op": "JUMPI"
    },
    "14908": {
      "op": "PUSH2",
      "value": "0x3A43"
    },
    "14911": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "14914": {
      "jump": "i",
      "op": "JUMP"
    },
    "14915": {
      "op": "JUMPDEST"
    },
    "14916": {
      "op": "POP"
    },
    "14917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14919": {
      "op": "ADD"
    },
    "14920": {
      "op": "SWAP1"
    },
    "14921": {
      "jump": "o",
      "op": "JUMP"
    },
    "14922": {
      "op": "JUMPDEST"
    },
    "14923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14927": {
      "op": "DUP3"
    },
    "14928": {
      "op": "DUP5"
    },
    "14929": {
      "op": "SUB"
    },
    "14930": {
      "op": "SLT"
    },
    "14931": {
      "op": "ISZERO"
    },
    "14932": {
      "op": "PUSH2",
      "value": "0x3A5C"
    },
    "14935": {
      "op": "JUMPI"
    },
    "14936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14938": {
      "op": "DUP1"
    },
    "14939": {
      "op": "REVERT"
    },
    "14940": {
      "op": "JUMPDEST"
    },
    "14941": {
      "op": "DUP2"
    },
    "14942": {
      "op": "MLOAD"
    },
    "14943": {
      "op": "PUSH2",
      "value": "0x3167"
    },
    "14946": {
      "op": "DUP2"
    },
    "14947": {
      "op": "PUSH2",
      "value": "0x33C6"
    },
    "14950": {
      "jump": "i",
      "op": "JUMP"
    },
    "14951": {
      "op": "JUMPDEST"
    },
    "14952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14958": {
      "op": "SHL"
    },
    "14959": {
      "op": "SUB"
    },
    "14960": {
      "op": "DUP4"
    },
    "14961": {
      "op": "GT"
    },
    "14962": {
      "op": "ISZERO"
    },
    "14963": {
      "op": "PUSH2",
      "value": "0x3A7E"
    },
    "14966": {
      "op": "JUMPI"
    },
    "14967": {
      "op": "PUSH2",
      "value": "0x3A7E"
    },
    "14970": {
      "op": "PUSH2",
      "value": "0x2FA9"
    },
    "14973": {
      "jump": "i",
      "op": "JUMP"
    },
    "14974": {
      "op": "JUMPDEST"
    },
    "14975": {
      "op": "PUSH2",
      "value": "0x3A92"
    },
    "14978": {
      "op": "DUP4"
    },
    "14979": {
      "op": "PUSH2",
      "value": "0x3A8C"
    },
    "14982": {
      "op": "DUP4"
    },
    "14983": {
      "op": "SLOAD"
    },
    "14984": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "14987": {
      "jump": "i",
      "op": "JUMP"
    },
    "14988": {
      "op": "JUMPDEST"
    },
    "14989": {
      "op": "DUP4"
    },
    "14990": {
      "op": "PUSH2",
      "value": "0x3884"
    },
    "14993": {
      "jump": "i",
      "op": "JUMP"
    },
    "14994": {
      "op": "JUMPDEST"
    },
    "14995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14997": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14999": {
      "op": "DUP5"
    },
    "15000": {
      "op": "GT"
    },
    "15001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15003": {
      "op": "DUP2"
    },
    "15004": {
      "op": "EQ"
    },
    "15005": {
      "op": "PUSH2",
      "value": "0x3AC6"
    },
    "15008": {
      "op": "JUMPI"
    },
    "15009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15011": {
      "op": "DUP6"
    },
    "15012": {
      "op": "ISZERO"
    },
    "15013": {
      "op": "PUSH2",
      "value": "0x3AAE"
    },
    "15016": {
      "op": "JUMPI"
    },
    "15017": {
      "op": "POP"
    },
    "15018": {
      "op": "DUP4"
    },
    "15019": {
      "op": "DUP3"
    },
    "15020": {
      "op": "ADD"
    },
    "15021": {
      "op": "CALLDATALOAD"
    },
    "15022": {
      "op": "JUMPDEST"
    },
    "15023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15025": {
      "op": "NOT"
    },
    "15026": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15028": {
      "op": "DUP8"
    },
    "15029": {
      "op": "SWAP1"
    },
    "15030": {
      "op": "SHL"
    },
    "15031": {
      "op": "SHR"
    },
    "15032": {
      "op": "NOT"
    },
    "15033": {
      "op": "AND"
    },
    "15034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15036": {
      "op": "DUP7"
    },
    "15037": {
      "op": "SWAP1"
    },
    "15038": {
      "op": "SHL"
    },
    "15039": {
      "op": "OR"
    },
    "15040": {
      "op": "DUP4"
    },
    "15041": {
      "op": "SSTORE"
    },
    "15042": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "15045": {
      "op": "JUMP"
    },
    "15046": {
      "op": "JUMPDEST"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15049": {
      "op": "DUP4"
    },
    "15050": {
      "op": "DUP2"
    },
    "15051": {
      "op": "MSTORE"
    },
    "15052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15054": {
      "op": "SWAP1"
    },
    "15055": {
      "op": "KECCAK256"
    },
    "15056": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15058": {
      "op": "NOT"
    },
    "15059": {
      "op": "DUP7"
    },
    "15060": {
      "op": "AND"
    },
    "15061": {
      "op": "SWAP1"
    },
    "15062": {
      "op": "DUP4"
    },
    "15063": {
      "op": "JUMPDEST"
    },
    "15064": {
      "op": "DUP3"
    },
    "15065": {
      "op": "DUP2"
    },
    "15066": {
      "op": "LT"
    },
    "15067": {
      "op": "ISZERO"
    },
    "15068": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "15071": {
      "op": "JUMPI"
    },
    "15072": {
      "op": "DUP7"
    },
    "15073": {
      "op": "DUP6"
    },
    "15074": {
      "op": "ADD"
    },
    "15075": {
      "op": "CALLDATALOAD"
    },
    "15076": {
      "op": "DUP3"
    },
    "15077": {
      "op": "SSTORE"
    },
    "15078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15080": {
      "op": "SWAP5"
    },
    "15081": {
      "op": "DUP6"
    },
    "15082": {
      "op": "ADD"
    },
    "15083": {
      "op": "SWAP5"
    },
    "15084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15086": {
      "op": "SWAP1"
    },
    "15087": {
      "op": "SWAP3"
    },
    "15088": {
      "op": "ADD"
    },
    "15089": {
      "op": "SWAP2"
    },
    "15090": {
      "op": "ADD"
    },
    "15091": {
      "op": "PUSH2",
      "value": "0x3AD7"
    },
    "15094": {
      "op": "JUMP"
    },
    "15095": {
      "op": "JUMPDEST"
    },
    "15096": {
      "op": "POP"
    },
    "15097": {
      "op": "DUP7"
    },
    "15098": {
      "op": "DUP3"
    },
    "15099": {
      "op": "LT"
    },
    "15100": {
      "op": "ISZERO"
    },
    "15101": {
      "op": "PUSH2",
      "value": "0x3B14"
    },
    "15104": {
      "op": "JUMPI"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15107": {
      "op": "NOT"
    },
    "15108": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15110": {
      "op": "DUP9"
    },
    "15111": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15113": {
      "op": "SHL"
    },
    "15114": {
      "op": "AND"
    },
    "15115": {
      "op": "SHR"
    },
    "15116": {
      "op": "NOT"
    },
    "15117": {
      "op": "DUP5"
    },
    "15118": {
      "op": "DUP8"
    },
    "15119": {
      "op": "ADD"
    },
    "15120": {
      "op": "CALLDATALOAD"
    },
    "15121": {
      "op": "AND"
    },
    "15122": {
      "op": "DUP2"
    },
    "15123": {
      "op": "SSTORE"
    },
    "15124": {
      "op": "JUMPDEST"
    },
    "15125": {
      "op": "POP"
    },
    "15126": {
      "op": "POP"
    },
    "15127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15129": {
      "op": "DUP6"
    },
    "15130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15132": {
      "op": "SHL"
    },
    "15133": {
      "op": "ADD"
    },
    "15134": {
      "op": "DUP4"
    },
    "15135": {
      "op": "SSTORE"
    },
    "15136": {
      "op": "POP"
    },
    "15137": {
      "op": "POP"
    },
    "15138": {
      "op": "POP"
    },
    "15139": {
      "op": "POP"
    },
    "15140": {
      "op": "POP"
    },
    "15141": {
      "jump": "o",
      "op": "JUMP"
    },
    "15142": {
      "op": "JUMPDEST"
    },
    "15143": {
      "op": "DUP4"
    },
    "15144": {
      "op": "DUP2"
    },
    "15145": {
      "op": "MSTORE"
    },
    "15146": {
      "op": "DUP3"
    },
    "15147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15149": {
      "op": "DUP3"
    },
    "15150": {
      "op": "ADD"
    },
    "15151": {
      "op": "MSTORE"
    },
    "15152": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15156": {
      "op": "DUP3"
    },
    "15157": {
      "op": "ADD"
    },
    "15158": {
      "op": "MSTORE"
    },
    "15159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15161": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15164": {
      "op": "DUP1"
    },
    "15165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15167": {
      "op": "DUP5"
    },
    "15168": {
      "op": "ADD"
    },
    "15169": {
      "op": "MSTORE"
    },
    "15170": {
      "op": "PUSH2",
      "value": "0x3B4F"
    },
    "15173": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15176": {
      "op": "DUP5"
    },
    "15177": {
      "op": "ADD"
    },
    "15178": {
      "op": "DUP6"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x37F4"
    },
    "15182": {
      "jump": "i",
      "op": "JUMP"
    },
    "15183": {
      "op": "JUMPDEST"
    },
    "15184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15186": {
      "op": "DUP6"
    },
    "15187": {
      "op": "ADD"
    },
    "15188": {
      "op": "SLOAD"
    },
    "15189": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15195": {
      "op": "AND"
    },
    "15196": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15202": {
      "op": "DUP2"
    },
    "15203": {
      "op": "AND"
    },
    "15204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15206": {
      "op": "DUP7"
    },
    "15207": {
      "op": "ADD"
    },
    "15208": {
      "op": "MSTORE"
    },
    "15209": {
      "op": "POP"
    },
    "15210": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15212": {
      "op": "DUP6"
    },
    "15213": {
      "op": "ADD"
    },
    "15214": {
      "op": "SLOAD"
    },
    "15215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15217": {
      "op": "DUP6"
    },
    "15218": {
      "op": "ADD"
    },
    "15219": {
      "op": "MSTORE"
    },
    "15220": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15222": {
      "op": "DUP6"
    },
    "15223": {
      "op": "ADD"
    },
    "15224": {
      "op": "SLOAD"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15227": {
      "op": "DUP6"
    },
    "15228": {
      "op": "ADD"
    },
    "15229": {
      "op": "MSTORE"
    },
    "15230": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15232": {
      "op": "DUP6"
    },
    "15233": {
      "op": "ADD"
    },
    "15234": {
      "op": "SLOAD"
    },
    "15235": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15237": {
      "op": "DUP2"
    },
    "15238": {
      "op": "AND"
    },
    "15239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15241": {
      "op": "DUP7"
    },
    "15242": {
      "op": "ADD"
    },
    "15243": {
      "op": "MSTORE"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "15246": {
      "op": "DUP2"
    },
    "15247": {
      "op": "SWAP1"
    },
    "15248": {
      "op": "SHR"
    },
    "15249": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15253": {
      "op": "AND"
    },
    "15254": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15257": {
      "op": "DUP7"
    },
    "15258": {
      "op": "ADD"
    },
    "15259": {
      "op": "MSTORE"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15262": {
      "op": "DUP2"
    },
    "15263": {
      "op": "SWAP1"
    },
    "15264": {
      "op": "SHR"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15269": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15271": {
      "op": "SHL"
    },
    "15272": {
      "op": "SUB"
    },
    "15273": {
      "op": "AND"
    },
    "15274": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15277": {
      "op": "DUP7"
    },
    "15278": {
      "op": "ADD"
    },
    "15279": {
      "op": "MSTORE"
    },
    "15280": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "15285": {
      "op": "DUP3"
    },
    "15286": {
      "op": "SWAP1"
    },
    "15287": {
      "op": "SHR"
    },
    "15288": {
      "op": "DUP2"
    },
    "15289": {
      "op": "AND"
    },
    "15290": {
      "op": "DUP5"
    },
    "15291": {
      "op": "DUP8"
    },
    "15292": {
      "op": "ADD"
    },
    "15293": {
      "op": "MSTORE"
    },
    "15294": {
      "op": "PUSH2",
      "value": "0x3BD3"
    },
    "15297": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15300": {
      "op": "DUP8"
    },
    "15301": {
      "op": "ADD"
    },
    "15302": {
      "op": "DUP3"
    },
    "15303": {
      "op": "DUP5"
    },
    "15304": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15306": {
      "op": "SHR"
    },
    "15307": {
      "op": "AND"
    },
    "15308": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15311": {
      "op": "AND"
    },
    "15312": {
      "op": "SWAP1"
    },
    "15313": {
      "op": "MSTORE"
    },
    "15314": {
      "op": "JUMP"
    },
    "15315": {
      "op": "JUMPDEST"
    },
    "15316": {
      "op": "POP"
    },
    "15317": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "15319": {
      "op": "DUP2"
    },
    "15320": {
      "op": "SWAP1"
    },
    "15321": {
      "op": "SHR"
    },
    "15322": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15328": {
      "op": "AND"
    },
    "15329": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15332": {
      "op": "DUP7"
    },
    "15333": {
      "op": "ADD"
    },
    "15334": {
      "op": "MSTORE"
    },
    "15335": {
      "op": "POP"
    },
    "15336": {
      "op": "SWAP7"
    },
    "15337": {
      "op": "SWAP6"
    },
    "15338": {
      "op": "POP"
    },
    "15339": {
      "op": "POP"
    },
    "15340": {
      "op": "POP"
    },
    "15341": {
      "op": "POP"
    },
    "15342": {
      "op": "POP"
    },
    "15343": {
      "op": "POP"
    },
    "15344": {
      "jump": "o",
      "op": "JUMP"
    },
    "15345": {
      "op": "JUMPDEST"
    },
    "15346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15352": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15354": {
      "op": "SHL"
    },
    "15355": {
      "op": "SUB"
    },
    "15356": {
      "op": "DUP1"
    },
    "15357": {
      "op": "DUP5"
    },
    "15358": {
      "op": "AND"
    },
    "15359": {
      "op": "DUP1"
    },
    "15360": {
      "op": "PUSH2",
      "value": "0x3C19"
    },
    "15363": {
      "op": "JUMPI"
    },
    "15364": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15371": {
      "op": "SHL"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15374": {
      "op": "MSTORE"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15377": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15379": {
      "op": "MSTORE"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15384": {
      "op": "REVERT"
    },
    "15385": {
      "op": "JUMPDEST"
    },
    "15386": {
      "op": "SWAP3"
    },
    "15387": {
      "op": "AND"
    },
    "15388": {
      "op": "SWAP2"
    },
    "15389": {
      "op": "SWAP1"
    },
    "15390": {
      "op": "SWAP2"
    },
    "15391": {
      "op": "DIV"
    },
    "15392": {
      "op": "SWAP3"
    },
    "15393": {
      "op": "SWAP2"
    },
    "15394": {
      "op": "POP"
    },
    "15395": {
      "op": "POP"
    },
    "15396": {
      "jump": "o",
      "op": "JUMP"
    },
    "15397": {
      "op": "JUMPDEST"
    },
    "15398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15400": {
      "op": "DUP1"
    },
    "15401": {
      "op": "DUP3"
    },
    "15402": {
      "op": "MSTORE"
    },
    "15403": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15405": {
      "op": "SWAP1"
    },
    "15406": {
      "op": "DUP3"
    },
    "15407": {
      "op": "ADD"
    },
    "15408": {
      "op": "MSTORE"
    },
    "15409": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "15430": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "15432": {
      "op": "SHL"
    },
    "15433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15435": {
      "op": "DUP3"
    },
    "15436": {
      "op": "ADD"
    },
    "15437": {
      "op": "MSTORE"
    },
    "15438": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15440": {
      "op": "ADD"
    },
    "15441": {
      "op": "SWAP1"
    },
    "15442": {
      "jump": "o",
      "op": "JUMP"
    },
    "15443": {
      "op": "JUMPDEST"
    },
    "15444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15446": {
      "op": "DUP3"
    },
    "15447": {
      "op": "MLOAD"
    },
    "15448": {
      "op": "PUSH2",
      "value": "0x3C65"
    },
    "15451": {
      "op": "DUP2"
    },
    "15452": {
      "op": "DUP5"
    },
    "15453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15455": {
      "op": "DUP8"
    },
    "15456": {
      "op": "ADD"
    },
    "15457": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "15460": {
      "jump": "i",
      "op": "JUMP"
    },
    "15461": {
      "op": "JUMPDEST"
    },
    "15462": {
      "op": "SWAP2"
    },
    "15463": {
      "op": "SWAP1"
    },
    "15464": {
      "op": "SWAP2"
    },
    "15465": {
      "op": "ADD"
    },
    "15466": {
      "op": "SWAP3"
    },
    "15467": {
      "op": "SWAP2"
    },
    "15468": {
      "op": "POP"
    },
    "15469": {
      "op": "POP"
    },
    "15470": {
      "jump": "o",
      "op": "JUMP"
    },
    "15471": {
      "op": "JUMPDEST"
    },
    "15472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15474": {
      "op": "DUP1"
    },
    "15475": {
      "op": "DUP4"
    },
    "15476": {
      "op": "SLOAD"
    },
    "15477": {
      "op": "PUSH2",
      "value": "0x3C7D"
    },
    "15480": {
      "op": "DUP2"
    },
    "15481": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "15484": {
      "jump": "i",
      "op": "JUMP"
    },
    "15485": {
      "op": "JUMPDEST"
    },
    "15486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15488": {
      "op": "DUP3"
    },
    "15489": {
      "op": "DUP2"
    },
    "15490": {
      "op": "AND"
    },
    "15491": {
      "op": "DUP1"
    },
    "15492": {
      "op": "ISZERO"
    },
    "15493": {
      "op": "PUSH2",
      "value": "0x3C95"
    },
    "15496": {
      "op": "JUMPI"
    },
    "15497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15499": {
      "op": "DUP2"
    },
    "15500": {
      "op": "EQ"
    },
    "15501": {
      "op": "PUSH2",
      "value": "0x3CAA"
    },
    "15504": {
      "op": "JUMPI"
    },
    "15505": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "15508": {
      "op": "JUMP"
    },
    "15509": {
      "op": "JUMPDEST"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15512": {
      "op": "NOT"
    },
    "15513": {
      "op": "DUP5"
    },
    "15514": {
      "op": "AND"
    },
    "15515": {
      "op": "DUP8"
    },
    "15516": {
      "op": "MSTORE"
    },
    "15517": {
      "op": "DUP3"
    },
    "15518": {
      "op": "ISZERO"
    },
    "15519": {
      "op": "ISZERO"
    },
    "15520": {
      "op": "DUP4"
    },
    "15521": {
      "op": "MUL"
    },
    "15522": {
      "op": "DUP8"
    },
    "15523": {
      "op": "ADD"
    },
    "15524": {
      "op": "SWAP5"
    },
    "15525": {
      "op": "POP"
    },
    "15526": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "15529": {
      "op": "JUMP"
    },
    "15530": {
      "op": "JUMPDEST"
    },
    "15531": {
      "op": "DUP8"
    },
    "15532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15534": {
      "op": "MSTORE"
    },
    "15535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15537": {
      "op": "DUP1"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15540": {
      "op": "KECCAK256"
    },
    "15541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15543": {
      "op": "JUMPDEST"
    },
    "15544": {
      "op": "DUP6"
    },
    "15545": {
      "op": "DUP2"
    },
    "15546": {
      "op": "LT"
    },
    "15547": {
      "op": "ISZERO"
    },
    "15548": {
      "op": "PUSH2",
      "value": "0x3CD0"
    },
    "15551": {
      "op": "JUMPI"
    },
    "15552": {
      "op": "DUP2"
    },
    "15553": {
      "op": "SLOAD"
    },
    "15554": {
      "op": "DUP11"
    },
    "15555": {
      "op": "DUP3"
    },
    "15556": {
      "op": "ADD"
    },
    "15557": {
      "op": "MSTORE"
    },
    "15558": {
      "op": "SWAP1"
    },
    "15559": {
      "op": "DUP5"
    },
    "15560": {
      "op": "ADD"
    },
    "15561": {
      "op": "SWAP1"
    },
    "15562": {
      "op": "DUP3"
    },
    "15563": {
      "op": "ADD"
    },
    "15564": {
      "op": "PUSH2",
      "value": "0x3CB7"
    },
    "15567": {
      "op": "JUMP"
    },
    "15568": {
      "op": "JUMPDEST"
    },
    "15569": {
      "op": "POP"
    },
    "15570": {
      "op": "POP"
    },
    "15571": {
      "op": "POP"
    },
    "15572": {
      "op": "SWAP6"
    },
    "15573": {
      "op": "SWAP1"
    },
    "15574": {
      "op": "SWAP2"
    },
    "15575": {
      "op": "ADD"
    },
    "15576": {
      "op": "SWAP7"
    },
    "15577": {
      "op": "SWAP6"
    },
    "15578": {
      "op": "POP"
    },
    "15579": {
      "op": "POP"
    },
    "15580": {
      "op": "POP"
    },
    "15581": {
      "op": "POP"
    },
    "15582": {
      "op": "POP"
    },
    "15583": {
      "op": "POP"
    },
    "15584": {
      "jump": "o",
      "op": "JUMP"
    },
    "15585": {
      "op": "JUMPDEST"
    },
    "15586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15588": {
      "op": "DUP1"
    },
    "15589": {
      "op": "DUP3"
    },
    "15590": {
      "op": "SLT"
    },
    "15591": {
      "op": "DUP1"
    },
    "15592": {
      "op": "ISZERO"
    },
    "15593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15597": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15599": {
      "op": "SHL"
    },
    "15600": {
      "op": "SUB"
    },
    "15601": {
      "op": "DUP5"
    },
    "15602": {
      "op": "SWAP1"
    },
    "15603": {
      "op": "SUB"
    },
    "15604": {
      "op": "DUP6"
    },
    "15605": {
      "op": "SGT"
    },
    "15606": {
      "op": "AND"
    },
    "15607": {
      "op": "ISZERO"
    },
    "15608": {
      "op": "PUSH2",
      "value": "0x3D03"
    },
    "15611": {
      "op": "JUMPI"
    },
    "15612": {
      "op": "PUSH2",
      "value": "0x3D03"
    },
    "15615": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "15618": {
      "jump": "i",
      "op": "JUMP"
    },
    "15619": {
      "op": "JUMPDEST"
    },
    "15620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15622": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15624": {
      "op": "SHL"
    },
    "15625": {
      "op": "DUP4"
    },
    "15626": {
      "op": "SWAP1"
    },
    "15627": {
      "op": "SUB"
    },
    "15628": {
      "op": "DUP5"
    },
    "15629": {
      "op": "SLT"
    },
    "15630": {
      "op": "DUP2"
    },
    "15631": {
      "op": "AND"
    },
    "15632": {
      "op": "ISZERO"
    },
    "15633": {
      "op": "PUSH2",
      "value": "0x3D1C"
    },
    "15636": {
      "op": "JUMPI"
    },
    "15637": {
      "op": "PUSH2",
      "value": "0x3D1C"
    },
    "15640": {
      "op": "PUSH2",
      "value": "0x3992"
    },
    "15643": {
      "jump": "i",
      "op": "JUMP"
    },
    "15644": {
      "op": "JUMPDEST"
    },
    "15645": {
      "op": "POP"
    },
    "15646": {
      "op": "POP"
    },
    "15647": {
      "op": "ADD"
    },
    "15648": {
      "op": "SWAP1"
    },
    "15649": {
      "jump": "o",
      "op": "JUMP"
    },
    "15650": {
      "op": "JUMPDEST"
    },
    "15651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15653": {
      "op": "DUP2"
    },
    "15654": {
      "op": "MSTORE"
    },
    "15655": {
      "op": "DUP8"
    },
    "15656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15658": {
      "op": "DUP3"
    },
    "15659": {
      "op": "ADD"
    },
    "15660": {
      "op": "MSTORE"
    },
    "15661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15663": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15666": {
      "op": "DUP10"
    },
    "15667": {
      "op": "DUP12"
    },
    "15668": {
      "op": "DUP3"
    },
    "15669": {
      "op": "DUP6"
    },
    "15670": {
      "op": "ADD"
    },
    "15671": {
      "op": "CALLDATACOPY"
    },
    "15672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15674": {
      "op": "DUP11"
    },
    "15675": {
      "op": "DUP5"
    },
    "15676": {
      "op": "ADD"
    },
    "15677": {
      "op": "DUP3"
    },
    "15678": {
      "op": "ADD"
    },
    "15679": {
      "op": "MSTORE"
    },
    "15680": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15686": {
      "op": "SWAP9"
    },
    "15687": {
      "op": "DUP10"
    },
    "15688": {
      "op": "AND"
    },
    "15689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15691": {
      "op": "DUP5"
    },
    "15692": {
      "op": "ADD"
    },
    "15693": {
      "op": "MSTORE"
    },
    "15694": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15696": {
      "op": "SWAP8"
    },
    "15697": {
      "op": "SWAP1"
    },
    "15698": {
      "op": "SWAP8"
    },
    "15699": {
      "op": "AND"
    },
    "15700": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15702": {
      "op": "DUP4"
    },
    "15703": {
      "op": "ADD"
    },
    "15704": {
      "op": "MSTORE"
    },
    "15705": {
      "op": "POP"
    },
    "15706": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15710": {
      "op": "SWAP5"
    },
    "15711": {
      "op": "SWAP1"
    },
    "15712": {
      "op": "SWAP5"
    },
    "15713": {
      "op": "AND"
    },
    "15714": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15716": {
      "op": "DUP6"
    },
    "15717": {
      "op": "ADD"
    },
    "15718": {
      "op": "MSTORE"
    },
    "15719": {
      "op": "SWAP2"
    },
    "15720": {
      "op": "DUP6"
    },
    "15721": {
      "op": "AND"
    },
    "15722": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15724": {
      "op": "DUP5"
    },
    "15725": {
      "op": "ADD"
    },
    "15726": {
      "op": "MSTORE"
    },
    "15727": {
      "op": "SWAP1"
    },
    "15728": {
      "op": "SWAP4"
    },
    "15729": {
      "op": "AND"
    },
    "15730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15732": {
      "op": "DUP3"
    },
    "15733": {
      "op": "ADD"
    },
    "15734": {
      "op": "MSTORE"
    },
    "15735": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15738": {
      "op": "SWAP1"
    },
    "15739": {
      "op": "SWAP3"
    },
    "15740": {
      "op": "AND"
    },
    "15741": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15743": {
      "op": "DUP4"
    },
    "15744": {
      "op": "ADD"
    },
    "15745": {
      "op": "MSTORE"
    },
    "15746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15748": {
      "op": "SWAP1"
    },
    "15749": {
      "op": "SWAP3"
    },
    "15750": {
      "op": "ADD"
    },
    "15751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15753": {
      "op": "NOT"
    },
    "15754": {
      "op": "AND"
    },
    "15755": {
      "op": "ADD"
    },
    "15756": {
      "op": "ADD"
    },
    "15757": {
      "op": "SWAP2"
    },
    "15758": {
      "op": "SWAP1"
    },
    "15759": {
      "op": "POP"
    },
    "15760": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7ed85d24055f48535f31f90a5df704f9fe93778c",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            myReturn[0].NFTID=999;\n//            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:21534:2:-:0;;;2921:5;2894:32;;2982:6;2946:42;;11433:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:10;1778:7;:22;889:23:9;679:10:3;889:9:9;:23::i;:::-;11512:10:2;:26;;-1:-1:-1;;;;;;11512:26:2;-1:-1:-1;;;;;11512:26:2;;;;;;;;;;743:21534;;2101:173:9;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;743:21534:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}