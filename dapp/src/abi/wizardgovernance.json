{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksSubmitted",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "12": "contracts/helpers/Ownable.sol",
    "13": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "22": "contracts/libraries/Strings.sol",
    "23": "contracts/wizards.sol",
    "6": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        6464
      ],
      "Context": [
        3794
      ],
      "DoubleEndedQueue": [
        3773
      ],
      "ERC165": [
        3818
      ],
      "ERC2981Collection": [
        3902
      ],
      "ERC721": [
        4721
      ],
      "ERC721A": [
        5792
      ],
      "ERC721Enumerable": [
        7035
      ],
      "Governance": [
        1156
      ],
      "IERC165": [
        5948
      ],
      "IERC20": [
        6021
      ],
      "IERC2981": [
        8904
      ],
      "IERC721": [
        6137
      ],
      "IERC721Enumerable": [
        6168
      ],
      "IERC721Metadata": [
        8931
      ],
      "IERC721Receiver": [
        8949
      ],
      "Ownable": [
        5896
      ],
      "ReentrancyGuard": [
        5936
      ],
      "Strings": [
        6667
      ],
      "Wizards": [
        3432
      ]
    },
    "id": 1157,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 3433,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 6022,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 5949,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 6138,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 6169,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 5793,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 4722,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 3819,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 5897,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 3795,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 5937,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 3903,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 6668,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 6465,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1157,
        "sourceUnit": 3774,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3773,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5936,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5896,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1156,
        "linearizedBaseContracts": [
          1156,
          5896,
          3794,
          5936
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$3432",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3432,
                "src": "829:7:2"
              },
              "referencedDeclaration": 3432,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$3432",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "lastActiveTimestamp",
                "nameLocation": "1127:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1098:48:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:28:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1217:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1210:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1210:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1261:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1256:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1256:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1284:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1277:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1277:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1339:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1332:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1332:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1368:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1361:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1361:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1156,
            "src": "1072:357:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 66,
            "members": [
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1489:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1482:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 46,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1482:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1535:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1528:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 48,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1595:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1587:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 50,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1587:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1649:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1641:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 52,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1641:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1713:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1707:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1707:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1761:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1754:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1754:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1933:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1926:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1926:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "1960:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "1953:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1953:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2011:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "2004:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2004:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2062:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 66,
                "src": "2055:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2055:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1467:4:2",
            "nodeType": "StructDefinition",
            "scope": 1156,
            "src": "1460:676:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 81,
            "members": [
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2175:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2168:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 67,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2168:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2200:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2193:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2193:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2235:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2225:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 71,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 73,
                  "length": {
                    "hexValue": "38",
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2225:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2257:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2250:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2250:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2284:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2277:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 77,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2277:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2313:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "2306:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2306:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2149:8:2",
            "nodeType": "StructDefinition",
            "scope": 1156,
            "src": "2142:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 85,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2358:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2340:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 83,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 82,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "2340:8:2"
                },
                "referencedDeclaration": 45,
                "src": "2340:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 84,
              "nodeType": "ArrayTypeName",
              "src": "2340:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "379d94cc",
            "id": 88,
            "mutability": "mutable",
            "name": "tasksSubmitted",
            "nameLocation": "2514:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2477:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 87,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3451,
                "src": "2477:29:2"
              },
              "referencedDeclaration": 3451,
              "src": "2477:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 93,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2681:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2644:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 92,
              "keyType": {
                "id": 89,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2653:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2644:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 91,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 90,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81,
                  "src": "2664:8:2"
                },
                "referencedDeclaration": 81,
                "src": "2664:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 95,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2704:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2696:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 94,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2696:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 100,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2758:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2725:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 99,
              "keyType": {
                "id": 96,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2734:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2725:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 98,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 97,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "2745:4:2"
                },
                "referencedDeclaration": 66,
                "src": "2745:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 102,
            "mutability": "mutable",
            "name": "tasksAttempted",
            "nameLocation": "2777:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2769:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 101,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2769:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 107,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2832:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2824:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 103,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2824:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 104,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2851:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 105,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2854:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2851:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 110,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2884:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1156,
            "src": "2876:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2876:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 109,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2912:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee",
            "id": 116,
            "name": "VerificationAssigned",
            "nameLocation": "2941:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "2970:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "2962:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "2988:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "2980:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2980:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2961:34:2"
            },
            "src": "2935:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 124,
            "name": "VerificationFailed",
            "nameLocation": "3007:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3034:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "3026:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3059:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "3051:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3085:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "3077:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3077:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3025:67:2"
            },
            "src": "3001:92:2"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "3793:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 133,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "3811:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 134,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "3824:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3811:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3840:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3803:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:56:2"
                },
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "3885:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 179,
                      "src": "3869:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 141,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3869:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 142,
                        "nodeType": "ArrayTypeName",
                        "src": "3869:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 147,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "3910:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 149,
                          "indexExpression": {
                            "id": 148,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "3920:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3910:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$81_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70,
                        "src": "3910:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3897:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 144,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3901:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 145,
                        "nodeType": "ArrayTypeName",
                        "src": "3901:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:79:2"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "4002:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 164,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "4016:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 166,
                            "indexExpression": {
                              "id": 165,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "4026:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4016:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 167,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "4031:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 169,
                                "indexExpression": {
                                  "id": 168,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 126,
                                  "src": "4041:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4031:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$81_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74,
                              "src": "4031:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 172,
                            "indexExpression": {
                              "id": 171,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "4059:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4031:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4016:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "4016:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "3977:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 158,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "3980:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3980:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3977:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "initializationExpression": {
                    "assignments": [
                      154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3970:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "3962:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3974:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3962:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3998:3:2",
                      "subExpression": {
                        "id": 161,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "3998:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 163,
                    "nodeType": "ExpressionStatement",
                    "src": "3998:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3958:114:2"
                },
                {
                  "expression": {
                    "id": 177,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "4088:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 178,
                  "nodeType": "Return",
                  "src": "4081:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "3724:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "3741:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "3733:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:20:2"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "3776:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "3776:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 129,
                    "nodeType": "ArrayTypeName",
                    "src": "3776:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3775:17:2"
            },
            "scope": 1156,
            "src": "3715:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "4187:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 188,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "4205:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 189,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "4218:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4205:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4234:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4197:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "4197:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 195,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4272:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4272:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 197,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "4290:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 199,
                            "indexExpression": {
                              "id": 198,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "4300:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4290:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$81_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "4290:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "4272:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4326:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4263:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:85:2"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "4476:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "4468:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4468:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4468:19:2"
                },
                {
                  "assignments": [
                    209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "4505:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "4497:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4497:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4497:25:2"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "4540:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "4532:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4532:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4544:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4532:13:2"
                },
                {
                  "body": {
                    "id": 274,
                    "nodeType": "Block",
                    "src": "4618:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 228,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "4671:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 230,
                                "indexExpression": {
                                  "id": 229,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 182,
                                  "src": "4681:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4671:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$81_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74,
                              "src": "4671:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 233,
                            "indexExpression": {
                              "id": 232,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "4699:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4671:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 234,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "4704:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4671:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 259,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 93,
                                    "src": "4900:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 261,
                                  "indexExpression": {
                                    "id": 260,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 182,
                                    "src": "4910:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4900:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$81_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 262,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 74,
                                "src": "4900:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 264,
                              "indexExpression": {
                                "id": 263,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "4928:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4900:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 265,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "4934:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4900:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 272,
                          "nodeType": "IfStatement",
                          "src": "4897:93:2",
                          "trueBody": {
                            "id": 271,
                            "nodeType": "Block",
                            "src": "4952:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 267,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 212,
                                    "src": "4970:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4974:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "4970:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 270,
                                "nodeType": "ExpressionStatement",
                                "src": "4970:5:2"
                              }
                            ]
                          }
                        },
                        "id": 273,
                        "nodeType": "IfStatement",
                        "src": "4668:322:2",
                        "trueBody": {
                          "id": 258,
                          "nodeType": "Block",
                          "src": "4723:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 236,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 209,
                                  "src": "4741:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 237,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 93,
                                        "src": "4761:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 239,
                                      "indexExpression": {
                                        "id": 238,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 182,
                                        "src": "4771:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4761:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$81_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 240,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 74,
                                    "src": "4761:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 242,
                                  "indexExpression": {
                                    "id": 241,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 216,
                                    "src": "4789:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4761:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "4741:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 244,
                              "nodeType": "ExpressionStatement",
                              "src": "4741:50:2"
                            },
                            {
                              "expression": {
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 245,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "4809:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 246,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "4823:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4809:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 248,
                              "nodeType": "ExpressionStatement",
                              "src": "4809:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 249,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 212,
                                  "src": "4846:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4851:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4846:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 257,
                              "nodeType": "IfStatement",
                              "src": "4842:23:2",
                              "trueBody": {
                                "id": 256,
                                "nodeType": "Block",
                                "src": "4854:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 252,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 212,
                                        "src": "4856:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4862:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4856:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 255,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4856:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 219,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "4572:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 220,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "4575:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 222,
                        "indexExpression": {
                          "id": 221,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "4585:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4575:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "4575:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4572:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "initializationExpression": {
                    "assignments": [
                      216
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4567:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "4559:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4559:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 218,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4569:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4559:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4614:3:2",
                      "subExpression": {
                        "id": 225,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "4614:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 227,
                    "nodeType": "ExpressionStatement",
                    "src": "4614:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4555:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 277,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "5017:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5022:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5017:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5025:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5009:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:35:2"
                },
                {
                  "expression": {
                    "id": 283,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 206,
                    "src": "5061:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 284,
                  "nodeType": "Return",
                  "src": "5054:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4119:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4142:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "4134:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4133:20:2"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "4177:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4176:10:2"
            },
            "scope": 1156,
            "src": "4110:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "5161:1072:2",
              "statements": [
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "5179:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "5171:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5171:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5171:13:2"
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "5232:437:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 303,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "5249:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 305,
                                "indexExpression": {
                                  "id": 304,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 296,
                                  "src": "5259:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5249:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$45_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastActiveTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "5249:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "expression": {
                                "id": 307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5282:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5282:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5249:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 310,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5296:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5296:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5249:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 337,
                          "nodeType": "Block",
                          "src": "5482:149:2",
                          "statements": [
                            {
                              "assignments": [
                                322
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 322,
                                  "mutability": "mutable",
                                  "name": "myReturn",
                                  "nameLocation": "5516:8:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 337,
                                  "src": "5500:24:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 320,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5500:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 321,
                                    "nodeType": "ArrayTypeName",
                                    "src": "5500:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 328,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5539:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "5526:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 323,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5530:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 324,
                                    "nodeType": "ArrayTypeName",
                                    "src": "5530:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  }
                                },
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5526:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5500:41:2"
                            },
                            {
                              "expression": {
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 329,
                                    "name": "myReturn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 322,
                                    "src": "5559:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5568:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5559:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "4e6f206c75636b2e",
                                  "id": 332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5573:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c69ac3f68cfe1a47905034708a786a2148d121883dbf9372da36b09cc276002a",
                                    "typeString": "literal_string \"No luck.\""
                                  },
                                  "value": "No luck."
                                },
                                "src": "5559:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 334,
                              "nodeType": "ExpressionStatement",
                              "src": "5559:24:2"
                            },
                            {
                              "expression": {
                                "id": 335,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 322,
                                "src": "5608:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "functionReturnParameters": 291,
                              "id": 336,
                              "nodeType": "Return",
                              "src": "5601:15:2"
                            }
                          ]
                        },
                        "id": 338,
                        "nodeType": "IfStatement",
                        "src": "5246:385:2",
                        "trueBody": {
                          "id": 317,
                          "nodeType": "Block",
                          "src": "5312:152:2",
                          "statements": [
                            {
                              "id": 316,
                              "nodeType": "UncheckedBlock",
                              "src": "5431:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "5441:7:2",
                                    "subExpression": {
                                      "id": 313,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 293,
                                      "src": "5443:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 315,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5441:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 342,
                        "nodeType": "UncheckedBlock",
                        "src": "5644:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5654:3:2",
                              "subExpression": {
                                "id": 339,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "5656:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 341,
                            "nodeType": "ExpressionStatement",
                            "src": "5654:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "5211:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 300,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "5214:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5214:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5211:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 344,
                  "initializationExpression": {
                    "assignments": [
                      296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5206:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "5198:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5198:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5208:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5198:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5194:475:2"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "5695:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "5679:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 347,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5679:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 348,
                        "nodeType": "ArrayTypeName",
                        "src": "5679:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 355,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 353,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "5718:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5705:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 350,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5709:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 351,
                        "nodeType": "ArrayTypeName",
                        "src": "5709:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5705:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5679:45:2"
                },
                {
                  "assignments": [
                    357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 357,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "5742:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 423,
                      "src": "5734:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5734:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 359,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5752:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5734:19:2"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "5801:402:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 368,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85,
                                      "src": "5818:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 370,
                                    "indexExpression": {
                                      "id": 369,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 361,
                                      "src": "5828:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5818:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$45_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastActiveTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "5818:32:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 374,
                                "indexExpression": {
                                  "expression": {
                                    "id": 372,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5851:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5851:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5818:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 375,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5865:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5865:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5818:62:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 378,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "5884:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 380,
                                  "indexExpression": {
                                    "id": 379,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "5894:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5884:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$45_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "begTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42,
                                "src": "5884:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 382,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5912:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5912:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5884:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5818:109:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 386,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "5931:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "id": 387,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "5941:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5931:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$45_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44,
                              "src": "5931:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 390,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5959:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5959:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5931:43:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5818:156:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 414,
                        "nodeType": "IfStatement",
                        "src": "5815:350:2",
                        "trueBody": {
                          "id": 413,
                          "nodeType": "Block",
                          "src": "5976:189:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 394,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 349,
                                    "src": "5994:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 396,
                                  "indexExpression": {
                                    "id": 395,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "6002:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5994:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 397,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 85,
                                      "src": "6007:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 399,
                                    "indexExpression": {
                                      "id": 398,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 361,
                                      "src": "6017:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6007:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$45_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 400,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "6007:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "5994:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 402,
                              "nodeType": "ExpressionStatement",
                              "src": "5994:34:2"
                            },
                            {
                              "id": 406,
                              "nodeType": "UncheckedBlock",
                              "src": "6046:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "6056:9:2",
                                    "subExpression": {
                                      "id": 403,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 357,
                                      "src": "6058:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 405,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6056:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 407,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 357,
                                  "src": "6087:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 408,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "6098:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6087:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 412,
                              "nodeType": "IfStatement",
                              "src": "6084:67:2",
                              "trueBody": {
                                "id": 411,
                                "nodeType": "Block",
                                "src": "6105:46:2",
                                "statements": [
                                  {
                                    "id": 410,
                                    "nodeType": "Break",
                                    "src": "6127:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 418,
                        "nodeType": "UncheckedBlock",
                        "src": "6178:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6188:3:2",
                              "subExpression": {
                                "id": 415,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "6190:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 417,
                            "nodeType": "ExpressionStatement",
                            "src": "6188:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 364,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "5780:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 365,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "5783:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5783:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5780:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 420,
                  "initializationExpression": {
                    "assignments": [
                      361
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5775:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "5767:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5767:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 363,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5777:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5767:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5763:440:2"
                },
                {
                  "expression": {
                    "id": 421,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 349,
                    "src": "6219:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 422,
                  "nodeType": "Return",
                  "src": "6212:14:2"
                }
              ]
            },
            "functionSelector": "551bbe0b",
            "id": 424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "5095:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:2:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "5144:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 288,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5144:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 289,
                    "nodeType": "ArrayTypeName",
                    "src": "5144:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5143:17:2"
            },
            "scope": 1156,
            "src": "5086:1147:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "6400:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 431,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6410:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3432",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 433,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "6431:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 432,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3432,
                        "src": "6423:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$3432_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6423:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3432",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "6410:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$3432",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "6410:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 429,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 428,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5839,
                  "src": "6390:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6390:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "6352:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "6374:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "6366:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6366:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6365:15:2"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6400:0:2"
            },
            "scope": 1156,
            "src": "6343:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "6797:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6851:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3432",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 446,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "6872:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 445,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3432,
                        "src": "6864:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$3432_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6864:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3432",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "6851:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$3432",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "6851:26:2"
                }
              ]
            },
            "documentation": {
              "id": 439,
              "nodeType": "StructuredDocumentation",
              "src": "6678:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 451,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "6792:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "6784:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6784:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6783:14:2"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6797:0:2"
            },
            "scope": 1156,
            "src": "6772:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "7012:7:2",
              "statements": []
            },
            "id": 455,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:2:2"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7012:0:2"
            },
            "scope": 1156,
            "src": "6985:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "7109:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 467,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7127:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 468,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "7140:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7127:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7156:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7119:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7119:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "7119:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 476,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "7212:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 474,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "7193:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3432",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4049,
                            "src": "7193:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7193:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 478,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7220:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7220:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7193:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7232:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7185:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7185:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 485,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "7269:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "id": 486,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "7288:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7269:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "id": 488,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "7300:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7269:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7308:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7269:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7311:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7261:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7261:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "7261:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 496,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7345:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7352:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7345:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7357:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 500,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "7366:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 502,
                              "indexExpression": {
                                "id": 501,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 457,
                                "src": "7376:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7366:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$81_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "7366:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "7357:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7345:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7337:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7337:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "7337:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 509,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7422:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7422:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 511,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "7440:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 513,
                            "indexExpression": {
                              "id": 512,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "7450:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7440:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$81_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "7440:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "7422:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7414:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7414:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "7414:61:2"
                },
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 518,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "7485:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 521,
                        "indexExpression": {
                          "id": 519,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7504:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7485:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 522,
                      "indexExpression": {
                        "id": 520,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "7516:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7485:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 523,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "7525:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7533:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7525:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7485:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "7485:49:2"
                },
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 528,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "7577:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 530,
                          "indexExpression": {
                            "id": 529,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "7587:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7577:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$81_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "7577:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 533,
                      "indexExpression": {
                        "id": 532,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "7605:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7577:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7615:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7577:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "7577:39:2"
                },
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 537,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "7645:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 539,
                        "indexExpression": {
                          "id": 538,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7655:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7645:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "7645:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7681:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7645:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "7645:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 464,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 463,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1146,
                  "src": "7098:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7098:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "7034:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "7047:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7039:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7039:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "7067:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7059:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "7082:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7074:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7074:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7038:50:2"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7109:0:2"
            },
            "scope": 1156,
            "src": "7025:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "7874:548:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 559,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "7892:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7911:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7892:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 562,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "7916:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7935:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "7916:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7892:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7940:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7884:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7884:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "7884:84:2"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "7978:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7996:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7978:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "7978:19:2"
                },
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "8045:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 614,
                      "src": "8028:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 574,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 573,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "8028:8:2"
                        },
                        "referencedDeclaration": 81,
                        "src": "8028:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 579,
                  "initialValue": {
                    "baseExpression": {
                      "id": 576,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "8058:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$81_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 578,
                    "indexExpression": {
                      "id": 577,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "8068:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8058:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$81_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8028:55:2"
                },
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 580,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8097:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "8097:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 583,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "8123:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8097:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "8097:39:2"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 586,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8150:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "8150:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 589,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "8176:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8150:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "8150:39:2"
                },
                {
                  "expression": {
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 592,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8203:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "8203:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 595,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "8232:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "8203:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "8203:45:2"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 598,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "8262:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$81_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "8262:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 601,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "8284:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "8262:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 605,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 547,
                        "src": "8320:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 608,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "8338:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8331:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 606,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "8331:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8331:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 610,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "8355:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 611,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "8370:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "id": 604,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "8304:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint40_$_t_uint40_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint40,uint40)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8304:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "8304:80:2"
                }
              ]
            },
            "functionSelector": "64d924ef",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 556,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 555,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "7864:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7864:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "7744:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "7775:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "7759:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7759:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "7793:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "7786:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7786:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "7818:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "7811:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7811:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "7840:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "7833:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7833:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7758:96:2"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7874:0:2"
            },
            "scope": 1156,
            "src": "7735:687:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "8542:76:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "8568:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8579:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 629,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "8582:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 630,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "8597:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "id": 626,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "8552:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint40_$_t_uint40_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint40,uint40)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8552:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "8552:59:2"
                }
              ]
            },
            "functionSelector": "7c7c7e5a",
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 623,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "8532:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8532:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "8437:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "8468:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "8452:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8452:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "8486:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "8479:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8479:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "8508:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "8501:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8501:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8451:71:2"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8542:0:2"
            },
            "scope": 1156,
            "src": "8428:190:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "8749:427:2",
              "statements": [
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "8767:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 692,
                      "src": "8759:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8759:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "expression": {
                      "id": 647,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "8785:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8785:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8759:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 650,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "8811:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8811:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$45_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$45_storage_$bound_to$_t_array$_t_struct$_TaskType_$45_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8811:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$45_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "8811:16:2"
                },
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "8854:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 692,
                      "src": "8837:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 656,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 655,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45,
                          "src": "8837:8:2"
                        },
                        "referencedDeclaration": 45,
                        "src": "8837:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 661,
                  "initialValue": {
                    "baseExpression": {
                      "id": 658,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "8868:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$45_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 660,
                    "indexExpression": {
                      "id": 659,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "8878:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8868:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$45_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8837:57:2"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 662,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "8908:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "8908:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 665,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "8930:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "8908:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "8908:31:2"
                },
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 668,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "8953:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "8953:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8974:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8953:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "8953:26:2"
                },
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 674,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "8993:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "8993:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 677,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "9018:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8993:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "8993:36:2"
                },
                {
                  "expression": {
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 680,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "9043:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "9043:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 683,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "9070:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "9043:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "9043:40:2"
                },
                {
                  "expression": {
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 686,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "9097:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$45_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "9097:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 689,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "9124:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "9097:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "9097:40:2"
                }
              ]
            },
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "8633:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "8665:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "8649:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "8683:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "8676:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8676:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "8703:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "8696:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8696:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "8725:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "8718:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8718:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8648:91:2"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8749:0:2"
            },
            "scope": 1156,
            "src": "8624:552:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "9611:1600:2",
              "statements": [
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "9629:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "9621:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "9675:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 700,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3773,
                        "src": "9651:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3773_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3756,
                      "src": "9651:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$3451_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9651:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9621:69:2"
                },
                {
                  "assignments": [
                    707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 707,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "9712:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "9700:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 706,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 705,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66,
                          "src": "9700:4:2"
                        },
                        "referencedDeclaration": 66,
                        "src": "9700:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9700:18:2"
                },
                {
                  "assignments": [
                    710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "9736:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "9728:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 711,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9728:14:2"
                },
                {
                  "body": {
                    "id": 787,
                    "nodeType": "Block",
                    "src": "9880:1242:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 719,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "9898:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 720,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "9898:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 721,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9937:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9937:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9898:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 724,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "9956:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49,
                                "src": "9956:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 726,
                                "name": "_wizID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "9972:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9956:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9898:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 729,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "9982:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "9982:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 731,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10001:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9982:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9898:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 786,
                        "nodeType": "IfStatement",
                        "src": "9894:1218:2",
                        "trueBody": {
                          "id": 785,
                          "nodeType": "Block",
                          "src": "10008:1104:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 734,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "10153:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 739,
                                          "name": "tasksSubmitted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 88,
                                          "src": "10190:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 740,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 713,
                                          "src": "10206:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 737,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3773,
                                          "src": "10170:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3773_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3710,
                                        "src": "10170:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$3451_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 741,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10170:38:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10162:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 735,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10162:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10162:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10153:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 744,
                              "nodeType": "ExpressionStatement",
                              "src": "10153:56:2"
                            },
                            {
                              "expression": {
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 745,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "10227:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 746,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "10236:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 748,
                                  "indexExpression": {
                                    "id": 747,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 710,
                                    "src": "10242:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10236:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "src": "10227:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 750,
                              "nodeType": "ExpressionStatement",
                              "src": "10227:22:2"
                            },
                            {
                              "expression": {
                                "id": 758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 751,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "10883:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 753,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61,
                                  "src": "10883:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 756,
                                      "name": "_wizID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 695,
                                      "src": "10910:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10903:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 754,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10903:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10903:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "10883:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 759,
                              "nodeType": "ExpressionStatement",
                              "src": "10883:34:2"
                            },
                            {
                              "expression": {
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 760,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "10935:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 762,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "10935:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 768,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 765,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "10981:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "10981:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 767,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 107,
                                        "src": "10999:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10981:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10974:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 763,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10974:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10974:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "10935:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 771,
                              "nodeType": "ExpressionStatement",
                              "src": "10935:81:2"
                            },
                            {
                              "expression": {
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 772,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "11034:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 781,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 777,
                                            "name": "tasksSubmitted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88,
                                            "src": "11068:14:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            }
                                          },
                                          {
                                            "id": 778,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 713,
                                            "src": "11084:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$3451_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 775,
                                            "name": "DoubleEndedQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3773,
                                            "src": "11048:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3773_$",
                                              "typeString": "type(library DoubleEndedQueue)"
                                            }
                                          },
                                          "id": 776,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "at",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3710,
                                          "src": "11048:19:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$3451_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                            "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                          }
                                        },
                                        "id": 779,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11048:38:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11040:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 773,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11040:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11040:47:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11034:54:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 782,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "11091:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "11034:63:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 784,
                              "nodeType": "ExpressionStatement",
                              "src": "11034:63:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 716,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "9854:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 717,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "9858:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9854:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 788,
                  "initializationExpression": {
                    "assignments": [
                      713
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 713,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9848:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "9840:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9840:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 715,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9851:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9840:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9836:1286:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 790,
                        "name": "_wizID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "11189:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 791,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "11197:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 789,
                      "name": "VerificationAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "11168:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "EmitStatement",
                  "src": "11163:41:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "9555:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "9594:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "9586:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9586:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9585:16:2"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9611:0:2"
            },
            "scope": 1156,
            "src": "9546:1665:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "11783:274:2",
              "statements": []
            },
            "functionSelector": "43bb8db5",
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "11759:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11771:2:2"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11783:0:2"
            },
            "scope": 1156,
            "src": "11750:307:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1109,
              "nodeType": "Block",
              "src": "12289:3822:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 812,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 801,
                                "src": "12326:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 810,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "12307:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$3432",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4049,
                              "src": "12307:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12307:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 814,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12337:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12337:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12307:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 817,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "12351:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 819,
                              "indexExpression": {
                                "id": 818,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 803,
                                "src": "12357:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12351:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$66_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "12351:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 821,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "12378:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12351:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12307:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12386:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12299:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12299:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "12299:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 828,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "12439:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12439:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12456:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12439:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12431:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12431:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "12431:27:2"
                },
                {
                  "assignments": [
                    836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "12482:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "12469:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 834,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66,
                          "src": "12469:4:2"
                        },
                        "referencedDeclaration": 66,
                        "src": "12469:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 840,
                  "initialValue": {
                    "baseExpression": {
                      "id": 837,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "12491:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 839,
                    "indexExpression": {
                      "id": 838,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "12497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12491:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$66_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12469:36:2"
                },
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "12523:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "12515:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12515:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12531:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12515:17:2"
                },
                {
                  "assignments": [
                    846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 846,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "12590:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "12582:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 845,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12582:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 863,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 847,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "12599:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "refuterID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63,
                        "src": "12599:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12618:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12599:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "baseExpression": {
                        "id": 859,
                        "name": "_fields",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "12664:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 861,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12672:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12664:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12599:75:2",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 854,
                                "name": "_fields",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 806,
                                "src": "12649:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 856,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12657:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12649:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 852,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12632:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "12632:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12632:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 851,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "12622:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12622:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12582:92:2"
                },
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "12746:174:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 872,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 846,
                            "src": "12760:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 876,
                                    "name": "myHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 846,
                                    "src": "12796:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      "id": 880,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 877,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 836,
                                          "src": "12804:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 878,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 63,
                                        "src": "12804:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 879,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12823:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "12804:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "baseExpression": {
                                        "id": 889,
                                        "name": "_fields",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 806,
                                        "src": "12869:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                          "typeString": "bytes32[] calldata"
                                        }
                                      },
                                      "id": 891,
                                      "indexExpression": {
                                        "id": 890,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 865,
                                        "src": "12877:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12869:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "12804:75:2",
                                    "trueExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 884,
                                                "name": "_fields",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 806,
                                                "src": "12854:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                                  "typeString": "bytes32[] calldata"
                                                }
                                              },
                                              "id": 886,
                                              "indexExpression": {
                                                "id": 885,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 865,
                                                "src": "12862:1:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "12854:10:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 882,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "12837:3:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 883,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "12837:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 887,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12837:28:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 881,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "12827:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12827:39:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 874,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "12779:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "12779:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12779:101:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 873,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "12769:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12769:112:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12760:121:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "12760:121:2"
                      },
                      {
                        "id": 900,
                        "nodeType": "UncheckedBlock",
                        "src": "12895:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12905:3:2",
                              "subExpression": {
                                "id": 897,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 865,
                                "src": "12907:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 899,
                            "nodeType": "ExpressionStatement",
                            "src": "12905:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 868,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "12726:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 869,
                        "name": "_fields",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "12730:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12730:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12726:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "initializationExpression": {
                    "assignments": [
                      865
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 865,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12719:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "12711:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 864,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12711:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 867,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12723:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12711:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "12707:213:2"
                },
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "12938:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "12930:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12930:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 905,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "12952:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "12952:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 907,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "12967:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "12952:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12980:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "12952:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12976:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12930:51:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 913,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "12997:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13011:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12997:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1107,
                    "nodeType": "Block",
                    "src": "13858:1341:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 996,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "14006:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53,
                            "src": "14006:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 998,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 846,
                            "src": "14026:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14006:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1105,
                          "nodeType": "Block",
                          "src": "14812:376:2",
                          "statements": [
                            {
                              "assignments": [
                                1079
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1079,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "14926:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1105,
                                  "src": "14918:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1078,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14918:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1082,
                              "initialValue": {
                                "expression": {
                                  "id": 1080,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 836,
                                  "src": "14934:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "14934:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14918:30:2"
                            },
                            {
                              "expression": {
                                "id": 1086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "14966:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1083,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "14973:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1085,
                                  "indexExpression": {
                                    "id": 1084,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 803,
                                    "src": "14979:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14973:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1087,
                              "nodeType": "ExpressionStatement",
                              "src": "14966:21:2"
                            },
                            {
                              "assignments": [
                                1089,
                                1091
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1089,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "15011:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1105,
                                  "src": "15006:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1088,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15006:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1091,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "15030:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1105,
                                  "src": "15017:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1090,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15017:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1099,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15065:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1092,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5825,
                                        "src": "15038:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1093,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15038:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1094,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "15038:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1095,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1079,
                                      "src": "15058:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "15038:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15038:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15005:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1101,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1089,
                                    "src": "15144:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15150:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1100,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15136:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15136:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1104,
                              "nodeType": "ExpressionStatement",
                              "src": "15136:37:2"
                            }
                          ]
                        },
                        "id": 1106,
                        "nodeType": "IfStatement",
                        "src": "14003:1185:2",
                        "trueBody": {
                          "id": 1077,
                          "nodeType": "Block",
                          "src": "14033:762:2",
                          "statements": [
                            {
                              "assignments": [
                                1001
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1001,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "14059:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1077,
                                  "src": "14051:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14051:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1006,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1002,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 836,
                                    "src": "14067:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1003,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59,
                                  "src": "14067:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14082:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "14067:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14051:32:2"
                            },
                            {
                              "assignments": [
                                1008
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1008,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "14117:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1077,
                                  "src": "14101:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1007,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14101:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1017,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1013,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 836,
                                          "src": "14158:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1014,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 63,
                                        "src": "14158:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1011,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "14139:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$3432",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4049,
                                      "src": "14139:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1015,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14139:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14131:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1009,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14131:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14131:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14101:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1021,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 836,
                                      "src": "14217:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1022,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "14217:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1023,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "14235:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1018,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "14195:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$3432",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3160,
                                  "src": "14195:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14195:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1025,
                              "nodeType": "ExpressionStatement",
                              "src": "14195:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1029,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "14301:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1030,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "14309:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1026,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "14279:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$3432",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3160,
                                  "src": "14279:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14279:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1032,
                              "nodeType": "ExpressionStatement",
                              "src": "14279:56:2"
                            },
                            {
                              "expression": {
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1033,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 836,
                                    "src": "14354:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1035,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59,
                                  "src": "14354:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14369:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14354:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1038,
                              "nodeType": "ExpressionStatement",
                              "src": "14354:16:2"
                            },
                            {
                              "expression": {
                                "id": 1042,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "14417:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1039,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "14424:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1041,
                                  "indexExpression": {
                                    "id": 1040,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 803,
                                    "src": "14430:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14424:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$66_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1043,
                              "nodeType": "ExpressionStatement",
                              "src": "14417:21:2"
                            },
                            {
                              "assignments": [
                                1045,
                                1047
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1045,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "14505:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1077,
                                  "src": "14500:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1044,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14500:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1047,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "14524:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1077,
                                  "src": "14511:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1046,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14511:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1054,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14563:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1048,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1008,
                                      "src": "14532:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "14532:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1050,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1001,
                                      "src": "14556:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "14532:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14532:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14499:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1056,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "14592:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14598:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1055,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "14584:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14584:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1059,
                              "nodeType": "ExpressionStatement",
                              "src": "14584:37:2"
                            },
                            {
                              "expression": {
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1060,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1045,
                                      "src": "14677:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1061,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1047,
                                      "src": "14683:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1062,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "14676:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1068,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14721:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1063,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "14691:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1064,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "14691:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1065,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "14691:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1067,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1066,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1001,
                                        "src": "14714:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "14691:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14691:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "14676:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1071,
                              "nodeType": "ExpressionStatement",
                              "src": "14676:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1073,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "14750:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14756:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1072,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "14742:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14742:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1076,
                              "nodeType": "ExpressionStatement",
                              "src": "14742:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1108,
                  "nodeType": "IfStatement",
                  "src": "12993:2206:2",
                  "trueBody": {
                    "id": 995,
                    "nodeType": "Block",
                    "src": "13013:831:2",
                    "statements": [
                      {
                        "assignments": [
                          917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 917,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "13099:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 995,
                            "src": "13091:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 916,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13091:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 922,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 918,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "13107:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "13107:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13122:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13107:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13091:32:2"
                      },
                      {
                        "assignments": [
                          924
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 924,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "13153:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 995,
                            "src": "13137:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13137:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 933,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 929,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 836,
                                    "src": "13196:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 930,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61,
                                  "src": "13196:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 927,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "13177:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$3432",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4049,
                                "src": "13177:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13177:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13169:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 925,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13169:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13169:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13137:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 937,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13306:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49,
                              "src": "13306:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 939,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13320:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "13320:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 934,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "13284:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3432",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3160,
                            "src": "13284:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13284:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "13284:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 946,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "13373:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 947,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "13373:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 948,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "13392:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 943,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "13351:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3432",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3160,
                            "src": "13351:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13351:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 950,
                        "nodeType": "ExpressionStatement",
                        "src": "13351:67:2"
                      },
                      {
                        "expression": {
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 951,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "13433:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$66_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "13433:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13448:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13433:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 956,
                        "nodeType": "ExpressionStatement",
                        "src": "13433:16:2"
                      },
                      {
                        "expression": {
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "13492:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 957,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "13499:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$66_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 959,
                            "indexExpression": {
                              "id": 958,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "13505:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13499:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$66_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "13492:21:2"
                      },
                      {
                        "assignments": [
                          963,
                          965
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 963,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "13572:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 995,
                            "src": "13567:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 962,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "13567:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 965,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "13591:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 995,
                            "src": "13578:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 964,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13578:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 972,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13632:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 966,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "13599:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "13599:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 968,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "13625:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "13599:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13599:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13566:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 974,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "13657:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13663:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 973,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13649:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13649:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "13649:37:2"
                      },
                      {
                        "expression": {
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 978,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 963,
                                "src": "13734:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 979,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "13740:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 980,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "13733:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13778:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 981,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "13748:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "13748:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "13748:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 984,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "13771:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "13748:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13748:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "13733:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "13733:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 991,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "13803:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13809:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 990,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13795:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13795:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 994,
                        "nodeType": "ExpressionStatement",
                        "src": "13795:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "12200:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "12227:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "12219:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12219:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "12243:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "12235:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12235:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "12271:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "12252:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 804,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "12252:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 805,
                    "nodeType": "ArrayTypeName",
                    "src": "12252:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12218:61:2"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12289:0:2"
            },
            "scope": 1156,
            "src": "12191:3920:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "16220:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16238:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16244:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16230:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "16230:30:2"
                },
                {
                  "id": 1117,
                  "nodeType": "PlaceholderStatement",
                  "src": "16270:1:2"
                }
              ]
            },
            "id": 1119,
            "name": "onlyAdmin",
            "nameLocation": "16208:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16217:2:2"
            },
            "src": "16199:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "16308:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16326:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16332:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16318:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16318:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "16318:30:2"
                },
                {
                  "id": 1126,
                  "nodeType": "PlaceholderStatement",
                  "src": "16358:1:2"
                }
              ]
            },
            "id": 1128,
            "name": "onlyNFTOwner",
            "nameLocation": "16293:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16305:2:2"
            },
            "src": "16284:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "16394:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16412:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16418:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16404:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16404:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "16404:31:2"
                },
                {
                  "id": 1135,
                  "nodeType": "PlaceholderStatement",
                  "src": "16445:1:2"
                }
              ]
            },
            "id": 1137,
            "name": "onlyLessee",
            "nameLocation": "16381:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16391:2:2"
            },
            "src": "16372:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "16481:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16521:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16527:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16513:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16513:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "16513:31:2"
                },
                {
                  "id": 1144,
                  "nodeType": "PlaceholderStatement",
                  "src": "16554:1:2"
                }
              ]
            },
            "id": 1146,
            "name": "onlyMember",
            "nameLocation": "16468:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16478:2:2"
            },
            "src": "16459:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "16612:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16630:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16635:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16622:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16622:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "16622:36:2"
                },
                {
                  "id": 1153,
                  "nodeType": "PlaceholderStatement",
                  "src": "16689:1:2"
                }
              ]
            },
            "id": 1155,
            "name": "onlyBoard",
            "nameLocation": "16600:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16609:2:2"
            },
            "src": "16591:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1157,
        "src": "743:15961:2",
        "usedErrors": [
          3442
        ]
      }
    ],
    "src": "0:16704:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b506040516200262b3803806200262b8339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b612520806200010b6000396000f3fe60806040526004361061010d5760003560e01c80637c7c7e5a116100955780638da5cb5b116100645780638da5cb5b14610327578063d374a2171461034f578063f18c51d31461036f578063f2fde38b1461038f578063ff981099146103af57600080fd5b80637c7c7e5a14610291578063826b8ebd146102b15780638a6655d6146102d15780638d977672146102f157600080fd5b8063551bbe0b116100dc578063551bbe0b146101d45780636215597b146101f657806364d924ef1461023c57806369d037381461025c578063715018a61461027c57600080fd5b8063013cf08b1461011957806310190ef114610153578063379d94cc1461018457806343bb8db5146101c457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610139610134366004611d17565b6103dc565b60405161014a959493929190611d7d565b60405180910390f35b34801561015f57600080fd5b5061017361016e366004611d17565b6104a8565b60405161014a959493929190611dc1565b34801561019057600080fd5b506005546101aa90600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161014a565b3480156101d057600080fd5b505b005b3480156101e057600080fd5b506101e961058c565b60405161014a9190611e01565b34801561020257600080fd5b5061022e610211366004611e63565b600360209081526000928352604080842090915290825290205481565b60405190815260200161014a565b34801561024857600080fd5b506101d2610257366004611ee8565b610857565b34801561026857600080fd5b506101d2610277366004611f7b565b610974565b34801561028857600080fd5b506101d26109c0565b34801561029d57600080fd5b506101d26102ac366004611f9f565b6109f4565b3480156102bd57600080fd5b5061022e6102cc366004611d17565b610a08565b3480156102dd57600080fd5b506101d26102ec366004612004565b610c15565b3480156102fd57600080fd5b5061031161030c366004611d17565b610c4e565b60405161014a9a99989796959493929190612030565b34801561033357600080fd5b506001546040516001600160a01b03909116815260200161014a565b34801561035b57600080fd5b506101d261036a366004611d17565b610d51565b34801561037b57600080fd5b506101d261038a3660046120b1565b6110e2565b34801561039b57600080fd5b506101d26103aa366004611f7b565b6118a5565b3480156103bb57600080fd5b506103cf6103ca366004611d17565b611940565b60405161014a9190612134565b6007602052600090815260409020805481906103f79061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546104239061217c565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b600481815481106104b857600080fd5b90600052602060002090600302016000915090508060010180546104db9061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546105079061217c565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b5050506002909301549192505060ff81169064ffffffffff6101008204811691600160301b8104821691600160581b9091041685565b565b60606000805b6004548110156106595742600482815481106105b0576105b06121b6565b6000918252602080832033845260039092029091019052604090205410156105dd57816001019150610651565b604080516001808252818301909252600091816020015b60608152602001906001900390816105f457905050905060405180604001604052806008815260200167273790363ab1b59760c11b8152508160008151811061063f5761063f6121b6565b60209081029190910101529392505050565b600101610592565b5060008167ffffffffffffffff811115610675576106756121cc565b6040519080825280602002602001820160405280156106a857816020015b60608152602001906001900390816106935790505b5090506000805b60045481101561084e5742600482815481106106cd576106cd6121b6565b6000918252602080832033845260039092029091019052604090205410801561072957504260048281548110610705576107056121b6565b6000918252602090912060039091020160020154600160301b900464ffffffffff16105b801561076857504260048281548110610744576107446121b6565b6000918252602090912060039091020160020154600160581b900464ffffffffff16115b156108465760048181548110610780576107806121b6565b9060005260206000209060030201600101805461079c9061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c89061217c565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b505050505083828151811061082c5761082c6121b6565b60200260200101819052508160010191508382101561084e575b6001016106af565b50909392505050565b610865565b60405180910390fd5b60018361ffff1611801561087e57506101018361ffff16105b6108ca5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161085c565b6001600860008282546108dd91906121f8565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8681169190910264ffffffffff60501b191691909117600160501b9185169190910217905560018101805461ffff191661ffff86161790558061095c86888361225b565b5061096c86866008548686611a66565b505050505050565b6001546001600160a01b0316331461099e5760405162461bcd60e51b815260040161085c9061231c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146109ea5760405162461bcd60e51b815260040161085c9061231c565b61058a6000611b0d565b610a02848460008585611a66565b50505050565b60006008548210610a4e5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161085c565b600082815260076020526040902060030154600160501b900464ffffffffff164211610ab25760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161085c565b6000806000805b60008681526007602052604090206001015461ffff16811015610bd357600086815260076020526040902083906002018260088110610afa57610afa6121b6565b601091828204019190066002029054906101000a900461ffff1661ffff161115610b755760008681526007602052604090206002018160088110610b4057610b406121b6565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610b7057600091505b610bc1565b600086815260076020526040902083906002018260088110610b9957610b996121b6565b601091828204019190066002029054906101000a900461ffff1661ffff1603610bc157600191505b80610bcb81612351565b915050610ab9565b50801561084e5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161085c565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161085c565b600960205260009081526040902080548190610c699061217c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c959061217c565b8015610ce25780601f10610cb757610100808354040283529160200191610ce2565b820191906000526020600020905b815481529060010190602001808311610cc557829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b036401000000008204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6000610d6c600554600f81810b600160801b909204900b0390565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052919250805b838110156110a2574283610120015164ffffffffff16108015610def575084836020015164ffffffffff1614155b8015610e0457508483610100015161ffff1614155b1561109d57610e14600582611b5f565b60008181526009602052604090819020815161014081019092528054929450909182908290610e429061217c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6e9061217c565b8015610ebb5780601f10610e9057610100808354040283529160200191610ebb565b820191906000526020600020905b815481529060010190602001808311610e9e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a084015264010000000082046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b54909350610f7090426121f8565b64ffffffffff166101208401528260096000610f8d600585611b5f565b8152602081019190915260400160002081518190610fab9082612387565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff0000000019166401000000006001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b610dc1565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810186905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f919061236a565b6001600160a01b03161480156111805750600083815260096020526040902060040154600160701b900461ffff1684145b6111cc5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a617264604482015260640161085c565b806111d657600080fd5b600083815260096020526040812060048101549091908190600160801b900461ffff1661121c5784846000818110611210576112106121b6565b9050602002013561125f565b8484600081811061122f5761122f6121b6565b9050602002013560405160200161124891815260200190565b604051602081830303815290604052805190602001205b905060005b848110156113165760048401548290600160801b900461ffff166112a057868683818110611294576112946121b6565b905060200201356112e2565b8686838181106112b2576112b26121b6565b905060200201356040516020016112cb91815260200190565b604051602081830303815290604052805190602001205b60408051602081019390935282015260600160408051601f1981840301815291905280516020909101209150600101611264565b5060008184600201541461132b57600061132e565b60015b60ff169050806001036116365760048401546000906113609060029064010000000090046001600160501b0316612447565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156113cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f0919061236a565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561145a57600080fd5b505af115801561146e573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156114d657600080fd5b505af11580156114ea573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff0000000019169055506000898152600960205260408120906115208282611ccd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d806000811461159e576040519150601f19603f3d011682016040523d82523d6000602084013e6115a3565b606091505b5091509150816115c55760405162461bcd60e51b815260040161085c9061247b565b60405133908590600081818185875af1925050503d8060008114611605576040519150601f19603f3d011682016040523d82523d6000602084013e61160a565b606091505b5090925090508161162d5760405162461bcd60e51b815260040161085c9061247b565b5050505061189b565b818460030154036117ae5760048401546000906116669060029064010000000090046001600160501b0316612447565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f6919061236a565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561175a57600080fd5b505af115801561176e573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a591506044016114bc565b600484015460008881526009602052604081206401000000009092046001600160501b031691906117df8282611ccd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806118266001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114611870576040519150601f19603f3d011682016040523d82523d6000602084013e611875565b606091505b5091509150816118975760405162461bcd60e51b815260040161085c9061247b565b5050505b5050505050505050565b6001546001600160a01b031633146118cf5760405162461bcd60e51b815260040161085c9061231c565b6001600160a01b0381166119345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161085c565b61193d81611b0d565b50565b606060085482106119865760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161085c565b60008281526007602052604081206001015461ffff1667ffffffffffffffff8111156119b4576119b46121cc565b6040519080825280602002602001820160405280156119dd578160200160208202803683370190505b50905060005b8151811015611a5f5760008481526007602052604090206002018160088110611a0e57611a0e6121b6565b601091828204019190066002029054906101000a900461ffff16828281518110611a3a57611a3a6121b6565b61ffff9092166020928302919091019091015280611a5781612351565b9150506119e3565b5092915050565b6004805460018101808355600083815291929083908110611a8957611a896121b6565b60009182526020909120600390910201905060018101611aaa87898361225b565b50600201805464ffffffffff938416600160581b0264ffffffffff60581b19958516600160301b026affffffffff000000000000199590971661010002949094166affffffffffffffffffffff1990911617949094179290921617909155505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080611b82611b6e84611bd0565b8554611b7d9190600f0b6124a9565b611c3e565b8454909150600160801b9004600f90810b9082900b12611bb557604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b03821115611c3a5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161085c565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590611c7157506f7fffffffffffffffffffffffffffffff8213155b611c3a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161085c565b508054611cd99061217c565b6000825580601f10611ce9575050565b601f01602090049060005260206000209081019061193d91905b80821115611c3a5760008155600101611d03565b600060208284031215611d2957600080fd5b5035919050565b6000815180845260005b81811015611d5657602081850181015186830182015201611d3a565b81811115611d68576000602083870101525b50601f01601f19169290920160200192915050565b60a081526000611d9060a0830188611d30565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b60a081526000611dd460a0830188611d30565b95151560208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611e5657603f19888603018452611e44858351611d30565b94509285019290850190600101611e28565b5092979650505050505050565b60008060408385031215611e7657600080fd5b50508035926020909101359150565b60008083601f840112611e9757600080fd5b50813567ffffffffffffffff811115611eaf57600080fd5b602083019150836020828501011115611ec757600080fd5b9250929050565b803564ffffffffff81168114611ee357600080fd5b919050565b600080600080600060808688031215611f0057600080fd5b853567ffffffffffffffff811115611f1757600080fd5b611f2388828901611e85565b909650945050602086013561ffff81168114611f3e57600080fd5b9250611f4c60408701611ece565b9150611f5a60608701611ece565b90509295509295909350565b6001600160a01b038116811461193d57600080fd5b600060208284031215611f8d57600080fd5b8135611f9881611f66565b9392505050565b60008060008060608587031215611fb557600080fd5b843567ffffffffffffffff811115611fcc57600080fd5b611fd887828801611e85565b9095509350611feb905060208601611ece565b9150611ff960408601611ece565b905092959194509250565b60008060006060848603121561201957600080fd5b505081359360208301359350604090920135919050565b60006101408083526120448184018e611d30565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b600080600080606085870312156120c757600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156120ed57600080fd5b818701915087601f83011261210157600080fd5b81358181111561211057600080fd5b8860208260051b850101111561212557600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b8181101561217057835161ffff1683529284019291840191600101612150565b50909695505050505050565b600181811c9082168061219057607f821691505b6020821081036121b057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561220b5761220b6121e2565b500190565b601f82111561225657600081815260208120601f850160051c810160208610156122375750805b601f850160051c820191505b8181101561096c57828155600101612243565b505050565b67ffffffffffffffff831115612273576122736121cc565b61228783612281835461217c565b83612210565b6000601f8411600181146122bb57600085156122a35750838201355b600019600387901b1c1916600186901b178355612315565b600083815260209020601f19861690835b828110156122ec57868501358255602094850194600190920191016122cc565b50868210156123095760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201612363576123636121e2565b5060010190565b60006020828403121561237c57600080fd5b8151611f9881611f66565b815167ffffffffffffffff8111156123a1576123a16121cc565b6123b5816123af845461217c565b84612210565b602080601f8311600181146123ea57600084156123d25750858301515b600019600386901b1c1916600185901b17855561096c565b600085815260208120601f198616915b82811015612419578886015182559484019460019091019084016123fa565b50858210156124375787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160501b038084168061246f57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b03849003851316156124cb576124cb6121e2565b600160ff1b83900384128116156124e4576124e46121e2565b5050019056fea26469706673582212208966c8383aad1ae3ef6961243ab5e74c21fda1ebe54fe6b667c0b70eca56835f64736f6c634300080f0033",
  "bytecodeSha1": "ab725e9017d12ba9826d6bcc0ea71067acd301ca",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "98": [
            26367,
            26392,
            false
          ],
          "99": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "97": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "95": [
            4843,
            4860,
            false
          ]
        }
      },
      "12": {
        "Ownable.transferOwnership": {
          "96": [
            1990,
            2012,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "Governance.claimRandomTaskForVerification": {
          "83": [
            9898,
            9952,
            false
          ],
          "84": [
            9956,
            9978,
            false
          ],
          "85": [
            9982,
            10007,
            false
          ]
        },
        "Governance.createProposal": {
          "75": [
            7892,
            7912,
            false
          ],
          "76": [
            7916,
            7938,
            true
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "70": [
            5249,
            5311,
            false
          ],
          "71": [
            5818,
            5880,
            false
          ],
          "72": [
            5884,
            5927,
            false
          ],
          "73": [
            5931,
            5974,
            false
          ],
          "74": [
            6087,
            6103,
            false
          ]
        },
        "Governance.getVotes": {
          "94": [
            3811,
            3838,
            true
          ]
        },
        "Governance.getWinningVote": {
          "77": [
            4205,
            4232,
            true
          ],
          "78": [
            4272,
            4324,
            true
          ],
          "79": [
            4671,
            4721,
            false
          ],
          "80": [
            4846,
            4852,
            false
          ],
          "81": [
            4900,
            4951,
            false
          ],
          "82": [
            5017,
            5023,
            true
          ]
        },
        "Governance.submitVerification": {
          "86": [
            12307,
            12347,
            false
          ],
          "87": [
            12351,
            12384,
            true
          ],
          "88": [
            12439,
            12457,
            true
          ],
          "89": [
            12952,
            12973,
            true
          ],
          "90": [
            12997,
            13012,
            false
          ],
          "91": [
            13657,
            13661,
            true
          ],
          "92": [
            14006,
            14032,
            false
          ],
          "93": [
            15144,
            15148,
            true
          ]
        }
      },
      "22": {},
      "23": {},
      "6": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "69": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "67": [
            35401,
            35488
          ],
          "68": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "65": [
            4839,
            4882
          ],
          "66": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "29": [
            5633,
            5690
          ]
        }
      },
      "12": {
        "Ownable._setOwner": {
          "63": [
            2193,
            2210
          ],
          "64": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "51": [
            1982,
            2055
          ],
          "52": [
            2066,
            2085
          ]
        }
      },
      "13": {},
      "2": {
        "Governance._createTaskType": {
          "57": [
            8811,
            8827
          ],
          "58": [
            8908,
            8939
          ],
          "59": [
            8953,
            8979
          ],
          "60": [
            8993,
            9029
          ],
          "61": [
            9097,
            9137
          ],
          "62": [
            9043,
            9083
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "30": [
            10153,
            10209
          ],
          "31": [
            10227,
            10249
          ],
          "32": [
            10883,
            10917
          ],
          "33": [
            10935,
            11016
          ],
          "34": [
            11034,
            11097
          ],
          "35": [
            11163,
            11204
          ]
        },
        "Governance.createProposal": {
          "10": [
            7884,
            7968
          ],
          "11": [
            7978,
            7997
          ],
          "12": [
            8097,
            8136
          ],
          "13": [
            8150,
            8189
          ],
          "14": [
            8203,
            8248
          ],
          "15": [
            8262,
            8293
          ],
          "16": [
            8304,
            8384
          ]
        },
        "Governance.createTaskType": {
          "20": [
            8552,
            8611
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "1": [
            5441,
            5448
          ],
          "2": [
            5559,
            5583
          ],
          "3": [
            5601,
            5616
          ],
          "4": [
            5654,
            5657
          ],
          "5": [
            5994,
            6028
          ],
          "6": [
            6056,
            6065
          ],
          "7": [
            6127,
            6132
          ],
          "8": [
            6188,
            6191
          ],
          "9": [
            6212,
            6226
          ]
        },
        "Governance.getVotes": {
          "53": [
            3803,
            3859
          ],
          "54": [
            4016,
            4061
          ],
          "55": [
            3998,
            4001
          ],
          "56": [
            4081,
            4097
          ]
        },
        "Governance.getWinningVote": {
          "21": [
            4197,
            4253
          ],
          "22": [
            4263,
            4348
          ],
          "23": [
            4741,
            4791
          ],
          "24": [
            4809,
            4824
          ],
          "25": [
            4856,
            4863
          ],
          "26": [
            4970,
            4975
          ],
          "27": [
            4614,
            4617
          ],
          "28": [
            5009,
            5044
          ]
        },
        "Governance.setNFTAddress": {
          "18": [
            6410,
            6437
          ]
        },
        "Governance.submitVerification": {
          "36": [
            12299,
            12421
          ],
          "37": [
            12431,
            12458
          ],
          "38": [
            12760,
            12881
          ],
          "39": [
            12905,
            12908
          ],
          "40": [
            13284,
            13337
          ],
          "41": [
            13351,
            13418
          ],
          "42": [
            13433,
            13449
          ],
          "43": [
            13492,
            13513
          ],
          "44": [
            13649,
            13686
          ],
          "45": [
            13733,
            13781
          ],
          "46": [
            13795,
            13832
          ],
          "47": [
            14195,
            14261
          ],
          "48": [
            14279,
            14335
          ],
          "49": [
            14966,
            14987
          ],
          "50": [
            15136,
            15173
          ]
        }
      },
      "22": {},
      "23": {},
      "6": {
        "Context._msgSender": {
          "17": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "60806040526004361061010d5760003560e01c80637c7c7e5a116100955780638da5cb5b116100645780638da5cb5b14610327578063d374a2171461034f578063f18c51d31461036f578063f2fde38b1461038f578063ff981099146103af57600080fd5b80637c7c7e5a14610291578063826b8ebd146102b15780638a6655d6146102d15780638d977672146102f157600080fd5b8063551bbe0b116100dc578063551bbe0b146101d45780636215597b146101f657806364d924ef1461023c57806369d037381461025c578063715018a61461027c57600080fd5b8063013cf08b1461011957806310190ef114610153578063379d94cc1461018457806343bb8db5146101c457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610139610134366004611d17565b6103dc565b60405161014a959493929190611d7d565b60405180910390f35b34801561015f57600080fd5b5061017361016e366004611d17565b6104a8565b60405161014a959493929190611dc1565b34801561019057600080fd5b506005546101aa90600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161014a565b3480156101d057600080fd5b505b005b3480156101e057600080fd5b506101e961058c565b60405161014a9190611e01565b34801561020257600080fd5b5061022e610211366004611e63565b600360209081526000928352604080842090915290825290205481565b60405190815260200161014a565b34801561024857600080fd5b506101d2610257366004611ee8565b610857565b34801561026857600080fd5b506101d2610277366004611f7b565b610974565b34801561028857600080fd5b506101d26109c0565b34801561029d57600080fd5b506101d26102ac366004611f9f565b6109f4565b3480156102bd57600080fd5b5061022e6102cc366004611d17565b610a08565b3480156102dd57600080fd5b506101d26102ec366004612004565b610c15565b3480156102fd57600080fd5b5061031161030c366004611d17565b610c4e565b60405161014a9a99989796959493929190612030565b34801561033357600080fd5b506001546040516001600160a01b03909116815260200161014a565b34801561035b57600080fd5b506101d261036a366004611d17565b610d51565b34801561037b57600080fd5b506101d261038a3660046120b1565b6110e2565b34801561039b57600080fd5b506101d26103aa366004611f7b565b6118a5565b3480156103bb57600080fd5b506103cf6103ca366004611d17565b611940565b60405161014a9190612134565b6007602052600090815260409020805481906103f79061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546104239061217c565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b600481815481106104b857600080fd5b90600052602060002090600302016000915090508060010180546104db9061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546105079061217c565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b5050506002909301549192505060ff81169064ffffffffff6101008204811691600160301b8104821691600160581b9091041685565b565b60606000805b6004548110156106595742600482815481106105b0576105b06121b6565b6000918252602080832033845260039092029091019052604090205410156105dd57816001019150610651565b604080516001808252818301909252600091816020015b60608152602001906001900390816105f457905050905060405180604001604052806008815260200167273790363ab1b59760c11b8152508160008151811061063f5761063f6121b6565b60209081029190910101529392505050565b600101610592565b5060008167ffffffffffffffff811115610675576106756121cc565b6040519080825280602002602001820160405280156106a857816020015b60608152602001906001900390816106935790505b5090506000805b60045481101561084e5742600482815481106106cd576106cd6121b6565b6000918252602080832033845260039092029091019052604090205410801561072957504260048281548110610705576107056121b6565b6000918252602090912060039091020160020154600160301b900464ffffffffff16105b801561076857504260048281548110610744576107446121b6565b6000918252602090912060039091020160020154600160581b900464ffffffffff16115b156108465760048181548110610780576107806121b6565b9060005260206000209060030201600101805461079c9061217c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c89061217c565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b505050505083828151811061082c5761082c6121b6565b60200260200101819052508160010191508382101561084e575b6001016106af565b50909392505050565b610865565b60405180910390fd5b60018361ffff1611801561087e57506101018361ffff16105b6108ca5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161085c565b6001600860008282546108dd91906121f8565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8681169190910264ffffffffff60501b191691909117600160501b9185169190910217905560018101805461ffff191661ffff86161790558061095c86888361225b565b5061096c86866008548686611a66565b505050505050565b6001546001600160a01b0316331461099e5760405162461bcd60e51b815260040161085c9061231c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146109ea5760405162461bcd60e51b815260040161085c9061231c565b61058a6000611b0d565b610a02848460008585611a66565b50505050565b60006008548210610a4e5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161085c565b600082815260076020526040902060030154600160501b900464ffffffffff164211610ab25760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161085c565b6000806000805b60008681526007602052604090206001015461ffff16811015610bd357600086815260076020526040902083906002018260088110610afa57610afa6121b6565b601091828204019190066002029054906101000a900461ffff1661ffff161115610b755760008681526007602052604090206002018160088110610b4057610b406121b6565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610b7057600091505b610bc1565b600086815260076020526040902083906002018260088110610b9957610b996121b6565b601091828204019190066002029054906101000a900461ffff1661ffff1603610bc157600191505b80610bcb81612351565b915050610ab9565b50801561084e5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161085c565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161085c565b600960205260009081526040902080548190610c699061217c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c959061217c565b8015610ce25780601f10610cb757610100808354040283529160200191610ce2565b820191906000526020600020905b815481529060010190602001808311610cc557829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b036401000000008204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6000610d6c600554600f81810b600160801b909204900b0390565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052919250805b838110156110a2574283610120015164ffffffffff16108015610def575084836020015164ffffffffff1614155b8015610e0457508483610100015161ffff1614155b1561109d57610e14600582611b5f565b60008181526009602052604090819020815161014081019092528054929450909182908290610e429061217c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6e9061217c565b8015610ebb5780601f10610e9057610100808354040283529160200191610ebb565b820191906000526020600020905b815481529060010190602001808311610e9e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a084015264010000000082046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b54909350610f7090426121f8565b64ffffffffff166101208401528260096000610f8d600585611b5f565b8152602081019190915260400160002081518190610fab9082612387565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff0000000019166401000000006001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b610dc1565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810186905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f919061236a565b6001600160a01b03161480156111805750600083815260096020526040902060040154600160701b900461ffff1684145b6111cc5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a617264604482015260640161085c565b806111d657600080fd5b600083815260096020526040812060048101549091908190600160801b900461ffff1661121c5784846000818110611210576112106121b6565b9050602002013561125f565b8484600081811061122f5761122f6121b6565b9050602002013560405160200161124891815260200190565b604051602081830303815290604052805190602001205b905060005b848110156113165760048401548290600160801b900461ffff166112a057868683818110611294576112946121b6565b905060200201356112e2565b8686838181106112b2576112b26121b6565b905060200201356040516020016112cb91815260200190565b604051602081830303815290604052805190602001205b60408051602081019390935282015260600160408051601f1981840301815291905280516020909101209150600101611264565b5060008184600201541461132b57600061132e565b60015b60ff169050806001036116365760048401546000906113609060029064010000000090046001600160501b0316612447565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156113cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f0919061236a565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561145a57600080fd5b505af115801561146e573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156114d657600080fd5b505af11580156114ea573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff0000000019169055506000898152600960205260408120906115208282611ccd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d806000811461159e576040519150601f19603f3d011682016040523d82523d6000602084013e6115a3565b606091505b5091509150816115c55760405162461bcd60e51b815260040161085c9061247b565b60405133908590600081818185875af1925050503d8060008114611605576040519150601f19603f3d011682016040523d82523d6000602084013e61160a565b606091505b5090925090508161162d5760405162461bcd60e51b815260040161085c9061247b565b5050505061189b565b818460030154036117ae5760048401546000906116669060029064010000000090046001600160501b0316612447565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f6919061236a565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561175a57600080fd5b505af115801561176e573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a591506044016114bc565b600484015460008881526009602052604081206401000000009092046001600160501b031691906117df8282611ccd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806118266001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114611870576040519150601f19603f3d011682016040523d82523d6000602084013e611875565b606091505b5091509150816118975760405162461bcd60e51b815260040161085c9061247b565b5050505b5050505050505050565b6001546001600160a01b031633146118cf5760405162461bcd60e51b815260040161085c9061231c565b6001600160a01b0381166119345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161085c565b61193d81611b0d565b50565b606060085482106119865760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161085c565b60008281526007602052604081206001015461ffff1667ffffffffffffffff8111156119b4576119b46121cc565b6040519080825280602002602001820160405280156119dd578160200160208202803683370190505b50905060005b8151811015611a5f5760008481526007602052604090206002018160088110611a0e57611a0e6121b6565b601091828204019190066002029054906101000a900461ffff16828281518110611a3a57611a3a6121b6565b61ffff9092166020928302919091019091015280611a5781612351565b9150506119e3565b5092915050565b6004805460018101808355600083815291929083908110611a8957611a896121b6565b60009182526020909120600390910201905060018101611aaa87898361225b565b50600201805464ffffffffff938416600160581b0264ffffffffff60581b19958516600160301b026affffffffff000000000000199590971661010002949094166affffffffffffffffffffff1990911617949094179290921617909155505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080611b82611b6e84611bd0565b8554611b7d9190600f0b6124a9565b611c3e565b8454909150600160801b9004600f90810b9082900b12611bb557604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b03821115611c3a5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161085c565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590611c7157506f7fffffffffffffffffffffffffffffff8213155b611c3a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161085c565b508054611cd99061217c565b6000825580601f10611ce9575050565b601f01602090049060005260206000209081019061193d91905b80821115611c3a5760008155600101611d03565b600060208284031215611d2957600080fd5b5035919050565b6000815180845260005b81811015611d5657602081850181015186830182015201611d3a565b81811115611d68576000602083870101525b50601f01601f19169290920160200192915050565b60a081526000611d9060a0830188611d30565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b60a081526000611dd460a0830188611d30565b95151560208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611e5657603f19888603018452611e44858351611d30565b94509285019290850190600101611e28565b5092979650505050505050565b60008060408385031215611e7657600080fd5b50508035926020909101359150565b60008083601f840112611e9757600080fd5b50813567ffffffffffffffff811115611eaf57600080fd5b602083019150836020828501011115611ec757600080fd5b9250929050565b803564ffffffffff81168114611ee357600080fd5b919050565b600080600080600060808688031215611f0057600080fd5b853567ffffffffffffffff811115611f1757600080fd5b611f2388828901611e85565b909650945050602086013561ffff81168114611f3e57600080fd5b9250611f4c60408701611ece565b9150611f5a60608701611ece565b90509295509295909350565b6001600160a01b038116811461193d57600080fd5b600060208284031215611f8d57600080fd5b8135611f9881611f66565b9392505050565b60008060008060608587031215611fb557600080fd5b843567ffffffffffffffff811115611fcc57600080fd5b611fd887828801611e85565b9095509350611feb905060208601611ece565b9150611ff960408601611ece565b905092959194509250565b60008060006060848603121561201957600080fd5b505081359360208301359350604090920135919050565b60006101408083526120448184018e611d30565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b600080600080606085870312156120c757600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156120ed57600080fd5b818701915087601f83011261210157600080fd5b81358181111561211057600080fd5b8860208260051b850101111561212557600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b8181101561217057835161ffff1683529284019291840191600101612150565b50909695505050505050565b600181811c9082168061219057607f821691505b6020821081036121b057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561220b5761220b6121e2565b500190565b601f82111561225657600081815260208120601f850160051c810160208610156122375750805b601f850160051c820191505b8181101561096c57828155600101612243565b505050565b67ffffffffffffffff831115612273576122736121cc565b61228783612281835461217c565b83612210565b6000601f8411600181146122bb57600085156122a35750838201355b600019600387901b1c1916600186901b178355612315565b600083815260209020601f19861690835b828110156122ec57868501358255602094850194600190920191016122cc565b50868210156123095760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201612363576123636121e2565b5060010190565b60006020828403121561237c57600080fd5b8151611f9881611f66565b815167ffffffffffffffff8111156123a1576123a16121cc565b6123b5816123af845461217c565b84612210565b602080601f8311600181146123ea57600084156123d25750858301515b600019600386901b1c1916600185901b17855561096c565b600085815260208120601f198616915b82811015612419578886015182559484019460019091019084016123fa565b50858210156124375787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160501b038084168061246f57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b03849003851316156124cb576124cb6121e2565b600160ff1b83900384128116156124e4576124e46121e2565b5050019056fea26469706673582212208966c8383aad1ae3ef6961243ab5e74c21fda1ebe54fe6b667c0b70eca56835f64736f6c634300080f0033",
  "deployedSourceMap": "743:15961:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2644:46;;;;;;;;;;-1:-1:-1;2644:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2340:27;;;;;;;;;;-1:-1:-1;2340:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2477:51::-;;;;;;;;;;-1:-1:-1;2477:51:2;;;;;;;;;-1:-1:-1;;;2477:51:2;;;;;;;;;;2024:2:24;2013:22;;;1995:41;;2072:22;;;;2067:2;2052:18;;2045:50;1968:18;2477:51:2;1825:276:24;11750:307:2;;;;;;;;;;;;;5086:1147;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:25:24;;;3301:2;3286:18;957:75:2;3167:177:24;7735:687:2;;;;;;;;;;-1:-1:-1;7735:687:2;;;;;:::i;:::-;;:::i;6343:101::-;;;;;;;;;;-1:-1:-1;6343:101:2;;;;;:::i;:::-;;:::i;1652:94:12:-;;;;;;;;;;;;;:::i;8428:190:2:-;;;;;;;;;;-1:-1:-1;8428:190:2;;;;;:::i;:::-;;:::i;4110:969::-;;;;;;;;;;-1:-1:-1;4110:969:2;;;;;:::i;:::-;;:::i;7025:664::-;;;;;;;;;;-1:-1:-1;7025:664:2;;;;;:::i;:::-;;:::i;2725:38::-;;;;;;;;;;-1:-1:-1;2725:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:12:-;;;;;;;;;;-1:-1:-1;1074:6:12;;1001:87;;-1:-1:-1;;;;;1074:6:12;;;7031:51:24;;7019:2;7004:18;1001:87:12;6885:203:24;9546:1665:2;;;;;;;;;;-1:-1:-1;9546:1665:2;;;;;:::i;:::-;;:::i;12191:3920::-;;;;;;;;;;-1:-1:-1;12191:3920:2;;;;;:::i;:::-;;:::i;1901:192:12:-;;;;;;;;;;-1:-1:-1;1901:192:12;;;;;:::i;:::-;;:::i;3715:389:2:-;;;;;;;;;;-1:-1:-1;3715:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2644:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2644:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2644:46:2;;;;;;-1:-1:-1;;;2644:46:2;;;;:::o;2340:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2340:27:2;;;;;;;-1:-1:-1;;2340:27:2;;;;;;;;;;;-1:-1:-1;;;2340:27:2;;;;;-1:-1:-1;;;2340:27:2;;;;;:::o;11750:307::-;:::o;5086:1147::-;5144:15;5171:13;;5194:475;5214:9;:16;5211:19;;5194:475;;;5296:15;5249:9;5259:1;5249:12;;;;;;;;:::i;:::-;;;;;;;;;5282:10;5249:44;;:12;;;;;;;:44;;;;;;:62;5246:385;;;5441:7;;;;;5246:385;;;5526:15;;;5539:1;5526:15;;;;;;;;;5500:24;;5526:15;;;;;;;;;;;;;;;;;;;;5500:41;;5559:24;;;;;;;;;;;;;-1:-1:-1;;;5559:24:2;;;:8;5568:1;5559:11;;;;;;;;:::i;:::-;;;;;;;;;;:24;5608:8;5086:1147;-1:-1:-1;;;5086:1147:2:o;5246:385::-;5654:3;;5194:475;;;;5679:23;5718:5;5705:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5679:45;;5734:15;5767:9;5763:440;5783:9;:16;5780:19;;5763:440;;;5865:15;5818:9;5828:1;5818:12;;;;;;;;:::i;:::-;;;;;;;;;5851:10;5818:44;;:12;;;;;;;:44;;;;;;:62;:109;;;;;5912:15;5884:9;5894:1;5884:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;5884:25:2;;;;:43;5818:109;:156;;;;;5959:15;5931:9;5941:1;5931:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;5931:25:2;;;;:43;5818:156;5815:350;;;6007:9;6017:1;6007:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;5994:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;6002:1;5994:10;;;;;;;;:::i;:::-;;;;;;:34;;;;6056:9;;;;;6098:5;6087:7;:16;6084:67;6127:5;6084:67;;6188:3;;5763:440;;;-1:-1:-1;6219:7:2;;5086:1147;-1:-1:-1;;;5086:1147:2:o;7735:687::-;16622:36;;;;;;;;;;;7911:1:::1;7892:16;:20;;;:46;;;;;7935:3;7916:16;:22;;;7892:46;7884:84;;;::::0;-1:-1:-1;;;7884:84:2;;9697:2:24;7884:84:2::1;::::0;::::1;9679:21:24::0;9736:2;9716:18;;;9709:30;9775:27;9755:18;;;9748:55;9820:18;;7884:84:2::1;9495:349:24::0;7884:84:2::1;7996:1;7978:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8068:14:2::1;::::0;8028:27:::1;8058:25:::0;;;:9:::1;:25;::::0;;;;8097:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;8150:39:2;8097;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;8150:39:2;;;;;-1:-1:-1;;;8150:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;8203:26:2;::::1;:45:::0;;-1:-1:-1;;8203:45:2::1;;::::0;::::1;;::::0;;8058:25;8262:31:::1;8284:9:::0;;8058:25;8262:31:::1;:::i;:::-;;8304:80;8320:9;;8338:14;;8355:13;8370;8304:15;:80::i;:::-;7874:548;7735:687:::0;;;;;:::o;6343:101::-;1074:6:12;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;6410:10:2::1;:27:::0;;-1:-1:-1;;;;;;6410:27:2::1;-1:-1:-1::0;;;;;6410:27:2;;;::::1;::::0;;;::::1;::::0;;6343:101::o;1652:94:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;8428:190:2:-:0;8552:59:::1;8568:9;;8579:1;8582:13;8597;8552:15;:59::i;:::-;8428:190:::0;;;;:::o;4110:969::-;4177:7;4218:14;;4205:10;:27;4197:56;;;;-1:-1:-1;;;4197:56:2;;12735:2:24;4197:56:2;;;12717:21:24;12774:2;12754:18;;;12747:30;-1:-1:-1;;;12793:18:24;;;12786:46;12849:18;;4197:56:2;12533:340:24;4197:56:2;4290:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;4290:34:2;;;;4272:15;:52;4263:85;;;;-1:-1:-1;;;4263:85:2;;13080:2:24;4263:85:2;;;13062:21:24;13119:2;13099:18;;;13092:30;-1:-1:-1;;;13138:18:24;;;13131:49;13197:18;;4263:85:2;12878:343:24;4263:85:2;4468:19;4497:25;4532:11;4559:9;4555:445;4575:21;;;;:9;:21;;;;;:37;;;;;4572:40;;4555:445;;;4671:21;;;;:9;:21;;;;;4704:17;;4671:27;;4699:1;4671:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;4668:322;;;4761:21;;;;:9;:21;;;;;:27;;4789:1;4761:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4741:50;;;;4823:1;4809:15;;4846:3;4851:1;4846:6;4842:23;;4862:1;4856:7;;4842:23;4668:322;;;4900:21;;;;:9;:21;;;;;4934:17;;4900:27;;4928:1;4900:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;4897:93;;4974:1;4970:5;;4897:93;4614:3;;;;:::i;:::-;;;;4555:445;;;-1:-1:-1;5017:6:2;;5009:35;;;;-1:-1:-1;;;5009:35:2;;13568:2:24;5009:35:2;;;13550:21:24;13607:2;13587:18;;;13580:30;-1:-1:-1;;;13626:18:24;;;13619:46;13682:18;;5009:35:2;13366:340:24;7025:664:2;16513:31;;-1:-1:-1;;;16513:31:2;;13913:2:24;16513:31:2;;;13895:21:24;13952:2;13932:18;;;13925:30;-1:-1:-1;;;13971:18:24;;;13964:44;14025:18;;16513:31:2;13711:338:24;2725:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2725:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2725:38:2;-1:-1:-1;2725:38:2;;;;;;;;;;-1:-1:-1;;;;;2725:38:2;;;;;;-1:-1:-1;;;2725:38:2;;;;;-1:-1:-1;;;2725:38:2;;;;;;-1:-1:-1;;;2725:38:2;;;;;:::o;9546:1665::-;9621:27;9651:39;9675:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;9651:39:2;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9621:69:2;;-1:-1:-1;;9836:1286:2;9858:19;9854:1;:23;9836:1286;;;9937:15;9898:6;:36;;;:54;;;:80;;;;;9972:6;9956;:12;;;:22;;;;9898:80;:109;;;;;10001:6;9982;:16;;;:25;;;;9898:109;9894:1218;;;10170:38;10190:14;10206:1;10170:19;:38::i;:::-;10162:47;10236:13;;;:5;:13;;;;;;;10227:22;;;;;;;;;;10162:47;;-1:-1:-1;10227:22:2;;;;10236:13;;10227:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10227:22:2;;;-1:-1:-1;;10227:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10227:22:2;;;;;-1:-1:-1;;;10227:22:2;;;;;;;;;;;;;;-1:-1:-1;;;10227:22:2;;;;;;;;;;;-1:-1:-1;;;10227:22:2;;;;;;;;;;;;;;10883:34;;:17;;;:34;10999:16;;10883:17;;-1:-1:-1;10981:34:2;;:15;:34;:::i;:::-;10935:81;;:36;;;:81;:6;11034:5;:54;11048:38;11068:14;11084:1;11048:19;:38::i;:::-;11034:54;;;;;;;;;;;11040:47;11034:54;:63;;:54;;:63;;:54;:63;:::i;:::-;-1:-1:-1;11034:63:2;;;;;;;;;-1:-1:-1;;11034:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11034:63:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;11034:63:2;;-1:-1:-1;;;;;11034:63:2;;;;;;;-1:-1:-1;;;;11034:63:2;;-1:-1:-1;;;11034:63:2;;;;;;-1:-1:-1;;;;11034:63:2;-1:-1:-1;;;11034:63:2;;;;;-1:-1:-1;;;;11034:63:2;;;;;-1:-1:-1;;;11034:63:2;;;;;;;;;;;9894:1218;9836:1286;;;-1:-1:-1;11168:36:2;;;16992:25:24;;;17048:2;17033:18;;17026:34;;;11168:36:2;;16965:18:24;11168:36:2;;;;;;;9611:1600;;;9546:1665;:::o;12191:3920::-;12307:10;;:26;;-1:-1:-1;;;12307:26:2;;;;;3313:25:24;;;12337:10:2;;-1:-1:-1;;;;;12307:10:2;;:18;;3286::24;;12307:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12307:40:2;;:77;;;;-1:-1:-1;12351:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;12351:25:2;;;;:33;;12307:77;12299:122;;;;-1:-1:-1;;;12299:122:2;;17273:2:24;12299:122:2;;;17255:21:24;;;17292:18;;;17285:30;17351:34;17331:18;;;17324:62;17403:18;;12299:122:2;17071:356:24;12299:122:2;12439:18;12431:27;;;;;;12469:19;12491:14;;;:5;:14;;;;;12599:16;;;;12491:14;;12469:19;;;-1:-1:-1;;;12599:16:2;;;;:75;;12664:7;;12672:1;12664:10;;;;;;;:::i;:::-;;;;;;;12599:75;;;12649:7;;12657:1;12649:10;;;;;;;:::i;:::-;;;;;;;12632:28;;;;;;17561:19:24;;17605:2;17596:12;;17432:182;12632:28:2;;;;;;;;;;;;;12622:39;;;;;;12599:75;12582:92;;12711:9;12707:213;12726:18;;;12707:213;;;12804:16;;;;12796:6;;-1:-1:-1;;;12804:16:2;;;;:75;;12869:7;;12877:1;12869:10;;;;;;;:::i;:::-;;;;;;;12804:75;;;12854:7;;12862:1;12854:10;;;;;;;:::i;:::-;;;;;;;12837:28;;;;;;17561:19:24;;17605:2;17596:12;;17432:182;12837:28:2;;;;;;;;;;;;;12827:39;;;;;;12804:75;12779:101;;;;;;17776:19:24;;;;17811:12;;17804:28;17848:12;;12779:101:2;;;-1:-1:-1;;12779:101:2;;;;;;;;;12769:112;;12779:101;12769:112;;;;;-1:-1:-1;12905:3:2;;12707:213;;;;12930:19;12967:6;12952;:11;;;:21;:29;;12980:1;12952:29;;;12976:1;12952:29;12930:51;;;;12997:11;13011:1;12997:15;12993:2206;;13107:14;;;;13091:13;;13107:16;;13122:1;;13107:14;;;-1:-1:-1;;;;;13107:14:2;:16;:::i;:::-;13177:10;;13196:17;;;;;13177:37;;-1:-1:-1;;;13177:37:2;;-1:-1:-1;;;13196:17:2;;;;;13177:37;;;18321:38:24;;;;-1:-1:-1;;;;;13091:32:2;;;;;-1:-1:-1;13137:29:2;;-1:-1:-1;;;;;13177:10:2;;;;:18;;18294::24;;13177:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13284:10;;;13306:12;;;13320:16;;;;;13284:53;;-1:-1:-1;;;13284:53:2;;13306:12;;;;13284:53;;;18542:44:24;;;;13284:10:2;13320:16;;;;18602:18:24;;;18595:49;13137:78:2;;-1:-1:-1;;;;;;13284:10:2;;:21;;18515:18:24;;13284:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13351:10:2;;13373:17;;;;;13392:25;;13351:67;;-1:-1:-1;;;13351:67:2;;-1:-1:-1;;;13373:17:2;;;;;13351:67;;;18828:38:24;;;;18882:18;;;18875:34;;;;-1:-1:-1;;;;;13351:10:2;;;;-1:-1:-1;13351:21:2;;-1:-1:-1;18801:18:24;;13351:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13433:14:2;;;:16;;-1:-1:-1;;13433:16:2;;;-1:-1:-1;13448:1:2;13499:14;;;:5;:14;;;;;;13492:21;13499:14;13448:1;13492:21;:::i;:::-;-1:-1:-1;13492:21:2;;;;;-1:-1:-1;;13492:21:2;;;-1:-1:-1;13492:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13492:21:2;;;13599:36;;-1:-1:-1;;;;;;;13599:18:2;;;13625:5;;-1:-1:-1;13599:36:2;-1:-1:-1;13599:36:2;13625:5;13599:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13566:69;;;;13657:4;13649:37;;;;-1:-1:-1;;;13649:37:2;;;;;;;:::i;:::-;13748:33;;:10;;13771:5;;13748:33;;;;13771:5;13748:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13733:48:2;;-1:-1:-1;13733:48:2;-1:-1:-1;13733:48:2;13795:37;;;;-1:-1:-1;;;13795:37:2;;;;;;;:::i;:::-;13013:831;;;;12993:2206;;;14026:6;14006;:18;;;:26;14003:1185;;14067:14;;;;14051:13;;14067:16;;14082:1;;14067:14;;;-1:-1:-1;;;;;14067:14:2;:16;:::i;:::-;14139:10;;14158:16;;;;;14139:36;;-1:-1:-1;;;14139:36:2;;-1:-1:-1;;;14158:16:2;;;;;14139:36;;;18321:38:24;;;;-1:-1:-1;;;;;14051:32:2;;;;;-1:-1:-1;14101:27:2;;-1:-1:-1;;;;;14139:10:2;;;;:18;;18294::24;;14139:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14195:10;;14217:16;;;;;14235:25;;14195:66;;-1:-1:-1;;;14195:66:2;;-1:-1:-1;;;14217:16:2;;;;;14195:66;;;18828:38:24;;;;18882:18;;;18875:34;;;;14101:75:2;;-1:-1:-1;;;;;;14195:10:2;;:21;;18801:18:24;;14195:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14279:10:2;;14309:25;;14279:56;;-1:-1:-1;;;14279:56:2;;;;;16992:25:24;;;17033:18;;;17026:34;;;;-1:-1:-1;;;;;14279:10:2;;;;-1:-1:-1;14279:21:2;;-1:-1:-1;16965:18:24;;14279:56:2;16818:248:24;14003:1185:2;14934:14;;;;14918:13;14973:14;;;:5;:14;;;;;14934;;;;-1:-1:-1;;;;;14934:14:2;;14973;14966:21;14973:14;14918:13;14966:21;:::i;:::-;-1:-1:-1;14966:21:2;;;;;-1:-1:-1;;14966:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14966:21:2;;;;15038:7;1074:6:12;;-1:-1:-1;;;;;1074:6:12;;1001:87;15038:7:2;-1:-1:-1;;;;;15038:12:2;15058:5;15038:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15005:63;;;;15144:4;15136:37;;;;-1:-1:-1;;;15136:37:2;;;;;;;:::i;:::-;14812:376;;;14003:1185;12289:3822;;;;12191:3920;;;;:::o;1901:192:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:12;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:12;;19681:2:24;1982:73:12::1;::::0;::::1;19663:21:24::0;19720:2;19700:18;;;19693:30;19759:34;19739:18;;;19732:62;-1:-1:-1;;;19810:18:24;;;19803:36;19856:19;;1982:73:12::1;19479:402:24::0;1982:73:12::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;3715:389:2:-;3776:15;3824:14;;3811:10;:27;3803:56;;;;-1:-1:-1;;;3803:56:2;;12735:2:24;3803:56:2;;;12717:21:24;12774:2;12754:18;;;12747:30;-1:-1:-1;;;12793:18:24;;;12786:46;12849:18;;3803:56:2;12533:340:24;3803:56:2;3869:25;3910:21;;;:9;:21;;;;;:37;;;;;3897:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3897:51:2;;3869:79;;3962:9;3958:114;3980:9;:16;3977:1;:19;3958:114;;;4031:21;;;;:9;:21;;;;;:27;;4059:1;4031:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4016:9;4026:1;4016:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;3998:3;;;;:::i;:::-;;;;3958:114;;;-1:-1:-1;4088:9:2;3715:389;-1:-1:-1;;3715:389:2:o;8624:552::-;8785:9;:16;;8811;;;;;;8759:23;8811:16;;;8785;;:9;:16;;8868:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;8908:20:2;;;:31;8930:9;;8908:20;:31;:::i;:::-;-1:-1:-1;8953:18:2;;:26;;8993:36;9097:40;;;-1:-1:-1;;;9097:40:2;-1:-1:-1;;;;9043:40:2;;;-1:-1:-1;;;9043:40:2;-1:-1:-1;;8993:36:2;;;;8953:26;8993:36;9043:40;;;;-1:-1:-1;;9043:40:2;;;;;;;;9097;;;;;;;;-1:-1:-1;;;8624:552:2:o;2101:173:12:-;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;20358:2:24;35401:87:0;;;20340:21:24;20397:2;20377:18;;;20370:30;20436:34;20416:18;;;20409:62;-1:-1:-1;;;20487:18:24;;;20480:38;20535:19;;35401:87:0;20156:404:24;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;20767:2:24;26359:106:0;;;20749:21:24;20806:2;20786:18;;;20779:30;20845:34;20825:18;;;20818:62;-1:-1:-1;;;20896:18:24;;;20889:37;20943:19;;26359:106:0;20565:403:24;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:24;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:24;;14:180;-1:-1:-1;14:180:24:o;199:472::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;521:6;518:1;515:13;512:87;;;587:1;580:4;571:6;566:3;562:16;558:27;551:38;512:87;-1:-1:-1;653:2:24;632:15;-1:-1:-1;;628:29:24;619:39;;;;660:4;615:50;;199:472;-1:-1:-1;;199:472:24:o;676:570::-;929:3;918:9;911:22;892:4;950:46;991:3;980:9;976:19;968:6;950:46;:::i;:::-;1044:6;1032:19;;;;1027:2;1012:18;;1005:47;-1:-1:-1;1071:12:24;1119:15;;;1114:2;1099:18;;1092:43;1171:15;;;1166:2;1151:18;;1144:43;1224:15;;;1218:3;1203:19;;;1196:44;942:54;676:570;-1:-1:-1;676:570:24:o;1251:569::-;1500:3;1489:9;1482:22;1463:4;1521:46;1562:3;1551:9;1547:19;1539:6;1521:46;:::i;:::-;1610:14;;1603:22;1598:2;1583:18;;1576:50;-1:-1:-1;1645:12:24;1693:15;;;1688:2;1673:18;;1666:43;1745:15;;;1740:2;1725:18;;1718:43;1798:15;;;1792:3;1777:19;;;1770:44;1513:54;1251:569;-1:-1:-1;1251:569:24:o;2106:803::-;2268:4;2297:2;2337;2326:9;2322:18;2367:2;2356:9;2349:21;2390:6;2425;2419:13;2456:6;2448;2441:22;2494:2;2483:9;2479:18;2472:25;;2556:2;2546:6;2543:1;2539:14;2528:9;2524:30;2520:39;2506:53;;2594:2;2586:6;2582:15;2615:1;2625:255;2639:6;2636:1;2633:13;2625:255;;;2732:2;2728:7;2716:9;2708:6;2704:22;2700:36;2695:3;2688:49;2760:40;2793:6;2784;2778:13;2760:40;:::i;:::-;2750:50;-1:-1:-1;2858:12:24;;;;2823:15;;;;2661:1;2654:9;2625:255;;;-1:-1:-1;2897:6:24;;2106:803;-1:-1:-1;;;;;;;2106:803:24:o;2914:248::-;2982:6;2990;3043:2;3031:9;3022:7;3018:23;3014:32;3011:52;;;3059:1;3056;3049:12;3011:52;-1:-1:-1;;3082:23:24;;;3152:2;3137:18;;;3124:32;;-1:-1:-1;2914:248:24:o;3349:348::-;3401:8;3411:6;3465:3;3458:4;3450:6;3446:17;3442:27;3432:55;;3483:1;3480;3473:12;3432:55;-1:-1:-1;3506:20:24;;3549:18;3538:30;;3535:50;;;3581:1;3578;3571:12;3535:50;3618:4;3610:6;3606:17;3594:29;;3670:3;3663:4;3654:6;3646;3642:19;3638:30;3635:39;3632:59;;;3687:1;3684;3677:12;3632:59;3349:348;;;;;:::o;3702:165::-;3769:20;;3829:12;3818:24;;3808:35;;3798:63;;3857:1;3854;3847:12;3798:63;3702:165;;;:::o;3872:716::-;3967:6;3975;3983;3991;3999;4052:3;4040:9;4031:7;4027:23;4023:33;4020:53;;;4069:1;4066;4059:12;4020:53;4109:9;4096:23;4142:18;4134:6;4131:30;4128:50;;;4174:1;4171;4164:12;4128:50;4213:59;4264:7;4255:6;4244:9;4240:22;4213:59;:::i;:::-;4291:8;;-1:-1:-1;4187:85:24;-1:-1:-1;;4376:2:24;4361:18;;4348:32;4420:6;4409:18;;4399:29;;4389:57;;4442:1;4439;4432:12;4389:57;4465:5;-1:-1:-1;4489:37:24;4522:2;4507:18;;4489:37;:::i;:::-;4479:47;;4545:37;4578:2;4567:9;4563:18;4545:37;:::i;:::-;4535:47;;3872:716;;;;;;;;:::o;4593:131::-;-1:-1:-1;;;;;4668:31:24;;4658:42;;4648:70;;4714:1;4711;4704:12;4729:247;4788:6;4841:2;4829:9;4820:7;4816:23;4812:32;4809:52;;;4857:1;4854;4847:12;4809:52;4896:9;4883:23;4915:31;4940:5;4915:31;:::i;:::-;4965:5;4729:247;-1:-1:-1;;;4729:247:24:o;4981:555::-;5068:6;5076;5084;5092;5145:2;5133:9;5124:7;5120:23;5116:32;5113:52;;;5161:1;5158;5151:12;5113:52;5201:9;5188:23;5234:18;5226:6;5223:30;5220:50;;;5266:1;5263;5256:12;5220:50;5305:59;5356:7;5347:6;5336:9;5332:22;5305:59;:::i;:::-;5383:8;;-1:-1:-1;5279:85:24;-1:-1:-1;5437:37:24;;-1:-1:-1;5470:2:24;5455:18;;5437:37;:::i;:::-;5427:47;;5493:37;5526:2;5515:9;5511:18;5493:37;:::i;:::-;5483:47;;4981:555;;;;;;;:::o;5541:316::-;5618:6;5626;5634;5687:2;5675:9;5666:7;5662:23;5658:32;5655:52;;;5703:1;5700;5693:12;5655:52;-1:-1:-1;;5726:23:24;;;5796:2;5781:18;;5768:32;;-1:-1:-1;5847:2:24;5832:18;;;5819:32;;5541:316;-1:-1:-1;5541:316:24:o;5862:1018::-;6210:4;6239:3;6269:2;6258:9;6251:21;6289:45;6330:2;6319:9;6315:18;6307:6;6289:45;:::i;:::-;6353:12;6401:15;;;6396:2;6381:18;;6374:43;6448:2;6433:18;;6426:34;;;;-1:-1:-1;;6491:2:24;6476:18;;6469:34;;;;6552:4;6540:17;;;;6534:3;6519:19;;6512:46;6607:8;6595:21;;;;6589:3;6574:19;;6567:50;-1:-1:-1;;;;;6654:35:24;;;;6648:3;6633:19;;6626:64;6709:6;6752:15;;;6746:3;6731:19;;6724:44;6805:15;6799:3;6784:19;;6777:44;6858:15;;;6852:3;6837:19;;;6830:44;;;;6281:53;5862:1018;-1:-1:-1;5862:1018:24:o;7093:751::-;7197:6;7205;7213;7221;7274:2;7262:9;7253:7;7249:23;7245:32;7242:52;;;7290:1;7287;7280:12;7242:52;7326:9;7313:23;7303:33;;7383:2;7372:9;7368:18;7355:32;7345:42;;7438:2;7427:9;7423:18;7410:32;7461:18;7502:2;7494:6;7491:14;7488:34;;;7518:1;7515;7508:12;7488:34;7556:6;7545:9;7541:22;7531:32;;7601:7;7594:4;7590:2;7586:13;7582:27;7572:55;;7623:1;7620;7613:12;7572:55;7663:2;7650:16;7689:2;7681:6;7678:14;7675:34;;;7705:1;7702;7695:12;7675:34;7758:7;7753:2;7743:6;7740:1;7736:14;7732:2;7728:23;7724:32;7721:45;7718:65;;;7779:1;7776;7769:12;7718:65;7093:751;;;;-1:-1:-1;;7810:2:24;7802:11;;-1:-1:-1;;;7093:751:24:o;7849:643::-;8018:2;8070:21;;;8140:13;;8043:18;;;8162:22;;;7989:4;;8018:2;8241:15;;;;8215:2;8200:18;;;7989:4;8284:182;8298:6;8295:1;8292:13;8284:182;;;8363:13;;8378:6;8359:26;8347:39;;8441:15;;;;8406:12;;;;8320:1;8313:9;8284:182;;;-1:-1:-1;8483:3:24;;7849:643;-1:-1:-1;;;;;;7849:643:24:o;8497:380::-;8576:1;8572:12;;;;8619;;;8640:61;;8694:4;8686:6;8682:17;8672:27;;8640:61;8747:2;8739:6;8736:14;8716:18;8713:38;8710:161;;8793:10;8788:3;8784:20;8781:1;8774:31;8828:4;8825:1;8818:15;8856:4;8853:1;8846:15;8710:161;;8497:380;;;:::o;8882:127::-;8943:10;8938:3;8934:20;8931:1;8924:31;8974:4;8971:1;8964:15;8998:4;8995:1;8988:15;9014:127;9075:10;9070:3;9066:20;9063:1;9056:31;9106:4;9103:1;9096:15;9130:4;9127:1;9120:15;9849:127;9910:10;9905:3;9901:20;9898:1;9891:31;9941:4;9938:1;9931:15;9965:4;9962:1;9955:15;9981:128;10021:3;10052:1;10048:6;10045:1;10042:13;10039:39;;;10058:18;;:::i;:::-;-1:-1:-1;10094:9:24;;9981:128::o;10240:545::-;10342:2;10337:3;10334:11;10331:448;;;10378:1;10403:5;10399:2;10392:17;10448:4;10444:2;10434:19;10518:2;10506:10;10502:19;10499:1;10495:27;10489:4;10485:38;10554:4;10542:10;10539:20;10536:47;;;-1:-1:-1;10577:4:24;10536:47;10632:2;10627:3;10623:12;10620:1;10616:20;10610:4;10606:31;10596:41;;10687:82;10705:2;10698:5;10695:13;10687:82;;;10750:17;;;10731:1;10720:13;10687:82;;10331:448;10240:545;;;:::o;10961:1206::-;11085:18;11080:3;11077:27;11074:53;;;11107:18;;:::i;:::-;11136:94;11226:3;11186:38;11218:4;11212:11;11186:38;:::i;:::-;11180:4;11136:94;:::i;:::-;11256:1;11281:2;11276:3;11273:11;11298:1;11293:616;;;;11953:1;11970:3;11967:93;;;-1:-1:-1;12026:19:24;;;12013:33;11967:93;-1:-1:-1;;10918:1:24;10914:11;;;10910:24;10906:29;10896:40;10942:1;10938:11;;;10893:57;12073:78;;11266:895;;11293:616;10187:1;10180:14;;;10224:4;10211:18;;-1:-1:-1;;11329:17:24;;;11430:9;11452:229;11466:7;11463:1;11460:14;11452:229;;;11555:19;;;11542:33;11527:49;;11662:4;11647:20;;;;11615:1;11603:14;;;;11482:12;11452:229;;;11456:3;11709;11700:7;11697:16;11694:159;;;11833:1;11829:6;11823:3;11817;11814:1;11810:11;11806:21;11802:34;11798:39;11785:9;11780:3;11776:19;11763:33;11759:79;11751:6;11744:95;11694:159;;;11896:1;11890:3;11887:1;11883:11;11879:19;11873:4;11866:33;11266:895;;;10961:1206;;;:::o;12172:356::-;12374:2;12356:21;;;12393:18;;;12386:30;12452:34;12447:2;12432:18;;12425:62;12519:2;12504:18;;12172:356::o;13226:135::-;13265:3;13286:17;;;13283:43;;13306:18;;:::i;:::-;-1:-1:-1;13353:1:24;13342:13;;13226:135::o;14054:251::-;14124:6;14177:2;14165:9;14156:7;14152:23;14148:32;14145:52;;;14193:1;14190;14183:12;14145:52;14225:9;14219:16;14244:31;14269:5;14244:31;:::i;15461:1352::-;15587:3;15581:10;15614:18;15606:6;15603:30;15600:56;;;15636:18;;:::i;:::-;15665:97;15755:6;15715:38;15747:4;15741:11;15715:38;:::i;:::-;15709:4;15665:97;:::i;:::-;15817:4;;15881:2;15870:14;;15898:1;15893:663;;;;16600:1;16617:6;16614:89;;;-1:-1:-1;16669:19:24;;;16663:26;16614:89;-1:-1:-1;;10918:1:24;10914:11;;;10910:24;10906:29;10896:40;10942:1;10938:11;;;10893:57;16716:81;;15863:944;;15893:663;10187:1;10180:14;;;10224:4;10211:18;;-1:-1:-1;;15929:20:24;;;16047:236;16061:7;16058:1;16055:14;16047:236;;;16150:19;;;16144:26;16129:42;;16242:27;;;;16210:1;16198:14;;;;16077:19;;16047:236;;;16051:3;16311:6;16302:7;16299:19;16296:201;;;16372:19;;;16366:26;-1:-1:-1;;16455:1:24;16451:14;;;16467:3;16447:24;16443:37;16439:42;16424:58;16409:74;;16296:201;-1:-1:-1;;;;;16543:1:24;16527:14;;;16523:22;16510:36;;-1:-1:-1;15461:1352:24:o;17871:300::-;17910:1;-1:-1:-1;;;;;17985:2:24;17982:1;17978:10;18007:3;17997:134;;18053:10;18048:3;18044:20;18041:1;18034:31;18088:4;18085:1;18078:15;18116:4;18113:1;18106:15;17997:134;18149:10;;18145:20;;;;;17871:300;-1:-1:-1;;17871:300:24:o;19130:344::-;19332:2;19314:21;;;19371:2;19351:18;;;19344:30;-1:-1:-1;;;19405:2:24;19390:18;;19383:50;19465:2;19450:18;;19130:344::o;19886:265::-;19925:3;19953:9;;;19978:10;;-1:-1:-1;;;;;19997:27:24;;;19990:35;;19974:52;19971:78;;;20029:18;;:::i;:::-;-1:-1:-1;;;20076:19:24;;;20069:27;;20061:36;;20058:62;;;20100:18;;:::i;:::-;-1:-1:-1;;20136:9:24;;19886:265::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    16704
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C7C7E5A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C7C7E5A EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x551BBE0B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x551BBE0B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x64D924EF EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x379D94CC EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x43BB8DB5 EQ PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1AA SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x9C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9F JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x20B1 JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x18A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x3F7 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x423 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x470 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x445 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x470 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x453 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x529 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP2 AND SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x58 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x659 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5B0 JUMPI PUSH2 0x5B0 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x5DD JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5F4 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x273790363AB1B597 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH2 0x63F PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x592 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x693 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x84E JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6CD JUMPI PUSH2 0x6CD PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x729 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x705 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND LT JUMPDEST DUP1 ISZERO PUSH2 0x768 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x744 JUMPI PUSH2 0x744 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x58 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x846 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x780 JUMPI PUSH2 0x780 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x79C SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C8 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x815 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x815 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x82C JUMPI PUSH2 0x82C PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x84E JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x6AF JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x87E JUMPI POP PUSH2 0x101 DUP4 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP7 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x95C DUP7 DUP9 DUP4 PUSH2 0x225B JUMP JUMPDEST POP PUSH2 0x96C DUP7 DUP7 PUSH1 0x8 SLOAD DUP7 DUP7 PUSH2 0x1A66 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x58A PUSH1 0x0 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x1A66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0xB40 JUMPI PUSH2 0xB40 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0xB70 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xB99 JUMPI PUSH2 0xB99 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xBCB DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB9 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xC69 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC95 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCE2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCE2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH5 0x100000000 DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6C PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP3 POP DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0xDEF JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE04 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x109D JUMPI PUSH2 0xE14 PUSH1 0x5 DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xE42 SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6E SWAP1 PUSH2 0x217C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE90 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEBB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH5 0x100000000 DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP3 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 SWAP4 POP PUSH2 0xF70 SWAP1 TIMESTAMP PUSH2 0x21F8 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0xF8D PUSH1 0x5 DUP6 PUSH2 0x1B5F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xFAB SWAP1 DUP3 PUSH2 0x2387 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1180 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP5 EQ JUMPDEST PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST DUP1 PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x121C JUMPI DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1210 JUMPI PUSH2 0x1210 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x125F JUMP JUMPDEST DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x122F JUMPI PUSH2 0x122F PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1248 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x4 DUP5 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x12A0 JUMPI DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x1294 JUMPI PUSH2 0x1294 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12E2 JUMP JUMPDEST DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x12B2 JUMPI PUSH2 0x12B2 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1264 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x132B JUMPI PUSH1 0x0 PUSH2 0x132E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x1 SUB PUSH2 0x1636 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1360 SWAP1 PUSH1 0x2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x146E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1520 DUP3 DUP3 PUSH2 0x1CCD JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x15C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x160A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x247B JUMP JUMPDEST POP POP POP POP PUSH2 0x189B JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x17AE JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1666 SWAP1 PUSH1 0x2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x176E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP16 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH5 0x100000000 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x17DF DUP3 DUP3 PUSH2 0x1CCD JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x1826 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x247B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85C SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85C JUMP JUMPDEST PUSH2 0x193D DUP2 PUSH2 0x1B0D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B4 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x1A0E JUMPI PUSH2 0x1A0E PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A3A JUMPI PUSH2 0x1A3A PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x1A57 DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19E3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x1AAA DUP8 DUP10 DUP4 PUSH2 0x225B JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH5 0xFFFFFFFFFF PUSH1 0x58 SHL NOT SWAP6 DUP6 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH11 0xFFFFFFFFFF000000000000 NOT SWAP6 SWAP1 SWAP8 AND PUSH2 0x100 MUL SWAP5 SWAP1 SWAP5 AND PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B82 PUSH2 0x1B6E DUP5 PUSH2 0x1BD0 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x1B7D SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x1C3E JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x1BB5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x1C71 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85C JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1CD9 SWAP1 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1CE9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x193D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D3A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D90 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1DD4 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1D30 JUMP JUMPDEST SWAP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E56 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1E44 DUP6 DUP4 MLOAD PUSH2 0x1D30 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E28 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F23 DUP9 DUP3 DUP10 ADD PUSH2 0x1E85 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1F3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x1F4C PUSH1 0x40 DUP8 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5A PUSH1 0x60 DUP8 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F98 DUP2 PUSH2 0x1F66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD8 DUP8 DUP3 DUP9 ADD PUSH2 0x1E85 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x1FEB SWAP1 POP PUSH1 0x20 DUP7 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF9 PUSH1 0x40 DUP7 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x2044 DUP2 DUP5 ADD DUP15 PUSH2 0x1D30 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2170 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2150 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2190 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x21E2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2256 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2237 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x96C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2243 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2273 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x2287 DUP4 PUSH2 0x2281 DUP4 SLOAD PUSH2 0x217C JUMP JUMPDEST DUP4 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x22A3 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22EC JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x22CC JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2363 JUMPI PUSH2 0x2363 PUSH2 0x21E2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F98 DUP2 PUSH2 0x1F66 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A1 JUMPI PUSH2 0x23A1 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x23B5 DUP2 PUSH2 0x23AF DUP5 SLOAD PUSH2 0x217C JUMP JUMPDEST DUP5 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x23EA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x23D2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2419 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23FA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2437 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x246F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x24CB JUMPI PUSH2 0x24CB PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E4 PUSH2 0x21E2 JUMP JUMPDEST POP POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH7 0xC8383AAD1AE3EF PUSH10 0x61243AB5E74C21FDA1EB 0xE5 0x4F 0xE6 0xB6 PUSH8 0xC0B70ECA56835F64 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7C7C7E5A"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x327"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "REVERT",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7C7C7E5A"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x291"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D1"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F1"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "REVERT",
      "path": "2"
    },
    "149": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x551BBE0B"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "GT",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC"
    },
    "160": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x551BBE0B"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x64D924EF"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "REVERT",
      "path": "2"
    },
    "220": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119"
    },
    "231": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153"
    },
    "242": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x379D94CC"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x43BB8DB5"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "REVERT",
      "path": "2"
    },
    "269": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "270": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "274": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "STOP",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "279": {
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "DUP1",
      "path": "2"
    },
    "280": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        16704
      ],
      "op": "REVERT",
      "path": "2"
    },
    "281": {
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "284": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "285": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125"
    },
    "288": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "289": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "REVERT",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x139"
    },
    "298": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x134"
    },
    "301": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "302": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "304": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "307": {
      "fn": null,
      "jump": "i",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "308": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DC"
    },
    "312": {
      "fn": null,
      "jump": "i",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "313": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "316": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "320": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "322": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "324": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "325": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7D"
    },
    "329": {
      "fn": null,
      "jump": "i",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "333": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "335": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SUB",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "338": {
      "fn": null,
      "offset": [
        2644,
        2690
      ],
      "op": "RETURN",
      "path": "2"
    },
    "339": {
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "340": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "346": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "347": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "349": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "REVERT",
      "path": "2"
    },
    "351": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "op": "POP"
    },
    "353": {
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173"
    },
    "356": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E"
    },
    "359": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "360": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "362": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "365": {
      "fn": null,
      "jump": "i",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "366": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "367": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A8"
    },
    "370": {
      "fn": null,
      "jump": "i",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "371": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "374": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "378": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "382": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "384": {
      "fn": null,
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC1"
    },
    "387": {
      "fn": null,
      "jump": "i",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "388": {
      "offset": [
        2477,
        2528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x190"
    },
    "395": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "398": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "399": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "REVERT",
      "path": "2"
    },
    "400": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "404": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "405": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "408": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "409": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "411": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "412": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "413": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "414": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "offset": [
        2477,
        2528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "421": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DIV",
      "path": "2"
    },
    "422": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "423": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "424": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "425": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "JUMP",
      "path": "2"
    },
    "426": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "427": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "429": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "430": {
      "fn": null,
      "offset": [
        2477,
        2528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "433": {
      "op": "SWAP4"
    },
    "434": {
      "op": "DUP5"
    },
    "435": {
      "op": "SIGNEXTEND"
    },
    "436": {
      "op": "DUP2"
    },
    "437": {
      "op": "MSTORE"
    },
    "438": {
      "op": "SWAP2"
    },
    "439": {
      "op": "SWAP1"
    },
    "440": {
      "op": "SWAP3"
    },
    "441": {
      "op": "SIGNEXTEND"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "444": {
      "op": "DUP3"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "offset": [
        2477,
        2528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "451": {
      "op": "JUMP"
    },
    "452": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "453": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "454": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "456": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "459": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "460": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "462": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "DUP1",
      "path": "2"
    },
    "463": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "REVERT",
      "path": "2"
    },
    "464": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "465": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "POP",
      "path": "2"
    },
    "466": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "STOP",
      "path": "2"
    },
    "468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "DUP1",
      "path": "2"
    },
    "471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E0"
    },
    "475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "DUP1",
      "path": "2"
    },
    "479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "REVERT",
      "path": "2"
    },
    "480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "POP",
      "path": "2"
    },
    "482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E9"
    },
    "485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58C"
    },
    "488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E01"
    },
    "501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "502": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x202"
    },
    "509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "515": {
      "op": "POP"
    },
    "516": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E"
    },
    "519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x211"
    },
    "522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E63"
    },
    "528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "562": {
      "op": "SWAP1"
    },
    "563": {
      "op": "DUP2"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "571": {
      "op": "JUMP"
    },
    "572": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "573": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "574": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "DUP1",
      "path": "2"
    },
    "575": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "576": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x248"
    },
    "579": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "582": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "DUP1",
      "path": "2"
    },
    "583": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "REVERT",
      "path": "2"
    },
    "584": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "589": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x257"
    },
    "592": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "593": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "595": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE8"
    },
    "598": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "599": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "600": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x857"
    },
    "603": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "604": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "605": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "606": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "607": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "608": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268"
    },
    "611": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "612": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "614": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "615": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "REVERT",
      "path": "2"
    },
    "616": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "621": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x277"
    },
    "624": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "625": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "627": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F7B"
    },
    "630": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "631": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "632": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x974"
    },
    "635": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x288"
    },
    "643": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "12"
    },
    "648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "12"
    },
    "650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D2"
    },
    "653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9C0"
    },
    "656": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "657": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "658": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "659": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "660": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "661": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29D"
    },
    "664": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "665": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "667": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "668": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "REVERT",
      "path": "2"
    },
    "669": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "674": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC"
    },
    "677": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "678": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "680": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9F"
    },
    "683": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "684": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "685": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F4"
    },
    "688": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "692": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BD"
    },
    "696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "697": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "699": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "REVERT",
      "path": "2"
    },
    "701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E"
    },
    "706": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CC"
    },
    "709": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "710": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "712": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "715": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "717": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA08"
    },
    "720": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMP",
      "path": "2"
    },
    "721": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "722": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "723": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "DUP1",
      "path": "2"
    },
    "724": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "725": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DD"
    },
    "728": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "729": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "731": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "DUP1",
      "path": "2"
    },
    "732": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "REVERT",
      "path": "2"
    },
    "733": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "738": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "741": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "742": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "744": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2004"
    },
    "747": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "748": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "749": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC15"
    },
    "752": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "753": {
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "754": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "755": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "756": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "757": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FD"
    },
    "760": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "761": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "764": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "REVERT",
      "path": "2"
    },
    "765": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x311"
    },
    "770": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C"
    },
    "773": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "774": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "776": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "779": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "780": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "781": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4E"
    },
    "784": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "785": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "786": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "788": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "789": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "792": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "793": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "794": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "795": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "796": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "797": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "800": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "801": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "802": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "803": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2030"
    },
    "806": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "807": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "808": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "809": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "810": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "811": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x333"
    },
    "814": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "815": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "817": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "818": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "12"
    },
    "819": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "823": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "824": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "826": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "op": "SUB"
    },
    "835": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "836": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "838": {
      "op": "DUP2"
    },
    "839": {
      "op": "MSTORE"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "842": {
      "op": "ADD"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14A"
    },
    "846": {
      "op": "JUMP"
    },
    "847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "849": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "850": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "851": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35B"
    },
    "854": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "855": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "857": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "REVERT",
      "path": "2"
    },
    "859": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "864": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A"
    },
    "867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "870": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "873": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "874": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "875": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD51"
    },
    "878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "881": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "DUP1",
      "path": "2"
    },
    "882": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "883": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B"
    },
    "886": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "887": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "889": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "DUP1",
      "path": "2"
    },
    "890": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "REVERT",
      "path": "2"
    },
    "891": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "896": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A"
    },
    "899": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "900": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "902": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B1"
    },
    "905": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMP",
      "path": "2"
    },
    "906": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "907": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E2"
    },
    "910": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMP",
      "path": "2"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39B"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "12"
    },
    "923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D2"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AA"
    },
    "931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F7B"
    },
    "937": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18A5"
    },
    "942": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "943": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "945": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "946": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "947": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BB"
    },
    "950": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "951": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "953": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "954": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "REVERT",
      "path": "2"
    },
    "955": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CF"
    },
    "960": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CA"
    },
    "963": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "964": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "966": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "969": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "970": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "971": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1940"
    },
    "974": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "975": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "976": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "978": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "979": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "982": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "983": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "984": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2134"
    },
    "987": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "988": {
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "991": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "993": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "994": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "996": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "997": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "998": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "999": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1001": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1002": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1003": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1005": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1006": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1007": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F7"
    },
    "1010": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1011": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1014": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1015": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1016": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1017": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1019": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1020": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1022": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1023": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1024": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DIV",
      "path": "2"
    },
    "1025": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MUL",
      "path": "2"
    },
    "1026": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1028": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1031": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1032": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1033": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1034": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1035": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1037": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1038": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1039": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1040": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1041": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1042": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1043": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1044": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1045": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1047": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1048": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1049": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1050": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1051": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x423"
    },
    "1054": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1055": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1058": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1062": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x470"
    },
    "1065": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1066": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1067": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1069": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "LT",
      "path": "2"
    },
    "1070": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "1073": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1077": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1078": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1079": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1080": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DIV",
      "path": "2"
    },
    "1081": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MUL",
      "path": "2"
    },
    "1082": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1084": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1085": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1087": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1088": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1089": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x470"
    },
    "1092": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1094": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1095": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1096": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1097": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1098": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1100": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1101": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1103": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1105": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1106": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1107": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1108": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1109": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1110": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1111": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1112": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1113": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1115": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1116": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1119": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1120": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1121": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1122": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "GT",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x453"
    },
    "1126": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1127": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1128": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SUB",
      "path": "2"
    },
    "1130": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1132": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "AND",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1134": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1135": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1136": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "op": "POP"
    },
    "1141": {
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1143": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1144": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1145": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1146": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1148": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1150": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1151": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1152": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1153": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1154": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1157": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "AND",
      "path": "2"
    },
    "1158": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1159": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1165": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1166": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1167": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "AND",
      "path": "2"
    },
    "1168": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "offset": [
        2644,
        2690
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1177": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1178": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DIV",
      "path": "2"
    },
    "1179": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1180": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "AND",
      "path": "2"
    },
    "1181": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1186": {
      "op": "SHL"
    },
    "1187": {
      "offset": [
        2644,
        2690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DIV",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "AND",
      "path": "2"
    },
    "1190": {
      "fn": "Governance.getVotes",
      "offset": [
        2644,
        2690
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1191": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2644,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1192": {
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1193": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1195": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1196": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1199": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "LT",
      "path": "2"
    },
    "1200": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B8"
    },
    "1203": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1204": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1206": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1207": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1208": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1209": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1210": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1212": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1215": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1217": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1219": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1221": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MUL",
      "path": "2"
    },
    "1222": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1223": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1225": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1226": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "POP",
      "path": "2"
    },
    "1227": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1228": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "POP",
      "path": "2"
    },
    "1229": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1230": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1232": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1233": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1234": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1235": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB"
    },
    "1238": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1239": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1242": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1244": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1245": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1247": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1248": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1250": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1251": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1252": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DIV",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MUL",
      "path": "2"
    },
    "1254": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1256": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1257": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1259": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1260": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1261": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1262": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1263": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1270": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1271": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1275": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1278": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1279": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "1282": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1283": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1287": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1289": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1290": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x554"
    },
    "1293": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1294": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1295": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "LT",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x529"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1302": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1305": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1307": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1308": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DIV",
      "path": "2"
    },
    "1309": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MUL",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1313": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x554"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1322": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1323": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1329": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1331": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1334": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1335": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1336": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1338": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1340": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1343": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1344": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "GT",
      "path": "2"
    },
    "1351": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x537"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1356": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1357": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SUB",
      "path": "2"
    },
    "1358": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "AND",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1370": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1371": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "AND",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1389": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DIV",
      "path": "2"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1395": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "AND",
      "path": "2"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "offset": [
        2340,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1403": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DIV",
      "path": "2"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "AND",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DIV",
      "path": "2"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "AND",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2340,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1418": {
      "fn": "Governance.completeTask",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        11750,
        12057
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5144,
        5159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5171,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5171,
        5184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5214,
        5223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5214,
        5230
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5211,
        5230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5211,
        5230
      ],
      "op": "LT",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x659"
    },
    "1436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5296,
        5311
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5259,
        5260
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "LT",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B0"
    },
    "1448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B0"
    },
    "1452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5249,
        5261
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5282,
        5292
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "MUL",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5261
      ],
      "op": "ADD",
      "path": "2"
    },
    "1478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1485": {
      "branch": 70,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5249,
        5311
      ],
      "op": "LT",
      "path": "2"
    },
    "1486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DD"
    },
    "1490": {
      "branch": 70,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5441,
        5448
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 1
    },
    "1492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5441,
        5448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5441,
        5448
      ],
      "op": "ADD",
      "path": "2"
    },
    "1495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5441,
        5448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5441,
        5448
      ],
      "op": "POP",
      "path": "2"
    },
    "1497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x651"
    },
    "1500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5539,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "ADD",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5500,
        5524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5500,
        5524
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "ADD",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "ADD",
      "path": "2"
    },
    "1532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SUB",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F4"
    },
    "1542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "POP",
      "path": "2"
    },
    "1545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5526,
        5541
      ],
      "op": "POP",
      "path": "2"
    },
    "1546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5500,
        5541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5500,
        5541
      ],
      "op": "POP",
      "path": "2"
    },
    "1548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x40"
    },
    "1550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "ADD",
      "path": "2"
    },
    "1555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "ADD",
      "path": "2"
    },
    "1566": {
      "op": "PUSH8",
      "value": "0x273790363AB1B597"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "POP",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5568,
        5569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "LT",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63F"
    },
    "1591": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63F"
    },
    "1595": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5559,
        5570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "MUL",
      "path": "2"
    },
    "1605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "ADD",
      "path": "2"
    },
    "1609": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5570
      ],
      "op": "ADD",
      "path": "2"
    },
    "1610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5559,
        5583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5608,
        5616
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 3
    },
    "1612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5246,
        5631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5654,
        5657
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "1620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5654,
        5657
      ],
      "op": "ADD",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x592"
    },
    "1624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5194,
        5669
      ],
      "op": "POP",
      "path": "2"
    },
    "1627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5679,
        5702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5718,
        5723
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "GT",
      "path": "2"
    },
    "1641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x675"
    },
    "1645": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x675"
    },
    "1649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CC"
    },
    "1652": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "MUL",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ADD",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1669": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ADD",
      "path": "2"
    },
    "1670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "1678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ADD",
      "path": "2"
    },
    "1683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "ADD",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SUB",
      "path": "2"
    },
    "1696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x693"
    },
    "1701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1703": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "POP",
      "path": "2"
    },
    "1704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5705,
        5724
      ],
      "op": "POP",
      "path": "2"
    },
    "1706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5679,
        5724
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5679,
        5724
      ],
      "op": "POP",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5734,
        5749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5767,
        5776
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5783,
        5792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5783,
        5799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5780,
        5799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5780,
        5799
      ],
      "op": "LT",
      "path": "2"
    },
    "1717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84E"
    },
    "1721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5865,
        5880
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5828,
        5829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "LT",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CD"
    },
    "1733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CD"
    },
    "1737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5818,
        5830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1742": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1749": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5851,
        5861
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1753": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "MUL",
      "path": "2"
    },
    "1760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5830
      ],
      "op": "ADD",
      "path": "2"
    },
    "1763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5862
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1770": {
      "branch": 71,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5880
      ],
      "op": "LT",
      "path": "2"
    },
    "1771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1773": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x729"
    },
    "1776": {
      "branch": 71,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "POP",
      "path": "2"
    },
    "1778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5912,
        5927
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5894,
        5895
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "LT",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x705"
    },
    "1789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x705"
    },
    "1793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5884,
        5896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "MUL",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5896
      ],
      "op": "ADD",
      "path": "2"
    },
    "1814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "ADD",
      "path": "2"
    },
    "1817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "DIV",
      "path": "2"
    },
    "1825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5909
      ],
      "op": "AND",
      "path": "2"
    },
    "1832": {
      "branch": 72,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5884,
        5927
      ],
      "op": "LT",
      "path": "2"
    },
    "1833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x768"
    },
    "1839": {
      "branch": 72,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "POP",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5959,
        5974
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5941,
        5942
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "LT",
      "path": "2"
    },
    "1849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x744"
    },
    "1852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x744"
    },
    "1856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5931,
        5943
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1865": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1869": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1873": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "MUL",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5943
      ],
      "op": "ADD",
      "path": "2"
    },
    "1877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "ADD",
      "path": "2"
    },
    "1880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "DIV",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5956
      ],
      "op": "AND",
      "path": "2"
    },
    "1895": {
      "branch": 73,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5931,
        5974
      ],
      "op": "GT",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5818,
        5974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5815,
        6165
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5815,
        6165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x846"
    },
    "1901": {
      "branch": 73,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5815,
        6165
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6016
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x4"
    },
    "1904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6017,
        6018
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "LT",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x780"
    },
    "1912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x780"
    },
    "1916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "1919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6007,
        6019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "MUL",
      "path": "2"
    },
    "1934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6019
      ],
      "op": "ADD",
      "path": "2"
    },
    "1935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6007,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79C"
    },
    "1943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "1953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DIV",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MUL",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "1962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "1981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C8"
    },
    "1987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1991": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1994": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x815"
    },
    "1998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "LT",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EA"
    },
    "2006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DIV",
      "path": "2"
    },
    "2014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MUL",
      "path": "2"
    },
    "2015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x815"
    },
    "2025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "GT",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F8"
    },
    "2059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2061": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2062": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SUB",
      "path": "2"
    },
    "2063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "AND",
      "path": "2"
    },
    "2066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "ADD",
      "path": "2"
    },
    "2068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2071": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6001
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6002,
        6003
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "LT",
      "path": "2"
    },
    "2081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82C"
    },
    "2084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82C"
    },
    "2088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "2091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        5994,
        6004
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "MUL",
      "path": "2"
    },
    "2096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "ADD",
      "path": "2"
    },
    "2099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6004
      ],
      "op": "ADD",
      "path": "2"
    },
    "2100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5994,
        6028
      ],
      "op": "POP",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6056,
        6065
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "2105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6056,
        6065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6056,
        6065
      ],
      "op": "ADD",
      "path": "2"
    },
    "2108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6056,
        6065
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6056,
        6065
      ],
      "op": "POP",
      "path": "2"
    },
    "2110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6098,
        6103
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6087,
        6094
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2112": {
      "branch": 74,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6087,
        6103
      ],
      "op": "LT",
      "path": "2"
    },
    "2113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6084,
        6151
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6127,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x84E"
    },
    "2117": {
      "branch": 74,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6084,
        6151
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6084,
        6151
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6188,
        6191
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "2121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6188,
        6191
      ],
      "op": "ADD",
      "path": "2"
    },
    "2122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AF"
    },
    "2125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5763,
        6203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6219,
        6226
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 9
    },
    "2129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6219,
        6226
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        5086,
        6233
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        5086,
        6233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2135": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "offset": [
        16622,
        16658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x865"
    },
    "2139": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2140": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2141": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2143": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2144": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2145": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2146": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "SUB",
      "path": "2"
    },
    "2147": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2148": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2149": {
      "fn": "Governance.createProposal",
      "offset": [
        16622,
        16658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2150": {
      "fn": "Governance.createProposal",
      "offset": [
        7911,
        7912
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x1"
    },
    "2152": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7908
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2156": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7912
      ],
      "op": "AND",
      "path": "2"
    },
    "2157": {
      "branch": 75,
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7912
      ],
      "op": "GT",
      "path": "2"
    },
    "2158": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2160": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87E"
    },
    "2163": {
      "branch": 75,
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2164": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "POP",
      "path": "2"
    },
    "2165": {
      "fn": "Governance.createProposal",
      "offset": [
        7935,
        7938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "2168": {
      "fn": "Governance.createProposal",
      "offset": [
        7916,
        7932
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2169": {
      "fn": "Governance.createProposal",
      "offset": [
        7916,
        7938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2172": {
      "fn": "Governance.createProposal",
      "offset": [
        7916,
        7938
      ],
      "op": "AND",
      "path": "2"
    },
    "2173": {
      "branch": 76,
      "fn": "Governance.createProposal",
      "offset": [
        7916,
        7938
      ],
      "op": "LT",
      "path": "2"
    },
    "2174": {
      "fn": "Governance.createProposal",
      "offset": [
        7892,
        7938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2175": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CA"
    },
    "2178": {
      "branch": 76,
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2179": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2181": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2190": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2193": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2195": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "ADD",
      "path": "2"
    },
    "2197": {
      "op": "MSTORE"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2240": {
      "op": "DUP3"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "2249": {
      "op": "JUMP"
    },
    "2250": {
      "fn": "Governance.createProposal",
      "offset": [
        7884,
        7968
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.createProposal",
      "offset": [
        7996,
        7997
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "2253": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2255": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2257": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DD"
    },
    "2263": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2264": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2265": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F8"
    },
    "2268": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        7978,
        7997
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2269": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2270": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2271": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.createProposal",
      "offset": [
        7978,
        7997
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "op": "POP"
    },
    "2275": {
      "fn": "Governance.createProposal",
      "offset": [
        8068,
        8082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2277": {
      "fn": "Governance.createProposal",
      "offset": [
        8068,
        8082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2278": {
      "fn": "Governance.createProposal",
      "offset": [
        8028,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2280": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2285": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2287": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2288": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2290": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2292": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8120
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x3"
    },
    "2294": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8120
      ],
      "op": "ADD",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2298": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "2314": {
      "op": "NOT"
    },
    "2315": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "AND",
      "path": "2",
      "statement": 13
    },
    "2316": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "2323": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2329": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "AND",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.createProposal",
      "offset": [
        8097,
        8136
      ],
      "op": "MUL",
      "path": "2"
    },
    "2336": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "NOT"
    },
    "2346": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "AND",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2350": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "OR",
      "path": "2"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "AND",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2361": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2362": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "MUL",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "OR",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2365": {
      "fn": "Governance.createProposal",
      "offset": [
        8150,
        8189
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8229
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "2369": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2370": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2371": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2375": {
      "op": "NOT"
    },
    "2376": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "AND",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2380": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2381": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "AND",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "OR",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.createProposal",
      "offset": [
        8203,
        8248
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2385": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2386": {
      "fn": "Governance.createProposal",
      "offset": [
        8262,
        8293
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x95C"
    },
    "2389": {
      "fn": "Governance.createProposal",
      "offset": [
        8284,
        8293
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.createProposal",
      "offset": [
        8284,
        8293
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2391": {
      "fn": "Governance.createProposal",
      "offset": [
        8058,
        8083
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2392": {
      "fn": "Governance.createProposal",
      "offset": [
        8262,
        8293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225B"
    },
    "2395": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        8262,
        8293
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2396": {
      "fn": "Governance.createProposal",
      "offset": [
        8262,
        8293
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2397": {
      "fn": "Governance.createProposal",
      "offset": [
        8262,
        8293
      ],
      "op": "POP",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.createProposal",
      "offset": [
        8304,
        8384
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x96C"
    },
    "2401": {
      "fn": "Governance.createProposal",
      "offset": [
        8320,
        8329
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2402": {
      "fn": "Governance.createProposal",
      "offset": [
        8320,
        8329
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2403": {
      "fn": "Governance.createProposal",
      "offset": [
        8338,
        8352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2405": {
      "fn": "Governance.createProposal",
      "offset": [
        8338,
        8352
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.createProposal",
      "offset": [
        8355,
        8368
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.createProposal",
      "offset": [
        8370,
        8383
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2408": {
      "fn": "Governance.createProposal",
      "offset": [
        8304,
        8319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A66"
    },
    "2411": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        8304,
        8384
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2412": {
      "fn": "Governance.createProposal",
      "offset": [
        8304,
        8384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2413": {
      "fn": "Governance.createProposal",
      "offset": [
        7874,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2415": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2416": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.createProposal",
      "offset": [
        7735,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "2419": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        7735,
        8422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2420": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2421": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2423": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2433": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 17
    },
    "2434": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2435": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x99E"
    },
    "2438": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2439": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2441": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2450": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2451": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2453": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2454": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x85C"
    },
    "2457": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2458": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231C"
    },
    "2461": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2462": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2463": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6420
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x2"
    },
    "2465": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2466": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "NOT"
    },
    "2476": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "AND",
      "path": "2"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2486": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2487": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2488": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "AND",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2491": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2492": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "OR",
      "path": "2"
    },
    "2493": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        6410,
        6437
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2495": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        6343,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2497": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2499": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "op": "SUB"
    },
    "2508": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2509": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2510": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2511": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9EA"
    },
    "2514": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2515": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2517": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2526": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2527": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2529": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2530": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x85C"
    },
    "2533": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2534": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231C"
    },
    "2537": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2538": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 19,
      "value": "0x58A"
    },
    "2542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2544": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B0D"
    },
    "2547": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2548": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.createTaskType",
      "offset": [
        8552,
        8611
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xA02"
    },
    "2552": {
      "fn": "Governance.createTaskType",
      "offset": [
        8568,
        8577
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.createTaskType",
      "offset": [
        8568,
        8577
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2554": {
      "fn": "Governance.createTaskType",
      "offset": [
        8579,
        8580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2556": {
      "fn": "Governance.createTaskType",
      "offset": [
        8582,
        8595
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2557": {
      "fn": "Governance.createTaskType",
      "offset": [
        8597,
        8610
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.createTaskType",
      "offset": [
        8552,
        8567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A66"
    },
    "2561": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        8552,
        8611
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.createTaskType",
      "offset": [
        8552,
        8611
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2563": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "POP",
      "path": "2"
    },
    "2564": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "POP",
      "path": "2"
    },
    "2565": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "POP",
      "path": "2"
    },
    "2566": {
      "fn": "Governance.createTaskType",
      "offset": [
        8428,
        8618
      ],
      "op": "POP",
      "path": "2"
    },
    "2567": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        8428,
        8618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4110,
        5079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4177,
        4184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2571": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4218,
        4232
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x8"
    },
    "2573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4218,
        4232
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4205,
        4215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2575": {
      "branch": 77,
      "fn": "Governance.getWinningVote",
      "offset": [
        4205,
        4232
      ],
      "op": "LT",
      "path": "2"
    },
    "2576": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA4E"
    },
    "2579": {
      "branch": 77,
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2582": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2589": {
      "op": "SHL"
    },
    "2590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2591": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2596": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "ADD",
      "path": "2"
    },
    "2598": {
      "op": "MSTORE"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2603": {
      "op": "DUP3"
    },
    "2604": {
      "op": "ADD"
    },
    "2605": {
      "op": "MSTORE"
    },
    "2606": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2628": {
      "op": "DUP3"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "2637": {
      "op": "JUMP"
    },
    "2638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4197,
        4253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "2641": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2642": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2646": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2648": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2651": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2652": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4311
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2653": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2655": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "ADD",
      "path": "2"
    },
    "2656": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2663": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "DIV",
      "path": "2"
    },
    "2664": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2670": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4290,
        4324
      ],
      "op": "AND",
      "path": "2"
    },
    "2671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4272,
        4287
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2672": {
      "branch": 78,
      "fn": "Governance.getWinningVote",
      "offset": [
        4272,
        4324
      ],
      "op": "GT",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB2"
    },
    "2676": {
      "branch": 78,
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2688": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "ADD",
      "path": "2"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2728": {
      "op": "DUP3"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2733": {
      "op": "ADD"
    },
    "2734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "2737": {
      "op": "JUMP"
    },
    "2738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4263,
        4348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4468,
        4487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4497,
        4522
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2742": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4532,
        4543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4559,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2756": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4596
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2762": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4612
      ],
      "op": "ADD",
      "path": "2"
    },
    "2763": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4612
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2767": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4575,
        4612
      ],
      "op": "AND",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4572,
        4612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4572,
        4612
      ],
      "op": "LT",
      "path": "2"
    },
    "2770": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD3"
    },
    "2774": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2777": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2779": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2782": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2784": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2785": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4692
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2789": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4704,
        4721
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4704,
        4721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2793": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4698
      ],
      "op": "ADD",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4699,
        4700
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "LT",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFA"
    },
    "2802": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFA"
    },
    "2806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "2809": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4671,
        4701
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "2813": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2815": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "DIV",
      "path": "2"
    },
    "2817": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "ADD",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "MOD",
      "path": "2"
    },
    "2821": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "MUL",
      "path": "2"
    },
    "2824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2825": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2830": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "EXP",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "DIV",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2836": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4701
      ],
      "op": "AND",
      "path": "2"
    },
    "2837": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4721
      ],
      "op": "AND",
      "path": "2"
    },
    "2841": {
      "branch": 79,
      "fn": "Governance.getWinningVote",
      "offset": [
        4671,
        4721
      ],
      "op": "GT",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB75"
    },
    "2846": {
      "branch": 79,
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x0"
    },
    "2849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2856": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4782
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2863": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4789,
        4790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2865": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "LT",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB40"
    },
    "2872": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2873": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB40"
    },
    "2876": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "2879": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4761,
        4791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2880": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "2883": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2885": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2886": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "DIV",
      "path": "2"
    },
    "2887": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "ADD",
      "path": "2"
    },
    "2888": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "MOD",
      "path": "2"
    },
    "2891": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2893": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "MUL",
      "path": "2"
    },
    "2894": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2900": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "EXP",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2902": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "DIV",
      "path": "2"
    },
    "2903": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2906": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4761,
        4791
      ],
      "op": "AND",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4741,
        4791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2910": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4741,
        4791
      ],
      "op": "AND",
      "path": "2"
    },
    "2911": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4741,
        4791
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4741,
        4791
      ],
      "op": "POP",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4823,
        4824
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 24
    },
    "2914": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4809,
        4824
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2915": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4809,
        4824
      ],
      "op": "POP",
      "path": "2"
    },
    "2916": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4846,
        4849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2917": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4851,
        4852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2919": {
      "branch": 80,
      "fn": "Governance.getWinningVote",
      "offset": [
        4846,
        4852
      ],
      "op": "SUB",
      "path": "2"
    },
    "2920": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4842,
        4865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB70"
    },
    "2923": {
      "branch": 80,
      "fn": "Governance.getWinningVote",
      "offset": [
        4842,
        4865
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2924": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4862,
        4863
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x0"
    },
    "2926": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        4863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4856,
        4863
      ],
      "op": "POP",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4842,
        4865
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2929": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC1"
    },
    "2932": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2933": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4668,
        4990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2934": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2936": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2937": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2938": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2939": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2941": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2943": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2944": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2946": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4921
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2948": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4934,
        4951
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2949": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4934,
        4951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2950": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2952": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4927
      ],
      "op": "ADD",
      "path": "2"
    },
    "2953": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4928,
        4929
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2954": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2956": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2957": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "LT",
      "path": "2"
    },
    "2958": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB99"
    },
    "2961": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2962": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB99"
    },
    "2965": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "2968": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4900,
        4930
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2969": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2970": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "2972": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2973": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2974": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2975": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "DIV",
      "path": "2"
    },
    "2976": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "ADD",
      "path": "2"
    },
    "2977": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2978": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "MOD",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2982": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "MUL",
      "path": "2"
    },
    "2983": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2984": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2985": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2986": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2989": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "EXP",
      "path": "2"
    },
    "2990": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2991": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "DIV",
      "path": "2"
    },
    "2992": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2995": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4930
      ],
      "op": "AND",
      "path": "2"
    },
    "2996": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2999": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4951
      ],
      "op": "AND",
      "path": "2"
    },
    "3000": {
      "branch": 81,
      "fn": "Governance.getWinningVote",
      "offset": [
        4900,
        4951
      ],
      "op": "SUB",
      "path": "2"
    },
    "3001": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4897,
        4990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC1"
    },
    "3004": {
      "branch": 81,
      "fn": "Governance.getWinningVote",
      "offset": [
        4897,
        4990
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3005": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4974,
        4975
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x1"
    },
    "3007": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4970,
        4975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4970,
        4975
      ],
      "op": "POP",
      "path": "2"
    },
    "3009": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4897,
        4990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 27
    },
    "3011": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCB"
    },
    "3014": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3015": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2351"
    },
    "3018": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4614,
        4617
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3019": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3021": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "POP",
      "path": "2"
    },
    "3022": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4614,
        4617
      ],
      "op": "POP",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB9"
    },
    "3026": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3027": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4555,
        5000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5017,
        5023
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 28
    },
    "3030": {
      "branch": 82,
      "fn": "Governance.getWinningVote",
      "offset": [
        5017,
        5023
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3031": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84E"
    },
    "3034": {
      "branch": 82,
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3035": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3037": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3049": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3051": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3052": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "ADD",
      "path": "2"
    },
    "3053": {
      "op": "MSTORE"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "ADD"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3080": {
      "op": "SHL"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3083": {
      "op": "DUP3"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "op": "MSTORE"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5009,
        5044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "3092": {
      "op": "JUMP"
    },
    "3093": {
      "fn": "Governance.vote",
      "offset": [
        7025,
        7689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3094": {
      "offset": [
        16513,
        16544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3096": {
      "fn": "Governance.vote",
      "offset": [
        16513,
        16544
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "offset": [
        16513,
        16544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.vote",
      "offset": [
        16513,
        16544
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3108": {
      "offset": [
        16513,
        16544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3110": {
      "fn": "Governance.vote",
      "offset": [
        16513,
        16544
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.vote",
      "offset": [
        16513,
        16544
      ],
      "op": "ADD",
      "path": "2"
    },
    "3112": {
      "op": "MSTORE"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3117": {
      "op": "DUP3"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3140": {
      "op": "DUP3"
    },
    "3141": {
      "op": "ADD"
    },
    "3142": {
      "op": "MSTORE"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3145": {
      "op": "ADD"
    },
    "3146": {
      "offset": [
        16513,
        16544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "3149": {
      "op": "JUMP"
    },
    "3150": {
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3153": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3155": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3158": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3159": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3163": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3164": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3165": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3166": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3167": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3168": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3169": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC69"
    },
    "3172": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3173": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "3176": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3177": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3178": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3179": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3181": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3182": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3184": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3185": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3186": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3187": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MUL",
      "path": "2"
    },
    "3188": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3190": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3191": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3193": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3194": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3195": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3196": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3197": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3199": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3201": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3202": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3203": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3209": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3212": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3213": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC95"
    },
    "3216": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "3220": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3221": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3222": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3223": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3224": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE2"
    },
    "3227": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3228": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3231": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "LT",
      "path": "2"
    },
    "3232": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB7"
    },
    "3235": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3239": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3240": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3241": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3242": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3243": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MUL",
      "path": "2"
    },
    "3244": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3245": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3247": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3249": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3250": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE2"
    },
    "3254": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3257": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3258": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3259": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3260": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3262": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3263": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3265": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3267": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3268": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3269": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3270": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3271": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3272": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3273": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3274": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3275": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3277": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3278": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3279": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3281": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3282": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3283": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3284": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "GT",
      "path": "2"
    },
    "3285": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC5"
    },
    "3288": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3289": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3290": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3291": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SUB",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3294": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3295": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3296": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3297": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3298": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3304": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3305": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3307": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3309": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3310": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3311": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3314": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3315": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3316": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3319": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3320": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3321": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "ADD",
      "path": "2"
    },
    "3322": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3323": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3325": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3331": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3332": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3333": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3335": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3336": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3337": {
      "op": "POP"
    },
    "3338": {
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3342": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3343": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3344": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3349": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3352": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3353": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3354": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3355": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "op": "SUB"
    },
    "3364": {
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "3370": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3371": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3372": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "offset": [
        2725,
        2763
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3383": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3384": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3385": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3386": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3391": {
      "op": "SHL"
    },
    "3392": {
      "offset": [
        2725,
        2763
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3394": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3395": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3396": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3404": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3405": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DIV",
      "path": "2"
    },
    "3406": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "AND",
      "path": "2"
    },
    "3407": {
      "fn": "Governance.vote",
      "offset": [
        2725,
        2763
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3408": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2725,
        2763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9621,
        9648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9651,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6C"
    },
    "3415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9675,
        9689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3417": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 29
    },
    "3418": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "3420": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3421": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3422": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3429": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3430": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "3431": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3432": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3433": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "3434": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3435": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3436": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9651,
        9690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3439": {
      "op": "DUP1"
    },
    "3440": {
      "op": "MLOAD"
    },
    "3441": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "DUP3"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3457": {
      "op": "DUP4"
    },
    "3458": {
      "op": "ADD"
    },
    "3459": {
      "op": "DUP2"
    },
    "3460": {
      "op": "SWAP1"
    },
    "3461": {
      "op": "MSTORE"
    },
    "3462": {
      "op": "SWAP3"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "DUP4"
    },
    "3466": {
      "op": "SWAP1"
    },
    "3467": {
      "op": "MSTORE"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "ADD"
    },
    "3470": {
      "op": "DUP3"
    },
    "3471": {
      "op": "SWAP1"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3475": {
      "op": "DUP2"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "SWAP1"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3482": {
      "op": "DUP2"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "DUP3"
    },
    "3485": {
      "op": "SWAP1"
    },
    "3486": {
      "op": "MSTORE"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3489": {
      "op": "DUP2"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "DUP3"
    },
    "3492": {
      "op": "SWAP1"
    },
    "3493": {
      "op": "MSTORE"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3496": {
      "op": "DUP2"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "op": "DUP3"
    },
    "3499": {
      "op": "SWAP1"
    },
    "3500": {
      "op": "MSTORE"
    },
    "3501": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "ADD"
    },
    "3506": {
      "op": "DUP3"
    },
    "3507": {
      "op": "SWAP1"
    },
    "3508": {
      "op": "MSTORE"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "op": "DUP3"
    },
    "3515": {
      "op": "SWAP1"
    },
    "3516": {
      "op": "MSTORE"
    },
    "3517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9621,
        9690
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9621,
        9690
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "DUP1"
    },
    "3521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9858,
        9877
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9854,
        9855
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3524": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9854,
        9877
      ],
      "op": "LT",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A2"
    },
    "3529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9937,
        9952
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9904
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9934
      ],
      "op": "ADD",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9934
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3537": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9952
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9952
      ],
      "op": "AND",
      "path": "2"
    },
    "3544": {
      "branch": 83,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9952
      ],
      "op": "LT",
      "path": "2"
    },
    "3545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3546": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEF"
    },
    "3550": {
      "branch": 83,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "POP",
      "path": "2"
    },
    "3552": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9972,
        9978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9962
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3554": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9968
      ],
      "op": "ADD",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9968
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3558": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9978
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9978
      ],
      "op": "AND",
      "path": "2"
    },
    "3565": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9978
      ],
      "op": "EQ",
      "path": "2"
    },
    "3566": {
      "branch": 84,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9956,
        9978
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        9978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3568": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3570": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE04"
    },
    "3573": {
      "branch": 84,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "POP",
      "path": "2"
    },
    "3575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10001,
        10007
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3576": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        9988
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        9998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3580": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        9998
      ],
      "op": "ADD",
      "path": "2"
    },
    "3581": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        9998
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        10007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3585": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        10007
      ],
      "op": "AND",
      "path": "2"
    },
    "3586": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        10007
      ],
      "op": "EQ",
      "path": "2"
    },
    "3587": {
      "branch": 85,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9982,
        10007
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3588": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9898,
        10007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3589": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9894,
        11112
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3590": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9894,
        11112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x109D"
    },
    "3593": {
      "branch": 85,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9894,
        11112
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10170,
        10208
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0xE14"
    },
    "3597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10190,
        10204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10206,
        10207
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3600": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10170,
        10189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5F"
    },
    "3603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10170,
        10208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10170,
        10208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10162,
        10209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 31
    },
    "3608": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3614": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3621": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3628": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3631": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3632": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3633": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10162,
        10209
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3634": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10162,
        10209
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3638": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3639": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3640": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10236,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3642": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE42"
    },
    "3645": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3646": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "3649": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3654": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3655": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3658": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MUL",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3663": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3667": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3670": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3672": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3677": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3682": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3684": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3685": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3686": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6E"
    },
    "3689": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "3693": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3694": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3695": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEBB"
    },
    "3700": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3704": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "LT",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE90"
    },
    "3708": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3709": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3712": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3714": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3715": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MUL",
      "path": "2"
    },
    "3717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3719": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3720": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3722": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEBB"
    },
    "3727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3731": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3732": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3733": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3736": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3738": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3742": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3746": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3747": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "GT",
      "path": "2"
    },
    "3758": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9E"
    },
    "3761": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3762": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3763": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3764": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SUB",
      "path": "2"
    },
    "3765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3768": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3769": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3770": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3771": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3776": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3778": {
      "op": "POP"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3782": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3783": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3785": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3791": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3793": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3794": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3796": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3798": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3799": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3801": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3804": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3806": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3807": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3808": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3809": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3811": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3812": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3813": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3814": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3818": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3821": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3822": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3823": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3824": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3825": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3833": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3834": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3837": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3838": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3844": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3845": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3849": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3850": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "3856": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3857": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "op": "SUB"
    },
    "3866": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3869": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3871": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3876": {
      "op": "SHL"
    },
    "3877": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3883": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3884": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3887": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3888": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3898": {
      "op": "SHL"
    },
    "3899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3901": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3906": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3908": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3909": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3916": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3917": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "DIV",
      "path": "2"
    },
    "3918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "3921": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3924": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "2"
    },
    "3927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3928": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3929": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10227,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10917
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 32
    },
    "3932": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10917
      ],
      "op": "AND",
      "path": "2"
    },
    "3933": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3934": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10900
      ],
      "op": "ADD",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10917
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3937": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10999,
        11015
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0xB"
    },
    "3939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10999,
        11015
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3940": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10883,
        10900
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10981,
        11015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF70"
    },
    "3946": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10981,
        11015
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10981,
        10996
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10981,
        11015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F8"
    },
    "3951": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        10981,
        11015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10981,
        11015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3953": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        11016
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        11016
      ],
      "op": "AND",
      "path": "2"
    },
    "3960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        10971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        10971
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        10971
      ],
      "op": "ADD",
      "path": "2"
    },
    "3965": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        11016
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3966": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        10935,
        10941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11039
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x9"
    },
    "3969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11048,
        11086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8D"
    },
    "3974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11068,
        11082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11084,
        11085
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11048,
        11067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5F"
    },
    "3980": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        11048,
        11086
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11048,
        11086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "ADD",
      "path": "2"
    },
    "3988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "ADD",
      "path": "2"
    },
    "3995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11040,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFAB"
    },
    "4005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11088
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2387"
    },
    "4010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        11034,
        11097
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4024": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4030": {
      "op": "NOT"
    },
    "4031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "ADD",
      "path": "2"
    },
    "4104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "4109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4110": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4115": {
      "op": "NOT"
    },
    "4116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MUL",
      "path": "2"
    },
    "4133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4137": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "4154": {
      "op": "NOT"
    },
    "4155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4168": {
      "op": "SHL"
    },
    "4169": {
      "op": "SUB"
    },
    "4170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MUL",
      "path": "2"
    },
    "4177": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4182": {
      "op": "SHL"
    },
    "4183": {
      "op": "NOT"
    },
    "4184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4190": {
      "op": "SHL"
    },
    "4191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MUL",
      "path": "2"
    },
    "4198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4199": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4209": {
      "op": "SHL"
    },
    "4210": {
      "op": "NOT"
    },
    "4211": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4216": {
      "op": "SHL"
    },
    "4217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MUL",
      "path": "2"
    },
    "4222": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4230": {
      "op": "SHL"
    },
    "4231": {
      "op": "NOT"
    },
    "4232": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4233": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4236": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "AND",
      "path": "2"
    },
    "4246": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4247": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4248": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "MUL",
      "path": "2"
    },
    "4250": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "OR",
      "path": "2"
    },
    "4251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11034,
        11097
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9894,
        11112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC1"
    },
    "4257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9836,
        11122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4259": {
      "op": "POP"
    },
    "4260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x40"
    },
    "4262": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4264": {
      "op": "DUP6"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "MSTORE"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "DUP4"
    },
    "4272": {
      "op": "SWAP1"
    },
    "4273": {
      "op": "MSTORE"
    },
    "4274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE"
    },
    "4307": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "SUB",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        11168,
        11204
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9611,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "4318": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9611,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "4319": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9611,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        9546,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        9546,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4322": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4323": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12317
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x2"
    },
    "4325": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12317
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4326": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4328": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4329": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4339": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4341": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4342": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ADD",
      "path": "2"
    },
    "4343": {
      "op": "DUP7"
    },
    "4344": {
      "op": "SWAP1"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "fn": "Governance.submitVerification",
      "offset": [
        12337,
        12347
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.submitVerification",
      "offset": [
        12337,
        12347
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "op": "SUB"
    },
    "4356": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12317
      ],
      "op": "AND",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4358": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12325
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "4363": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4369": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4371": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4372": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4373": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4374": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "SUB",
      "path": "2"
    },
    "4375": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4376": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4377": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "GAS",
      "path": "2"
    },
    "4378": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4379": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4380": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x112B"
    },
    "4385": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4387": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4389": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4390": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4391": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4394": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4395": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4396": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "POP",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "POP",
      "path": "2"
    },
    "4398": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "POP",
      "path": "2"
    },
    "4399": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "POP",
      "path": "2"
    },
    "4400": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4402": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4403": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4404": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4406": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "NOT",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4409": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4410": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ADD",
      "path": "2"
    },
    "4411": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "AND",
      "path": "2"
    },
    "4412": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4413": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ADD",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4417": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4418": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "POP",
      "path": "2"
    },
    "4419": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4420": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "ADD",
      "path": "2"
    },
    "4421": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4422": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114F"
    },
    "4425": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4426": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236A"
    },
    "4430": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12307,
        12333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4431": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "op": "SUB"
    },
    "4440": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12347
      ],
      "op": "AND",
      "path": "2"
    },
    "4441": {
      "branch": 86,
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12347
      ],
      "op": "EQ",
      "path": "2"
    },
    "4442": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12384
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4444": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1180"
    },
    "4447": {
      "branch": 86,
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4451": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4452": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4453": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4456": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4458": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4459": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4461": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12365
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4463": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4465": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "ADD",
      "path": "2"
    },
    "4466": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "DIV",
      "path": "2"
    },
    "4474": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4477": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12376
      ],
      "op": "AND",
      "path": "2"
    },
    "4478": {
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12384
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4479": {
      "branch": 87,
      "fn": "Governance.submitVerification",
      "offset": [
        12351,
        12384
      ],
      "op": "EQ",
      "path": "2"
    },
    "4480": {
      "fn": "Governance.submitVerification",
      "offset": [
        12307,
        12384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11CC"
    },
    "4484": {
      "branch": 87,
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4485": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4487": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4494": {
      "op": "SHL"
    },
    "4495": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4496": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4499": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4501": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4502": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "ADD",
      "path": "2"
    },
    "4503": {
      "op": "DUP2"
    },
    "4504": {
      "op": "SWAP1"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4508": {
      "op": "DUP3"
    },
    "4509": {
      "op": "ADD"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4546": {
      "op": "DUP3"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "op": "MSTORE"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4551": {
      "op": "ADD"
    },
    "4552": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "4555": {
      "op": "JUMP"
    },
    "4556": {
      "fn": "Governance.submitVerification",
      "offset": [
        12299,
        12421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4557": {
      "branch": 88,
      "fn": "Governance.submitVerification",
      "offset": [
        12439,
        12457
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 37
    },
    "4558": {
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11D6"
    },
    "4561": {
      "branch": 88,
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4562": {
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4564": {
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4565": {
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4566": {
      "fn": "Governance.submitVerification",
      "offset": [
        12431,
        12458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4567": {
      "fn": "Governance.submitVerification",
      "offset": [
        12469,
        12488
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4569": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4570": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4571": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4574": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4576": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4577": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4579": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4580": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4581": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4583": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4584": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "ADD",
      "path": "2"
    },
    "4585": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4586": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4587": {
      "fn": "Governance.submitVerification",
      "offset": [
        12491,
        12505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4588": {
      "fn": "Governance.submitVerification",
      "offset": [
        12469,
        12488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4589": {
      "fn": "Governance.submitVerification",
      "offset": [
        12469,
        12488
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4590": {
      "fn": "Governance.submitVerification",
      "offset": [
        12469,
        12488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4597": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "DIV",
      "path": "2"
    },
    "4598": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4601": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12615
      ],
      "op": "AND",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x121C"
    },
    "4605": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12671
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4607": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12671
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4608": {
      "fn": "Governance.submitVerification",
      "offset": [
        12672,
        12673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4610": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4611": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4612": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "LT",
      "path": "2"
    },
    "4613": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1210"
    },
    "4616": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4617": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1210"
    },
    "4620": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "4623": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12664,
        12674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4624": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4625": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4626": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "POP",
      "path": "2"
    },
    "4627": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4629": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "MUL",
      "path": "2"
    },
    "4630": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "ADD",
      "path": "2"
    },
    "4631": {
      "fn": "Governance.submitVerification",
      "offset": [
        12664,
        12674
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "4632": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125F"
    },
    "4635": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12656
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4638": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12656
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4639": {
      "fn": "Governance.submitVerification",
      "offset": [
        12657,
        12658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4641": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4642": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4643": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "LT",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122F"
    },
    "4647": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4648": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122F"
    },
    "4651": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "4654": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12649,
        12659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4655": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4656": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4657": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "POP",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4660": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "MUL",
      "path": "2"
    },
    "4661": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "ADD",
      "path": "2"
    },
    "4662": {
      "fn": "Governance.submitVerification",
      "offset": [
        12649,
        12659
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "4663": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4665": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4666": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4668": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "ADD",
      "path": "2"
    },
    "4669": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1248"
    },
    "4672": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "SWAP1"
    },
    "4679": {
      "op": "JUMP"
    },
    "4680": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4681": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4683": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4684": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4686": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4687": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4688": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "SUB",
      "path": "2"
    },
    "4689": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "SUB",
      "path": "2"
    },
    "4690": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4691": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4692": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4693": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4695": {
      "fn": "Governance.submitVerification",
      "offset": [
        12632,
        12660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4696": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4699": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4701": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "ADD",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.submitVerification",
      "offset": [
        12622,
        12661
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4703": {
      "fn": "Governance.submitVerification",
      "offset": [
        12599,
        12674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4704": {
      "fn": "Governance.submitVerification",
      "offset": [
        12582,
        12674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.submitVerification",
      "offset": [
        12582,
        12674
      ],
      "op": "POP",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.submitVerification",
      "offset": [
        12711,
        12720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4708": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4709": {
      "fn": "Governance.submitVerification",
      "offset": [
        12726,
        12744
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.submitVerification",
      "offset": [
        12726,
        12744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4711": {
      "fn": "Governance.submitVerification",
      "offset": [
        12726,
        12744
      ],
      "op": "LT",
      "path": "2"
    },
    "4712": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4713": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1316"
    },
    "4716": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x4"
    },
    "4719": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4720": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "ADD",
      "path": "2"
    },
    "4721": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4722": {
      "fn": "Governance.submitVerification",
      "offset": [
        12796,
        12802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4723": {
      "fn": "Governance.submitVerification",
      "offset": [
        12796,
        12802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4728": {
      "op": "SHL"
    },
    "4729": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4730": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "DIV",
      "path": "2"
    },
    "4731": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4734": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12820
      ],
      "op": "AND",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A0"
    },
    "4738": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4739": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12876
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4740": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12876
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.submitVerification",
      "offset": [
        12877,
        12878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4742": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4743": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4744": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "LT",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1294"
    },
    "4748": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4749": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1294"
    },
    "4752": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "4755": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12869,
        12879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4758": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "POP",
      "path": "2"
    },
    "4759": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4761": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "MUL",
      "path": "2"
    },
    "4762": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "ADD",
      "path": "2"
    },
    "4763": {
      "fn": "Governance.submitVerification",
      "offset": [
        12869,
        12879
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "4764": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E2"
    },
    "4767": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4768": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12861
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4770": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12861
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4771": {
      "fn": "Governance.submitVerification",
      "offset": [
        12862,
        12863
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4772": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4773": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4774": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "LT",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B2"
    },
    "4778": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B2"
    },
    "4782": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "4785": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        12854,
        12864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4786": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "POP",
      "path": "2"
    },
    "4789": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4791": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "MUL",
      "path": "2"
    },
    "4792": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "ADD",
      "path": "2"
    },
    "4793": {
      "fn": "Governance.submitVerification",
      "offset": [
        12854,
        12864
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "4794": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4796": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4799": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "ADD",
      "path": "2"
    },
    "4800": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12CB"
    },
    "4803": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4804": {
      "op": "DUP2"
    },
    "4805": {
      "op": "MSTORE"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4808": {
      "op": "ADD"
    },
    "4809": {
      "op": "SWAP1"
    },
    "4810": {
      "op": "JUMP"
    },
    "4811": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4812": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4814": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4817": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "SUB",
      "path": "2"
    },
    "4820": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "SUB",
      "path": "2"
    },
    "4821": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4823": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4826": {
      "fn": "Governance.submitVerification",
      "offset": [
        12837,
        12865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4827": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4828": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4829": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4830": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4832": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "ADD",
      "path": "2"
    },
    "4833": {
      "fn": "Governance.submitVerification",
      "offset": [
        12827,
        12866
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4834": {
      "fn": "Governance.submitVerification",
      "offset": [
        12804,
        12879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4835": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4837": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4839": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4841": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "ADD",
      "path": "2"
    },
    "4843": {
      "op": "SWAP4"
    },
    "4844": {
      "op": "SWAP1"
    },
    "4845": {
      "op": "SWAP4"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "DUP3"
    },
    "4848": {
      "op": "ADD"
    },
    "4849": {
      "op": "MSTORE"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4855": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4856": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4859": {
      "op": "NOT"
    },
    "4860": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "SUB",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "ADD",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4865": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4867": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4868": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4869": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.submitVerification",
      "offset": [
        12779,
        12880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4873": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4874": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4875": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4877": {
      "fn": "Governance.submitVerification",
      "offset": [
        12769,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4878": {
      "op": "POP"
    },
    "4879": {
      "fn": "Governance.submitVerification",
      "offset": [
        12905,
        12908
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x1"
    },
    "4881": {
      "fn": "Governance.submitVerification",
      "offset": [
        12905,
        12908
      ],
      "op": "ADD",
      "path": "2"
    },
    "4882": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1264"
    },
    "4885": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4886": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4887": {
      "fn": "Governance.submitVerification",
      "offset": [
        12707,
        12920
      ],
      "op": "POP",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.submitVerification",
      "offset": [
        12930,
        12949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4890": {
      "fn": "Governance.submitVerification",
      "offset": [
        12967,
        12973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4891": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12958
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4892": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4894": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12963
      ],
      "op": "ADD",
      "path": "2"
    },
    "4895": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12963
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4896": {
      "branch": 89,
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12973
      ],
      "op": "EQ",
      "path": "2"
    },
    "4897": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "4900": {
      "branch": 89,
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.submitVerification",
      "offset": [
        12980,
        12981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4903": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132E"
    },
    "4906": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4908": {
      "fn": "Governance.submitVerification",
      "offset": [
        12976,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4910": {
      "fn": "Governance.submitVerification",
      "offset": [
        12952,
        12981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.submitVerification",
      "offset": [
        12930,
        12981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4913": {
      "fn": "Governance.submitVerification",
      "offset": [
        12930,
        12981
      ],
      "op": "AND",
      "path": "2"
    },
    "4914": {
      "fn": "Governance.submitVerification",
      "offset": [
        12930,
        12981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.submitVerification",
      "offset": [
        12930,
        12981
      ],
      "op": "POP",
      "path": "2"
    },
    "4916": {
      "fn": "Governance.submitVerification",
      "offset": [
        12997,
        13008
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4917": {
      "fn": "Governance.submitVerification",
      "offset": [
        13011,
        13012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4919": {
      "branch": 90,
      "fn": "Governance.submitVerification",
      "offset": [
        12997,
        13012
      ],
      "op": "SUB",
      "path": "2"
    },
    "4920": {
      "fn": "Governance.submitVerification",
      "offset": [
        12993,
        15199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1636"
    },
    "4923": {
      "branch": 90,
      "fn": "Governance.submitVerification",
      "offset": [
        12993,
        15199
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4926": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4927": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "ADD",
      "path": "2"
    },
    "4928": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4929": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4931": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "4935": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4936": {
      "fn": "Governance.submitVerification",
      "offset": [
        13122,
        13123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4938": {
      "fn": "Governance.submitVerification",
      "offset": [
        13122,
        13123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4939": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "4945": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "DIV",
      "path": "2"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4953": {
      "op": "SHL"
    },
    "4954": {
      "op": "SUB"
    },
    "4955": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13121
      ],
      "op": "AND",
      "path": "2"
    },
    "4956": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2447"
    },
    "4959": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        13107,
        13123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4960": {
      "fn": "Governance.submitVerification",
      "offset": [
        13107,
        13123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4963": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4964": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4966": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4967": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4968": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "ADD",
      "path": "2"
    },
    "4969": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4970": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4972": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4973": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4982": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4987": {
      "op": "SHL"
    },
    "4988": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4989": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4990": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "DIV",
      "path": "2"
    },
    "4991": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4994": {
      "fn": "Governance.submitVerification",
      "offset": [
        13196,
        13213
      ],
      "op": "AND",
      "path": "2"
    },
    "4995": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4996": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4997": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ADD",
      "path": "2"
    },
    "4998": {
      "op": "SWAP2"
    },
    "4999": {
      "op": "SWAP1"
    },
    "5000": {
      "op": "SWAP2"
    },
    "5001": {
      "op": "MSTORE"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "op": "SUB"
    },
    "5010": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13123
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5011": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5012": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13123
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5013": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13123
      ],
      "op": "AND",
      "path": "2"
    },
    "5014": {
      "fn": "Governance.submitVerification",
      "offset": [
        13091,
        13123
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "fn": "Governance.submitVerification",
      "offset": [
        13137,
        13166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5018": {
      "fn": "Governance.submitVerification",
      "offset": [
        13137,
        13166
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "op": "SUB"
    },
    "5027": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5028": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5029": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "AND",
      "path": "2"
    },
    "5030": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5031": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13195
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "5036": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5042": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5044": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5045": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5047": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "SUB",
      "path": "2"
    },
    "5048": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5049": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5050": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "GAS",
      "path": "2"
    },
    "5051": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5053": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5054": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5055": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CC"
    },
    "5058": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5059": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5060": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5062": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5063": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5064": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5065": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5067": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "POP",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "POP",
      "path": "2"
    },
    "5071": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "POP",
      "path": "2"
    },
    "5072": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "POP",
      "path": "2"
    },
    "5073": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5075": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5076": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5077": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5079": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "NOT",
      "path": "2"
    },
    "5080": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5082": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ADD",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "AND",
      "path": "2"
    },
    "5085": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ADD",
      "path": "2"
    },
    "5087": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5088": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5090": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5091": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "POP",
      "path": "2"
    },
    "5092": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5093": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "ADD",
      "path": "2"
    },
    "5094": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F0"
    },
    "5098": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5099": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5100": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236A"
    },
    "5103": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        13177,
        13214
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5104": {
      "fn": "Governance.submitVerification",
      "offset": [
        13177,
        13214
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5105": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x2"
    },
    "5107": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5108": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5110": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5111": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "ADD",
      "path": "2"
    },
    "5112": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5113": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5115": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5116": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "ADD",
      "path": "2"
    },
    "5118": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5119": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5121": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5122": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5129": {
      "op": "SHL"
    },
    "5130": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5131": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5138": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5140": {
      "fn": "Governance.submitVerification",
      "offset": [
        13306,
        13318
      ],
      "op": "AND",
      "path": "2"
    },
    "5141": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5142": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5143": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "ADD",
      "path": "2"
    },
    "5144": {
      "op": "SWAP2"
    },
    "5145": {
      "op": "SWAP1"
    },
    "5146": {
      "op": "SWAP2"
    },
    "5147": {
      "op": "MSTORE"
    },
    "5148": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5151": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "DIV",
      "path": "2"
    },
    "5153": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5157": {
      "fn": "Governance.submitVerification",
      "offset": [
        13320,
        13336
      ],
      "op": "AND",
      "path": "2"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5160": {
      "op": "DUP3"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "fn": "Governance.submitVerification",
      "offset": [
        13137,
        13215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.submitVerification",
      "offset": [
        13137,
        13215
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5165": {
      "op": "POP"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5172": {
      "op": "SHL"
    },
    "5173": {
      "op": "SUB"
    },
    "5174": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "AND",
      "path": "2"
    },
    "5175": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5176": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13305
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "5181": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13305
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5187": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5189": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5191": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5192": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "SUB",
      "path": "2"
    },
    "5193": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5196": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5197": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5198": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5199": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5200": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5201": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145A"
    },
    "5205": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5208": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5209": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5211": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "POP",
      "path": "2"
    },
    "5212": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "GAS",
      "path": "2"
    },
    "5213": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "CALL",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5216": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5217": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146E"
    },
    "5220": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5224": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5226": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5227": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5229": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5230": {
      "fn": "Governance.submitVerification",
      "offset": [
        13284,
        13337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x2"
    },
    "5235": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5238": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "ADD",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.submitVerification",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "5244": {
      "fn": "Governance.submitVerification",
      "offset": [
        13392,
        13417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5245": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5247": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5248": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5255": {
      "op": "SHL"
    },
    "5256": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5262": {
      "op": "SHL"
    },
    "5263": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "DIV",
      "path": "2"
    },
    "5266": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5269": {
      "fn": "Governance.submitVerification",
      "offset": [
        13373,
        13390
      ],
      "op": "AND",
      "path": "2"
    },
    "5270": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5271": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "ADD",
      "path": "2"
    },
    "5273": {
      "op": "SWAP3"
    },
    "5274": {
      "op": "SWAP1"
    },
    "5275": {
      "op": "SWAP3"
    },
    "5276": {
      "op": "MSTORE"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5279": {
      "op": "DUP2"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "op": "SWAP2"
    },
    "5282": {
      "op": "SWAP1"
    },
    "5283": {
      "op": "SWAP2"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5291": {
      "op": "SHL"
    },
    "5292": {
      "op": "SUB"
    },
    "5293": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5294": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5295": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "AND",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13361
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13372
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "5303": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5307": {
      "op": "ADD"
    },
    "5308": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5309": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5311": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5313": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5314": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5315": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5316": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "SUB",
      "path": "2"
    },
    "5317": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5320": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5321": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5322": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5323": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5324": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5325": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5326": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D6"
    },
    "5329": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5330": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5332": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5333": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5334": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5335": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "POP",
      "path": "2"
    },
    "5336": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "GAS",
      "path": "2"
    },
    "5337": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "CALL",
      "path": "2"
    },
    "5338": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5339": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5340": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5341": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14EA"
    },
    "5344": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5345": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5346": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5348": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5349": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5350": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5351": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5353": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5354": {
      "fn": "Governance.submitVerification",
      "offset": [
        13351,
        13418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "op": "POP"
    },
    "5357": {
      "op": "POP"
    },
    "5358": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13447
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x4"
    },
    "5360": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13447
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5361": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13447
      ],
      "op": "ADD",
      "path": "2"
    },
    "5362": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5364": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "5379": {
      "op": "NOT"
    },
    "5380": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13449
      ],
      "op": "AND",
      "path": "2"
    },
    "5381": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.submitVerification",
      "offset": [
        13433,
        13449
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5383": {
      "op": "POP"
    },
    "5384": {
      "fn": "Governance.submitVerification",
      "offset": [
        13448,
        13449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5386": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "DUP10",
      "path": "2",
      "statement": 43
    },
    "5387": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5388": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5391": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5393": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5394": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5396": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5398": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5399": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1520"
    },
    "5402": {
      "fn": "Governance.submitVerification",
      "offset": [
        13499,
        13513
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5403": {
      "fn": "Governance.submitVerification",
      "offset": [
        13448,
        13449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5404": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCD"
    },
    "5407": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        13492,
        13513
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5408": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5412": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "ADD",
      "path": "2"
    },
    "5414": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5415": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5416": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5422": {
      "op": "NOT"
    },
    "5423": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "AND",
      "path": "2"
    },
    "5424": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5425": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5428": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5430": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5431": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "ADD",
      "path": "2"
    },
    "5432": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5433": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5434": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5435": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5437": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5438": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "ADD",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5441": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5444": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5445": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5446": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "ADD",
      "path": "2"
    },
    "5447": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5448": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5455": {
      "op": "SHL"
    },
    "5456": {
      "op": "SUB"
    },
    "5457": {
      "op": "NOT"
    },
    "5458": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "AND",
      "path": "2"
    },
    "5459": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5460": {
      "fn": "Governance.submitVerification",
      "offset": [
        13492,
        13513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5461": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5463": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5464": {
      "op": "DUP2"
    },
    "5465": {
      "op": "SWAP1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5472": {
      "op": "SHL"
    },
    "5473": {
      "op": "SUB"
    },
    "5474": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13617
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5475": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13617
      ],
      "op": "AND",
      "path": "2"
    },
    "5476": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5477": {
      "fn": "Governance.submitVerification",
      "offset": [
        13625,
        13630
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.submitVerification",
      "offset": [
        13625,
        13630
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5479": {
      "op": "DUP4"
    },
    "5480": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5481": {
      "op": "DUP2"
    },
    "5482": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5483": {
      "fn": "Governance.submitVerification",
      "offset": [
        13625,
        13630
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5484": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13617
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5485": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "GAS",
      "path": "2"
    },
    "5486": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "CALL",
      "path": "2"
    },
    "5487": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5488": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5489": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5490": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5491": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5492": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5495": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5496": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "EQ",
      "path": "2"
    },
    "5497": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x159E"
    },
    "5500": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5501": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5503": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5504": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5506": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5508": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "NOT",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "5511": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "ADD",
      "path": "2"
    },
    "5513": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "AND",
      "path": "2"
    },
    "5514": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5515": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "ADD",
      "path": "2"
    },
    "5516": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5518": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5523": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5525": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5527": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5528": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "ADD",
      "path": "2"
    },
    "5529": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15A3"
    },
    "5533": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5534": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5535": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5537": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5538": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5539": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.submitVerification",
      "offset": [
        13599,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5541": {
      "fn": "Governance.submitVerification",
      "offset": [
        13566,
        13635
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5542": {
      "fn": "Governance.submitVerification",
      "offset": [
        13566,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5543": {
      "fn": "Governance.submitVerification",
      "offset": [
        13566,
        13635
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5544": {
      "fn": "Governance.submitVerification",
      "offset": [
        13566,
        13635
      ],
      "op": "POP",
      "path": "2"
    },
    "5545": {
      "branch": 91,
      "fn": "Governance.submitVerification",
      "offset": [
        13657,
        13661
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 44
    },
    "5546": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C5"
    },
    "5549": {
      "branch": 91,
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5550": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5552": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5561": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5564": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "ADD",
      "path": "2"
    },
    "5565": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "5568": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5569": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247B"
    },
    "5572": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        13649,
        13686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.submitVerification",
      "offset": [
        13649,
        13686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5574": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x40"
    },
    "5576": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5577": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13758
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5578": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5579": {
      "fn": "Governance.submitVerification",
      "offset": [
        13771,
        13776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5580": {
      "fn": "Governance.submitVerification",
      "offset": [
        13771,
        13776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5581": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5583": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5585": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5586": {
      "fn": "Governance.submitVerification",
      "offset": [
        13771,
        13776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5587": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13758
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5588": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "GAS",
      "path": "2"
    },
    "5589": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "CALL",
      "path": "2"
    },
    "5590": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5591": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "POP",
      "path": "2"
    },
    "5592": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "POP",
      "path": "2"
    },
    "5593": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "POP",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5596": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5598": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5599": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "EQ",
      "path": "2"
    },
    "5600": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1605"
    },
    "5603": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5604": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5606": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5607": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5608": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "POP",
      "path": "2"
    },
    "5609": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5611": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "NOT",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "5614": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "ADD",
      "path": "2"
    },
    "5616": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "AND",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5618": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "ADD",
      "path": "2"
    },
    "5619": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5621": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5622": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5626": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5628": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5630": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "ADD",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5633": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160A"
    },
    "5636": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5640": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "POP",
      "path": "2"
    },
    "5642": {
      "fn": "Governance.submitVerification",
      "offset": [
        13748,
        13781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5643": {
      "op": "POP"
    },
    "5644": {
      "fn": "Governance.submitVerification",
      "offset": [
        13733,
        13781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5645": {
      "fn": "Governance.submitVerification",
      "offset": [
        13733,
        13781
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5646": {
      "op": "POP"
    },
    "5647": {
      "fn": "Governance.submitVerification",
      "offset": [
        13733,
        13781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5648": {
      "op": "POP"
    },
    "5649": {
      "fn": "Governance.submitVerification",
      "offset": [
        13733,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5650": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 46,
      "value": "0x162D"
    },
    "5653": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5654": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5656": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5663": {
      "op": "SHL"
    },
    "5664": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5666": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5668": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "ADD",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "5672": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247B"
    },
    "5676": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        13795,
        13832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.submitVerification",
      "offset": [
        13795,
        13832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5678": {
      "fn": "Governance.submitVerification",
      "offset": [
        13013,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "5679": {
      "fn": "Governance.submitVerification",
      "offset": [
        13013,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "5680": {
      "fn": "Governance.submitVerification",
      "offset": [
        13013,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "5681": {
      "fn": "Governance.submitVerification",
      "offset": [
        13013,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "5682": {
      "fn": "Governance.submitVerification",
      "offset": [
        12993,
        15199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189B"
    },
    "5685": {
      "fn": "Governance.submitVerification",
      "offset": [
        12993,
        15199
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.submitVerification",
      "offset": [
        12993,
        15199
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.submitVerification",
      "offset": [
        14026,
        14032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5688": {
      "fn": "Governance.submitVerification",
      "offset": [
        14006,
        14012
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.submitVerification",
      "offset": [
        14006,
        14024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5691": {
      "fn": "Governance.submitVerification",
      "offset": [
        14006,
        14024
      ],
      "op": "ADD",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.submitVerification",
      "offset": [
        14006,
        14024
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5693": {
      "branch": 92,
      "fn": "Governance.submitVerification",
      "offset": [
        14006,
        14032
      ],
      "op": "SUB",
      "path": "2"
    },
    "5694": {
      "fn": "Governance.submitVerification",
      "offset": [
        14003,
        15188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AE"
    },
    "5697": {
      "branch": 92,
      "fn": "Governance.submitVerification",
      "offset": [
        14003,
        15188
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5700": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "ADD",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5705": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1666"
    },
    "5709": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5710": {
      "fn": "Governance.submitVerification",
      "offset": [
        14082,
        14083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5712": {
      "fn": "Governance.submitVerification",
      "offset": [
        14082,
        14083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "5719": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5720": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "DIV",
      "path": "2"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "SUB"
    },
    "5729": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14081
      ],
      "op": "AND",
      "path": "2"
    },
    "5730": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2447"
    },
    "5733": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        14067,
        14083
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.submitVerification",
      "offset": [
        14067,
        14083
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5737": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5740": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5741": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5742": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "ADD",
      "path": "2"
    },
    "5743": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5746": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5747": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5754": {
      "op": "SHL"
    },
    "5755": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5761": {
      "op": "SHL"
    },
    "5762": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5764": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "DIV",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5768": {
      "fn": "Governance.submitVerification",
      "offset": [
        14158,
        14174
      ],
      "op": "AND",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5770": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5771": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ADD",
      "path": "2"
    },
    "5772": {
      "op": "SWAP2"
    },
    "5773": {
      "op": "SWAP1"
    },
    "5774": {
      "op": "SWAP2"
    },
    "5775": {
      "op": "MSTORE"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14083
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5785": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14083
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14083
      ],
      "op": "AND",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.submitVerification",
      "offset": [
        14051,
        14083
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5789": {
      "op": "POP"
    },
    "5790": {
      "fn": "Governance.submitVerification",
      "offset": [
        14101,
        14128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5792": {
      "fn": "Governance.submitVerification",
      "offset": [
        14101,
        14128
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5799": {
      "op": "SHL"
    },
    "5800": {
      "op": "SUB"
    },
    "5801": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5802": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5803": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "AND",
      "path": "2"
    },
    "5804": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5805": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14157
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "5810": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5813": {
      "op": "ADD"
    },
    "5814": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5816": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5818": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5820": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "SUB",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5823": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5824": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "GAS",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5826": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5827": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5828": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5829": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D2"
    },
    "5832": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5834": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5836": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5837": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5838": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5841": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5842": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5843": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "POP",
      "path": "2"
    },
    "5844": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "POP",
      "path": "2"
    },
    "5845": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "POP",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "POP",
      "path": "2"
    },
    "5847": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5849": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5851": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5853": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "NOT",
      "path": "2"
    },
    "5854": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5856": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5857": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ADD",
      "path": "2"
    },
    "5858": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "AND",
      "path": "2"
    },
    "5859": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ADD",
      "path": "2"
    },
    "5861": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5862": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5864": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5865": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "POP",
      "path": "2"
    },
    "5866": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5867": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "ADD",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5869": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F6"
    },
    "5872": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5873": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5874": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236A"
    },
    "5877": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        14139,
        14175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.submitVerification",
      "offset": [
        14139,
        14175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14205
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x2"
    },
    "5881": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14205
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5882": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5884": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5885": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5886": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "ADD",
      "path": "2"
    },
    "5887": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5888": {
      "fn": "Governance.submitVerification",
      "offset": [
        14235,
        14260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "5890": {
      "fn": "Governance.submitVerification",
      "offset": [
        14235,
        14260
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5891": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5893": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5894": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5901": {
      "op": "SHL"
    },
    "5902": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5903": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5908": {
      "op": "SHL"
    },
    "5909": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "DIV",
      "path": "2"
    },
    "5912": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5915": {
      "fn": "Governance.submitVerification",
      "offset": [
        14217,
        14233
      ],
      "op": "AND",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5917": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5918": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "ADD",
      "path": "2"
    },
    "5919": {
      "op": "SWAP3"
    },
    "5920": {
      "op": "SWAP1"
    },
    "5921": {
      "op": "SWAP3"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5925": {
      "op": "DUP2"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "SWAP2"
    },
    "5928": {
      "op": "SWAP1"
    },
    "5929": {
      "op": "SWAP2"
    },
    "5930": {
      "op": "MSTORE"
    },
    "5931": {
      "fn": "Governance.submitVerification",
      "offset": [
        14101,
        14176
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.submitVerification",
      "offset": [
        14101,
        14176
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "op": "SUB"
    },
    "5942": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14205
      ],
      "op": "AND",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5944": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14216
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "5949": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5952": {
      "op": "ADD"
    },
    "5953": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5955": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5957": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5958": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "SUB",
      "path": "2"
    },
    "5961": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5964": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5965": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5968": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5969": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5970": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175A"
    },
    "5973": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5974": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5976": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "POP",
      "path": "2"
    },
    "5980": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "GAS",
      "path": "2"
    },
    "5981": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "CALL",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5984": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5985": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176E"
    },
    "5988": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5989": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5992": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5993": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5994": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5995": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5997": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.submitVerification",
      "offset": [
        14195,
        14261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "op": "POP"
    },
    "6001": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x2"
    },
    "6003": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6004": {
      "fn": "Governance.submitVerification",
      "offset": [
        14309,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "6006": {
      "fn": "Governance.submitVerification",
      "offset": [
        14309,
        14334
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6009": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6010": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6019": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6022": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "ADD",
      "path": "2"
    },
    "6024": {
      "op": "DUP16"
    },
    "6025": {
      "op": "SWAP1"
    },
    "6026": {
      "op": "MSTORE"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6029": {
      "op": "DUP2"
    },
    "6030": {
      "op": "ADD"
    },
    "6031": {
      "op": "SWAP2"
    },
    "6032": {
      "op": "SWAP1"
    },
    "6033": {
      "op": "SWAP2"
    },
    "6034": {
      "op": "MSTORE"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6041": {
      "op": "SHL"
    },
    "6042": {
      "op": "SUB"
    },
    "6043": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6044": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6045": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "AND",
      "path": "2"
    },
    "6046": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14289
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14300
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "6053": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14300
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "fn": "Governance.submitVerification",
      "offset": [
        14279,
        14335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14BC"
    },
    "6061": {
      "op": "JUMP"
    },
    "6062": {
      "fn": "Governance.submitVerification",
      "offset": [
        14003,
        15188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6063": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6065": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6066": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "ADD",
      "path": "2"
    },
    "6067": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.submitVerification",
      "offset": [
        14918,
        14931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6070": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 49
    },
    "6071": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6073": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6075": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6077": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6080": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6082": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "6088": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6089": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6090": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "DIV",
      "path": "2"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6097": {
      "op": "SHL"
    },
    "6098": {
      "op": "SUB"
    },
    "6099": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "AND",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.submitVerification",
      "offset": [
        14934,
        14948
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6101": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17DF"
    },
    "6105": {
      "fn": "Governance.submitVerification",
      "offset": [
        14973,
        14987
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.submitVerification",
      "offset": [
        14918,
        14931
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCD"
    },
    "6110": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        14966,
        14987
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6111": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6115": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6116": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "ADD",
      "path": "2"
    },
    "6117": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6119": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6125": {
      "op": "NOT"
    },
    "6126": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "AND",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6129": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6131": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6133": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "ADD",
      "path": "2"
    },
    "6135": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6136": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6137": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6138": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6140": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6141": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "ADD",
      "path": "2"
    },
    "6142": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6143": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6147": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6148": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "ADD",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "6158": {
      "op": "SHL"
    },
    "6159": {
      "op": "SUB"
    },
    "6160": {
      "op": "NOT"
    },
    "6161": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "AND",
      "path": "2"
    },
    "6162": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6163": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.submitVerification",
      "offset": [
        14966,
        14987
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1826"
    },
    "6168": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6170": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6177": {
      "op": "SHL"
    },
    "6178": {
      "op": "SUB"
    },
    "6179": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "6180": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6181": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6182": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15045
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6189": {
      "op": "SHL"
    },
    "6190": {
      "op": "SUB"
    },
    "6191": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15050
      ],
      "op": "AND",
      "path": "2"
    },
    "6192": {
      "fn": "Governance.submitVerification",
      "offset": [
        15058,
        15063
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6193": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6195": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6198": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6200": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6202": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "SUB",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6207": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "GAS",
      "path": "2"
    },
    "6208": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "CALL",
      "path": "2"
    },
    "6209": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6210": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6211": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6212": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6215": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6217": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6218": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "EQ",
      "path": "2"
    },
    "6219": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1870"
    },
    "6222": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6223": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6225": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6226": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6227": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6228": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6230": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "NOT",
      "path": "2"
    },
    "6231": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "6233": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6234": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "ADD",
      "path": "2"
    },
    "6235": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "AND",
      "path": "2"
    },
    "6236": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6237": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "ADD",
      "path": "2"
    },
    "6238": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6240": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6247": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6249": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6250": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "ADD",
      "path": "2"
    },
    "6251": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6252": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1875"
    },
    "6255": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6256": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6257": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6259": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6260": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6261": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6262": {
      "fn": "Governance.submitVerification",
      "offset": [
        15038,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.submitVerification",
      "offset": [
        15005,
        15068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.submitVerification",
      "offset": [
        15005,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.submitVerification",
      "offset": [
        15005,
        15068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.submitVerification",
      "offset": [
        15005,
        15068
      ],
      "op": "POP",
      "path": "2"
    },
    "6267": {
      "branch": 93,
      "fn": "Governance.submitVerification",
      "offset": [
        15144,
        15148
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 50
    },
    "6268": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1897"
    },
    "6271": {
      "branch": 93,
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6272": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6274": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6281": {
      "op": "SHL"
    },
    "6282": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6283": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6284": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6286": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "ADD",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "6290": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247B"
    },
    "6294": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        15136,
        15173
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6295": {
      "fn": "Governance.submitVerification",
      "offset": [
        15136,
        15173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6296": {
      "fn": "Governance.submitVerification",
      "offset": [
        14812,
        15188
      ],
      "op": "POP",
      "path": "2"
    },
    "6297": {
      "fn": "Governance.submitVerification",
      "offset": [
        14812,
        15188
      ],
      "op": "POP",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.submitVerification",
      "offset": [
        14812,
        15188
      ],
      "op": "POP",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.submitVerification",
      "offset": [
        14003,
        15188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6300": {
      "fn": "Governance.submitVerification",
      "offset": [
        12289,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6301": {
      "fn": "Governance.submitVerification",
      "offset": [
        12289,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.submitVerification",
      "offset": [
        12289,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.submitVerification",
      "offset": [
        12289,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.submitVerification",
      "offset": [
        12191,
        16111
      ],
      "op": "POP",
      "path": "2"
    },
    "6308": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        12191,
        16111
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6310": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6312": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6319": {
      "op": "SHL"
    },
    "6320": {
      "op": "SUB"
    },
    "6321": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "6322": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6323": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "6324": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18CF"
    },
    "6327": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6328": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6330": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6337": {
      "op": "SHL"
    },
    "6338": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6339": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6340": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6342": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "6343": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x85C"
    },
    "6346": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6347": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231C"
    },
    "6350": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6351": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6358": {
      "op": "SHL"
    },
    "6359": {
      "op": "SUB"
    },
    "6360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 51
    },
    "6361": {
      "branch": 96,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "12"
    },
    "6362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1934"
    },
    "6365": {
      "branch": 96,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6375": {
      "op": "SHL"
    },
    "6376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "12"
    },
    "6384": {
      "op": "MSTORE"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6389": {
      "op": "DUP3"
    },
    "6390": {
      "op": "ADD"
    },
    "6391": {
      "op": "MSTORE"
    },
    "6392": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6427": {
      "op": "DUP3"
    },
    "6428": {
      "op": "ADD"
    },
    "6429": {
      "op": "MSTORE"
    },
    "6430": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6439": {
      "op": "SHL"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6442": {
      "op": "DUP3"
    },
    "6443": {
      "op": "ADD"
    },
    "6444": {
      "op": "MSTORE"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6447": {
      "op": "ADD"
    },
    "6448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x85C"
    },
    "6451": {
      "op": "JUMP"
    },
    "6452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 52,
      "value": "0x193D"
    },
    "6456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B0D"
    },
    "6460": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "12"
    },
    "6463": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6464": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6465": {
      "fn": "Governance.getVotes",
      "offset": [
        3776,
        3791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6467": {
      "fn": "Governance.getVotes",
      "offset": [
        3824,
        3838
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x8"
    },
    "6469": {
      "fn": "Governance.getVotes",
      "offset": [
        3824,
        3838
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6470": {
      "fn": "Governance.getVotes",
      "offset": [
        3811,
        3821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6471": {
      "branch": 94,
      "fn": "Governance.getVotes",
      "offset": [
        3811,
        3838
      ],
      "op": "LT",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1986"
    },
    "6475": {
      "branch": 94,
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6478": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6485": {
      "op": "SHL"
    },
    "6486": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6487": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6490": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6492": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6493": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "ADD",
      "path": "2"
    },
    "6494": {
      "op": "MSTORE"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6499": {
      "op": "DUP3"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "op": "MSTORE"
    },
    "6502": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "6521": {
      "op": "SHL"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6524": {
      "op": "DUP3"
    },
    "6525": {
      "op": "ADD"
    },
    "6526": {
      "op": "MSTORE"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85C"
    },
    "6533": {
      "op": "JUMP"
    },
    "6534": {
      "fn": "Governance.getVotes",
      "offset": [
        3803,
        3859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6535": {
      "fn": "Governance.getVotes",
      "offset": [
        3869,
        3894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6537": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6538": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6539": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6540": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6542": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6544": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6545": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6547": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3931
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6549": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6551": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3947
      ],
      "op": "ADD",
      "path": "2"
    },
    "6552": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3947
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6553": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3947
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6556": {
      "fn": "Governance.getVotes",
      "offset": [
        3910,
        3947
      ],
      "op": "AND",
      "path": "2"
    },
    "6557": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6566": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6567": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "GT",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6569": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B4"
    },
    "6572": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B4"
    },
    "6576": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CC"
    },
    "6579": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        3897,
        3948
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6580": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6581": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6583": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6584": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6586": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6587": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6591": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "MUL",
      "path": "2"
    },
    "6592": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6594": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ADD",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6596": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ADD",
      "path": "2"
    },
    "6597": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6599": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6602": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19DD"
    },
    "6605": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6606": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6607": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6609": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ADD",
      "path": "2"
    },
    "6610": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6612": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6613": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "MUL",
      "path": "2"
    },
    "6614": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6615": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "6616": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6617": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "ADD",
      "path": "2"
    },
    "6619": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6620": {
      "op": "POP"
    },
    "6621": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.getVotes",
      "offset": [
        3897,
        3948
      ],
      "op": "POP",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.getVotes",
      "offset": [
        3869,
        3948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6624": {
      "fn": "Governance.getVotes",
      "offset": [
        3869,
        3948
      ],
      "op": "POP",
      "path": "2"
    },
    "6625": {
      "fn": "Governance.getVotes",
      "offset": [
        3962,
        3971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6627": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6628": {
      "fn": "Governance.getVotes",
      "offset": [
        3980,
        3989
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6629": {
      "fn": "Governance.getVotes",
      "offset": [
        3980,
        3996
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6630": {
      "fn": "Governance.getVotes",
      "offset": [
        3977,
        3978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6631": {
      "fn": "Governance.getVotes",
      "offset": [
        3977,
        3996
      ],
      "op": "LT",
      "path": "2"
    },
    "6632": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6633": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5F"
    },
    "6636": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x0"
    },
    "6639": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6640": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6641": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6642": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6644": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6646": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6649": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4052
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6651": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6653": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.getVotes",
      "offset": [
        4059,
        4060
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6655": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6657": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "LT",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0E"
    },
    "6662": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6663": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0E"
    },
    "6666": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "6669": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4031,
        4061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6670": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6671": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "6673": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6674": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6675": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "DIV",
      "path": "2"
    },
    "6677": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "ADD",
      "path": "2"
    },
    "6678": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6679": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6680": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "MOD",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6683": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "MUL",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6690": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "EXP",
      "path": "2"
    },
    "6691": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6692": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "DIV",
      "path": "2"
    },
    "6693": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6696": {
      "fn": "Governance.getVotes",
      "offset": [
        4031,
        4061
      ],
      "op": "AND",
      "path": "2"
    },
    "6697": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4025
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6698": {
      "fn": "Governance.getVotes",
      "offset": [
        4026,
        4027
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6699": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6701": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6702": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "LT",
      "path": "2"
    },
    "6703": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3A"
    },
    "6706": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6707": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3A"
    },
    "6710": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "6713": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4016,
        4028
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6714": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6715": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6718": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4061
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6719": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4061
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6720": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4061
      ],
      "op": "AND",
      "path": "2"
    },
    "6721": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6723": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6724": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6725": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "MUL",
      "path": "2"
    },
    "6726": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6727": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6729": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "ADD",
      "path": "2"
    },
    "6730": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6731": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6732": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4028
      ],
      "op": "ADD",
      "path": "2"
    },
    "6733": {
      "fn": "Governance.getVotes",
      "offset": [
        4016,
        4061
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6734": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 55
    },
    "6735": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A57"
    },
    "6738": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6739": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2351"
    },
    "6742": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        3998,
        4001
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6743": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6744": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6745": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "POP",
      "path": "2"
    },
    "6746": {
      "fn": "Governance.getVotes",
      "offset": [
        3998,
        4001
      ],
      "op": "POP",
      "path": "2"
    },
    "6747": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E3"
    },
    "6750": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.getVotes",
      "offset": [
        3958,
        4072
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6752": {
      "op": "POP"
    },
    "6753": {
      "fn": "Governance.getVotes",
      "offset": [
        4088,
        4097
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 56
    },
    "6754": {
      "fn": "Governance.getVotes",
      "offset": [
        3715,
        4104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6755": {
      "op": "POP"
    },
    "6756": {
      "op": "POP"
    },
    "6757": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        3715,
        4104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6758": {
      "fn": "Governance._createTaskType",
      "offset": [
        8624,
        9176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6759": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6761": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6762": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6763": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x1"
    },
    "6765": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6766": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "ADD",
      "path": "2"
    },
    "6767": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6768": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6769": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6770": {
      "fn": "Governance._createTaskType",
      "offset": [
        8759,
        8782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6772": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6773": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6774": {
      "fn": "Governance._createTaskType",
      "offset": [
        8811,
        8827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6775": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6776": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6777": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6778": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6779": {
      "fn": "Governance._createTaskType",
      "offset": [
        8785,
        8801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6780": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6781": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "LT",
      "path": "2"
    },
    "6782": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A89"
    },
    "6785": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6786": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A89"
    },
    "6789": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "6792": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        8868,
        8894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6793": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6794": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6796": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6797": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6798": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6799": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6801": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6802": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6803": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6804": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6806": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6807": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6808": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "MUL",
      "path": "2"
    },
    "6809": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "ADD",
      "path": "2"
    },
    "6810": {
      "fn": "Governance._createTaskType",
      "offset": [
        8868,
        8894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6811": {
      "op": "POP"
    },
    "6812": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8928
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 58,
      "value": "0x1"
    },
    "6814": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6815": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8928
      ],
      "op": "ADD",
      "path": "2"
    },
    "6816": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAA"
    },
    "6819": {
      "fn": "Governance._createTaskType",
      "offset": [
        8930,
        8939
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6820": {
      "fn": "Governance._createTaskType",
      "offset": [
        8930,
        8939
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6821": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8928
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6822": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225B"
    },
    "6825": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        8908,
        8939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6826": {
      "fn": "Governance._createTaskType",
      "offset": [
        8908,
        8939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6827": {
      "op": "POP"
    },
    "6828": {
      "fn": "Governance._createTaskType",
      "offset": [
        8953,
        8971
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x2"
    },
    "6830": {
      "fn": "Governance._createTaskType",
      "offset": [
        8953,
        8971
      ],
      "op": "ADD",
      "path": "2"
    },
    "6831": {
      "fn": "Governance._createTaskType",
      "offset": [
        8953,
        8979
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6832": {
      "fn": "Governance._createTaskType",
      "offset": [
        8953,
        8979
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6833": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "PUSH5",
      "path": "2",
      "statement": 60,
      "value": "0xFFFFFFFFFF"
    },
    "6839": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 61
    },
    "6840": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6841": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "AND",
      "path": "2"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6846": {
      "op": "SHL"
    },
    "6847": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "MUL",
      "path": "2"
    },
    "6848": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6856": {
      "op": "SHL"
    },
    "6857": {
      "op": "NOT"
    },
    "6858": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP6",
      "path": "2",
      "statement": 62
    },
    "6859": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6860": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "AND",
      "path": "2"
    },
    "6861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6865": {
      "op": "SHL"
    },
    "6866": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "MUL",
      "path": "2"
    },
    "6867": {
      "op": "PUSH11",
      "value": "0xFFFFFFFFFF000000000000"
    },
    "6879": {
      "op": "NOT"
    },
    "6880": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6881": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6882": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "6883": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "AND",
      "path": "2"
    },
    "6884": {
      "fn": "Governance._createTaskType",
      "offset": [
        8953,
        8979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6887": {
      "fn": "Governance._createTaskType",
      "offset": [
        8993,
        9029
      ],
      "op": "MUL",
      "path": "2"
    },
    "6888": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6889": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6890": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6891": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "AND",
      "path": "2"
    },
    "6892": {
      "op": "PUSH11",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF"
    },
    "6904": {
      "op": "NOT"
    },
    "6905": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6906": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6907": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "AND",
      "path": "2"
    },
    "6908": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "OR",
      "path": "2"
    },
    "6909": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6910": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6911": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6912": {
      "fn": "Governance._createTaskType",
      "offset": [
        9043,
        9083
      ],
      "op": "OR",
      "path": "2"
    },
    "6913": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6914": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6915": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6916": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "AND",
      "path": "2"
    },
    "6917": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "OR",
      "path": "2"
    },
    "6918": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6919": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6920": {
      "fn": "Governance._createTaskType",
      "offset": [
        9097,
        9137
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6921": {
      "op": "POP"
    },
    "6922": {
      "op": "POP"
    },
    "6923": {
      "op": "POP"
    },
    "6924": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        8624,
        9176
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6925": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6926": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6928": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6929": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "SUB"
    },
    "6938": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 63
    },
    "6939": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6940": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6947": {
      "op": "SHL"
    },
    "6948": {
      "op": "SUB"
    },
    "6949": {
      "op": "NOT"
    },
    "6950": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6951": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "6952": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6953": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "12"
    },
    "6954": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6955": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6956": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6957": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 64,
      "value": "0x40"
    },
    "6959": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6960": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6961": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "12"
    },
    "6962": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6963": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6964": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6965": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6966": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6999": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7000": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7002": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7003": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "12"
    },
    "7004": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "7005": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "7006": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7007": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7008": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7010": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7011": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B82"
    },
    "7014": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B6E"
    },
    "7017": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7018": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BD0"
    },
    "7021": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7022": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7023": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7024": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7025": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B7D"
    },
    "7028": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7029": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7030": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7032": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7033": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24A9"
    },
    "7036": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7037": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7038": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3E"
    },
    "7041": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7042": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7043": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 65
    },
    "7044": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7045": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7046": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7047": {
      "op": "POP"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7052": {
      "op": "SHL"
    },
    "7053": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7054": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "7055": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7057": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7058": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7059": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7060": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7061": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7062": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7063": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7064": {
      "branch": 95,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "7065": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BB5"
    },
    "7068": {
      "branch": 95,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7069": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7071": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7072": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7079": {
      "op": "SHL"
    },
    "7080": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7081": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7082": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7084": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "7085": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7087": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7088": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7089": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7090": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "7091": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7092": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7093": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7094": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 66,
      "value": "0xF"
    },
    "7096": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7097": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7099": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7100": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7101": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7102": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7104": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7105": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7106": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7107": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "7108": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7110": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "op": "POP"
    },
    "7113": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7115": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7116": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7117": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7118": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7119": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7120": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7121": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7129": {
      "op": "SHL"
    },
    "7130": {
      "op": "SUB"
    },
    "7131": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 67
    },
    "7132": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "7133": {
      "branch": 97,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7134": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3A"
    },
    "7137": {
      "branch": 97,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7138": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7140": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7149": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7152": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7154": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7155": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7199": {
      "op": "DUP3"
    },
    "7200": {
      "op": "ADD"
    },
    "7201": {
      "op": "MSTORE"
    },
    "7202": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "7213": {
      "op": "SHL"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7216": {
      "op": "DUP3"
    },
    "7217": {
      "op": "ADD"
    },
    "7218": {
      "op": "MSTORE"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7221": {
      "op": "ADD"
    },
    "7222": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85C"
    },
    "7225": {
      "op": "JUMP"
    },
    "7226": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7227": {
      "op": "POP"
    },
    "7228": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 68
    },
    "7229": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7230": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7231": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7233": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7250": {
      "op": "NOT"
    },
    "7251": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 69
    },
    "7252": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "7253": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7254": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7255": {
      "branch": 98,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7256": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C71"
    },
    "7259": {
      "branch": 98,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7260": {
      "op": "POP"
    },
    "7261": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7278": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7279": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "7280": {
      "branch": 99,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7281": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7282": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3A"
    },
    "7285": {
      "branch": 99,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7286": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7288": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7295": {
      "op": "SHL"
    },
    "7296": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7297": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7300": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7302": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7303": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "7304": {
      "op": "MSTORE"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7309": {
      "op": "DUP3"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "op": "MSTORE"
    },
    "7312": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7347": {
      "op": "DUP3"
    },
    "7348": {
      "op": "ADD"
    },
    "7349": {
      "op": "MSTORE"
    },
    "7350": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7360": {
      "op": "SHL"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7363": {
      "op": "DUP3"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7368": {
      "op": "ADD"
    },
    "7369": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85C"
    },
    "7372": {
      "op": "JUMP"
    },
    "7373": {
      "op": "JUMPDEST"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "op": "DUP1"
    },
    "7376": {
      "op": "SLOAD"
    },
    "7377": {
      "op": "PUSH2",
      "value": "0x1CD9"
    },
    "7380": {
      "op": "SWAP1"
    },
    "7381": {
      "op": "PUSH2",
      "value": "0x217C"
    },
    "7384": {
      "jump": "i",
      "op": "JUMP"
    },
    "7385": {
      "op": "JUMPDEST"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "SSTORE"
    },
    "7390": {
      "op": "DUP1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7393": {
      "op": "LT"
    },
    "7394": {
      "op": "PUSH2",
      "value": "0x1CE9"
    },
    "7397": {
      "op": "JUMPI"
    },
    "7398": {
      "op": "POP"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "jump": "o",
      "op": "JUMP"
    },
    "7401": {
      "op": "JUMPDEST"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7404": {
      "op": "ADD"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7407": {
      "op": "SWAP1"
    },
    "7408": {
      "op": "DIV"
    },
    "7409": {
      "op": "SWAP1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7412": {
      "op": "MSTORE"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7417": {
      "op": "KECCAK256"
    },
    "7418": {
      "op": "SWAP1"
    },
    "7419": {
      "op": "DUP2"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "SWAP1"
    },
    "7422": {
      "op": "PUSH2",
      "value": "0x193D"
    },
    "7425": {
      "op": "SWAP2"
    },
    "7426": {
      "op": "SWAP1"
    },
    "7427": {
      "op": "JUMPDEST"
    },
    "7428": {
      "op": "DUP1"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "GT"
    },
    "7431": {
      "op": "ISZERO"
    },
    "7432": {
      "op": "PUSH2",
      "value": "0x1C3A"
    },
    "7435": {
      "op": "JUMPI"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7438": {
      "op": "DUP2"
    },
    "7439": {
      "op": "SSTORE"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "op": "PUSH2",
      "value": "0x1D03"
    },
    "7446": {
      "op": "JUMP"
    },
    "7447": {
      "op": "JUMPDEST"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7452": {
      "op": "DUP3"
    },
    "7453": {
      "op": "DUP5"
    },
    "7454": {
      "op": "SUB"
    },
    "7455": {
      "op": "SLT"
    },
    "7456": {
      "op": "ISZERO"
    },
    "7457": {
      "op": "PUSH2",
      "value": "0x1D29"
    },
    "7460": {
      "op": "JUMPI"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7463": {
      "op": "DUP1"
    },
    "7464": {
      "op": "REVERT"
    },
    "7465": {
      "op": "JUMPDEST"
    },
    "7466": {
      "op": "POP"
    },
    "7467": {
      "op": "CALLDATALOAD"
    },
    "7468": {
      "op": "SWAP2"
    },
    "7469": {
      "op": "SWAP1"
    },
    "7470": {
      "op": "POP"
    },
    "7471": {
      "jump": "o",
      "op": "JUMP"
    },
    "7472": {
      "op": "JUMPDEST"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7475": {
      "op": "DUP2"
    },
    "7476": {
      "op": "MLOAD"
    },
    "7477": {
      "op": "DUP1"
    },
    "7478": {
      "op": "DUP5"
    },
    "7479": {
      "op": "MSTORE"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7482": {
      "op": "JUMPDEST"
    },
    "7483": {
      "op": "DUP2"
    },
    "7484": {
      "op": "DUP2"
    },
    "7485": {
      "op": "LT"
    },
    "7486": {
      "op": "ISZERO"
    },
    "7487": {
      "op": "PUSH2",
      "value": "0x1D56"
    },
    "7490": {
      "op": "JUMPI"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7493": {
      "op": "DUP2"
    },
    "7494": {
      "op": "DUP6"
    },
    "7495": {
      "op": "ADD"
    },
    "7496": {
      "op": "DUP2"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "MLOAD"
    },
    "7499": {
      "op": "DUP7"
    },
    "7500": {
      "op": "DUP4"
    },
    "7501": {
      "op": "ADD"
    },
    "7502": {
      "op": "DUP3"
    },
    "7503": {
      "op": "ADD"
    },
    "7504": {
      "op": "MSTORE"
    },
    "7505": {
      "op": "ADD"
    },
    "7506": {
      "op": "PUSH2",
      "value": "0x1D3A"
    },
    "7509": {
      "op": "JUMP"
    },
    "7510": {
      "op": "JUMPDEST"
    },
    "7511": {
      "op": "DUP2"
    },
    "7512": {
      "op": "DUP2"
    },
    "7513": {
      "op": "GT"
    },
    "7514": {
      "op": "ISZERO"
    },
    "7515": {
      "op": "PUSH2",
      "value": "0x1D68"
    },
    "7518": {
      "op": "JUMPI"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7523": {
      "op": "DUP4"
    },
    "7524": {
      "op": "DUP8"
    },
    "7525": {
      "op": "ADD"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "MSTORE"
    },
    "7528": {
      "op": "JUMPDEST"
    },
    "7529": {
      "op": "POP"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7532": {
      "op": "ADD"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7535": {
      "op": "NOT"
    },
    "7536": {
      "op": "AND"
    },
    "7537": {
      "op": "SWAP3"
    },
    "7538": {
      "op": "SWAP1"
    },
    "7539": {
      "op": "SWAP3"
    },
    "7540": {
      "op": "ADD"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "ADD"
    },
    "7544": {
      "op": "SWAP3"
    },
    "7545": {
      "op": "SWAP2"
    },
    "7546": {
      "op": "POP"
    },
    "7547": {
      "op": "POP"
    },
    "7548": {
      "jump": "o",
      "op": "JUMP"
    },
    "7549": {
      "op": "JUMPDEST"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7552": {
      "op": "DUP2"
    },
    "7553": {
      "op": "MSTORE"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7556": {
      "op": "PUSH2",
      "value": "0x1D90"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7561": {
      "op": "DUP4"
    },
    "7562": {
      "op": "ADD"
    },
    "7563": {
      "op": "DUP9"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1D30"
    },
    "7567": {
      "jump": "i",
      "op": "JUMP"
    },
    "7568": {
      "op": "JUMPDEST"
    },
    "7569": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7572": {
      "op": "SWAP7"
    },
    "7573": {
      "op": "SWAP1"
    },
    "7574": {
      "op": "SWAP7"
    },
    "7575": {
      "op": "AND"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7578": {
      "op": "DUP4"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "MSTORE"
    },
    "7581": {
      "op": "POP"
    },
    "7582": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7588": {
      "op": "SWAP4"
    },
    "7589": {
      "op": "DUP5"
    },
    "7590": {
      "op": "AND"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7593": {
      "op": "DUP3"
    },
    "7594": {
      "op": "ADD"
    },
    "7595": {
      "op": "MSTORE"
    },
    "7596": {
      "op": "SWAP2"
    },
    "7597": {
      "op": "DUP4"
    },
    "7598": {
      "op": "AND"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7601": {
      "op": "DUP4"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "MSTORE"
    },
    "7604": {
      "op": "SWAP1"
    },
    "7605": {
      "op": "SWAP2"
    },
    "7606": {
      "op": "AND"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7609": {
      "op": "SWAP1"
    },
    "7610": {
      "op": "SWAP2"
    },
    "7611": {
      "op": "ADD"
    },
    "7612": {
      "op": "MSTORE"
    },
    "7613": {
      "op": "SWAP2"
    },
    "7614": {
      "op": "SWAP1"
    },
    "7615": {
      "op": "POP"
    },
    "7616": {
      "jump": "o",
      "op": "JUMP"
    },
    "7617": {
      "op": "JUMPDEST"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7620": {
      "op": "DUP2"
    },
    "7621": {
      "op": "MSTORE"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7624": {
      "op": "PUSH2",
      "value": "0x1DD4"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7629": {
      "op": "DUP4"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "DUP9"
    },
    "7632": {
      "op": "PUSH2",
      "value": "0x1D30"
    },
    "7635": {
      "jump": "i",
      "op": "JUMP"
    },
    "7636": {
      "op": "JUMPDEST"
    },
    "7637": {
      "op": "SWAP6"
    },
    "7638": {
      "op": "ISZERO"
    },
    "7639": {
      "op": "ISZERO"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7642": {
      "op": "DUP4"
    },
    "7643": {
      "op": "ADD"
    },
    "7644": {
      "op": "MSTORE"
    },
    "7645": {
      "op": "POP"
    },
    "7646": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7652": {
      "op": "SWAP4"
    },
    "7653": {
      "op": "DUP5"
    },
    "7654": {
      "op": "AND"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7657": {
      "op": "DUP3"
    },
    "7658": {
      "op": "ADD"
    },
    "7659": {
      "op": "MSTORE"
    },
    "7660": {
      "op": "SWAP2"
    },
    "7661": {
      "op": "DUP4"
    },
    "7662": {
      "op": "AND"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7665": {
      "op": "DUP4"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "MSTORE"
    },
    "7668": {
      "op": "SWAP1"
    },
    "7669": {
      "op": "SWAP2"
    },
    "7670": {
      "op": "AND"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7673": {
      "op": "SWAP1"
    },
    "7674": {
      "op": "SWAP2"
    },
    "7675": {
      "op": "ADD"
    },
    "7676": {
      "op": "MSTORE"
    },
    "7677": {
      "op": "SWAP2"
    },
    "7678": {
      "op": "SWAP1"
    },
    "7679": {
      "op": "POP"
    },
    "7680": {
      "jump": "o",
      "op": "JUMP"
    },
    "7681": {
      "op": "JUMPDEST"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7686": {
      "op": "DUP1"
    },
    "7687": {
      "op": "DUP4"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "op": "DUP2"
    },
    "7690": {
      "op": "DUP5"
    },
    "7691": {
      "op": "MSTORE"
    },
    "7692": {
      "op": "DUP1"
    },
    "7693": {
      "op": "DUP6"
    },
    "7694": {
      "op": "MLOAD"
    },
    "7695": {
      "op": "DUP1"
    },
    "7696": {
      "op": "DUP4"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7700": {
      "op": "DUP7"
    },
    "7701": {
      "op": "ADD"
    },
    "7702": {
      "op": "SWAP2"
    },
    "7703": {
      "op": "POP"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7706": {
      "op": "DUP2"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7709": {
      "op": "SHL"
    },
    "7710": {
      "op": "DUP8"
    },
    "7711": {
      "op": "ADD"
    },
    "7712": {
      "op": "ADD"
    },
    "7713": {
      "op": "SWAP3"
    },
    "7714": {
      "op": "POP"
    },
    "7715": {
      "op": "DUP4"
    },
    "7716": {
      "op": "DUP8"
    },
    "7717": {
      "op": "ADD"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7720": {
      "op": "JUMPDEST"
    },
    "7721": {
      "op": "DUP3"
    },
    "7722": {
      "op": "DUP2"
    },
    "7723": {
      "op": "LT"
    },
    "7724": {
      "op": "ISZERO"
    },
    "7725": {
      "op": "PUSH2",
      "value": "0x1E56"
    },
    "7728": {
      "op": "JUMPI"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7731": {
      "op": "NOT"
    },
    "7732": {
      "op": "DUP9"
    },
    "7733": {
      "op": "DUP7"
    },
    "7734": {
      "op": "SUB"
    },
    "7735": {
      "op": "ADD"
    },
    "7736": {
      "op": "DUP5"
    },
    "7737": {
      "op": "MSTORE"
    },
    "7738": {
      "op": "PUSH2",
      "value": "0x1E44"
    },
    "7741": {
      "op": "DUP6"
    },
    "7742": {
      "op": "DUP4"
    },
    "7743": {
      "op": "MLOAD"
    },
    "7744": {
      "op": "PUSH2",
      "value": "0x1D30"
    },
    "7747": {
      "jump": "i",
      "op": "JUMP"
    },
    "7748": {
      "op": "JUMPDEST"
    },
    "7749": {
      "op": "SWAP5"
    },
    "7750": {
      "op": "POP"
    },
    "7751": {
      "op": "SWAP3"
    },
    "7752": {
      "op": "DUP6"
    },
    "7753": {
      "op": "ADD"
    },
    "7754": {
      "op": "SWAP3"
    },
    "7755": {
      "op": "SWAP1"
    },
    "7756": {
      "op": "DUP6"
    },
    "7757": {
      "op": "ADD"
    },
    "7758": {
      "op": "SWAP1"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7761": {
      "op": "ADD"
    },
    "7762": {
      "op": "PUSH2",
      "value": "0x1E28"
    },
    "7765": {
      "op": "JUMP"
    },
    "7766": {
      "op": "JUMPDEST"
    },
    "7767": {
      "op": "POP"
    },
    "7768": {
      "op": "SWAP3"
    },
    "7769": {
      "op": "SWAP8"
    },
    "7770": {
      "op": "SWAP7"
    },
    "7771": {
      "op": "POP"
    },
    "7772": {
      "op": "POP"
    },
    "7773": {
      "op": "POP"
    },
    "7774": {
      "op": "POP"
    },
    "7775": {
      "op": "POP"
    },
    "7776": {
      "op": "POP"
    },
    "7777": {
      "op": "POP"
    },
    "7778": {
      "jump": "o",
      "op": "JUMP"
    },
    "7779": {
      "op": "JUMPDEST"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7782": {
      "op": "DUP1"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7785": {
      "op": "DUP4"
    },
    "7786": {
      "op": "DUP6"
    },
    "7787": {
      "op": "SUB"
    },
    "7788": {
      "op": "SLT"
    },
    "7789": {
      "op": "ISZERO"
    },
    "7790": {
      "op": "PUSH2",
      "value": "0x1E76"
    },
    "7793": {
      "op": "JUMPI"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7796": {
      "op": "DUP1"
    },
    "7797": {
      "op": "REVERT"
    },
    "7798": {
      "op": "JUMPDEST"
    },
    "7799": {
      "op": "POP"
    },
    "7800": {
      "op": "POP"
    },
    "7801": {
      "op": "DUP1"
    },
    "7802": {
      "op": "CALLDATALOAD"
    },
    "7803": {
      "op": "SWAP3"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7806": {
      "op": "SWAP1"
    },
    "7807": {
      "op": "SWAP2"
    },
    "7808": {
      "op": "ADD"
    },
    "7809": {
      "op": "CALLDATALOAD"
    },
    "7810": {
      "op": "SWAP2"
    },
    "7811": {
      "op": "POP"
    },
    "7812": {
      "jump": "o",
      "op": "JUMP"
    },
    "7813": {
      "op": "JUMPDEST"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7816": {
      "op": "DUP1"
    },
    "7817": {
      "op": "DUP4"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7820": {
      "op": "DUP5"
    },
    "7821": {
      "op": "ADD"
    },
    "7822": {
      "op": "SLT"
    },
    "7823": {
      "op": "PUSH2",
      "value": "0x1E97"
    },
    "7826": {
      "op": "JUMPI"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7829": {
      "op": "DUP1"
    },
    "7830": {
      "op": "REVERT"
    },
    "7831": {
      "op": "JUMPDEST"
    },
    "7832": {
      "op": "POP"
    },
    "7833": {
      "op": "DUP2"
    },
    "7834": {
      "op": "CALLDATALOAD"
    },
    "7835": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7844": {
      "op": "DUP2"
    },
    "7845": {
      "op": "GT"
    },
    "7846": {
      "op": "ISZERO"
    },
    "7847": {
      "op": "PUSH2",
      "value": "0x1EAF"
    },
    "7850": {
      "op": "JUMPI"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7853": {
      "op": "DUP1"
    },
    "7854": {
      "op": "REVERT"
    },
    "7855": {
      "op": "JUMPDEST"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7858": {
      "op": "DUP4"
    },
    "7859": {
      "op": "ADD"
    },
    "7860": {
      "op": "SWAP2"
    },
    "7861": {
      "op": "POP"
    },
    "7862": {
      "op": "DUP4"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7865": {
      "op": "DUP3"
    },
    "7866": {
      "op": "DUP6"
    },
    "7867": {
      "op": "ADD"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "op": "GT"
    },
    "7870": {
      "op": "ISZERO"
    },
    "7871": {
      "op": "PUSH2",
      "value": "0x1EC7"
    },
    "7874": {
      "op": "JUMPI"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7877": {
      "op": "DUP1"
    },
    "7878": {
      "op": "REVERT"
    },
    "7879": {
      "op": "JUMPDEST"
    },
    "7880": {
      "op": "SWAP3"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "SWAP3"
    },
    "7883": {
      "op": "SWAP1"
    },
    "7884": {
      "op": "POP"
    },
    "7885": {
      "jump": "o",
      "op": "JUMP"
    },
    "7886": {
      "op": "JUMPDEST"
    },
    "7887": {
      "op": "DUP1"
    },
    "7888": {
      "op": "CALLDATALOAD"
    },
    "7889": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7895": {
      "op": "DUP2"
    },
    "7896": {
      "op": "AND"
    },
    "7897": {
      "op": "DUP2"
    },
    "7898": {
      "op": "EQ"
    },
    "7899": {
      "op": "PUSH2",
      "value": "0x1EE3"
    },
    "7902": {
      "op": "JUMPI"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7905": {
      "op": "DUP1"
    },
    "7906": {
      "op": "REVERT"
    },
    "7907": {
      "op": "JUMPDEST"
    },
    "7908": {
      "op": "SWAP2"
    },
    "7909": {
      "op": "SWAP1"
    },
    "7910": {
      "op": "POP"
    },
    "7911": {
      "jump": "o",
      "op": "JUMP"
    },
    "7912": {
      "op": "JUMPDEST"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7915": {
      "op": "DUP1"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7918": {
      "op": "DUP1"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7923": {
      "op": "DUP7"
    },
    "7924": {
      "op": "DUP9"
    },
    "7925": {
      "op": "SUB"
    },
    "7926": {
      "op": "SLT"
    },
    "7927": {
      "op": "ISZERO"
    },
    "7928": {
      "op": "PUSH2",
      "value": "0x1F00"
    },
    "7931": {
      "op": "JUMPI"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7934": {
      "op": "DUP1"
    },
    "7935": {
      "op": "REVERT"
    },
    "7936": {
      "op": "JUMPDEST"
    },
    "7937": {
      "op": "DUP6"
    },
    "7938": {
      "op": "CALLDATALOAD"
    },
    "7939": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7948": {
      "op": "DUP2"
    },
    "7949": {
      "op": "GT"
    },
    "7950": {
      "op": "ISZERO"
    },
    "7951": {
      "op": "PUSH2",
      "value": "0x1F17"
    },
    "7954": {
      "op": "JUMPI"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7957": {
      "op": "DUP1"
    },
    "7958": {
      "op": "REVERT"
    },
    "7959": {
      "op": "JUMPDEST"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1F23"
    },
    "7963": {
      "op": "DUP9"
    },
    "7964": {
      "op": "DUP3"
    },
    "7965": {
      "op": "DUP10"
    },
    "7966": {
      "op": "ADD"
    },
    "7967": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7970": {
      "jump": "i",
      "op": "JUMP"
    },
    "7971": {
      "op": "JUMPDEST"
    },
    "7972": {
      "op": "SWAP1"
    },
    "7973": {
      "op": "SWAP7"
    },
    "7974": {
      "op": "POP"
    },
    "7975": {
      "op": "SWAP5"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7980": {
      "op": "DUP7"
    },
    "7981": {
      "op": "ADD"
    },
    "7982": {
      "op": "CALLDATALOAD"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7986": {
      "op": "DUP2"
    },
    "7987": {
      "op": "AND"
    },
    "7988": {
      "op": "DUP2"
    },
    "7989": {
      "op": "EQ"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x1F3E"
    },
    "7993": {
      "op": "JUMPI"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7996": {
      "op": "DUP1"
    },
    "7997": {
      "op": "REVERT"
    },
    "7998": {
      "op": "JUMPDEST"
    },
    "7999": {
      "op": "SWAP3"
    },
    "8000": {
      "op": "POP"
    },
    "8001": {
      "op": "PUSH2",
      "value": "0x1F4C"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8006": {
      "op": "DUP8"
    },
    "8007": {
      "op": "ADD"
    },
    "8008": {
      "op": "PUSH2",
      "value": "0x1ECE"
    },
    "8011": {
      "jump": "i",
      "op": "JUMP"
    },
    "8012": {
      "op": "JUMPDEST"
    },
    "8013": {
      "op": "SWAP2"
    },
    "8014": {
      "op": "POP"
    },
    "8015": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8020": {
      "op": "DUP8"
    },
    "8021": {
      "op": "ADD"
    },
    "8022": {
      "op": "PUSH2",
      "value": "0x1ECE"
    },
    "8025": {
      "jump": "i",
      "op": "JUMP"
    },
    "8026": {
      "op": "JUMPDEST"
    },
    "8027": {
      "op": "SWAP1"
    },
    "8028": {
      "op": "POP"
    },
    "8029": {
      "op": "SWAP3"
    },
    "8030": {
      "op": "SWAP6"
    },
    "8031": {
      "op": "POP"
    },
    "8032": {
      "op": "SWAP3"
    },
    "8033": {
      "op": "SWAP6"
    },
    "8034": {
      "op": "SWAP1"
    },
    "8035": {
      "op": "SWAP4"
    },
    "8036": {
      "op": "POP"
    },
    "8037": {
      "jump": "o",
      "op": "JUMP"
    },
    "8038": {
      "op": "JUMPDEST"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8045": {
      "op": "SHL"
    },
    "8046": {
      "op": "SUB"
    },
    "8047": {
      "op": "DUP2"
    },
    "8048": {
      "op": "AND"
    },
    "8049": {
      "op": "DUP2"
    },
    "8050": {
      "op": "EQ"
    },
    "8051": {
      "op": "PUSH2",
      "value": "0x193D"
    },
    "8054": {
      "op": "JUMPI"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8057": {
      "op": "DUP1"
    },
    "8058": {
      "op": "REVERT"
    },
    "8059": {
      "op": "JUMPDEST"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8064": {
      "op": "DUP3"
    },
    "8065": {
      "op": "DUP5"
    },
    "8066": {
      "op": "SUB"
    },
    "8067": {
      "op": "SLT"
    },
    "8068": {
      "op": "ISZERO"
    },
    "8069": {
      "op": "PUSH2",
      "value": "0x1F8D"
    },
    "8072": {
      "op": "JUMPI"
    },
    "8073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8075": {
      "op": "DUP1"
    },
    "8076": {
      "op": "REVERT"
    },
    "8077": {
      "op": "JUMPDEST"
    },
    "8078": {
      "op": "DUP2"
    },
    "8079": {
      "op": "CALLDATALOAD"
    },
    "8080": {
      "op": "PUSH2",
      "value": "0x1F98"
    },
    "8083": {
      "op": "DUP2"
    },
    "8084": {
      "op": "PUSH2",
      "value": "0x1F66"
    },
    "8087": {
      "jump": "i",
      "op": "JUMP"
    },
    "8088": {
      "op": "JUMPDEST"
    },
    "8089": {
      "op": "SWAP4"
    },
    "8090": {
      "op": "SWAP3"
    },
    "8091": {
      "op": "POP"
    },
    "8092": {
      "op": "POP"
    },
    "8093": {
      "op": "POP"
    },
    "8094": {
      "jump": "o",
      "op": "JUMP"
    },
    "8095": {
      "op": "JUMPDEST"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8098": {
      "op": "DUP1"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8101": {
      "op": "DUP1"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8104": {
      "op": "DUP6"
    },
    "8105": {
      "op": "DUP8"
    },
    "8106": {
      "op": "SUB"
    },
    "8107": {
      "op": "SLT"
    },
    "8108": {
      "op": "ISZERO"
    },
    "8109": {
      "op": "PUSH2",
      "value": "0x1FB5"
    },
    "8112": {
      "op": "JUMPI"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8115": {
      "op": "DUP1"
    },
    "8116": {
      "op": "REVERT"
    },
    "8117": {
      "op": "JUMPDEST"
    },
    "8118": {
      "op": "DUP5"
    },
    "8119": {
      "op": "CALLDATALOAD"
    },
    "8120": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8129": {
      "op": "DUP2"
    },
    "8130": {
      "op": "GT"
    },
    "8131": {
      "op": "ISZERO"
    },
    "8132": {
      "op": "PUSH2",
      "value": "0x1FCC"
    },
    "8135": {
      "op": "JUMPI"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8138": {
      "op": "DUP1"
    },
    "8139": {
      "op": "REVERT"
    },
    "8140": {
      "op": "JUMPDEST"
    },
    "8141": {
      "op": "PUSH2",
      "value": "0x1FD8"
    },
    "8144": {
      "op": "DUP8"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "DUP9"
    },
    "8147": {
      "op": "ADD"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "8151": {
      "jump": "i",
      "op": "JUMP"
    },
    "8152": {
      "op": "JUMPDEST"
    },
    "8153": {
      "op": "SWAP1"
    },
    "8154": {
      "op": "SWAP6"
    },
    "8155": {
      "op": "POP"
    },
    "8156": {
      "op": "SWAP4"
    },
    "8157": {
      "op": "POP"
    },
    "8158": {
      "op": "PUSH2",
      "value": "0x1FEB"
    },
    "8161": {
      "op": "SWAP1"
    },
    "8162": {
      "op": "POP"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8165": {
      "op": "DUP7"
    },
    "8166": {
      "op": "ADD"
    },
    "8167": {
      "op": "PUSH2",
      "value": "0x1ECE"
    },
    "8170": {
      "jump": "i",
      "op": "JUMP"
    },
    "8171": {
      "op": "JUMPDEST"
    },
    "8172": {
      "op": "SWAP2"
    },
    "8173": {
      "op": "POP"
    },
    "8174": {
      "op": "PUSH2",
      "value": "0x1FF9"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8179": {
      "op": "DUP7"
    },
    "8180": {
      "op": "ADD"
    },
    "8181": {
      "op": "PUSH2",
      "value": "0x1ECE"
    },
    "8184": {
      "jump": "i",
      "op": "JUMP"
    },
    "8185": {
      "op": "JUMPDEST"
    },
    "8186": {
      "op": "SWAP1"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "op": "SWAP3"
    },
    "8189": {
      "op": "SWAP6"
    },
    "8190": {
      "op": "SWAP2"
    },
    "8191": {
      "op": "SWAP5"
    },
    "8192": {
      "op": "POP"
    },
    "8193": {
      "op": "SWAP3"
    },
    "8194": {
      "op": "POP"
    },
    "8195": {
      "jump": "o",
      "op": "JUMP"
    },
    "8196": {
      "op": "JUMPDEST"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8199": {
      "op": "DUP1"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8204": {
      "op": "DUP5"
    },
    "8205": {
      "op": "DUP7"
    },
    "8206": {
      "op": "SUB"
    },
    "8207": {
      "op": "SLT"
    },
    "8208": {
      "op": "ISZERO"
    },
    "8209": {
      "op": "PUSH2",
      "value": "0x2019"
    },
    "8212": {
      "op": "JUMPI"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8215": {
      "op": "DUP1"
    },
    "8216": {
      "op": "REVERT"
    },
    "8217": {
      "op": "JUMPDEST"
    },
    "8218": {
      "op": "POP"
    },
    "8219": {
      "op": "POP"
    },
    "8220": {
      "op": "DUP2"
    },
    "8221": {
      "op": "CALLDATALOAD"
    },
    "8222": {
      "op": "SWAP4"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8225": {
      "op": "DUP4"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "CALLDATALOAD"
    },
    "8228": {
      "op": "SWAP4"
    },
    "8229": {
      "op": "POP"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8232": {
      "op": "SWAP1"
    },
    "8233": {
      "op": "SWAP3"
    },
    "8234": {
      "op": "ADD"
    },
    "8235": {
      "op": "CALLDATALOAD"
    },
    "8236": {
      "op": "SWAP2"
    },
    "8237": {
      "op": "SWAP1"
    },
    "8238": {
      "op": "POP"
    },
    "8239": {
      "jump": "o",
      "op": "JUMP"
    },
    "8240": {
      "op": "JUMPDEST"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8243": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "8246": {
      "op": "DUP1"
    },
    "8247": {
      "op": "DUP4"
    },
    "8248": {
      "op": "MSTORE"
    },
    "8249": {
      "op": "PUSH2",
      "value": "0x2044"
    },
    "8252": {
      "op": "DUP2"
    },
    "8253": {
      "op": "DUP5"
    },
    "8254": {
      "op": "ADD"
    },
    "8255": {
      "op": "DUP15"
    },
    "8256": {
      "op": "PUSH2",
      "value": "0x1D30"
    },
    "8259": {
      "jump": "i",
      "op": "JUMP"
    },
    "8260": {
      "op": "JUMPDEST"
    },
    "8261": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8267": {
      "op": "SWAP13"
    },
    "8268": {
      "op": "DUP14"
    },
    "8269": {
      "op": "AND"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8272": {
      "op": "DUP6"
    },
    "8273": {
      "op": "ADD"
    },
    "8274": {
      "op": "MSTORE"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8277": {
      "op": "DUP5"
    },
    "8278": {
      "op": "ADD"
    },
    "8279": {
      "op": "SWAP12"
    },
    "8280": {
      "op": "SWAP1"
    },
    "8281": {
      "op": "SWAP12"
    },
    "8282": {
      "op": "MSTORE"
    },
    "8283": {
      "op": "POP"
    },
    "8284": {
      "op": "POP"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8287": {
      "op": "DUP2"
    },
    "8288": {
      "op": "ADD"
    },
    "8289": {
      "op": "SWAP8"
    },
    "8290": {
      "op": "SWAP1"
    },
    "8291": {
      "op": "SWAP8"
    },
    "8292": {
      "op": "MSTORE"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8295": {
      "op": "SWAP6"
    },
    "8296": {
      "op": "SWAP1"
    },
    "8297": {
      "op": "SWAP6"
    },
    "8298": {
      "op": "AND"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8301": {
      "op": "DUP8"
    },
    "8302": {
      "op": "ADD"
    },
    "8303": {
      "op": "MSTORE"
    },
    "8304": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "8308": {
      "op": "SWAP4"
    },
    "8309": {
      "op": "SWAP1"
    },
    "8310": {
      "op": "SWAP4"
    },
    "8311": {
      "op": "AND"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8314": {
      "op": "DUP7"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8323": {
      "op": "SHL"
    },
    "8324": {
      "op": "SUB"
    },
    "8325": {
      "op": "SWAP2"
    },
    "8326": {
      "op": "SWAP1"
    },
    "8327": {
      "op": "SWAP2"
    },
    "8328": {
      "op": "AND"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8331": {
      "op": "DUP6"
    },
    "8332": {
      "op": "ADD"
    },
    "8333": {
      "op": "MSTORE"
    },
    "8334": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8337": {
      "op": "SWAP1"
    },
    "8338": {
      "op": "DUP2"
    },
    "8339": {
      "op": "AND"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8342": {
      "op": "DUP6"
    },
    "8343": {
      "op": "ADD"
    },
    "8344": {
      "op": "MSTORE"
    },
    "8345": {
      "op": "AND"
    },
    "8346": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8349": {
      "op": "DUP4"
    },
    "8350": {
      "op": "ADD"
    },
    "8351": {
      "op": "MSTORE"
    },
    "8352": {
      "op": "SWAP1"
    },
    "8353": {
      "op": "SWAP3"
    },
    "8354": {
      "op": "AND"
    },
    "8355": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "8358": {
      "op": "SWAP1"
    },
    "8359": {
      "op": "SWAP3"
    },
    "8360": {
      "op": "ADD"
    },
    "8361": {
      "op": "SWAP2"
    },
    "8362": {
      "op": "SWAP1"
    },
    "8363": {
      "op": "SWAP2"
    },
    "8364": {
      "op": "MSTORE"
    },
    "8365": {
      "op": "SWAP2"
    },
    "8366": {
      "op": "SWAP1"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "jump": "o",
      "op": "JUMP"
    },
    "8369": {
      "op": "JUMPDEST"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8372": {
      "op": "DUP1"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8375": {
      "op": "DUP1"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8378": {
      "op": "DUP6"
    },
    "8379": {
      "op": "DUP8"
    },
    "8380": {
      "op": "SUB"
    },
    "8381": {
      "op": "SLT"
    },
    "8382": {
      "op": "ISZERO"
    },
    "8383": {
      "op": "PUSH2",
      "value": "0x20C7"
    },
    "8386": {
      "op": "JUMPI"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "DUP1"
    },
    "8390": {
      "op": "REVERT"
    },
    "8391": {
      "op": "JUMPDEST"
    },
    "8392": {
      "op": "DUP5"
    },
    "8393": {
      "op": "CALLDATALOAD"
    },
    "8394": {
      "op": "SWAP4"
    },
    "8395": {
      "op": "POP"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8398": {
      "op": "DUP6"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "CALLDATALOAD"
    },
    "8401": {
      "op": "SWAP3"
    },
    "8402": {
      "op": "POP"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8405": {
      "op": "DUP6"
    },
    "8406": {
      "op": "ADD"
    },
    "8407": {
      "op": "CALLDATALOAD"
    },
    "8408": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8417": {
      "op": "DUP1"
    },
    "8418": {
      "op": "DUP3"
    },
    "8419": {
      "op": "GT"
    },
    "8420": {
      "op": "ISZERO"
    },
    "8421": {
      "op": "PUSH2",
      "value": "0x20ED"
    },
    "8424": {
      "op": "JUMPI"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8427": {
      "op": "DUP1"
    },
    "8428": {
      "op": "REVERT"
    },
    "8429": {
      "op": "JUMPDEST"
    },
    "8430": {
      "op": "DUP2"
    },
    "8431": {
      "op": "DUP8"
    },
    "8432": {
      "op": "ADD"
    },
    "8433": {
      "op": "SWAP2"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "op": "DUP8"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8438": {
      "op": "DUP4"
    },
    "8439": {
      "op": "ADD"
    },
    "8440": {
      "op": "SLT"
    },
    "8441": {
      "op": "PUSH2",
      "value": "0x2101"
    },
    "8444": {
      "op": "JUMPI"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8447": {
      "op": "DUP1"
    },
    "8448": {
      "op": "REVERT"
    },
    "8449": {
      "op": "JUMPDEST"
    },
    "8450": {
      "op": "DUP2"
    },
    "8451": {
      "op": "CALLDATALOAD"
    },
    "8452": {
      "op": "DUP2"
    },
    "8453": {
      "op": "DUP2"
    },
    "8454": {
      "op": "GT"
    },
    "8455": {
      "op": "ISZERO"
    },
    "8456": {
      "op": "PUSH2",
      "value": "0x2110"
    },
    "8459": {
      "op": "JUMPI"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8462": {
      "op": "DUP1"
    },
    "8463": {
      "op": "REVERT"
    },
    "8464": {
      "op": "JUMPDEST"
    },
    "8465": {
      "op": "DUP9"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8468": {
      "op": "DUP3"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8471": {
      "op": "SHL"
    },
    "8472": {
      "op": "DUP6"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "ADD"
    },
    "8475": {
      "op": "GT"
    },
    "8476": {
      "op": "ISZERO"
    },
    "8477": {
      "op": "PUSH2",
      "value": "0x2125"
    },
    "8480": {
      "op": "JUMPI"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8483": {
      "op": "DUP1"
    },
    "8484": {
      "op": "REVERT"
    },
    "8485": {
      "op": "JUMPDEST"
    },
    "8486": {
      "op": "SWAP6"
    },
    "8487": {
      "op": "SWAP9"
    },
    "8488": {
      "op": "SWAP5"
    },
    "8489": {
      "op": "SWAP8"
    },
    "8490": {
      "op": "POP"
    },
    "8491": {
      "op": "POP"
    },
    "8492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8494": {
      "op": "ADD"
    },
    "8495": {
      "op": "SWAP5"
    },
    "8496": {
      "op": "POP"
    },
    "8497": {
      "op": "POP"
    },
    "8498": {
      "op": "POP"
    },
    "8499": {
      "jump": "o",
      "op": "JUMP"
    },
    "8500": {
      "op": "JUMPDEST"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8503": {
      "op": "DUP1"
    },
    "8504": {
      "op": "DUP3"
    },
    "8505": {
      "op": "MSTORE"
    },
    "8506": {
      "op": "DUP3"
    },
    "8507": {
      "op": "MLOAD"
    },
    "8508": {
      "op": "DUP3"
    },
    "8509": {
      "op": "DUP3"
    },
    "8510": {
      "op": "ADD"
    },
    "8511": {
      "op": "DUP2"
    },
    "8512": {
      "op": "SWAP1"
    },
    "8513": {
      "op": "MSTORE"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8516": {
      "op": "SWAP2"
    },
    "8517": {
      "op": "SWAP1"
    },
    "8518": {
      "op": "DUP5"
    },
    "8519": {
      "op": "DUP3"
    },
    "8520": {
      "op": "ADD"
    },
    "8521": {
      "op": "SWAP1"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8524": {
      "op": "DUP6"
    },
    "8525": {
      "op": "ADD"
    },
    "8526": {
      "op": "SWAP1"
    },
    "8527": {
      "op": "DUP5"
    },
    "8528": {
      "op": "JUMPDEST"
    },
    "8529": {
      "op": "DUP2"
    },
    "8530": {
      "op": "DUP2"
    },
    "8531": {
      "op": "LT"
    },
    "8532": {
      "op": "ISZERO"
    },
    "8533": {
      "op": "PUSH2",
      "value": "0x2170"
    },
    "8536": {
      "op": "JUMPI"
    },
    "8537": {
      "op": "DUP4"
    },
    "8538": {
      "op": "MLOAD"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8542": {
      "op": "AND"
    },
    "8543": {
      "op": "DUP4"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "SWAP3"
    },
    "8546": {
      "op": "DUP5"
    },
    "8547": {
      "op": "ADD"
    },
    "8548": {
      "op": "SWAP3"
    },
    "8549": {
      "op": "SWAP2"
    },
    "8550": {
      "op": "DUP5"
    },
    "8551": {
      "op": "ADD"
    },
    "8552": {
      "op": "SWAP2"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x2150"
    },
    "8559": {
      "op": "JUMP"
    },
    "8560": {
      "op": "JUMPDEST"
    },
    "8561": {
      "op": "POP"
    },
    "8562": {
      "op": "SWAP1"
    },
    "8563": {
      "op": "SWAP7"
    },
    "8564": {
      "op": "SWAP6"
    },
    "8565": {
      "op": "POP"
    },
    "8566": {
      "op": "POP"
    },
    "8567": {
      "op": "POP"
    },
    "8568": {
      "op": "POP"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "op": "POP"
    },
    "8571": {
      "jump": "o",
      "op": "JUMP"
    },
    "8572": {
      "op": "JUMPDEST"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8575": {
      "op": "DUP2"
    },
    "8576": {
      "op": "DUP2"
    },
    "8577": {
      "op": "SHR"
    },
    "8578": {
      "op": "SWAP1"
    },
    "8579": {
      "op": "DUP3"
    },
    "8580": {
      "op": "AND"
    },
    "8581": {
      "op": "DUP1"
    },
    "8582": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8585": {
      "op": "JUMPI"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8588": {
      "op": "DUP3"
    },
    "8589": {
      "op": "AND"
    },
    "8590": {
      "op": "SWAP2"
    },
    "8591": {
      "op": "POP"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8595": {
      "op": "DUP3"
    },
    "8596": {
      "op": "LT"
    },
    "8597": {
      "op": "DUP2"
    },
    "8598": {
      "op": "SUB"
    },
    "8599": {
      "op": "PUSH2",
      "value": "0x21B0"
    },
    "8602": {
      "op": "JUMPI"
    },
    "8603": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8613": {
      "op": "MSTORE"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8618": {
      "op": "MSTORE"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8623": {
      "op": "REVERT"
    },
    "8624": {
      "op": "JUMPDEST"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "op": "SWAP2"
    },
    "8627": {
      "op": "SWAP1"
    },
    "8628": {
      "op": "POP"
    },
    "8629": {
      "jump": "o",
      "op": "JUMP"
    },
    "8630": {
      "op": "JUMPDEST"
    },
    "8631": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8638": {
      "op": "SHL"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8641": {
      "op": "MSTORE"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8646": {
      "op": "MSTORE"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8651": {
      "op": "REVERT"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8660": {
      "op": "SHL"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8668": {
      "op": "MSTORE"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8673": {
      "op": "REVERT"
    },
    "8674": {
      "op": "JUMPDEST"
    },
    "8675": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8682": {
      "op": "SHL"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8685": {
      "op": "MSTORE"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8690": {
      "op": "MSTORE"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8695": {
      "op": "REVERT"
    },
    "8696": {
      "op": "JUMPDEST"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8699": {
      "op": "DUP3"
    },
    "8700": {
      "op": "NOT"
    },
    "8701": {
      "op": "DUP3"
    },
    "8702": {
      "op": "GT"
    },
    "8703": {
      "op": "ISZERO"
    },
    "8704": {
      "op": "PUSH2",
      "value": "0x220B"
    },
    "8707": {
      "op": "JUMPI"
    },
    "8708": {
      "op": "PUSH2",
      "value": "0x220B"
    },
    "8711": {
      "op": "PUSH2",
      "value": "0x21E2"
    },
    "8714": {
      "jump": "i",
      "op": "JUMP"
    },
    "8715": {
      "op": "JUMPDEST"
    },
    "8716": {
      "op": "POP"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "op": "SWAP1"
    },
    "8719": {
      "jump": "o",
      "op": "JUMP"
    },
    "8720": {
      "op": "JUMPDEST"
    },
    "8721": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "GT"
    },
    "8725": {
      "op": "ISZERO"
    },
    "8726": {
      "op": "PUSH2",
      "value": "0x2256"
    },
    "8729": {
      "op": "JUMPI"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8732": {
      "op": "DUP2"
    },
    "8733": {
      "op": "DUP2"
    },
    "8734": {
      "op": "MSTORE"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8737": {
      "op": "DUP2"
    },
    "8738": {
      "op": "KECCAK256"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8741": {
      "op": "DUP6"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8745": {
      "op": "SHR"
    },
    "8746": {
      "op": "DUP2"
    },
    "8747": {
      "op": "ADD"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8750": {
      "op": "DUP7"
    },
    "8751": {
      "op": "LT"
    },
    "8752": {
      "op": "ISZERO"
    },
    "8753": {
      "op": "PUSH2",
      "value": "0x2237"
    },
    "8756": {
      "op": "JUMPI"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "DUP1"
    },
    "8759": {
      "op": "JUMPDEST"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8762": {
      "op": "DUP6"
    },
    "8763": {
      "op": "ADD"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8766": {
      "op": "SHR"
    },
    "8767": {
      "op": "DUP3"
    },
    "8768": {
      "op": "ADD"
    },
    "8769": {
      "op": "SWAP2"
    },
    "8770": {
      "op": "POP"
    },
    "8771": {
      "op": "JUMPDEST"
    },
    "8772": {
      "op": "DUP2"
    },
    "8773": {
      "op": "DUP2"
    },
    "8774": {
      "op": "LT"
    },
    "8775": {
      "op": "ISZERO"
    },
    "8776": {
      "op": "PUSH2",
      "value": "0x96C"
    },
    "8779": {
      "op": "JUMPI"
    },
    "8780": {
      "op": "DUP3"
    },
    "8781": {
      "op": "DUP2"
    },
    "8782": {
      "op": "SSTORE"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "PUSH2",
      "value": "0x2243"
    },
    "8789": {
      "op": "JUMP"
    },
    "8790": {
      "op": "JUMPDEST"
    },
    "8791": {
      "op": "POP"
    },
    "8792": {
      "op": "POP"
    },
    "8793": {
      "op": "POP"
    },
    "8794": {
      "jump": "o",
      "op": "JUMP"
    },
    "8795": {
      "op": "JUMPDEST"
    },
    "8796": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8805": {
      "op": "DUP4"
    },
    "8806": {
      "op": "GT"
    },
    "8807": {
      "op": "ISZERO"
    },
    "8808": {
      "op": "PUSH2",
      "value": "0x2273"
    },
    "8811": {
      "op": "JUMPI"
    },
    "8812": {
      "op": "PUSH2",
      "value": "0x2273"
    },
    "8815": {
      "op": "PUSH2",
      "value": "0x21CC"
    },
    "8818": {
      "jump": "i",
      "op": "JUMP"
    },
    "8819": {
      "op": "JUMPDEST"
    },
    "8820": {
      "op": "PUSH2",
      "value": "0x2287"
    },
    "8823": {
      "op": "DUP4"
    },
    "8824": {
      "op": "PUSH2",
      "value": "0x2281"
    },
    "8827": {
      "op": "DUP4"
    },
    "8828": {
      "op": "SLOAD"
    },
    "8829": {
      "op": "PUSH2",
      "value": "0x217C"
    },
    "8832": {
      "jump": "i",
      "op": "JUMP"
    },
    "8833": {
      "op": "JUMPDEST"
    },
    "8834": {
      "op": "DUP4"
    },
    "8835": {
      "op": "PUSH2",
      "value": "0x2210"
    },
    "8838": {
      "jump": "i",
      "op": "JUMP"
    },
    "8839": {
      "op": "JUMPDEST"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8844": {
      "op": "DUP5"
    },
    "8845": {
      "op": "GT"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8848": {
      "op": "DUP2"
    },
    "8849": {
      "op": "EQ"
    },
    "8850": {
      "op": "PUSH2",
      "value": "0x22BB"
    },
    "8853": {
      "op": "JUMPI"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8856": {
      "op": "DUP6"
    },
    "8857": {
      "op": "ISZERO"
    },
    "8858": {
      "op": "PUSH2",
      "value": "0x22A3"
    },
    "8861": {
      "op": "JUMPI"
    },
    "8862": {
      "op": "POP"
    },
    "8863": {
      "op": "DUP4"
    },
    "8864": {
      "op": "DUP3"
    },
    "8865": {
      "op": "ADD"
    },
    "8866": {
      "op": "CALLDATALOAD"
    },
    "8867": {
      "op": "JUMPDEST"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8870": {
      "op": "NOT"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8873": {
      "op": "DUP8"
    },
    "8874": {
      "op": "SWAP1"
    },
    "8875": {
      "op": "SHL"
    },
    "8876": {
      "op": "SHR"
    },
    "8877": {
      "op": "NOT"
    },
    "8878": {
      "op": "AND"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8881": {
      "op": "DUP7"
    },
    "8882": {
      "op": "SWAP1"
    },
    "8883": {
      "op": "SHL"
    },
    "8884": {
      "op": "OR"
    },
    "8885": {
      "op": "DUP4"
    },
    "8886": {
      "op": "SSTORE"
    },
    "8887": {
      "op": "PUSH2",
      "value": "0x2315"
    },
    "8890": {
      "op": "JUMP"
    },
    "8891": {
      "op": "JUMPDEST"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8894": {
      "op": "DUP4"
    },
    "8895": {
      "op": "DUP2"
    },
    "8896": {
      "op": "MSTORE"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8899": {
      "op": "SWAP1"
    },
    "8900": {
      "op": "KECCAK256"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8903": {
      "op": "NOT"
    },
    "8904": {
      "op": "DUP7"
    },
    "8905": {
      "op": "AND"
    },
    "8906": {
      "op": "SWAP1"
    },
    "8907": {
      "op": "DUP4"
    },
    "8908": {
      "op": "JUMPDEST"
    },
    "8909": {
      "op": "DUP3"
    },
    "8910": {
      "op": "DUP2"
    },
    "8911": {
      "op": "LT"
    },
    "8912": {
      "op": "ISZERO"
    },
    "8913": {
      "op": "PUSH2",
      "value": "0x22EC"
    },
    "8916": {
      "op": "JUMPI"
    },
    "8917": {
      "op": "DUP7"
    },
    "8918": {
      "op": "DUP6"
    },
    "8919": {
      "op": "ADD"
    },
    "8920": {
      "op": "CALLDATALOAD"
    },
    "8921": {
      "op": "DUP3"
    },
    "8922": {
      "op": "SSTORE"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8925": {
      "op": "SWAP5"
    },
    "8926": {
      "op": "DUP6"
    },
    "8927": {
      "op": "ADD"
    },
    "8928": {
      "op": "SWAP5"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8931": {
      "op": "SWAP1"
    },
    "8932": {
      "op": "SWAP3"
    },
    "8933": {
      "op": "ADD"
    },
    "8934": {
      "op": "SWAP2"
    },
    "8935": {
      "op": "ADD"
    },
    "8936": {
      "op": "PUSH2",
      "value": "0x22CC"
    },
    "8939": {
      "op": "JUMP"
    },
    "8940": {
      "op": "JUMPDEST"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "DUP7"
    },
    "8943": {
      "op": "DUP3"
    },
    "8944": {
      "op": "LT"
    },
    "8945": {
      "op": "ISZERO"
    },
    "8946": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "8949": {
      "op": "JUMPI"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8952": {
      "op": "NOT"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8955": {
      "op": "DUP9"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8958": {
      "op": "SHL"
    },
    "8959": {
      "op": "AND"
    },
    "8960": {
      "op": "SHR"
    },
    "8961": {
      "op": "NOT"
    },
    "8962": {
      "op": "DUP5"
    },
    "8963": {
      "op": "DUP8"
    },
    "8964": {
      "op": "ADD"
    },
    "8965": {
      "op": "CALLDATALOAD"
    },
    "8966": {
      "op": "AND"
    },
    "8967": {
      "op": "DUP2"
    },
    "8968": {
      "op": "SSTORE"
    },
    "8969": {
      "op": "JUMPDEST"
    },
    "8970": {
      "op": "POP"
    },
    "8971": {
      "op": "POP"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8974": {
      "op": "DUP6"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8977": {
      "op": "SHL"
    },
    "8978": {
      "op": "ADD"
    },
    "8979": {
      "op": "DUP4"
    },
    "8980": {
      "op": "SSTORE"
    },
    "8981": {
      "op": "JUMPDEST"
    },
    "8982": {
      "op": "POP"
    },
    "8983": {
      "op": "POP"
    },
    "8984": {
      "op": "POP"
    },
    "8985": {
      "op": "POP"
    },
    "8986": {
      "op": "POP"
    },
    "8987": {
      "jump": "o",
      "op": "JUMP"
    },
    "8988": {
      "op": "JUMPDEST"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8991": {
      "op": "DUP1"
    },
    "8992": {
      "op": "DUP3"
    },
    "8993": {
      "op": "MSTORE"
    },
    "8994": {
      "op": "DUP2"
    },
    "8995": {
      "op": "DUP2"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9033": {
      "op": "DUP3"
    },
    "9034": {
      "op": "ADD"
    },
    "9035": {
      "op": "MSTORE"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9038": {
      "op": "ADD"
    },
    "9039": {
      "op": "SWAP1"
    },
    "9040": {
      "jump": "o",
      "op": "JUMP"
    },
    "9041": {
      "op": "JUMPDEST"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9046": {
      "op": "DUP3"
    },
    "9047": {
      "op": "ADD"
    },
    "9048": {
      "op": "PUSH2",
      "value": "0x2363"
    },
    "9051": {
      "op": "JUMPI"
    },
    "9052": {
      "op": "PUSH2",
      "value": "0x2363"
    },
    "9055": {
      "op": "PUSH2",
      "value": "0x21E2"
    },
    "9058": {
      "jump": "i",
      "op": "JUMP"
    },
    "9059": {
      "op": "JUMPDEST"
    },
    "9060": {
      "op": "POP"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9063": {
      "op": "ADD"
    },
    "9064": {
      "op": "SWAP1"
    },
    "9065": {
      "jump": "o",
      "op": "JUMP"
    },
    "9066": {
      "op": "JUMPDEST"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9071": {
      "op": "DUP3"
    },
    "9072": {
      "op": "DUP5"
    },
    "9073": {
      "op": "SUB"
    },
    "9074": {
      "op": "SLT"
    },
    "9075": {
      "op": "ISZERO"
    },
    "9076": {
      "op": "PUSH2",
      "value": "0x237C"
    },
    "9079": {
      "op": "JUMPI"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9082": {
      "op": "DUP1"
    },
    "9083": {
      "op": "REVERT"
    },
    "9084": {
      "op": "JUMPDEST"
    },
    "9085": {
      "op": "DUP2"
    },
    "9086": {
      "op": "MLOAD"
    },
    "9087": {
      "op": "PUSH2",
      "value": "0x1F98"
    },
    "9090": {
      "op": "DUP2"
    },
    "9091": {
      "op": "PUSH2",
      "value": "0x1F66"
    },
    "9094": {
      "jump": "i",
      "op": "JUMP"
    },
    "9095": {
      "op": "JUMPDEST"
    },
    "9096": {
      "op": "DUP2"
    },
    "9097": {
      "op": "MLOAD"
    },
    "9098": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9107": {
      "op": "DUP2"
    },
    "9108": {
      "op": "GT"
    },
    "9109": {
      "op": "ISZERO"
    },
    "9110": {
      "op": "PUSH2",
      "value": "0x23A1"
    },
    "9113": {
      "op": "JUMPI"
    },
    "9114": {
      "op": "PUSH2",
      "value": "0x23A1"
    },
    "9117": {
      "op": "PUSH2",
      "value": "0x21CC"
    },
    "9120": {
      "jump": "i",
      "op": "JUMP"
    },
    "9121": {
      "op": "JUMPDEST"
    },
    "9122": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9125": {
      "op": "DUP2"
    },
    "9126": {
      "op": "PUSH2",
      "value": "0x23AF"
    },
    "9129": {
      "op": "DUP5"
    },
    "9130": {
      "op": "SLOAD"
    },
    "9131": {
      "op": "PUSH2",
      "value": "0x217C"
    },
    "9134": {
      "jump": "i",
      "op": "JUMP"
    },
    "9135": {
      "op": "JUMPDEST"
    },
    "9136": {
      "op": "DUP5"
    },
    "9137": {
      "op": "PUSH2",
      "value": "0x2210"
    },
    "9140": {
      "jump": "i",
      "op": "JUMP"
    },
    "9141": {
      "op": "JUMPDEST"
    },
    "9142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9144": {
      "op": "DUP1"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9147": {
      "op": "DUP4"
    },
    "9148": {
      "op": "GT"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9151": {
      "op": "DUP2"
    },
    "9152": {
      "op": "EQ"
    },
    "9153": {
      "op": "PUSH2",
      "value": "0x23EA"
    },
    "9156": {
      "op": "JUMPI"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9159": {
      "op": "DUP5"
    },
    "9160": {
      "op": "ISZERO"
    },
    "9161": {
      "op": "PUSH2",
      "value": "0x23D2"
    },
    "9164": {
      "op": "JUMPI"
    },
    "9165": {
      "op": "POP"
    },
    "9166": {
      "op": "DUP6"
    },
    "9167": {
      "op": "DUP4"
    },
    "9168": {
      "op": "ADD"
    },
    "9169": {
      "op": "MLOAD"
    },
    "9170": {
      "op": "JUMPDEST"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9173": {
      "op": "NOT"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9176": {
      "op": "DUP7"
    },
    "9177": {
      "op": "SWAP1"
    },
    "9178": {
      "op": "SHL"
    },
    "9179": {
      "op": "SHR"
    },
    "9180": {
      "op": "NOT"
    },
    "9181": {
      "op": "AND"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "DUP6"
    },
    "9185": {
      "op": "SWAP1"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "OR"
    },
    "9188": {
      "op": "DUP6"
    },
    "9189": {
      "op": "SSTORE"
    },
    "9190": {
      "op": "PUSH2",
      "value": "0x96C"
    },
    "9193": {
      "op": "JUMP"
    },
    "9194": {
      "op": "JUMPDEST"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9197": {
      "op": "DUP6"
    },
    "9198": {
      "op": "DUP2"
    },
    "9199": {
      "op": "MSTORE"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9202": {
      "op": "DUP2"
    },
    "9203": {
      "op": "KECCAK256"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9206": {
      "op": "NOT"
    },
    "9207": {
      "op": "DUP7"
    },
    "9208": {
      "op": "AND"
    },
    "9209": {
      "op": "SWAP2"
    },
    "9210": {
      "op": "JUMPDEST"
    },
    "9211": {
      "op": "DUP3"
    },
    "9212": {
      "op": "DUP2"
    },
    "9213": {
      "op": "LT"
    },
    "9214": {
      "op": "ISZERO"
    },
    "9215": {
      "op": "PUSH2",
      "value": "0x2419"
    },
    "9218": {
      "op": "JUMPI"
    },
    "9219": {
      "op": "DUP9"
    },
    "9220": {
      "op": "DUP7"
    },
    "9221": {
      "op": "ADD"
    },
    "9222": {
      "op": "MLOAD"
    },
    "9223": {
      "op": "DUP3"
    },
    "9224": {
      "op": "SSTORE"
    },
    "9225": {
      "op": "SWAP5"
    },
    "9226": {
      "op": "DUP5"
    },
    "9227": {
      "op": "ADD"
    },
    "9228": {
      "op": "SWAP5"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9231": {
      "op": "SWAP1"
    },
    "9232": {
      "op": "SWAP2"
    },
    "9233": {
      "op": "ADD"
    },
    "9234": {
      "op": "SWAP1"
    },
    "9235": {
      "op": "DUP5"
    },
    "9236": {
      "op": "ADD"
    },
    "9237": {
      "op": "PUSH2",
      "value": "0x23FA"
    },
    "9240": {
      "op": "JUMP"
    },
    "9241": {
      "op": "JUMPDEST"
    },
    "9242": {
      "op": "POP"
    },
    "9243": {
      "op": "DUP6"
    },
    "9244": {
      "op": "DUP3"
    },
    "9245": {
      "op": "LT"
    },
    "9246": {
      "op": "ISZERO"
    },
    "9247": {
      "op": "PUSH2",
      "value": "0x2437"
    },
    "9250": {
      "op": "JUMPI"
    },
    "9251": {
      "op": "DUP8"
    },
    "9252": {
      "op": "DUP6"
    },
    "9253": {
      "op": "ADD"
    },
    "9254": {
      "op": "MLOAD"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9257": {
      "op": "NOT"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9260": {
      "op": "DUP9"
    },
    "9261": {
      "op": "SWAP1"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9265": {
      "op": "AND"
    },
    "9266": {
      "op": "SHR"
    },
    "9267": {
      "op": "NOT"
    },
    "9268": {
      "op": "AND"
    },
    "9269": {
      "op": "DUP2"
    },
    "9270": {
      "op": "SSTORE"
    },
    "9271": {
      "op": "JUMPDEST"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "op": "POP"
    },
    "9275": {
      "op": "POP"
    },
    "9276": {
      "op": "POP"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "SWAP1"
    },
    "9280": {
      "op": "DUP2"
    },
    "9281": {
      "op": "SHL"
    },
    "9282": {
      "op": "ADD"
    },
    "9283": {
      "op": "SWAP1"
    },
    "9284": {
      "op": "SSTORE"
    },
    "9285": {
      "op": "POP"
    },
    "9286": {
      "jump": "o",
      "op": "JUMP"
    },
    "9287": {
      "op": "JUMPDEST"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9296": {
      "op": "SHL"
    },
    "9297": {
      "op": "SUB"
    },
    "9298": {
      "op": "DUP1"
    },
    "9299": {
      "op": "DUP5"
    },
    "9300": {
      "op": "AND"
    },
    "9301": {
      "op": "DUP1"
    },
    "9302": {
      "op": "PUSH2",
      "value": "0x246F"
    },
    "9305": {
      "op": "JUMPI"
    },
    "9306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9313": {
      "op": "SHL"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9316": {
      "op": "MSTORE"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9321": {
      "op": "MSTORE"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9326": {
      "op": "REVERT"
    },
    "9327": {
      "op": "JUMPDEST"
    },
    "9328": {
      "op": "SWAP3"
    },
    "9329": {
      "op": "AND"
    },
    "9330": {
      "op": "SWAP2"
    },
    "9331": {
      "op": "SWAP1"
    },
    "9332": {
      "op": "SWAP2"
    },
    "9333": {
      "op": "DIV"
    },
    "9334": {
      "op": "SWAP3"
    },
    "9335": {
      "op": "SWAP2"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "jump": "o",
      "op": "JUMP"
    },
    "9339": {
      "op": "JUMPDEST"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9342": {
      "op": "DUP1"
    },
    "9343": {
      "op": "DUP3"
    },
    "9344": {
      "op": "MSTORE"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9347": {
      "op": "SWAP1"
    },
    "9348": {
      "op": "DUP3"
    },
    "9349": {
      "op": "ADD"
    },
    "9350": {
      "op": "MSTORE"
    },
    "9351": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "9374": {
      "op": "SHL"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9377": {
      "op": "DUP3"
    },
    "9378": {
      "op": "ADD"
    },
    "9379": {
      "op": "MSTORE"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9382": {
      "op": "ADD"
    },
    "9383": {
      "op": "SWAP1"
    },
    "9384": {
      "jump": "o",
      "op": "JUMP"
    },
    "9385": {
      "op": "JUMPDEST"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9388": {
      "op": "DUP1"
    },
    "9389": {
      "op": "DUP3"
    },
    "9390": {
      "op": "SLT"
    },
    "9391": {
      "op": "DUP1"
    },
    "9392": {
      "op": "ISZERO"
    },
    "9393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9399": {
      "op": "SHL"
    },
    "9400": {
      "op": "SUB"
    },
    "9401": {
      "op": "DUP5"
    },
    "9402": {
      "op": "SWAP1"
    },
    "9403": {
      "op": "SUB"
    },
    "9404": {
      "op": "DUP6"
    },
    "9405": {
      "op": "SGT"
    },
    "9406": {
      "op": "AND"
    },
    "9407": {
      "op": "ISZERO"
    },
    "9408": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9411": {
      "op": "JUMPI"
    },
    "9412": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9415": {
      "op": "PUSH2",
      "value": "0x21E2"
    },
    "9418": {
      "jump": "i",
      "op": "JUMP"
    },
    "9419": {
      "op": "JUMPDEST"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9424": {
      "op": "SHL"
    },
    "9425": {
      "op": "DUP4"
    },
    "9426": {
      "op": "SWAP1"
    },
    "9427": {
      "op": "SUB"
    },
    "9428": {
      "op": "DUP5"
    },
    "9429": {
      "op": "SLT"
    },
    "9430": {
      "op": "DUP2"
    },
    "9431": {
      "op": "AND"
    },
    "9432": {
      "op": "ISZERO"
    },
    "9433": {
      "op": "PUSH2",
      "value": "0x24E4"
    },
    "9436": {
      "op": "JUMPI"
    },
    "9437": {
      "op": "PUSH2",
      "value": "0x24E4"
    },
    "9440": {
      "op": "PUSH2",
      "value": "0x21E2"
    },
    "9443": {
      "jump": "i",
      "op": "JUMP"
    },
    "9444": {
      "op": "JUMPDEST"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "op": "ADD"
    },
    "9448": {
      "op": "SWAP1"
    },
    "9449": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6c3e489f41b842400d595517e956eaef31c85492",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (address => uint256) lastActiveTimestamp; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        // max activity; current activity\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksSubmitted;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 tasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n\n    function getMyAvailableTaskTypes() external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp){ // && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp) {\n                unchecked{++count;}\n            }\n            else {\n                string[] memory myReturn= new string[](1);\n                myReturn[0] = \"No luck.\";\n                return myReturn;\n            }\n            unchecked{++i;}\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp && taskTypes[i].begTimestamp < block.timestamp && taskTypes[i].endTimestamp > block.timestamp) {\n                myTasks[i] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint40 _begTimestamp, uint40 _endTimestamp) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), _begTimestamp, _endTimestamp);\n        // todo --  emit event\n    }\n\n    function createTaskType(string calldata _IPFSHash, uint40 _begTimestamp, uint40 _endTimestamp) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _begTimestamp, _endTimestamp);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint40 _begTimestamp, uint40 _endTimestamp) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n\n        // todo --  emit event\n    }\n\n//        struct Task {\n//        string IPFSHash; // holds description\n//        uint40 NFTID;\n//        bytes32 hash; // hashed input to be validated\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus; // in seconds\n//        uint8 strikes;\n//        uint80 payment;\n//        address verifier;\n//        uint40 verificationReservedTimestamp;\n//    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizID) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n//                potentialTasks.push(uint256(DoubleEndedQueue.at(tasksSubmitted, i)));\n                taskId = uint256(DoubleEndedQueue.at(tasksSubmitted, i));\n                myTask = tasks[taskId];\n\n                /*\n                // adjust dequeue\n                tasksSubmitted[0], tasksSubmitted[uint128(i)] = bytes32(0), tasksSubmitted[uint128(i)];\n                tasksVerifying.push(uint256(tasksSubmitted[uint128(i)]));\n                // shift head of dequeue to maintain structure (slight penalty for head)\n                if (i != 0) {\n                    tasksSubmitted._data[uint128(i)] = tasksSubmitted._data[tasksSubmitted.begin];\n                }\n                DoubleEndedQueue.pop(tasksSubmitted);\n                */\n\n                // update task\n                // assign task to home boy\n                myTask.verifierID = uint16(_wizID);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))] = myTask;\n            }\n        }\n        // emit event with task\n        emit VerificationAssigned(_wizID, taskId);\n    }\n\n/*\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n        uint8 strikes; // number of times confirmation has failed\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n\n*/\n\n    // todo --\n    function completeTask() external {\n/*\n        Task memory myTask = Task(\"0\",1, keccak256(\"hi\"), bytes32(3), 4, 5, 6, 7, 8, 9);\n        DoubleEndedQueue.pushBack(tasksSubmitted, bytes32(tasksAttempted)); // todo -- change to dequeue\n        tasks[tasksAttempted] = myTask;\n        tasksAttempted+=1;\n*/\n    }\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] calldata _fields) external {\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n        for(uint256 i = 0; i < _fields.length;){\n            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n            unchecked{++i;}\n        }\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n            }\n\n        }\n\n        // get task ID\n//        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n//        for(uint256 i =0; i < totalTasksSubmitted; ){\n//            if(keccak256(bytes(tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))].IPFSHash)) == keccak256(bytes(_IPFSHash))){ // couldn't compare storage vs memory\n//                // check if hash is correct\n//                if(tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))].hash == myHash){\n//                    // todo -- approve and release funds\n//                    // if strikes == 1, we will split the funds\n//                }\n//                else {\n//                    // if it doesn't match the first, we want to compare it with the other\n//                }\n//                // check strikes\n//\n//            }\n//            unchecked{++i;}\n//        }\n        // verify hashes are equal\n        // emit event\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:15961:2:-:0;;;2851:5;2824:32;;2912:6;2876:42;;6772:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:13;1778:7;:22;889:23:12;679:10:6;889:9:12;:23::i;:::-;6851:10:2;:26;;-1:-1:-1;;;;;;6851:26:2;-1:-1:-1;;;;;6851:26:2;;;;;;;;;;743:15961;;2101:173:12;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:24:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:24;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:24:o;:::-;743:15961:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}