{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "10": "contracts/helpers/ReentrancyGuard.sol",
    "19": "contracts/libraries/Strings.sol",
    "2": "contracts/Governance.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "9": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        4887
      ],
      "Context": [
        2217
      ],
      "DoubleEndedQueue": [
        2196
      ],
      "ERC165": [
        2241
      ],
      "ERC2981Collection": [
        2325
      ],
      "ERC721": [
        3144
      ],
      "ERC721A": [
        4215
      ],
      "ERC721Enumerable": [
        8180
      ],
      "Governance": [
        1855
      ],
      "IERC165": [
        4371
      ],
      "IERC20": [
        4444
      ],
      "IERC2981": [
        7796
      ],
      "IERC721": [
        4560
      ],
      "IERC721Enumerable": [
        4591
      ],
      "IERC721Metadata": [
        7823
      ],
      "IERC721Receiver": [
        7841
      ],
      "Ownable": [
        4319
      ],
      "ReentrancyGuard": [
        4359
      ],
      "Strings": [
        5090
      ],
      "Wizards": [
        5927
      ]
    },
    "id": 1856,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 5928,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4445,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4372,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4561,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4592,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4216,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 3145,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 2242,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4320,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 2218,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4360,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 2326,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 5091,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 4888,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1856,
        "sourceUnit": 2197,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2196,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4359,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4319,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1855,
        "linearizedBaseContracts": [
          1855,
          4319,
          2217,
          4359
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$5927",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5927,
                "src": "829:7:2"
              },
              "referencedDeclaration": 5927,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$5927",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1126:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1264:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1259:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1287:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1280:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1341:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1335:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1373:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1366:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1366:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1399:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1392:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1428:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1421:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1457:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1450:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1855,
            "src": "1072:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1538:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1531:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1531:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1584:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1577:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1644:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1636:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1698:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1690:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1762:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1756:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1810:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1803:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1982:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1975:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1975:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2009:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2002:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2060:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2053:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2053:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2110:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2103:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1516:4:2",
            "nodeType": "StructDefinition",
            "scope": 1855,
            "src": "1509:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2223:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2216:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2216:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2248:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2241:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2241:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2283:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2280:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2273:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2305:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2298:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2332:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2325:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2325:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2361:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2354:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2354:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2197:8:2",
            "nodeType": "StructDefinition",
            "scope": 1855,
            "src": "2190:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2406:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2388:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2388:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2388:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2388:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2562:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2525:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1874,
                "src": "2525:29:2"
              },
              "referencedDeclaration": 1874,
              "src": "2525:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2739:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2702:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2711:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2702:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2722:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2722:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2762:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2754:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2754:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2816:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2783:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2792:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2783:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2803:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2803:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 108,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2842:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2827:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2827:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2902:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2894:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2894:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2921:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2924:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2921:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2954:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1855,
            "src": "2946:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2946:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2982:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 125,
            "name": "VerificationAssigned",
            "nameLocation": "3010:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3039:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3031:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3057:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3049:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3070:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3065:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 121,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "3065:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "3065:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:47:2"
            },
            "src": "3004:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 133,
            "name": "VerificationFailed",
            "nameLocation": "3089:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3116:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3108:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3141:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3133:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3167:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3159:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:67:2"
            },
            "src": "3083:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 145,
            "name": "VerificationSucceeded",
            "nameLocation": "3186:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3216:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3208:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3234:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3226:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3268:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3260:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3279:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3274:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3207:86:2"
            },
            "src": "3180:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 155,
            "name": "HashTesting",
            "nameLocation": "3305:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3325:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3317:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3336:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3331:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3359:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3351:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3379:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3373:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:78:2"
            },
            "src": "3299:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 171,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3406:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3432:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3425:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3449:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3442:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3442:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3468:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3462:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3493:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3486:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3522:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3515:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3544:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3537:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3566:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3559:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:158:2"
            },
            "src": "3400:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 181,
            "name": "TaskCompleted",
            "nameLocation": "3594:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3616:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3608:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3634:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3649:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3642:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3667:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3659:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:65:2"
            },
            "src": "3588:85:2"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "4544:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 189,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4561:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 191,
                    "indexExpression": {
                      "id": 190,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4567:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4561:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "4554:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4479:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4499:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4491:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4490:17:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4531:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4531:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:13:2"
            },
            "scope": 1855,
            "src": "4470:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "4666:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4684:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 204,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4697:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4684:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4713:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4676:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:56:2"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4758:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "4742:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 211,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4742:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 212,
                        "nodeType": "ArrayTypeName",
                        "src": "4742:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 217,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4783:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 219,
                          "indexExpression": {
                            "id": 218,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4793:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4783:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4770:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 214,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4774:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 215,
                        "nodeType": "ArrayTypeName",
                        "src": "4774:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4742:79:2"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "4875:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 234,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "4889:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "id": 235,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4899:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4889:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 237,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4904:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 239,
                                "indexExpression": {
                                  "id": 238,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4914:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4904:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4904:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4932:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4904:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4889:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "4889:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4850:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 228,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4853:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4853:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4850:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "initializationExpression": {
                    "assignments": [
                      224
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4843:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "4835:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4835:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 226,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4847:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4835:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4871:3:2",
                      "subExpression": {
                        "id": 231,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4871:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 233,
                    "nodeType": "ExpressionStatement",
                    "src": "4871:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4831:114:2"
                },
                {
                  "expression": {
                    "id": 247,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "4961:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 248,
                  "nodeType": "Return",
                  "src": "4954:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4597:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4614:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:20:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4649:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4649:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4649:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4648:17:2"
            },
            "scope": 1855,
            "src": "4588:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "5060:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5078:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 259,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "5091:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5078:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5107:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5070:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 265,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5145:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5145:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 267,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5163:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 269,
                            "indexExpression": {
                              "id": 268,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "5173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5163:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5163:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5145:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5199:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5136:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:85:2"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5349:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5341:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5341:19:2"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5378:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5370:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5370:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 280,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5370:25:2"
                },
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5413:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5405:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5417:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5405:13:2"
                },
                {
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "5491:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 298,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5544:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 300,
                                "indexExpression": {
                                  "id": 299,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "5554:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5544:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5544:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "id": 302,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "5572:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5544:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 304,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5577:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5544:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 329,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5773:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "id": 330,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "5783:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5773:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 332,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5773:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 334,
                              "indexExpression": {
                                "id": 333,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "5801:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5773:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 335,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "5807:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5773:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 342,
                          "nodeType": "IfStatement",
                          "src": "5770:93:2",
                          "trueBody": {
                            "id": 341,
                            "nodeType": "Block",
                            "src": "5825:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 337,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "5843:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5847:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5843:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 340,
                                "nodeType": "ExpressionStatement",
                                "src": "5843:5:2"
                              }
                            ]
                          }
                        },
                        "id": 343,
                        "nodeType": "IfStatement",
                        "src": "5541:322:2",
                        "trueBody": {
                          "id": 328,
                          "nodeType": "Block",
                          "src": "5596:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 306,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "5614:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 307,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5634:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 309,
                                      "indexExpression": {
                                        "id": 308,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 252,
                                        "src": "5644:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5634:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 310,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5634:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 312,
                                  "indexExpression": {
                                    "id": 311,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 286,
                                    "src": "5662:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5634:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5614:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 314,
                              "nodeType": "ExpressionStatement",
                              "src": "5614:50:2"
                            },
                            {
                              "expression": {
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 315,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "5682:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 316,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 286,
                                  "src": "5696:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5682:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 318,
                              "nodeType": "ExpressionStatement",
                              "src": "5682:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 319,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "5719:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5724:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5719:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 327,
                              "nodeType": "IfStatement",
                              "src": "5715:23:2",
                              "trueBody": {
                                "id": 326,
                                "nodeType": "Block",
                                "src": "5727:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 322,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "5729:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 323,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5735:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5729:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 325,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5729:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "5445:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 290,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5448:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 292,
                        "indexExpression": {
                          "id": 291,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5458:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5448:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5448:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5445:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "initializationExpression": {
                    "assignments": [
                      286
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5440:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "5432:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 288,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5442:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5432:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5487:3:2",
                      "subExpression": {
                        "id": 295,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "5487:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 297,
                    "nodeType": "ExpressionStatement",
                    "src": "5487:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5428:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "5890:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5895:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5890:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5898:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5882:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5882:35:2"
                },
                {
                  "expression": {
                    "id": 353,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 276,
                    "src": "5934:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 256,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "5927:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4992:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5015:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5007:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:20:2"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5050:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5049:10:2"
            },
            "scope": 1855,
            "src": "4983:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "6080:607:2",
              "statements": [
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6098:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6090:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6090:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6144:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 365,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "6120:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "6120:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6090:79:2"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6191:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6179:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 370,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6179:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6179:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6179:18:2"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "6363:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 381,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "6377:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 382,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "6386:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 387,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 94,
                                      "src": "6420:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 388,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "6445:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 385,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2196,
                                      "src": "6400:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2133,
                                    "src": "6400:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6400:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6392:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6392:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6392:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6386:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "6377:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "6377:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 394,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6467:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "6467:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 396,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6506:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6506:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6467:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 399,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6525:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "6525:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 401,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "6541:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6525:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6467:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 404,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "6551:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "6551:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 406,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6570:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6551:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6467:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 412,
                        "nodeType": "IfStatement",
                        "src": "6463:158:2",
                        "trueBody": {
                          "id": 411,
                          "nodeType": "Block",
                          "src": "6577:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6602:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 362,
                              "id": 410,
                              "nodeType": "Return",
                              "src": "6595:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 416,
                        "nodeType": "UncheckedBlock",
                        "src": "6634:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6644:3:2",
                              "subExpression": {
                                "id": 413,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6646:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 415,
                            "nodeType": "ExpressionStatement",
                            "src": "6644:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "6337:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 379,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "6341:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6337:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "initializationExpression": {
                    "assignments": [
                      375
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6331:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "6323:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6323:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 377,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6334:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6323:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6319:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6675:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 362,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "6668:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6008:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6043:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6035:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6034:16:2"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6074:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6074:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6073:6:2"
            },
            "scope": 1855,
            "src": "5999:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "6796:1507:2",
              "statements": [
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6814:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "6806:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6806:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 438,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6860:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 436,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "6836:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "6836:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6836:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6806:79:2"
                },
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6907:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "6895:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 442,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 441,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6895:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6895:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6895:18:2"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "6931:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "6923:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6923:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6923:14:2"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "6955:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "6947:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6947:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 451,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6961:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6947:15:2"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "7017:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 459,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "7031:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 464,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7068:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 465,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 453,
                                    "src": "7094:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 462,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "7048:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2133,
                                  "src": "7048:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7048:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7040:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 460,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7040:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7040:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7031:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "7031:66:2"
                      },
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 470,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7111:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 471,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7120:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 473,
                            "indexExpression": {
                              "id": 472,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "7126:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7120:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7111:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "7111:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 476,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "7151:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7151:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 478,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7190:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7190:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7151:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 481,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "7209:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "7209:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 483,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "7229:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7209:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7151:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 491,
                        "nodeType": "IfStatement",
                        "src": "7147:140:2",
                        "trueBody": {
                          "id": 490,
                          "nodeType": "Block",
                          "src": "7236:51:2",
                          "statements": [
                            {
                              "id": 489,
                              "nodeType": "UncheckedBlock",
                              "src": "7254:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7264:7:2",
                                    "subExpression": {
                                      "id": 486,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 449,
                                      "src": "7266:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 488,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7264:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 495,
                        "nodeType": "UncheckedBlock",
                        "src": "7300:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7310:3:2",
                              "subExpression": {
                                "id": 492,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 453,
                                "src": "7312:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 494,
                            "nodeType": "ExpressionStatement",
                            "src": "7310:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 456,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "6991:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 457,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "6995:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6991:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      453
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6985:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "6977:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6977:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 455,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6988:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6977:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6973:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "7382:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7389:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7382:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 529,
                  "nodeType": "IfStatement",
                  "src": "7378:249:2",
                  "trueBody": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "7392:235:2",
                    "statements": [
                      {
                        "assignments": [
                          505
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 505,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "7420:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "7406:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 503,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 502,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7406:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7406:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 504,
                              "nodeType": "ArrayTypeName",
                              "src": "7406:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 512,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7441:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7430:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 507,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 506,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7434:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7434:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 508,
                              "nodeType": "ArrayTypeName",
                              "src": "7434:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7430:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7406:37:2"
                      },
                      {
                        "assignments": [
                          517
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 517,
                            "mutability": "mutable",
                            "name": "myReturnUint",
                            "nameLocation": "7474:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 528,
                            "src": "7457:29:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 515,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7457:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 516,
                              "nodeType": "ArrayTypeName",
                              "src": "7457:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 523,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7502:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7488:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 518,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7492:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 519,
                              "nodeType": "ArrayTypeName",
                              "src": "7492:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7488:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7457:47:2"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 524,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "7593:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Governance.Task memory[] memory"
                              }
                            },
                            {
                              "id": 525,
                              "name": "myReturnUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "7603:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 526,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7592:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 433,
                        "id": 527,
                        "nodeType": "Return",
                        "src": "7585:31:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 531,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "7645:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "7637:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7637:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7655:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7637:19:2"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "7680:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "7666:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 536,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 535,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7666:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7666:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 537,
                        "nodeType": "ArrayTypeName",
                        "src": "7666:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 543,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "7701:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7690:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 540,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 539,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7694:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7694:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 541,
                        "nodeType": "ArrayTypeName",
                        "src": "7694:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7690:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7666:41:2"
                },
                {
                  "assignments": [
                    550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 550,
                      "mutability": "mutable",
                      "name": "myTaskIds",
                      "nameLocation": "7734:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
                      "src": "7717:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7717:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 549,
                        "nodeType": "ArrayTypeName",
                        "src": "7717:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 554,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "7760:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7746:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7750:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 552,
                        "nodeType": "ArrayTypeName",
                        "src": "7750:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7746:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7717:49:2"
                },
                {
                  "body": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "7820:440:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 564,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "7834:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 569,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7871:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 570,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 558,
                                    "src": "7897:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 567,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "7851:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2133,
                                  "src": "7851:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7851:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7843:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 565,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7843:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7843:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7834:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "7834:66:2"
                      },
                      {
                        "expression": {
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 575,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7914:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 576,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7923:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 578,
                            "indexExpression": {
                              "id": 577,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "7929:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7923:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7914:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "7914:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 581,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "7954:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7954:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 583,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7993:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7993:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7954:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 586,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "8012:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "8012:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 588,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "8032:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8012:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7954:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 614,
                        "nodeType": "IfStatement",
                        "src": "7950:272:2",
                        "trueBody": {
                          "id": 613,
                          "nodeType": "Block",
                          "src": "8039:183:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 591,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 538,
                                    "src": "8057:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 593,
                                  "indexExpression": {
                                    "id": 592,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "8065:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8057:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 594,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "8076:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "8057:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 596,
                              "nodeType": "ExpressionStatement",
                              "src": "8057:25:2"
                            },
                            {
                              "expression": {
                                "id": 601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 597,
                                    "name": "myTaskIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 550,
                                    "src": "8100:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 599,
                                  "indexExpression": {
                                    "id": 598,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "8110:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8100:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 600,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "8121:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8100:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 602,
                              "nodeType": "ExpressionStatement",
                              "src": "8100:27:2"
                            },
                            {
                              "id": 606,
                              "nodeType": "UncheckedBlock",
                              "src": "8145:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8155:9:2",
                                    "subExpression": {
                                      "id": 603,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 531,
                                      "src": "8157:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 605,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8155:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 607,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 531,
                                  "src": "8186:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 608,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 449,
                                  "src": "8194:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8186:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 612,
                              "nodeType": "IfStatement",
                              "src": "8183:25:2",
                              "trueBody": {
                                "id": 611,
                                "nodeType": "Block",
                                "src": "8200:8:2",
                                "statements": [
                                  {
                                    "id": 610,
                                    "nodeType": "Break",
                                    "src": "8201:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 618,
                        "nodeType": "UncheckedBlock",
                        "src": "8235:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8245:3:2",
                              "subExpression": {
                                "id": 615,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 558,
                                "src": "8247:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 617,
                            "nodeType": "ExpressionStatement",
                            "src": "8245:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 561,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "7794:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 562,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "7798:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7794:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 620,
                  "initializationExpression": {
                    "assignments": [
                      558
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7788:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "7780:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7780:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 560,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7791:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7780:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7776:484:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 621,
                        "name": "myTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "8277:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Governance.Task memory[] memory"
                        }
                      },
                      {
                        "id": 622,
                        "name": "myTaskIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "8286:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 623,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8276:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 624,
                  "nodeType": "Return",
                  "src": "8269:27:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "6703:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6732:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "6725:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6725:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6724:15:2"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "6763:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 426,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 72,
                        "src": "6763:4:2"
                      },
                      "referencedDeclaration": 72,
                      "src": "6763:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 428,
                    "nodeType": "ArrayTypeName",
                    "src": "6763:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "6778:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 430,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6778:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 431,
                    "nodeType": "ArrayTypeName",
                    "src": "6778:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:33:2"
            },
            "scope": 1855,
            "src": "6694:1609:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "8467:1412:2",
              "statements": [
                {
                  "assignments": [
                    635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "8485:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "8477:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8477:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8477:13:2"
                },
                {
                  "body": {
                    "id": 687,
                    "nodeType": "Block",
                    "src": "8538:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 645,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8555:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 647,
                                      "indexExpression": {
                                        "id": 646,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 638,
                                        "src": "8565:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8555:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 648,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "8555:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 650,
                                  "indexExpression": {
                                    "id": 649,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "8592:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8555:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 651,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8602:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8602:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8555:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 654,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "8633:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 656,
                                    "indexExpression": {
                                      "id": 655,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 638,
                                      "src": "8643:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8633:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 657,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "8633:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 658,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8662:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8662:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8633:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8555:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 662,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "8681:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 664,
                                  "indexExpression": {
                                    "id": 663,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 638,
                                    "src": "8691:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8681:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 665,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "8681:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 666,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8709:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8709:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8681:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8555:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 670,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8740:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 672,
                                "indexExpression": {
                                  "id": 671,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 638,
                                  "src": "8750:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8740:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "8740:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8770:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8740:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8555:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 682,
                        "nodeType": "IfStatement",
                        "src": "8552:285:2",
                        "trueBody": {
                          "id": 681,
                          "nodeType": "Block",
                          "src": "8786:51:2",
                          "statements": [
                            {
                              "id": 680,
                              "nodeType": "UncheckedBlock",
                              "src": "8804:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8814:7:2",
                                    "subExpression": {
                                      "id": 677,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "8816:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 679,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8814:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 686,
                        "nodeType": "UncheckedBlock",
                        "src": "9019:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9029:3:2",
                              "subExpression": {
                                "id": 683,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "9031:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 685,
                            "nodeType": "ExpressionStatement",
                            "src": "9029:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "8517:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 642,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8520:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8520:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8517:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 688,
                  "initializationExpression": {
                    "assignments": [
                      638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8512:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "8504:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8504:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 640,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8514:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8504:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8500:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 689,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "9101:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9108:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9101:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 712,
                  "nodeType": "IfStatement",
                  "src": "9097:139:2",
                  "trueBody": {
                    "id": 711,
                    "nodeType": "Block",
                    "src": "9111:125:2",
                    "statements": [
                      {
                        "assignments": [
                          696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 696,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "9141:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 711,
                            "src": "9125:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 694,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9125:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 695,
                              "nodeType": "ArrayTypeName",
                              "src": "9125:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 702,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9164:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9151:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 697,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9155:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 698,
                              "nodeType": "ArrayTypeName",
                              "src": "9155:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9151:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9125:41:2"
                      },
                      {
                        "expression": {
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 703,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "9180:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 705,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9189:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9180:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9194:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "9180:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 708,
                        "nodeType": "ExpressionStatement",
                        "src": "9180:16:2"
                      },
                      {
                        "expression": {
                          "id": 709,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "9217:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 633,
                        "id": 710,
                        "nodeType": "Return",
                        "src": "9210:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 717,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9262:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "9246:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 715,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9246:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 716,
                        "nodeType": "ArrayTypeName",
                        "src": "9246:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 723,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 721,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "9285:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9272:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 718,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9276:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 719,
                        "nodeType": "ArrayTypeName",
                        "src": "9276:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9272:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9246:45:2"
                },
                {
                  "assignments": [
                    725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 725,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9309:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "9301:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9301:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 727,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9319:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9301:19:2"
                },
                {
                  "body": {
                    "id": 793,
                    "nodeType": "Block",
                    "src": "9368:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 736,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "9385:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 738,
                                      "indexExpression": {
                                        "id": 737,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 729,
                                        "src": "9395:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9385:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 739,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "9385:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 741,
                                  "indexExpression": {
                                    "id": 740,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "9422:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9385:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 742,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9432:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9432:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9385:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 745,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9463:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 747,
                                    "indexExpression": {
                                      "id": 746,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 729,
                                      "src": "9473:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9463:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 748,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "9463:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 749,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9492:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9492:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9463:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9385:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 753,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "9511:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 755,
                                  "indexExpression": {
                                    "id": 754,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 729,
                                    "src": "9521:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9511:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "9511:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 757,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9539:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9539:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9511:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9385:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 761,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "9570:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 763,
                                "indexExpression": {
                                  "id": 762,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 729,
                                  "src": "9580:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9570:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "9570:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9600:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9570:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9385:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 788,
                        "nodeType": "IfStatement",
                        "src": "9382:429:2",
                        "trueBody": {
                          "id": 787,
                          "nodeType": "Block",
                          "src": "9616:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 768,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 717,
                                    "src": "9634:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 770,
                                  "indexExpression": {
                                    "id": 769,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 725,
                                    "src": "9642:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9634:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 771,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9653:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 773,
                                    "indexExpression": {
                                      "id": 772,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 729,
                                      "src": "9663:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9653:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "9653:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "9634:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 776,
                              "nodeType": "ExpressionStatement",
                              "src": "9634:40:2"
                            },
                            {
                              "id": 780,
                              "nodeType": "UncheckedBlock",
                              "src": "9692:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9702:9:2",
                                    "subExpression": {
                                      "id": 777,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "9704:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 779,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9702:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 781,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 725,
                                  "src": "9733:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 782,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 635,
                                  "src": "9744:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9733:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 786,
                              "nodeType": "IfStatement",
                              "src": "9730:67:2",
                              "trueBody": {
                                "id": 785,
                                "nodeType": "Block",
                                "src": "9751:46:2",
                                "statements": [
                                  {
                                    "id": 784,
                                    "nodeType": "Break",
                                    "src": "9773:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 792,
                        "nodeType": "UncheckedBlock",
                        "src": "9824:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9834:3:2",
                              "subExpression": {
                                "id": 789,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "9836:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 791,
                            "nodeType": "ExpressionStatement",
                            "src": "9834:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 732,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "9347:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 733,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "9350:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9350:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9347:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 794,
                  "initializationExpression": {
                    "assignments": [
                      729
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 729,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9342:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 794,
                        "src": "9334:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9334:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 731,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9344:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9334:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9330:519:2"
                },
                {
                  "expression": {
                    "id": 795,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 717,
                    "src": "9865:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 633,
                  "id": 796,
                  "nodeType": "Return",
                  "src": "9858:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "8388:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "8419:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "8412:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8412:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8411:15:2"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "8450:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 630,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "8450:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 631,
                    "nodeType": "ArrayTypeName",
                    "src": "8450:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8449:17:2"
            },
            "scope": 1855,
            "src": "8379:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "10046:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 805,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "10056:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5927",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 807,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "10077:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 806,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5927,
                        "src": "10069:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5927_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10069:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5927",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "10056:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5927",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "10056:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 802,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4262,
                  "src": "10036:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10036:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "9998:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "10020:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "10012:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10011:15:2"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10046:0:2"
            },
            "scope": 1855,
            "src": "9989:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "10284:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 885,
                    "nodeType": "Block",
                    "src": "10331:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 828,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10375:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 830,
                                      "indexExpression": {
                                        "id": 829,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 818,
                                        "src": "10385:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10375:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 831,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "10375:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 826,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10358:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10358:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10358:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 825,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10348:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10348:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 837,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 814,
                                    "src": "10429:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 835,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10412:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 836,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10412:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10412:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 834,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10402:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10402:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10348:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 880,
                        "nodeType": "IfStatement",
                        "src": "10345:1048:2",
                        "trueBody": {
                          "id": 879,
                          "nodeType": "Block",
                          "src": "10441:952:2",
                          "statements": [
                            {
                              "assignments": [
                                843
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 843,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "10540:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 879,
                                  "src": "10523:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 842,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 841,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10523:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10523:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 847,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 844,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10553:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 846,
                                "indexExpression": {
                                  "id": 845,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 818,
                                  "src": "10563:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10553:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10523:42:2"
                            },
                            {
                              "assignments": [
                                850
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 850,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "10600:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 879,
                                  "src": "10583:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 849,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 848,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10583:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10583:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 857,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 851,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10620:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 856,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 852,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "10630:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10630:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10647:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10630:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10620:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10583:66:2"
                            },
                            {
                              "expression": {
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 858,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 843,
                                  "src": "10765:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 859,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 850,
                                  "src": "10778:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "10765:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 861,
                              "nodeType": "ExpressionStatement",
                              "src": "10765:30:2"
                            },
                            {
                              "expression": {
                                "id": 868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "10813:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 862,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "10820:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 867,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 866,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 863,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10830:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 864,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "10830:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10847:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10830:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10820:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 869,
                              "nodeType": "ExpressionStatement",
                              "src": "10813:36:2"
                            },
                            {
                              "expression": {
                                "id": 876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11319:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 870,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "11326:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 875,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 871,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "11336:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11336:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11353:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11336:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11326:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 877,
                              "nodeType": "ExpressionStatement",
                              "src": "11319:36:2"
                            },
                            {
                              "id": 878,
                              "nodeType": "Break",
                              "src": "11373:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 884,
                        "nodeType": "UncheckedBlock",
                        "src": "11406:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "11416:3:2",
                              "subExpression": {
                                "id": 881,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 818,
                                "src": "11418:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 883,
                            "nodeType": "ExpressionStatement",
                            "src": "11416:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 821,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "10311:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 822,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "10313:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10313:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10311:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 886,
                  "initializationExpression": {
                    "assignments": [
                      818
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10306:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "10298:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 820,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10308:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10298:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10294:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "10225:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10264:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "10250:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10250:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10249:25:2"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:2"
            },
            "scope": 1855,
            "src": "10216:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 900,
              "nodeType": "Block",
              "src": "11670:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 894,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "11724:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5927",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 896,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "11745:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 895,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5927,
                        "src": "11737:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5927_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11737:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5927",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "11724:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5927",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "11724:26:2"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "11551:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 901,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "11665:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "11657:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11657:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11656:14:2"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11670:0:2"
            },
            "scope": 1855,
            "src": "11645:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "11885:7:2",
              "statements": []
            },
            "id": 905,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11865:2:2"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11885:0:2"
            },
            "scope": 1855,
            "src": "11858:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "11982:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 917,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "12000:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 918,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "12013:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12000:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12029:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11992:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11992:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "11992:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 926,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "12085:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 924,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "12066:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5927",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2472,
                            "src": "12066:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12066:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 928,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12093:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12093:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12066:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12105:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12058:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12058:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "12058:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 935,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "12142:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 937,
                            "indexExpression": {
                              "id": 936,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "12161:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12142:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 939,
                          "indexExpression": {
                            "id": 938,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "12173:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12142:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12181:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12142:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12184:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12134:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12134:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "12134:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 946,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "12218:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12225:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12218:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 949,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "12230:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 950,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "12239:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 952,
                              "indexExpression": {
                                "id": 951,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 907,
                                "src": "12249:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12239:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "12239:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12230:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12218:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12210:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12210:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "12210:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 959,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12295:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12295:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 961,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "12313:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 963,
                            "indexExpression": {
                              "id": 962,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "12323:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12313:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "12313:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "12295:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12287:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12287:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "12287:61:2"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 968,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "12358:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 971,
                        "indexExpression": {
                          "id": 969,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "12377:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12358:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 972,
                      "indexExpression": {
                        "id": 970,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "12389:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12358:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 973,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "12398:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12406:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12398:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12358:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "12358:49:2"
                },
                {
                  "expression": {
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 978,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "12450:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 980,
                          "indexExpression": {
                            "id": 979,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "12460:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12450:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "12450:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 983,
                      "indexExpression": {
                        "id": 982,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "12478:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12450:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12488:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12450:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "12450:39:2"
                },
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 987,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "12518:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 989,
                        "indexExpression": {
                          "id": 988,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "12528:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12518:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "12518:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12554:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12518:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "12518:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 913,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1845,
                  "src": "11971:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11971:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "11907:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "11920:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "11912:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11912:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "11940:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "11932:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11932:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "11955:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "11947:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11947:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11911:50:2"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11982:0:2"
            },
            "scope": 1855,
            "src": "11898:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1071,
              "nodeType": "Block",
              "src": "12790:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1013,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "12808:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12827:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12808:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1016,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "12832:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12851:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "12832:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12808:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12856:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12800:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12800:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "12800:84:2"
                },
                {
                  "expression": {
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1023,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12894:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12912:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12894:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "12894:19:2"
                },
                {
                  "assignments": [
                    1029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "12961:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1071,
                      "src": "12944:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 1028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1027,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "12944:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "12944:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1033,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1030,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "12974:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 1032,
                    "indexExpression": {
                      "id": 1031,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12984:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12974:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12944:55:2"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1034,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "13013:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "13013:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1037,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "13039:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13013:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "13013:39:2"
                },
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1040,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "13066:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "13066:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "13092:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13066:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "13066:39:2"
                },
                {
                  "expression": {
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1046,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "13119:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "13119:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1049,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "13148:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "13119:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "13119:45:2"
                },
                {
                  "expression": {
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1052,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "13178:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "13178:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1055,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "13200:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13178:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "13178:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1059,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "13236:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1062,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "13254:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13247:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1060,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13247:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13247:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13271:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1065,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "13274:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1066,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "13286:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "13301:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1068,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "13316:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1058,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13220:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13220:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "13220:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1009,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1854,
                  "src": "12780:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12780:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "12617:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "12648:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12632:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12632:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "12666:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12659:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12659:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "12691:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12684:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12684:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "12710:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12703:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12703:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "12732:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12725:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12725:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "12754:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "12747:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12747:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12631:139:2"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12790:0:2"
            },
            "scope": 1855,
            "src": "12608:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "13574:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1090,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "13600:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13611:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1092,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "13614:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1093,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "13632:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1094,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "13644:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1095,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "13659:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1096,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "13674:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1089,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13584:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13584:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "13584:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1086,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1854,
                  "src": "13564:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13564:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "13386:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13417:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13401:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13401:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13434:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13428:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13428:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13459:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13452:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13452:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13478:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13471:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13471:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13516:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13509:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13509:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13538:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "13531:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13531:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13400:154:2"
            },
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13574:0:2"
            },
            "scope": 1855,
            "src": "13377:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "13908:726:2",
              "statements": [
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "13926:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1192,
                      "src": "13918:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13918:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1121,
                  "initialValue": {
                    "expression": {
                      "id": 1119,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13944:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "13944:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13918:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1122,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "13970:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "13970:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13970:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "13970:16:2"
                },
                {
                  "assignments": [
                    1129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1129,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "14013:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1192,
                      "src": "13996:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1128,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1127,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "13996:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "13996:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1133,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1130,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "14027:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1132,
                    "indexExpression": {
                      "id": 1131,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "14037:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14027:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13996:57:2"
                },
                {
                  "expression": {
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14067:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "14067:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1137,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "14089:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14067:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "14067:31:2"
                },
                {
                  "expression": {
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1140,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14112:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "14112:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14133:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14112:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "14112:26:2"
                },
                {
                  "expression": {
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1146,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14152:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "14152:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1149,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "14177:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14152:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:36:2"
                },
                {
                  "expression": {
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1152,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14202:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "14202:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1155,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "14232:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14202:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "14202:46:2"
                },
                {
                  "expression": {
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1158,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14262:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14262:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1161,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "14286:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "14262:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "14262:34:2"
                },
                {
                  "expression": {
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1164,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14310:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14310:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1167,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "14337:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14310:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "14310:40:2"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1170,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14364:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14364:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1173,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1112,
                      "src": "14391:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14364:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "14364:40:2"
                },
                {
                  "expression": {
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1176,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "14418:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "14418:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1179,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "14447:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14418:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "14418:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "14527:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1184,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "14538:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1185,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1106,
                        "src": "14551:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1186,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "14569:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1187,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "14581:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1188,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "14596:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1189,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "14611:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1182,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "14508:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14508:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "EmitStatement",
                  "src": "14503:124:2"
                }
              ]
            },
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "13712:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13744:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13728:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13728:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "13762:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13755:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13755:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13781:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13775:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13775:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13806:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13799:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13799:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13838:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13831:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13831:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13860:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13853:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13853:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13882:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13875:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13875:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13727:171:2"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13908:0:2"
            },
            "scope": 1855,
            "src": "13703:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "14706:1063:2",
              "statements": [
                {
                  "assignments": [
                    1199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1199,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "14724:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1294,
                      "src": "14716:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14716:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1202,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "14770:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1200,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "14746:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "14746:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14746:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14716:79:2"
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "14817:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1294,
                      "src": "14805:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1205,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "14805:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "14805:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14805:18:2"
                },
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "14841:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1294,
                      "src": "14833:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14833:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14833:14:2"
                },
                {
                  "body": {
                    "id": 1292,
                    "nodeType": "Block",
                    "src": "14988:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1219,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "15002:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1224,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "15039:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1225,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1213,
                                    "src": "15065:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1222,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "15019:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2133,
                                  "src": "15019:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1874_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15019:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15011:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1220,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15011:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15011:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15002:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1229,
                        "nodeType": "ExpressionStatement",
                        "src": "15002:66:2"
                      },
                      {
                        "expression": {
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1230,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "15082:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1231,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "15091:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1233,
                            "indexExpression": {
                              "id": 1232,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "15097:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15091:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "15082:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1235,
                        "nodeType": "ExpressionStatement",
                        "src": "15082:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1236,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "15122:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "15122:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1238,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15161:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15161:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15122:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1241,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "15180:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "15180:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1243,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1195,
                                "src": "15196:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15180:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15122:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1246,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1207,
                                "src": "15206:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "15206:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1248,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1195,
                              "src": "15225:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15206:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15122:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1287,
                        "nodeType": "IfStatement",
                        "src": "15118:554:2",
                        "trueBody": {
                          "id": 1286,
                          "nodeType": "Block",
                          "src": "15232:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1251,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1207,
                                    "src": "15410:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "15410:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1256,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1195,
                                      "src": "15437:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15430:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1254,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15430:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15430:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "15410:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1259,
                              "nodeType": "ExpressionStatement",
                              "src": "15410:34:2"
                            },
                            {
                              "expression": {
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1260,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1207,
                                    "src": "15462:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1262,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "15462:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1268,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1265,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15508:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1266,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15508:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1267,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "15526:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15508:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15501:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1263,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15501:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15501:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "15462:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1271,
                              "nodeType": "ExpressionStatement",
                              "src": "15462:81:2"
                            },
                            {
                              "expression": {
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1272,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "15561:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1274,
                                  "indexExpression": {
                                    "id": 1273,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "15567:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15561:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1275,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "15577:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "15561:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1277,
                              "nodeType": "ExpressionStatement",
                              "src": "15561:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1279,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1195,
                                    "src": "15627:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1280,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1210,
                                    "src": "15635:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1281,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 106,
                                      "src": "15643:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1283,
                                    "indexExpression": {
                                      "id": 1282,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1210,
                                      "src": "15649:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15643:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1278,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "15606:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$72_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15606:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1285,
                              "nodeType": "EmitStatement",
                              "src": "15601:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1291,
                        "nodeType": "UncheckedBlock",
                        "src": "15685:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "15695:3:2",
                              "subExpression": {
                                "id": 1288,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "15697:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1290,
                            "nodeType": "ExpressionStatement",
                            "src": "15695:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1216,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "14962:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1217,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "14966:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14962:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1293,
                  "initializationExpression": {
                    "assignments": [
                      1213
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14956:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "14948:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14948:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1215,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14959:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14948:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "14944:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "14650:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "14689:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "14681:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14681:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14680:16:2"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14706:0:2"
            },
            "scope": 1855,
            "src": "14641:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "15861:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1430,
                    "nodeType": "Block",
                    "src": "15994:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1315,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16032:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1317,
                                      "indexExpression": {
                                        "id": 1316,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "16042:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16032:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "16032:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1313,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16021:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16021:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16021:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1312,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16011:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16011:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1324,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1297,
                                    "src": "16080:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1322,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16069:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16069:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16069:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1321,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16059:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16059:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "16011:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1425,
                        "nodeType": "IfStatement",
                        "src": "16008:989:2",
                        "trueBody": {
                          "id": 1424,
                          "nodeType": "Block",
                          "src": "16092:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1335,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1329,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "16178:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1331,
                                          "indexExpression": {
                                            "id": 1330,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1305,
                                            "src": "16188:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16178:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1332,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "16178:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1333,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16207:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16207:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16178:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1342,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1336,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16226:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1337,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16226:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1338,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "16245:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1340,
                                          "indexExpression": {
                                            "id": 1339,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1305,
                                            "src": "16255:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16245:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1341,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "16245:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "16226:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "16178:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16272:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1328,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16170:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16170:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1346,
                              "nodeType": "ExpressionStatement",
                              "src": "16170:124:2"
                            },
                            {
                              "assignments": [
                                1349
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1349,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "16359:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1424,
                                  "src": "16347:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1348,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1347,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "16347:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "16347:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1368,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1351,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1297,
                                    "src": "16373:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1352,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1301,
                                    "src": "16383:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1353,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1299,
                                    "src": "16391:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16398:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1355,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16401:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1357,
                                      "indexExpression": {
                                        "id": 1356,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "16411:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16401:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1358,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "16401:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1359,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16431:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1361,
                                      "indexExpression": {
                                        "id": 1360,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "16441:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16431:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1362,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "16431:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16455:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16458:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16461:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16464:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1350,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "16368:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16368:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16347:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1372,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "16510:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1375,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "16544:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1374,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16536:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1373,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16536:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16536:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1874_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1369,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "16484:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2196_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1906,
                                  "src": "16484:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$1874_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16484:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1378,
                              "nodeType": "ExpressionStatement",
                              "src": "16484:81:2"
                            },
                            {
                              "expression": {
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1379,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "16583:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1381,
                                  "indexExpression": {
                                    "id": 1380,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "16589:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16583:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1382,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1349,
                                  "src": "16612:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16583:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1384,
                              "nodeType": "ExpressionStatement",
                              "src": "16583:35:2"
                            },
                            {
                              "expression": {
                                "id": 1387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1385,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "16636:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16657:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16636:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1388,
                              "nodeType": "ExpressionStatement",
                              "src": "16636:22:2"
                            },
                            {
                              "expression": {
                                "id": 1399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1389,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16713:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1391,
                                      "indexExpression": {
                                        "id": 1390,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "16723:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16713:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1392,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "16713:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1394,
                                  "indexExpression": {
                                    "id": 1393,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1301,
                                    "src": "16750:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16713:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1395,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16760:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16760:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1397,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16778:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16760:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16713:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1400,
                              "nodeType": "ExpressionStatement",
                              "src": "16713:71:2"
                            },
                            {
                              "expression": {
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1401,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "16802:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1403,
                                    "indexExpression": {
                                      "id": 1402,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1305,
                                      "src": "16812:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16802:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1404,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "16802:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1405,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16832:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1407,
                                      "indexExpression": {
                                        "id": 1406,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "16842:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16832:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1408,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "16832:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16862:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16832:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16802:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1412,
                              "nodeType": "ExpressionStatement",
                              "src": "16802:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1414,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1301,
                                    "src": "16901:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1415,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 108,
                                      "src": "16908:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16929:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "16908:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1418,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1297,
                                    "src": "16932:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1419,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16943:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16943:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1413,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "16887:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16887:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1422,
                              "nodeType": "EmitStatement",
                              "src": "16882:77:2"
                            },
                            {
                              "id": 1423,
                              "nodeType": "Break",
                              "src": "16977:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1429,
                        "nodeType": "UncheckedBlock",
                        "src": "17010:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "17020:3:2",
                              "subExpression": {
                                "id": 1426,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1305,
                                "src": "17022:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1428,
                            "nodeType": "ExpressionStatement",
                            "src": "17020:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1308,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "15974:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1309,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "15976:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15976:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15974:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1431,
                  "initializationExpression": {
                    "assignments": [
                      1305
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1305,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15967:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1431,
                        "src": "15959:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15959:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1307,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15971:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15959:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15955:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "15784:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "15811:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "15797:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15797:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "15830:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "15822:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15822:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15844:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "15837:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15837:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15796:55:2"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15861:0:2"
            },
            "scope": 1855,
            "src": "15775:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "17158:412:2",
              "statements": [
                {
                  "assignments": [
                    1444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1444,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "17181:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "17168:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1443,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17168:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1451,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1447,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1438,
                          "src": "17210:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1449,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17218:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17210:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1445,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17193:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "17193:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17193:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17168:53:2"
                },
                {
                  "condition": {
                    "id": 1452,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1440,
                    "src": "17234:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1481,
                  "nodeType": "IfStatement",
                  "src": "17231:193:2",
                  "trueBody": {
                    "id": 1480,
                    "nodeType": "Block",
                    "src": "17244:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1478,
                          "nodeType": "Block",
                          "src": "17297:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1461,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1438,
                                    "src": "17315:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1463,
                                  "indexExpression": {
                                    "id": 1462,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1454,
                                    "src": "17323:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17315:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1467,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1438,
                                            "src": "17355:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1469,
                                          "indexExpression": {
                                            "id": 1468,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1454,
                                            "src": "17363:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17355:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1465,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "17338:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1466,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "17338:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1470,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17338:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1464,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "17328:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17328:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "17315:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1473,
                              "nodeType": "ExpressionStatement",
                              "src": "17315:52:2"
                            },
                            {
                              "id": 1477,
                              "nodeType": "UncheckedBlock",
                              "src": "17385:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "17395:3:2",
                                    "subExpression": {
                                      "id": 1474,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1454,
                                      "src": "17397:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1476,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17395:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1457,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "17277:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1458,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1438,
                              "src": "17281:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17281:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17277:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1479,
                        "initializationExpression": {
                          "assignments": [
                            1454
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1454,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17270:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1479,
                              "src": "17262:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1453,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17262:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1456,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17274:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17262:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17258:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1483,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "17441:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "17433:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1482,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17433:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1487,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "17477:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1485,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17460:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17460:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17460:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1484,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "17450:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17450:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17433:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1492,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "17513:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1493,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1483,
                          "src": "17521:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1494,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "17529:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "17521:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1496,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1438,
                          "src": "17541:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1498,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17549:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17541:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1499,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "17553:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1491,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "17501:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17501:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1501,
                  "nodeType": "EmitStatement",
                  "src": "17496:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "17076:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "17096:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "17088:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17088:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17125:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "17108:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1436,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17108:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1437,
                    "nodeType": "ArrayTypeName",
                    "src": "17108:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "17139:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "17134:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17134:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17087:61:2"
            },
            "returnParameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17158:0:2"
            },
            "scope": 1855,
            "src": "17067:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1808,
              "nodeType": "Block",
              "src": "18372:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1516,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1505,
                                "src": "18459:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1514,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "18440:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$5927",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2472,
                              "src": "18440:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18440:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1518,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18470:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18470:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18440:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1521,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "18484:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1523,
                              "indexExpression": {
                                "id": 1522,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1507,
                                "src": "18490:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18484:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "18484:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1525,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "18511:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18484:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18440:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18519:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18432:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18432:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1530,
                  "nodeType": "ExpressionStatement",
                  "src": "18432:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1532,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "18572:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18572:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18589:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18572:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18564:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18564:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "18564:27:2"
                },
                {
                  "assignments": [
                    1540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1540,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "18615:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1808,
                      "src": "18602:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1539,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1538,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "18602:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "18602:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1544,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1541,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "18624:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1543,
                    "indexExpression": {
                      "id": 1542,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "18630:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18624:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18602:36:2"
                },
                {
                  "assignments": [
                    1546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1546,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "18656:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1808,
                      "src": "18648:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18648:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1548,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18664:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18648:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1549,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1540,
                        "src": "19195:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "19195:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19214:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19195:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1581,
                  "nodeType": "IfStatement",
                  "src": "19192:205:2",
                  "trueBody": {
                    "id": 1580,
                    "nodeType": "Block",
                    "src": "19217:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1578,
                          "nodeType": "Block",
                          "src": "19270:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1561,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1510,
                                    "src": "19288:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1563,
                                  "indexExpression": {
                                    "id": 1562,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1554,
                                    "src": "19296:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19288:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1567,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1510,
                                            "src": "19328:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1569,
                                          "indexExpression": {
                                            "id": 1568,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1554,
                                            "src": "19336:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19328:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1565,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19311:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19311:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1570,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19311:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1564,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19301:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19301:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19288:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1573,
                              "nodeType": "ExpressionStatement",
                              "src": "19288:52:2"
                            },
                            {
                              "id": 1577,
                              "nodeType": "UncheckedBlock",
                              "src": "19358:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19368:3:2",
                                    "subExpression": {
                                      "id": 1574,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1554,
                                      "src": "19370:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1576,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19368:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1557,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "19250:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1558,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "19254:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19254:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19250:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1579,
                        "initializationExpression": {
                          "assignments": [
                            1554
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1554,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19243:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1579,
                              "src": "19235:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1553,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19235:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1556,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19247:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19235:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "19231:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1583,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19414:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1808,
                      "src": "19406:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1582,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19406:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1590,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1587,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "19450:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1585,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19433:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19433:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19433:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1584,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19423:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19423:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19406:53:2"
                },
                {
                  "assignments": [
                    1592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1592,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19478:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1808,
                      "src": "19470:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19470:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1600,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1593,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "19492:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "19492:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1595,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "19507:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19492:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19520:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19492:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19516:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19470:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1602,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "19559:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1603,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "19567:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "19567:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1605,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "19581:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1606,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "19590:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1607,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1592,
                          "src": "19598:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19611:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19598:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1601,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "19537:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19537:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1611,
                  "nodeType": "EmitStatement",
                  "src": "19532:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1612,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1592,
                      "src": "19628:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19642:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19628:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1806,
                    "nodeType": "Block",
                    "src": "20489:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1695,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "20637:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "20637:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1697,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "20657:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "20637:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1804,
                          "nodeType": "Block",
                          "src": "21473:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1778
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1778,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21587:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1804,
                                  "src": "21579:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1777,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21579:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1781,
                              "initialValue": {
                                "expression": {
                                  "id": 1779,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1540,
                                  "src": "21595:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1780,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "21595:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21579:30:2"
                            },
                            {
                              "expression": {
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21627:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1782,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "21634:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1784,
                                  "indexExpression": {
                                    "id": 1783,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1507,
                                    "src": "21640:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21634:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1786,
                              "nodeType": "ExpressionStatement",
                              "src": "21627:21:2"
                            },
                            {
                              "assignments": [
                                1788,
                                1790
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1788,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21672:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1804,
                                  "src": "21667:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1787,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21667:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1790,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21691:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1804,
                                  "src": "21678:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1789,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21678:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1798,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21726:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1791,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4248,
                                        "src": "21699:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21699:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21699:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1794,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1778,
                                      "src": "21719:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21699:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21699:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21666:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1800,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1788,
                                    "src": "21805:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21811:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1799,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21797:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21797:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1803,
                              "nodeType": "ExpressionStatement",
                              "src": "21797:37:2"
                            }
                          ]
                        },
                        "id": 1805,
                        "nodeType": "IfStatement",
                        "src": "20634:1246:2",
                        "trueBody": {
                          "id": 1776,
                          "nodeType": "Block",
                          "src": "20664:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1700
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1700,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20690:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "20682:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1699,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20682:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1705,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1701,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1540,
                                    "src": "20698:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1702,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20698:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20713:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "20698:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20682:32:2"
                            },
                            {
                              "assignments": [
                                1707
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1707,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "20748:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "20732:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1706,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20732:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1716,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1712,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1540,
                                          "src": "20789:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1713,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "20789:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1710,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "20770:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$5927",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1711,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2472,
                                      "src": "20770:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20770:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20762:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1708,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20762:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20762:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20732:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1720,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1540,
                                      "src": "20848:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1721,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "20848:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1722,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20866:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1717,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20826:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5927",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5574,
                                  "src": "20826:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20826:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1724,
                              "nodeType": "ExpressionStatement",
                              "src": "20826:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1728,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1505,
                                    "src": "20932:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1729,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20940:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1725,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20910:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5927",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5574,
                                  "src": "20910:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20910:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1731,
                              "nodeType": "ExpressionStatement",
                              "src": "20910:56:2"
                            },
                            {
                              "expression": {
                                "id": 1736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1732,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1540,
                                    "src": "20985:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1734,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20985:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21000:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20985:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1737,
                              "nodeType": "ExpressionStatement",
                              "src": "20985:16:2"
                            },
                            {
                              "expression": {
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21048:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1738,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "21055:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1740,
                                  "indexExpression": {
                                    "id": 1739,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1507,
                                    "src": "21061:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21055:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1742,
                              "nodeType": "ExpressionStatement",
                              "src": "21048:21:2"
                            },
                            {
                              "assignments": [
                                1744,
                                1746
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1744,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21136:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "21131:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1743,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21131:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1746,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21155:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1776,
                                  "src": "21142:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1745,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21142:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1753,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21194:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1747,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1707,
                                      "src": "21163:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21163:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1749,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1700,
                                      "src": "21187:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21163:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21163:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21130:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1755,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1744,
                                    "src": "21223:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21229:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1754,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21215:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21215:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1758,
                              "nodeType": "ExpressionStatement",
                              "src": "21215:37:2"
                            },
                            {
                              "expression": {
                                "id": 1769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1759,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1744,
                                      "src": "21308:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1760,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1746,
                                      "src": "21314:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1761,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21307:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21352:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1762,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21322:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1763,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21322:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1764,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21322:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1765,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1700,
                                        "src": "21345:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21322:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21322:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21307:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1770,
                              "nodeType": "ExpressionStatement",
                              "src": "21307:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1772,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1744,
                                    "src": "21381:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21387:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1771,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21373:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21373:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1775,
                              "nodeType": "ExpressionStatement",
                              "src": "21373:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1807,
                  "nodeType": "IfStatement",
                  "src": "19624:2266:2",
                  "trueBody": {
                    "id": 1694,
                    "nodeType": "Block",
                    "src": "19644:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1616
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1616,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19730:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "19722:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1615,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19722:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1621,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1617,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "19738:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1618,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19738:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19753:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19738:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19722:32:2"
                      },
                      {
                        "assignments": [
                          1623
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1623,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "19784:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "19768:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1622,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19768:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1632,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1628,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1540,
                                    "src": "19827:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1629,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "19827:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1626,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "19808:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$5927",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2472,
                                "src": "19808:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19808:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19800:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19800:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19800:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19768:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1636,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "19937:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "19937:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1638,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "19951:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "19951:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1633,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19915:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5927",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5574,
                            "src": "19915:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19915:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1641,
                        "nodeType": "ExpressionStatement",
                        "src": "19915:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1645,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "20004:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1646,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "20004:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1647,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "20023:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1642,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19982:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5927",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5574,
                            "src": "19982:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19982:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "19982:67:2"
                      },
                      {
                        "expression": {
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1650,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "20064:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "20064:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20079:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20064:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1655,
                        "nodeType": "ExpressionStatement",
                        "src": "20064:16:2"
                      },
                      {
                        "expression": {
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20123:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1656,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "20130:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1658,
                            "indexExpression": {
                              "id": 1657,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1507,
                              "src": "20136:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20130:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "20123:21:2"
                      },
                      {
                        "assignments": [
                          1662,
                          1664
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1662,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "20203:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "20198:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1661,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20198:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1664,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20222:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1694,
                            "src": "20209:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1663,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "20209:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1671,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20263:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1665,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "20230:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20230:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1667,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1616,
                                "src": "20256:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20230:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20230:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20197:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1673,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1662,
                              "src": "20288:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20294:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1672,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20280:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20280:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1676,
                        "nodeType": "ExpressionStatement",
                        "src": "20280:37:2"
                      },
                      {
                        "expression": {
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1677,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "20365:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1678,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1664,
                                "src": "20371:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1679,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20364:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20409:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1680,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20379:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20379:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20379:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1683,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "20402:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20379:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20379:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20364:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1688,
                        "nodeType": "ExpressionStatement",
                        "src": "20364:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1690,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1662,
                              "src": "20434:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20440:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1689,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20426:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20426:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1693,
                        "nodeType": "ExpressionStatement",
                        "src": "20426:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "18285:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "18312:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "18304:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18304:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "18328:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "18320:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18320:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "18354:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1809,
                  "src": "18337:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1508,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18337:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1509,
                    "nodeType": "ArrayTypeName",
                    "src": "18337:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18303:59:2"
            },
            "returnParameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18372:0:2"
            },
            "scope": 1855,
            "src": "18276:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1817,
              "nodeType": "Block",
              "src": "22005:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22023:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22029:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22015:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22015:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "22015:30:2"
                },
                {
                  "id": 1816,
                  "nodeType": "PlaceholderStatement",
                  "src": "22055:1:2"
                }
              ]
            },
            "id": 1818,
            "name": "onlyAdmin",
            "nameLocation": "21993:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22002:2:2"
            },
            "src": "21984:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1826,
              "nodeType": "Block",
              "src": "22093:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22111:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22117:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22103:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22103:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "22103:30:2"
                },
                {
                  "id": 1825,
                  "nodeType": "PlaceholderStatement",
                  "src": "22143:1:2"
                }
              ]
            },
            "id": 1827,
            "name": "onlyNFTOwner",
            "nameLocation": "22078:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22090:2:2"
            },
            "src": "22069:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1835,
              "nodeType": "Block",
              "src": "22179:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22197:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22203:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22189:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22189:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1833,
                  "nodeType": "ExpressionStatement",
                  "src": "22189:31:2"
                },
                {
                  "id": 1834,
                  "nodeType": "PlaceholderStatement",
                  "src": "22230:1:2"
                }
              ]
            },
            "id": 1836,
            "name": "onlyLessee",
            "nameLocation": "22166:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22176:2:2"
            },
            "src": "22157:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1844,
              "nodeType": "Block",
              "src": "22266:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22306:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22312:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22298:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22298:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "22298:31:2"
                },
                {
                  "id": 1843,
                  "nodeType": "PlaceholderStatement",
                  "src": "22339:1:2"
                }
              ]
            },
            "id": 1845,
            "name": "onlyMember",
            "nameLocation": "22253:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22263:2:2"
            },
            "src": "22244:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1853,
              "nodeType": "Block",
              "src": "22397:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22415:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22420:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22407:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22407:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "22407:36:2"
                },
                {
                  "id": 1852,
                  "nodeType": "PlaceholderStatement",
                  "src": "22474:1:2"
                }
              ]
            },
            "id": 1854,
            "name": "onlyBoard",
            "nameLocation": "22385:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22394:2:2"
            },
            "src": "22376:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1856,
        "src": "743:21746:2",
        "usedErrors": [
          1865
        ]
      }
    ],
    "src": "0:22489:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b5060405162003f7b38038062003f7b8339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b613e70806200010b6000396000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063e95d23471161006f578063e95d234714610422578063f18c51d314610462578063f2fde38b14610482578063f4739bd9146104a2578063f713b7ed146104d2578063ff981099146104f257600080fd5b80638da5cb5b1461034a57806390b293d814610372578063976217cd14610388578063b2bad544146103b5578063beca3a16146103e2578063d374a2171461040257600080fd5b806369d037381161010857806369d037381461027f578063715018a61461029f57806372e185ce146102b4578063826b8ebd146102d45780638a6655d6146102f45780638d9776721461031457600080fd5b8063013cf08b1461015b57806309265ce61461019557806310190ef1146101b75780634b50f16a146101eb57806361f9e9a8146102195780636215597b1461023957600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004612f57565b61051f565b60405161018c959493929190612fc8565b60405180910390f35b3480156101a157600080fd5b506101b56101b03660046130d1565b6105eb565b005b3480156101c357600080fd5b506101d76101d2366004612f57565b610731565b60405161018c989796959493929190613130565b3480156101f757600080fd5b5061020b6102063660046131af565b61083b565b60405161018c92919061329b565b34801561022557600080fd5b506101b56102343660046133a3565b610ccf565b34801561024557600080fd5b50610271610254366004613440565b600360209081526000928352604080842090915290825290205481565b60405190815260200161018c565b34801561028b57600080fd5b506101b561029a366004613477565b610cf7565b3480156102ab57600080fd5b506101b5610d43565b3480156102c057600080fd5b506101b56102cf366004613503565b610d79565b3480156102e057600080fd5b506102716102ef366004612f57565b6111fd565b34801561030057600080fd5b506101b561030f366004613559565b611413565b34801561032057600080fd5b5061033461032f366004612f57565b61144c565b60405161018c9a99989796959493929190613585565b34801561035657600080fd5b506001546040516001600160a01b03909116815260200161018c565b34801561037e57600080fd5b50610271600a5481565b34801561039457600080fd5b506103a86103a3366004612f57565b61154e565b60405161018c9190613606565b3480156103c157600080fd5b506103d56103d03660046131af565b611690565b60405161018c9190613619565b3480156103ee57600080fd5b506101b56103fd36600461367b565b611a56565b34801561040e57600080fd5b506101b561041d366004612f57565b611b6b565b34801561042e57600080fd5b5060055461044890600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161018c565b34801561046e57600080fd5b506101b561047d3660046136cb565b611ea7565b34801561048e57600080fd5b506101b561049d366004613477565b61264d565b3480156104ae57600080fd5b506104c26104bd366004612f57565b6126e8565b604051901515815260200161018c565b3480156104de57600080fd5b506101b56104ed36600461371a565b6128b8565b3480156104fe57600080fd5b5061051261050d366004612f57565b612a55565b60405161018c9190613756565b60076020526000908152604090208054819061053a9061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546105669061379e565b80156105b35780601f10610588576101008083540402835291602001916105b3565b820191906000526020600020905b81548152906001019060200180831161059657829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b600082600081518110610600576106006137d8565b602002602001015160405160200161061a91815260200190565b604051602081830303815290604052905081156106a65760005b83518110156106a45783818151811061064f5761064f6137d8565b602002602001015160405160200161066991815260200190565b60405160208183030381529060405280519060200120848281518110610691576106916137d8565b6020908102919091010152600101610634565b505b6000836040516020016106b991906137ee565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea8186831486600081518110610709576107096137d8565b6020026020010151856040516107229493929190613824565b60405180910390a15050505050565b6004818154811061074157600080fd5b90600052602060002090600302016000915090508060010180546107649061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546107909061379e565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b6060806000610859600554600f81810b600160801b909204900b0390565b9050610863612eb9565b600080805b848110156109eb5761087b600582612b7a565b600081815260096020526040908190208151610140810190925280549295509091829082906108a99061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546108d59061379e565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519195504291161180156109d757508764ffffffffff168460e0015161ffff16145b156109e3578160010191505b600101610868565b5080600003610a5857604080516001808252818301909252600091816020015b610a13612eb9565b815260200190600190039081610a0b575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610a7357610a7361300c565b604051908082528060200260200182016040528015610aac57816020015b610a99612eb9565b815260200190600190039081610a915790505b5090506000836001600160401b03811115610ac957610ac961300c565b604051908082528060200260200182016040528015610af2578160200160208202803683370190505b50905060005b87811015610cbf57610b0b600582612b7a565b60008181526009602052604090819020815161014081019092528054929850909182908290610b399061379e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b659061379e565b8015610bb25780601f10610b8757610100808354040283529160200191610bb2565b820191906000526020600020905b815481529060010190602001808311610b9557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610c6757508a64ffffffffff168760e0015161ffff16145b15610cb75786838581518110610c7f57610c7f6137d8565b602002602001018190525085828581518110610c9d57610c9d6137d8565b602002602001018181525050836001019350848411610cbf575b600101610af8565b5090999098509650505050505050565b610cdd565b60405180910390fd5b610cee878760008888888888612beb565b50505050505050565b6001546001600160a01b03163314610d215760405162461bcd60e51b8152600401610cd490613855565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610d6d5760405162461bcd60e51b8152600401610cd490613855565b610d776000612d6a565b565b60005b6004548110156111f75783604051602001610d97919061388a565b6040516020818303038152906040528051906020012060048281548110610dc057610dc06137d8565b9060005260206000209060030201600101604051602001610de1919061391a565b60405160208183030381529060405280519060200120036111ef574260048281548110610e1057610e106137d8565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610e74575060048181548110610e4e57610e4e6137d8565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610eb65760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610cd4565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610ef957610ef96137d8565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610f3357610f336137d8565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610fd1908261397c565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a80546000906110d5908490613a51565b909155506110e890504262015180613a51565b600483815481106110fb576110fb6137d8565b6000918252602080832064ffffffffff88168452600390920290910190526040902055600480546001919084908110611136576111366137d8565b906000526020600020906003020160020160149054906101000a900461ffff166111609190613a69565b60048381548110611173576111736137d8565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600a546111cf9190613a8c565b87426040516111e19493929190613aa3565b60405180910390a1506111f7565b600101610d7c565b50505050565b600060085482106112435760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610cd4565b600082815260076020526040902060030154600160501b900464ffffffffff1642116112a75760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610cd4565b6000806000805b60008681526007602052604090206001015461ffff168110156113c8576000868152600760205260409020839060020182600881106112ef576112ef6137d8565b601091828204019190066002029054906101000a900461ffff1661ffff16111561136a5760008681526007602052604090206002018160088110611335576113356137d8565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361136557600091505b6113b6565b60008681526007602052604090208390600201826008811061138e5761138e6137d8565b601091828204019190066002029054906101000a900461ffff1661ffff16036113b657600191505b806113c081613ada565b9150506112ae565b50801561140a5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610cd4565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610cd4565b6009602052600090815260409020805481906114679061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546114939061379e565b80156114e05780601f106114b5576101008083540402835291602001916114e0565b820191906000526020600020905b8154815290600101906020018083116114c357829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b611556612eb9565b600082815260096020526040908190208151610140810190925280548290829061157f9061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546115ab9061379e565b80156115f85780601f106115cd576101008083540402835291602001916115f8565b820191906000526020600020905b8154815290600101906020018083116115db57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6004548110156117a85742600482815481106116b4576116b46137d8565b6000918252602080832064ffffffffff89168452600390920290910190526040902054108015611718575042600482815481106116f3576116f36137d8565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561175757504260048281548110611733576117336137d8565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156117945750600160048281548110611773576117736137d8565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156117a0578160010191505b600101611696565b508060000361181457604080516001808252818301909252600091816020015b60608152602001906001900390816117c85790505090506040518060200160405280600081525081600081518110611802576118026137d8565b60209081029190910101529392505050565b6000816001600160401b0381111561182e5761182e61300c565b60405190808252806020026020018201604052801561186157816020015b606081526020019060019003908161184c5790505b5090506000805b600454811015611a4c574260048281548110611886576118866137d8565b6000918252602080832064ffffffffff8b1684526003909202909101905260409020541080156118ea575042600482815481106118c5576118c56137d8565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561192957504260048281548110611905576119056137d8565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156119665750600160048281548110611945576119456137d8565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611a44576004818154811061197e5761197e6137d8565b9060005260206000209060030201600101805461199a9061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546119c69061379e565b8015611a135780601f106119e857610100808354040283529160200191611a13565b820191906000526020600020905b8154815290600101906020018083116119f657829003601f168201915b5050505050838381518110611a2a57611a2a6137d8565b602002602001018190525081600101915083821015611a4c575b600101611868565b5090949350505050565b60018561ffff16118015611a6f57506101018561ffff16105b611abb5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610cd4565b600160086000828254611ace9190613a51565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611b4d888a83613b10565b50611b618888600854600089898989612beb565b5050505050505050565b6000611b86600554600f81810b600160801b909204900b0390565b9050611b90612eb9565b6000805b83811015611ea057611ba7600582612b7a565b60008181526009602052604090819020815161014081019092528054929450909182908290611bd59061379e565b80601f0160208091040260200160405190810160405280929190818152602001828054611c019061379e565b8015611c4e5780601f10611c2357610100808354040283529160200191611c4e565b820191906000526020600020905b815481529060010190602001808311611c3157829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611d00575084836020015164ffffffffff1614155b8015611d1557508483610100015161ffff1614155b15611e985761ffff851660e0840152600b54611d319042613a51565b64ffffffffff16610120840152600082815260096020526040902083518491908190611d5d908261397c565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b949092169390930217909255600084815260099092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611e8f9188918691613bcf565b60405180910390a15b600101611b94565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f149190613af3565b6001600160a01b0316148015611f455750600082815260096020526040902060040154600160701b900461ffff1683145b611f915760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610cd4565b6000815111611f9f57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff161561203a5760005b835181101561203857838181518110611fe357611fe36137d8565b6020026020010151604051602001611ffd91815260200190565b60405160208183030381529060405280519060200120848281518110612025576120256137d8565b6020908102919091010152600101611fc8565b505b60008360405160200161204d91906137ee565b60405160208183030381529060405280519060200120905060008184600201541461207957600061207c565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a1806001036123e257600484015460009061210c90600290600160201b90046001600160501b0316613c9a565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219c9190613af3565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561220657600080fd5b505af115801561221a573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561228257600080fd5b505af1158015612296573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff0000000019169055506000888152600960205260408120906122cc8282612f0d565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d806000811461234a576040519150601f19603f3d011682016040523d82523d6000602084013e61234f565b606091505b5091509150816123715760405162461bcd60e51b8152600401610cd490613cce565b60405133908590600081818185875af1925050503d80600081146123b1576040519150601f19603f3d011682016040523d82523d6000602084013e6123b6565b606091505b509092509050816123d95760405162461bcd60e51b8152600401610cd490613cce565b50505050610cee565b8184600301540361255957600484015460009061241190600290600160201b90046001600160501b0316613c9a565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561247d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a19190613af3565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561250557600080fd5b505af1158015612519573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401612268565b60048401546000878152600960205260408120600160201b9092046001600160501b031691906125898282612f0d565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806125d06001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d806000811461261a576040519150601f19603f3d011682016040523d82523d6000602084013e61261f565b606091505b5091509150816126415760405162461bcd60e51b8152600401610cd490613cce565b50505050505050505050565b6001546001600160a01b031633146126775760405162461bcd60e51b8152600401610cd490613855565b6001600160a01b0381166126dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cd4565b6126e581612d6a565b50565b600080612704600554600f81810b600160801b909204900b0390565b905061270e612eb9565b60005b828110156128ad5760096000612728600584612b7a565b60001c8152602001908152602001600020604051806101400160405290816000820180546127559061379e565b80601f01602080910402602001604051908101604052809291908181526020018280546127819061379e565b80156127ce5780601f106127a3576101008083540402835291602001916127ce565b820191906000526020600020905b8154815290600101906020018083116127b157829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612880575084826020015164ffffffffff1614155b801561289557508482610100015161ffff1614155b156128a557506001949350505050565b600101612711565b506000949350505050565b60005b600454811015612a5157816040516020016128d69190613cfc565b60405160208183030381529060405280519060200120600482815481106128ff576128ff6137d8565b90600052602060002090600302016001016040516020016129209190613d18565b6040516020818303038152906040528051906020012003612a4957600060048281548110612950576129506137d8565b906000526020600020906003020190506000600460016004805490506129769190613a8c565b81548110612986576129866137d8565b90600052602060002090600302019050809150600460016004805490506129ad9190613a8c565b815481106129bd576129bd6137d8565b906000526020600020906003020160006001820160006129dd9190612f0d565b5060020180546001600160b01b0319169055600480546129ff90600190613a8c565b81548110612a0f57612a0f6137d8565b90600052602060002090600302016000600182016000612a2f9190612f0d565b5060020180546001600160b01b031916905550612a519050565b6001016128bb565b5050565b60606008548210612a9b5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610cd4565b60008281526007602052604081206001015461ffff166001600160401b03811115612ac857612ac861300c565b604051908082528060200260200182016040528015612af1578160200160208202803683370190505b50905060005b8151811015612b735760008481526007602052604090206002018160088110612b2257612b226137d8565b601091828204019190066002029054906101000a900461ffff16828281518110612b4e57612b4e6137d8565b61ffff9092166020928302919091019091015280612b6b81613ada565b915050612af7565b5092915050565b600080612b9d612b8984612dbc565b8554612b989190600f0b613d8a565b612e2a565b8454909150600160801b9004600f90810b9082900b12612bd057604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b6004805460018101808355600083815291929083908110612c0e57612c0e6137d8565b60009182526020909120600390910201905060018101612c2f8a8c83613b10565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051612d56989796959493929190613dcb565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160ff1b03821115612e265760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610cd4565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612e5d57506f7fffffffffffffffffffffffffffffff8213155b612e265760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610cd4565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b508054612f199061379e565b6000825580601f10612f29575050565b601f0160209004906000526020600020908101906126e591905b80821115612e265760008155600101612f43565b600060208284031215612f6957600080fd5b5035919050565b60005b83811015612f8b578181015183820152602001612f73565b838111156111f75750506000910152565b60008151808452612fb4816020860160208601612f70565b601f01601f19169290920160200192915050565b60a081526000612fdb60a0830188612f9c565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561304a5761304a61300c565b604052919050565b600082601f83011261306357600080fd5b813560206001600160401b0382111561307e5761307e61300c565b8160051b61308d828201613022565b92835284810182019282810190878511156130a757600080fd5b83870192505b848310156130c6578235825291830191908301906130ad565b979650505050505050565b6000806000606084860312156130e657600080fd5b8335925060208401356001600160401b0381111561310357600080fd5b61310f86828701613052565b9250506040840135801515811461312557600080fd5b809150509250925092565b60006101008083526131448184018c612f9c565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff811681146131aa57600080fd5b919050565b6000602082840312156131c157600080fd5b6131ca82613195565b9392505050565b600061014082518185526131e782860182612f9c565b9150506020830151613202602086018264ffffffffff169052565b506040830151604085015260608301516060850152608083015161322b608086018260ff169052565b5060a083015161324260a086018262ffffff169052565b5060c083015161325d60c08601826001600160501b03169052565b5060e083015161327360e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611a4c565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156132f257605f198887030185526132e08683516131d1565b955093820193908201906001016132c4565b50508584038187015286518085528782019482019350915060005b828110156133295784518452938101939281019260010161330d565b5091979650505050505050565b60008083601f84011261334857600080fd5b5081356001600160401b0381111561335f57600080fd5b60208301915083602082850101111561337757600080fd5b9250929050565b803562ffffff811681146131aa57600080fd5b803561ffff811681146131aa57600080fd5b600080600080600080600060c0888a0312156133be57600080fd5b87356001600160401b038111156133d457600080fd5b6133e08a828b01613336565b909850965050602088013560ff811681146133fa57600080fd5b94506134086040890161337e565b935061341660608901613195565b925061342460808901613195565b915061343260a08901613391565b905092959891949750929550565b6000806040838503121561345357600080fd5b50508035926020909101359150565b6001600160a01b03811681146126e557600080fd5b60006020828403121561348957600080fd5b81356131ca81613462565b600082601f8301126134a557600080fd5b81356001600160401b038111156134be576134be61300c565b6134d1601f8201601f1916602001613022565b8181528460208386010111156134e657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561351857600080fd5b83356001600160401b0381111561352e57600080fd5b61353a86828701613494565b9350506020840135915061355060408501613195565b90509250925092565b60008060006060848603121561356e57600080fd5b505081359360208301359350604090920135919050565b60006101408083526135998184018e612f9c565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260006131ca60208301846131d1565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561366e57603f1988860301845261365c858351612f9c565b94509285019290850190600101613640565b5092979650505050505050565b600080600080600080600060c0888a03121561369657600080fd5b87356001600160401b038111156136ac57600080fd5b6136b88a828b01613336565b90985096506133fa905060208901613391565b6000806000606084860312156136e057600080fd5b833592506020840135915060408401356001600160401b0381111561370457600080fd5b61371086828701613052565b9150509250925092565b60006020828403121561372c57600080fd5b81356001600160401b0381111561374257600080fd5b61374e84828501613494565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561379257835161ffff1683529284019291840191600101613772565b50909695505050505050565b600181811c908216806137b257607f821691505b6020821081036137d257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613818578151855293820193908201906001016137fc565b50929695505050505050565b848152831515602082015282604082015260806060820152600061384b6080830184612f9c565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260006131ca6020830184612f9c565b600081546138aa8161379e565b8085526020600183811680156138c757600181146138e15761390f565b60ff1985168884015283151560051b88018301955061390f565b866000528260002060005b858110156139075781548a82018601529083019084016138ec565b890184019650505b505050505092915050565b6020815260006131ca602083018461389d565b601f82111561397757600081815260208120601f850160051c810160208610156139545750805b601f850160051c820191505b8181101561397357828155600101613960565b5050505b505050565b81516001600160401b038111156139955761399561300c565b6139a9816139a3845461379e565b8461392d565b602080601f8311600181146139de57600084156139c65750858301515b600019600386901b1c1916600185901b178555613973565b600085815260208120601f198616915b82811015613a0d578886015182559484019460019091019084016139ee565b5085821015613a2b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115613a6457613a64613a3b565b500190565b600061ffff83811690831681811015613a8457613a84613a3b565b039392505050565b600082821015613a9e57613a9e613a3b565b500390565b64ffffffffff85168152836020820152608060408201526000613ac96080830185612f9c565b905082606083015295945050505050565b600060018201613aec57613aec613a3b565b5060010190565b600060208284031215613b0557600080fd5b81516131ca81613462565b6001600160401b03831115613b2757613b2761300c565b613b3b83613b35835461379e565b8361392d565b6000601f841160018114613b6f5760008515613b575750838201355b600019600387901b1c1916600186901b178355611ea0565b600083815260209020601f19861690835b82811015613ba05786850135825560209485019460019092019101613b80565b5086821015613bbd5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613bf86101a084018561389d565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613c7c6101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613cc257634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613d0e818460208701612f70565b9190910192915050565b6000808354613d268161379e565b60018281168015613d3e5760018114613d5357613818565b60ff1984168752821515830287019450613818565b8760005260208060002060005b85811015613d795781548a820152908401908201613d60565b505050959091019695505050505050565b600080821280156001600160ff1b0384900385131615613dac57613dac613a3b565b600160ff1b8390038412811615613dc557613dc5613a3b565b50500190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea264697066735822122095be6015b083b59a917837a58beaea9422a129e2675d30812e89e782db75025464736f6c634300080f0033",
  "bytecodeSha1": "c7b6210ae1ecf9e8abae397c2ae0b7c54d5e80aa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "162": [
            26367,
            26392,
            false
          ],
          "163": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "161": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "159": [
            4843,
            4860,
            false
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "154": [
            6467,
            6521,
            false
          ],
          "155": [
            6525,
            6547,
            false
          ],
          "156": [
            6551,
            6576,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "142": [
            15122,
            15176,
            false
          ],
          "143": [
            15180,
            15202,
            false
          ],
          "144": [
            15206,
            15231,
            false
          ]
        },
        "Governance.completeTask": {
          "121": [
            16011,
            16091,
            false
          ],
          "122": [
            16178,
            16222,
            false
          ],
          "123": [
            16226,
            16270,
            true
          ]
        },
        "Governance.createProposal": {
          "140": [
            12808,
            12828,
            false
          ],
          "141": [
            12832,
            12854,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "157": [
            10348,
            10440,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "130": [
            8555,
            8617,
            false
          ],
          "131": [
            8633,
            8677,
            false
          ],
          "132": [
            8681,
            8724,
            false
          ],
          "133": [
            8740,
            8771,
            false
          ],
          "134": [
            9101,
            9109,
            false
          ],
          "135": [
            9385,
            9447,
            false
          ],
          "136": [
            9463,
            9507,
            false
          ],
          "137": [
            9511,
            9554,
            false
          ],
          "138": [
            9570,
            9601,
            false
          ],
          "139": [
            9733,
            9749,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "115": [
            7151,
            7205,
            false
          ],
          "116": [
            7209,
            7235,
            false
          ],
          "117": [
            7382,
            7390,
            false
          ],
          "118": [
            7954,
            8008,
            false
          ],
          "119": [
            8012,
            8038,
            false
          ],
          "120": [
            8186,
            8199,
            false
          ]
        },
        "Governance.getVotes": {
          "158": [
            4684,
            4711,
            true
          ]
        },
        "Governance.getWinningVote": {
          "124": [
            5078,
            5105,
            true
          ],
          "125": [
            5145,
            5197,
            true
          ],
          "126": [
            5544,
            5594,
            false
          ],
          "127": [
            5719,
            5725,
            false
          ],
          "128": [
            5773,
            5824,
            false
          ],
          "129": [
            5890,
            5896,
            true
          ]
        },
        "Governance.submitVerification": {
          "145": [
            18440,
            18480,
            false
          ],
          "146": [
            18484,
            18517,
            true
          ],
          "147": [
            18572,
            18590,
            true
          ],
          "148": [
            19195,
            19215,
            false
          ],
          "149": [
            19492,
            19513,
            true
          ],
          "150": [
            19628,
            19643,
            false
          ],
          "151": [
            20288,
            20292,
            true
          ],
          "152": [
            20637,
            20663,
            false
          ],
          "153": [
            21805,
            21809,
            true
          ]
        },
        "Governance.testHashing": {
          "114": [
            17234,
            17242,
            false
          ]
        }
      },
      "20": {},
      "3": {},
      "9": {
        "Ownable.transferOwnership": {
          "160": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "113": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "111": [
            35401,
            35488
          ],
          "112": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "97": [
            4839,
            4882
          ],
          "98": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "4": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "24": [
            2207,
            2237
          ],
          "25": [
            2271,
            2297
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance._createTaskType": {
          "99": [
            13970,
            13986
          ],
          "100": [
            14067,
            14098
          ],
          "101": [
            14112,
            14138
          ],
          "102": [
            14152,
            14188
          ],
          "103": [
            14202,
            14248
          ],
          "104": [
            14262,
            14296
          ],
          "105": [
            14310,
            14350
          ],
          "106": [
            14364,
            14404
          ],
          "107": [
            14418,
            14462
          ],
          "108": [
            14503,
            14627
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "84": [
            6377,
            6449
          ],
          "85": [
            6595,
            6606
          ],
          "86": [
            6644,
            6647
          ],
          "87": [
            6668,
            6680
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "59": [
            15002,
            15068
          ],
          "60": [
            15082,
            15104
          ],
          "61": [
            15410,
            15444
          ],
          "62": [
            15462,
            15543
          ],
          "63": [
            15561,
            15583
          ],
          "64": [
            15601,
            15657
          ],
          "65": [
            15695,
            15698
          ]
        },
        "Governance.completeTask": {
          "22": [
            16170,
            16294
          ],
          "23": [
            16484,
            16565
          ],
          "26": [
            16583,
            16618
          ],
          "27": [
            16636,
            16658
          ],
          "28": [
            16713,
            16784
          ],
          "29": [
            16802,
            16863
          ],
          "30": [
            16882,
            16959
          ],
          "31": [
            16977,
            16982
          ],
          "32": [
            17020,
            17023
          ]
        },
        "Governance.createProposal": {
          "52": [
            12800,
            12884
          ],
          "53": [
            12894,
            12913
          ],
          "54": [
            13013,
            13052
          ],
          "55": [
            13066,
            13105
          ],
          "56": [
            13119,
            13164
          ],
          "57": [
            13178,
            13209
          ],
          "58": [
            13220,
            13332
          ]
        },
        "Governance.createTaskType": {
          "18": [
            13584,
            13690
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "88": [
            10765,
            10795
          ],
          "89": [
            10813,
            10849
          ],
          "90": [
            11319,
            11355
          ],
          "91": [
            11373,
            11378
          ],
          "92": [
            11416,
            11419
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "43": [
            8814,
            8821
          ],
          "44": [
            9029,
            9032
          ],
          "45": [
            9180,
            9196
          ],
          "46": [
            9210,
            9225
          ],
          "47": [
            9634,
            9674
          ],
          "48": [
            9702,
            9711
          ],
          "49": [
            9773,
            9778
          ],
          "50": [
            9834,
            9837
          ],
          "51": [
            9858,
            9872
          ]
        },
        "Governance.getTaskById": {
          "42": [
            4554,
            4575
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "5": [
            7031,
            7097
          ],
          "6": [
            7111,
            7133
          ],
          "7": [
            7264,
            7271
          ],
          "8": [
            7310,
            7313
          ],
          "9": [
            7585,
            7616
          ],
          "10": [
            7834,
            7900
          ],
          "11": [
            7914,
            7936
          ],
          "12": [
            8057,
            8082
          ],
          "13": [
            8100,
            8127
          ],
          "14": [
            8155,
            8164
          ],
          "15": [
            8201,
            8206
          ],
          "16": [
            8245,
            8248
          ],
          "17": [
            8269,
            8296
          ]
        },
        "Governance.getVotes": {
          "93": [
            4676,
            4732
          ],
          "94": [
            4889,
            4934
          ],
          "95": [
            4871,
            4874
          ],
          "96": [
            4954,
            4970
          ]
        },
        "Governance.getWinningVote": {
          "33": [
            5070,
            5126
          ],
          "34": [
            5136,
            5221
          ],
          "35": [
            5614,
            5664
          ],
          "36": [
            5682,
            5697
          ],
          "37": [
            5729,
            5736
          ],
          "38": [
            5843,
            5848
          ],
          "39": [
            5487,
            5490
          ],
          "40": [
            5882,
            5917
          ],
          "41": [
            5927,
            5945
          ]
        },
        "Governance.setNFTAddress": {
          "20": [
            10056,
            10083
          ]
        },
        "Governance.submitVerification": {
          "66": [
            18432,
            18554
          ],
          "67": [
            18564,
            18591
          ],
          "68": [
            19288,
            19340
          ],
          "69": [
            19368,
            19371
          ],
          "70": [
            19532,
            19613
          ],
          "71": [
            19915,
            19968
          ],
          "72": [
            19982,
            20049
          ],
          "73": [
            20064,
            20080
          ],
          "74": [
            20123,
            20144
          ],
          "75": [
            20280,
            20317
          ],
          "76": [
            20364,
            20412
          ],
          "77": [
            20426,
            20463
          ],
          "78": [
            20826,
            20892
          ],
          "79": [
            20910,
            20966
          ],
          "80": [
            21627,
            21648
          ],
          "81": [
            21797,
            21834
          ]
        },
        "Governance.testHashing": {
          "1": [
            17315,
            17367
          ],
          "2": [
            17395,
            17398
          ],
          "3": [
            17496,
            17563
          ]
        }
      },
      "20": {},
      "3": {
        "Context._msgSender": {
          "19": [
            672,
            689
          ]
        }
      },
      "9": {
        "Ownable._setOwner": {
          "109": [
            2193,
            2210
          ],
          "110": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "82": [
            1982,
            2055
          ],
          "83": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "743:21746:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;17067:503;;;;;;;;;;-1:-1:-1;17067:503:2;;;;;:::i;:::-;;:::i;:::-;;2388:27;;;;;;;;;;-1:-1:-1;2388:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;6694:1609::-;;;;;;;;;;-1:-1:-1;6694:1609:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13377:320::-;;;;;;;;;;-1:-1:-1;13377:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9183:25:21;;;9171:2;9156:18;957:75:2;9037:177:21;9989:101:2;;;;;;;;;;-1:-1:-1;9989:101:2;;;;;:::i;:::-;;:::i;1652:94:9:-;;;;;;;;;;;;;:::i;15775:1286:2:-;;;;;;;;;;-1:-1:-1;15775:1286:2;;;;;:::i;:::-;;:::i;4983:969::-;;;;;;;;;;-1:-1:-1;4983:969:2;;;;;:::i;:::-;;:::i;11898:664::-;;;;;;;;;;-1:-1:-1;11898:664:2;;;;;:::i;:::-;;:::i;2783:38::-;;;;;;;;;;-1:-1:-1;2783:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:9:-;;;;;;;;;;-1:-1:-1;1074:6:9;;1001:87;;-1:-1:-1;;;;;1074:6:9;;;12100:51:21;;12088:2;12073:18;1001:87:9;11954:203:21;2827:34:2;;;;;;;;;;;;;;;;4470:112;;;;;;;;;;-1:-1:-1;4470:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8379:1500::-;;;;;;;;;;-1:-1:-1;8379:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12608:762::-;;;;;;;;;;-1:-1:-1;12608:762:2;;;;;:::i;:::-;;:::i;14641:1128::-;;;;;;;;;;-1:-1:-1;14641:1128:2;;;;;:::i;:::-;;:::i;2525:61::-;;;;;;;;;;-1:-1:-1;2525:61:2;;;;;;;;;-1:-1:-1;;;2525:61:2;;;;;;;;;;14198:2:21;14187:22;;;14169:41;;14246:22;;;;14241:2;14226:18;;14219:50;14142:18;2525:61:2;13999:276:21;18276:3620:2;;;;;;;;;;-1:-1:-1;18276:3620:2;;;;;:::i;:::-;;:::i;1901:192:9:-;;;;;;;;;;-1:-1:-1;1901:192:9;;;;;:::i;:::-;;:::i;5999:688:2:-;;;;;;;;;;-1:-1:-1;5999:688:2;;;;;:::i;:::-;;:::i;:::-;;;14934:14:21;;14927:22;14909:41;;14897:2;14882:18;5999:688:2;14769:187:21;10216:1221:2;;;;;;;;;;-1:-1:-1;10216:1221:2;;;;;:::i;:::-;;:::i;4588:389::-;;;;;;;;;;-1:-1:-1;4588:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2702:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2702:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;;-1:-1:-1;;;2702:46:2;;;;:::o;17067:503::-;17168:22;17210:7;17218:1;17210:10;;;;;;;;:::i;:::-;;;;;;;17193:28;;;;;;16582:19:21;;16626:2;16617:12;;16453:182;17193:28:2;;;;;;;;;;;;;17168:53;;17234:8;17231:193;;;17262:9;17258:156;17281:7;:14;17277:1;:18;17258:156;;;17355:7;17363:1;17355:10;;;;;;;;:::i;:::-;;;;;;;17338:28;;;;;;16582:19:21;;16626:2;16617:12;;16453:182;17338:28:2;;;;;;;;;;;;;17328:39;;;;;;17315:7;17323:1;17315:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;17395:3;;17258:156;;;;17231:193;17433:14;17477:7;17460:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;17450:36;;;;;;17433:53;;17501:62;17513:6;17529:10;17521:6;:18;17541:7;17549:1;17541:10;;;;;;;;:::i;:::-;;;;;;;17553:9;17501:62;;;;;;;;;:::i;:::-;;;;;;;;17158:412;;17067:503;;;:::o;2388:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;2388:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;-1:-1:-1;;;2388:27:2;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;;2388:27:2;;;;;:::o;6694:1609::-;6763:13;6778:16;6806:27;6836:49;6860:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6836:49:2;6806:79;;6895:18;;:::i;:::-;6923:14;;;6973:352;6995:19;6991:1;:23;6973:352;;;7048:48;7068:24;7094:1;7048:19;:48::i;:::-;7040:57;7120:13;;;:5;:13;;;;;;;7111:22;;;;;;;;;;7040:57;;-1:-1:-1;7111:22:2;;;;7120:13;;7111:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7111:22:2;;;-1:-1:-1;;7111:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7111:22:2;;-1:-1:-1;;;;;7111:22:2;;;;;-1:-1:-1;;;7111:22:2;;;;;;;;;;-1:-1:-1;;;7111:22:2;;;;;;;-1:-1:-1;;;7111:22:2;;;;;;;;;7151:36;;;;;-1:-1:-1;7190:15:2;7151:54;;;:84;;;;;7229:6;7209:26;;:6;:17;;;:26;;;7151:84;7147:140;;;7264:7;;;;;7147:140;7310:3;;6973:352;;;;7382:5;7389:1;7382:8;7378:249;;7430:13;;;7441:1;7430:13;;;;;;;;;7406:22;;7430:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;7488:16:2;;;7502:1;7488:16;;;;;;;;;7406:37;;-1:-1:-1;7457:29:2;;7488:16;;;;;;;;;;-1:-1:-1;7593:8:2;;;;-1:-1:-1;7593:8:2;;-1:-1:-1;;;;;;;;;6694:1609:2:o;7378:249::-;7637:15;7666:21;7701:5;-1:-1:-1;;;;;7690:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7666:41;;7717:26;7760:5;-1:-1:-1;;;;;7746:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7746:20:2;;7717:49;;7780:9;7776:484;7798:19;7794:1;:23;7776:484;;;7851:48;7871:24;7897:1;7851:19;:48::i;:::-;7843:57;7923:13;;;:5;:13;;;;;;;7914:22;;;;;;;;;;7843:57;;-1:-1:-1;7914:22:2;;;;7923:13;;7914:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7914:22:2;;;-1:-1:-1;;7914:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7914:22:2;;-1:-1:-1;;;;;7914:22:2;;;;;-1:-1:-1;;;7914:22:2;;;;;;;;;;-1:-1:-1;;;7914:22:2;;;;;;;-1:-1:-1;;;7914:22:2;;;;;;;;;7954:36;;;;;-1:-1:-1;7993:15:2;7954:54;;;:84;;;;;8032:6;8012:26;;:6;:17;;;:26;;;7954:84;7950:272;;;8076:6;8057:7;8065;8057:16;;;;;;;;:::i;:::-;;;;;;:25;;;;8121:6;8100:9;8110:7;8100:18;;;;;;;;:::i;:::-;;;;;;:27;;;;;8155:9;;;;;8194:5;8186:7;:13;8201:5;8183:25;;8245:3;;7776:484;;;-1:-1:-1;8277:7:2;;8286:9;;-1:-1:-1;6694:1609:2;-1:-1:-1;;;;;;;6694:1609:2:o;13377:320::-;22407:36;;;;;;;;;;;13584:106:::1;13600:9;;13611:1;13614:16;13632:10;13644:13;13659;13674:15;13584;:106::i;:::-;13377:320:::0;;;;;;;:::o;9989:101::-;1074:6:9;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;10056:10:2::1;:27:::0;;-1:-1:-1;;;;;;10056:27:2::1;-1:-1:-1::0;;;;;10056:27:2;;;::::1;::::0;;;::::1;::::0;;9989:101::o;1652:94:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;15775:1286:2:-;15959:9;15955:1080;15976:9;:16;15974:18;;15955:1080;;;16080:9;16069:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;16059:32;;;;;;16032:9;16042:1;16032:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;16021:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;16011:44;;;;;;:80;16008:989;;16207:15;16178:9;16188:1;16178:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16178:25:2;;;;:44;;;;:92;;;16245:9;16255:1;16245:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16245:25:2;;;;16226:15;:44;;16178:92;16170:124;;;;-1:-1:-1;;;16170:124:2;;19906:2:21;16170:124:2;;;19888:21:21;19945:2;19925:18;;;19918:30;-1:-1:-1;;;19964:18:21;;;19957:49;20023:18;;16170:124:2;19704:343:21;16170:124:2;16347:18;16368:98;;;;;;;;16373:9;16368:98;;;;16383:6;16368:98;;;;;;16391:5;16368:98;;;;16398:1;16368:98;;;;;;16401:9;16411:1;16401:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;16368:98;;;;;;16431:9;16441:1;16431:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;16431:22:2;;;;16368:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;16544:19;;16510:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;16583::2;;:5;:26;;;:35;;;;-1:-1:-1;16583:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;16583:35:2;;;;;;;;;;-1:-1:-1;;16583:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16583:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;16583:35:2;-1:-1:-1;;;;;;;;16583:35:2;;;;;;;-1:-1:-1;;;;16583:35:2;;-1:-1:-1;;;16583:35:2;;;;;;-1:-1:-1;;;;16583:35:2;-1:-1:-1;;;16583:35:2;;;;;-1:-1:-1;;;;16583:35:2;;;;;-1:-1:-1;;;16583:35:2;;;;;;;;;;;;16636:19;:22;;-1:-1:-1;;16636:22:2;;16583:35;;16636:22;:::i;:::-;;;;-1:-1:-1;16760:24:2;;-1:-1:-1;16760:15:2;16778:6;16760:24;:::i;:::-;16713:9;16723:1;16713:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;16832:9;:12;;16862:1;;16832:9;16842:1;;16832:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;16802:9;16812:1;16802:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;16887:72;16901:6;16929:1;16908:19;;:22;;;;:::i;:::-;16932:9;16943:15;16887:72;;;;;;;;;:::i;:::-;;;;;;;;16977:5;;;16008:989;17020:3;;15955:1080;;;;15775:1286;;;:::o;4983:969::-;5050:7;5091:14;;5078:10;:27;5070:56;;;;-1:-1:-1;;;5070:56:2;;23407:2:21;5070:56:2;;;23389:21:21;23446:2;23426:18;;;23419:30;-1:-1:-1;;;23465:18:21;;;23458:46;23521:18;;5070:56:2;23205:340:21;5070:56:2;5163:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5163:34:2;;;;5145:15;:52;5136:85;;;;-1:-1:-1;;;5136:85:2;;23752:2:21;5136:85:2;;;23734:21:21;23791:2;23771:18;;;23764:30;-1:-1:-1;;;23810:18:21;;;23803:49;23869:18;;5136:85:2;23550:343:21;5136:85:2;5341:19;5370:25;5405:11;5432:9;5428:445;5448:21;;;;:9;:21;;;;;:37;;;;;5445:40;;5428:445;;;5544:21;;;;:9;:21;;;;;5577:17;;5544:27;;5572:1;5544:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5541:322;;;5634:21;;;;:9;:21;;;;;:27;;5662:1;5634:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5614:50;;;;5696:1;5682:15;;5719:3;5724:1;5719:6;5715:23;;5735:1;5729:7;;5715:23;5541:322;;;5773:21;;;;:9;:21;;;;;5807:17;;5773:27;;5801:1;5773:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5770:93;;5847:1;5843:5;;5770:93;5487:3;;;;:::i;:::-;;;;5428:445;;;-1:-1:-1;5890:6:2;;5882:35;;;;-1:-1:-1;;;5882:35:2;;24240:2:21;5882:35:2;;;24222:21:21;24279:2;24259:18;;;24252:30;-1:-1:-1;;;24298:18:21;;;24291:46;24354:18;;5882:35:2;24038:340:21;5882:35:2;-1:-1:-1;5934:11:2;;4983:969;-1:-1:-1;;;4983:969:2:o;11898:664::-;22298:31;;-1:-1:-1;;;22298:31:2;;24585:2:21;22298:31:2;;;24567:21:21;24624:2;24604:18;;;24597:30;-1:-1:-1;;;24643:18:21;;;24636:44;24697:18;;22298:31:2;24383:338:21;2783:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2783:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2783:38:2;-1:-1:-1;2783:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;;-1:-1:-1;;;2783:38:2;;;;;:::o;4470:112::-;4531:11;;:::i;:::-;4561:14;;;;:5;:14;;;;;;;4554:21;;;;;;;;;;;;4561:14;;4554:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;-1:-1:-1;;4554:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;-1:-1:-1;;;;;4554:21:2;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;;;-1:-1:-1;;4470:112:2:o;8379:1500::-;8450:15;8477:13;;8500:544;8520:9;:16;8517:19;;8500:544;;;8602:15;8555:9;8565:1;8555:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;8662:15;8633:9;8643:1;8633:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8633:25:2;;;;:44;;8555:122;:169;;;;;8709:15;8681:9;8691:1;8681:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8681:25:2;;;;:43;8555:169;:216;;;;;8770:1;8740:9;8750:1;8740:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;8740:27:2;;;;:31;8555:216;8552:285;;;8814:7;;;;;8552:285;9029:3;;8500:544;;;;9101:5;9108:1;9101:8;9097:139;;9151:15;;;9164:1;9151:15;;;;;;;;;9125:24;;9151:15;;;;;;;;;;;;;;;;;;;;9125:41;;9180:16;;;;;;;;;;;;:8;9189:1;9180:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;9217:8;8379:1500;-1:-1:-1;;;8379:1500:2:o;9097:139::-;9246:23;9285:5;-1:-1:-1;;;;;9272:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9246:45;;9301:15;9334:9;9330:519;9350:9;:16;9347:19;;9330:519;;;9432:15;9385:9;9395:1;9385:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9492:15;9463:9;9473:1;9463:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9463:25:2;;;;:44;;9385:122;:169;;;;;9539:15;9511:9;9521:1;9511:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9511:25:2;;;;:43;9385:169;:216;;;;;9600:1;9570:9;9580:1;9570:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9570:27:2;;;;:31;9385:216;9382:429;;;9653:9;9663:1;9653:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;9634:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;9642;9634:16;;;;;;;;:::i;:::-;;;;;;:40;;;;9702:9;;;;;9744:5;9733:7;:16;9730:67;9773:5;9730:67;;9834:3;;9330:519;;;-1:-1:-1;9865:7:2;;8379:1500;-1:-1:-1;;;;8379:1500:2:o;12608:762::-;12827:1:::1;12808:16;:20;;;:46;;;;;12851:3;12832:16;:22;;;12808:46;12800:84;;;::::0;-1:-1:-1;;;12800:84:2;;26335:2:21;12800:84:2::1;::::0;::::1;26317:21:21::0;26374:2;26354:18;;;26347:30;26413:27;26393:18;;;26386:55;26458:18;;12800:84:2::1;26133:349:21::0;12800:84:2::1;12912:1;12894:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;12984:14:2::1;::::0;12944:27:::1;12974:25:::0;;;:9:::1;:25;::::0;;;;13013:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;13066:39:2;13013;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;13066:39:2;;;;;-1:-1:-1;;;13066:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;13119:26:2;::::1;:45:::0;;-1:-1:-1;;13119:45:2::1;;::::0;::::1;;::::0;;12974:25;13178:31:::1;13200:9:::0;;12974:25;13178:31:::1;:::i;:::-;;13220:112;13236:9;;13254:14;;13271:1;13274:10;13286:13;13301;13316:15;13220;:112::i;:::-;12790:580;12608:762:::0;;;;;;;:::o;14641:1128::-;14716:27;14746:49;14770:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;14746:49:2;14716:79;;14805:18;;:::i;:::-;14833:14;;14944:766;14966:19;14962:1;:23;14944:766;;;15019:48;15039:24;15065:1;15019:19;:48::i;:::-;15011:57;15091:13;;;:5;:13;;;;;;;15082:22;;;;;;;;;;15011:57;;-1:-1:-1;15082:22:2;;;;15091:13;;15082:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15082:22:2;;;-1:-1:-1;;15082:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15082:22:2;;-1:-1:-1;;;;;15082:22:2;;;;;-1:-1:-1;;;15082:22:2;;;;;;;;;;-1:-1:-1;;;15082:22:2;;;;;;;-1:-1:-1;;;15082:22:2;;;;;;;;;15122:36;;;;;-1:-1:-1;15161:15:2;15122:54;;;:80;;;;;15196:6;15180;:12;;;:22;;;;15122:80;:109;;;;;15225:6;15206;:16;;;:25;;;;15122:109;15118:554;;;15410:34;;;:17;;;:34;15526:16;;15508:34;;:15;:34;:::i;:::-;15462:81;;:36;;;:81;15561:13;;;;:5;:13;;;;;:22;;15462:6;;15561:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;15561:22:2;;;;;;;;;;-1:-1:-1;;15561:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15561:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;15561:22:2;-1:-1:-1;;;;;;;;15561:22:2;;;;;;;-1:-1:-1;;;;15561:22:2;;-1:-1:-1;;;15561:22:2;;;;;;-1:-1:-1;;;;15561:22:2;-1:-1:-1;;;15561:22:2;;;;;-1:-1:-1;;;;15561:22:2;;;;;-1:-1:-1;;;15561:22:2;;;;;;;;;;;;-1:-1:-1;15643:13:2;;;:5;:13;;;;;;;15606:51;;;;;;15627:6;;15643:13;;15606:51;:::i;:::-;;;;;;;;15118:554;15695:3;;14944:766;;;;14706:1063;;;14641:1128;:::o;18276:3620::-;18440:10;;:26;;-1:-1:-1;;;18440:26:2;;;;;9183:25:21;;;18470:10:2;;-1:-1:-1;;;;;18440:10:2;;:18;;9156::21;;18440:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18440:40:2;;:77;;;;-1:-1:-1;18484:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;18484:25:2;;;;:33;;18440:77;18432:122;;;;-1:-1:-1;;;18432:122:2;;29362:2:21;18432:122:2;;;29344:21:21;;;29381:18;;;29374:30;29440:34;29420:18;;;29413:62;29492:18;;18432:122:2;29160:356:21;18432:122:2;18589:1;18572:7;:14;:18;18564:27;;;;;;18602:19;18624:14;;;:5;:14;;;;;19195:16;;;;18624:14;;18602:19;-1:-1:-1;;;19195:16:2;;;;:20;19192:205;;19235:9;19231:156;19254:7;:14;19250:1;:18;19231:156;;;19328:7;19336:1;19328:10;;;;;;;;:::i;:::-;;;;;;;19311:28;;;;;;16582:19:21;;16626:2;16617:12;;16453:182;19311:28:2;;;;;;;;;;;;;19301:39;;;;;;19288:7;19296:1;19288:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19368:3;;19231:156;;;;19192:205;19406:14;19450:7;19433:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19423:36;;;;;;19406:53;;19470:19;19507:6;19492;:11;;;:21;:29;;19520:1;19492:29;;;19516:1;19492:29;19567:12;;;;;19537:76;;;29773:25:21;;;19567:12:2;;;;29829:2:21;29814:18;;29807:53;29876:18;;29869:34;;;29934:2;29919:18;;29912:34;;;19470:51:2;;;;;19598:14;;;29977:3:21;29962:19;;29955:51;19470::2;-1:-1:-1;19537:76:2;;29760:3:21;29745:19;19537:76:2;;;;;;;19628:11;19642:1;19628:15;19624:2266;;19738:14;;;;19722:13;;19738:16;;19753:1;;-1:-1:-1;;;19738:14:2;;-1:-1:-1;;;;;19738:14:2;:16;:::i;:::-;19808:10;;19827:17;;;;;19808:37;;-1:-1:-1;;;19808:37:2;;-1:-1:-1;;;19827:17:2;;;;;19808:37;;;30467:38:21;;;;-1:-1:-1;;;;;19722:32:2;;;;;-1:-1:-1;19768:29:2;;-1:-1:-1;;;;;19808:10:2;;;;:18;;30440::21;;19808:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19915:10;;;19937:12;;;19951:16;;;;;19915:53;;-1:-1:-1;;;19915:53:2;;19937:12;;;;19915:53;;;30688:44:21;;;;19915:10:2;19951:16;;;;30748:18:21;;;30741:49;19768:78:2;;-1:-1:-1;;;;;;19915:10:2;;:21;;30661:18:21;;19915:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19982:10:2;;20004:17;;;;;20023:25;;19982:67;;-1:-1:-1;;;19982:67:2;;-1:-1:-1;;;20004:17:2;;;;;19982:67;;;30974:38:21;;;;31028:18;;;31021:34;;;;-1:-1:-1;;;;;19982:10:2;;;;-1:-1:-1;19982:21:2;;-1:-1:-1;30947:18:21;;19982:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20064:14:2;;;:16;;-1:-1:-1;;20064:16:2;;;-1:-1:-1;20079:1:2;20130:14;;;:5;:14;;;;;;20123:21;20130:14;20079:1;20123:21;:::i;:::-;-1:-1:-1;20123:21:2;;;;;-1:-1:-1;;20123:21:2;;;-1:-1:-1;20123:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20123:21:2;;;20230:36;;-1:-1:-1;;;;;;;20230:18:2;;;20256:5;;-1:-1:-1;20230:36:2;-1:-1:-1;20230:36:2;20256:5;20230:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20197:69;;;;20288:4;20280:37;;;;-1:-1:-1;;;20280:37:2;;;;;;;:::i;:::-;20379:33;;:10;;20402:5;;20379:33;;;;20402:5;20379:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20364:48:2;;-1:-1:-1;20364:48:2;-1:-1:-1;20364:48:2;20426:37;;;;-1:-1:-1;;;20426:37:2;;;;;;;:::i;:::-;19644:831;;;;19624:2266;;;20657:6;20637;:18;;;:26;20634:1246;;20698:14;;;;20682:13;;20698:16;;20713:1;;-1:-1:-1;;;20698:14:2;;-1:-1:-1;;;;;20698:14:2;:16;:::i;:::-;20770:10;;20789:16;;;;;20770:36;;-1:-1:-1;;;20770:36:2;;-1:-1:-1;;;20789:16:2;;;;;20770:36;;;30467:38:21;;;;-1:-1:-1;;;;;20682:32:2;;;;;-1:-1:-1;20732:27:2;;-1:-1:-1;;;;;20770:10:2;;;;:18;;30440::21;;20770:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20826:10;;20848:16;;;;;20866:25;;20826:66;;-1:-1:-1;;;20826:66:2;;-1:-1:-1;;;20848:16:2;;;;;20826:66;;;30974:38:21;;;;31028:18;;;31021:34;;;;20732:75:2;;-1:-1:-1;;;;;;20826:10:2;;:21;;30947:18:21;;20826:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20910:10:2;;20940:25;;20910:56;;-1:-1:-1;;;20910:56:2;;;;;31799:25:21;;;31840:18;;;31833:34;;;;-1:-1:-1;;;;;20910:10:2;;;;-1:-1:-1;20910:21:2;;-1:-1:-1;31772:18:21;;20910:56:2;31625:248:21;20634:1246:2;21595:14;;;;21579:13;21634:14;;;:5;:14;;;;;-1:-1:-1;;;21595:14:2;;;-1:-1:-1;;;;;21595:14:2;;21634;21627:21;21634:14;21579:13;21627:21;:::i;:::-;-1:-1:-1;21627:21:2;;;;;-1:-1:-1;;21627:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21627:21:2;;;;21699:7;1074:6:9;;-1:-1:-1;;;;;1074:6:9;;1001:87;21699:7:2;-1:-1:-1;;;;;21699:12:2;21719:5;21699:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21666:63;;;;21805:4;21797:37;;;;-1:-1:-1;;;21797:37:2;;;;;;;:::i;:::-;21473:407;;;18372:3524;;;;18276:3620;;;:::o;1901:192:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:9;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:9;;32080:2:21;1982:73:9::1;::::0;::::1;32062:21:21::0;32119:2;32099:18;;;32092:30;32158:34;32138:18;;;32131:62;-1:-1:-1;;;32209:18:21;;;32202:36;32255:19;;1982:73:9::1;31878:402:21::0;1982:73:9::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;5999:688:2:-;6074:4;6090:27;6120:49;6144:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6120:49:2;6090:79;;6179:18;;:::i;:::-;6323:9;6319:340;6341:19;6337:1;:23;6319:340;;;6386:5;:63;6400:47;6420:24;6445:1;6400:19;:47::i;:::-;6392:56;;6386:63;;;;;;;;;;;6377:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;-1:-1:-1;;6377:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;-1:-1:-1;;;;;6377:72:2;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;6467:36;;;;;-1:-1:-1;6506:15:2;6467:54;;;:80;;;;;6541:6;6525;:12;;;:22;;;;6467:80;:109;;;;;6570:6;6551;:16;;;:25;;;;6467:109;6463:158;;;-1:-1:-1;6602:4:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;6463:158::-;6644:3;;6319:340;;;-1:-1:-1;6675:5:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;10216:1221::-;10298:9;10294:1137;10313:9;:16;10311:18;;10294:1137;;;10429:9;10412:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;10402:38;;;;;;10375:9;10385:1;10375:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10358:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;10348:50;;;;;;:92;10345:1048;;10523:27;10553:9;10563:1;10553:12;;;;;;;;:::i;:::-;;;;;;;;;;;10523:42;;10583:34;10620:9;10647:1;10630:9;:16;;;;:18;;;;:::i;:::-;10620:29;;;;;;;;:::i;:::-;;;;;;;;;;;10583:66;;10778:17;10765:30;;10820:9;10847:1;10830:9;:16;;;;:18;;;;:::i;:::-;10820:29;;;;;;;;:::i;:::-;;;;;;;;;;;;10813:36;;;;;;;;:::i;:::-;-1:-1:-1;10813:36:2;;;;-1:-1:-1;;;;;;10813:36:2;;;11326:9;11336:16;;:18;;10813:36;;11336:18;:::i;:::-;11326:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11319:36;;;;;;;;:::i;:::-;-1:-1:-1;11319:36:2;;;;-1:-1:-1;;;;;;11319:36:2;;;-1:-1:-1;11373:5:2;;-1:-1:-1;11373:5:2;10345:1048;11416:3;;10294:1137;;;;10216:1221;:::o;4588:389::-;4649:15;4697:14;;4684:10;:27;4676:56;;;;-1:-1:-1;;;4676:56:2;;23407:2:21;4676:56:2;;;23389:21:21;23446:2;23426:18;;;23419:30;-1:-1:-1;;;23465:18:21;;;23458:46;23521:18;;4676:56:2;23205:340:21;4676:56:2;4742:25;4783:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;4770:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4770:51:2;;4742:79;;4835:9;4831:114;4853:9;:16;4850:1;:19;4831:114;;;4904:21;;;;:9;:21;;;;;:27;;4932:1;4904:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4889:9;4899:1;4889:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4871:3;;;;:::i;:::-;;;;4831:114;;;-1:-1:-1;4961:9:2;4588:389;-1:-1:-1;;4588:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;13703:931:2:-;13944:9;:16;;13970;;;;;;13918:23;13970:16;;;13944;;:9;:16;;14027:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;14067:20:2;;;:31;14089:9;;14067:20;:31;:::i;:::-;;14133:5;14112:11;:18;;;:26;;;;;;;;;;;;;;;;;;14177:11;14152;:22;;;:36;;;;;;;;;;;;;;;;;;14232:16;14202:11;:27;;;:46;;;;;;;;;;;;;;;;;;14286:10;14262:11;:21;;;:34;;;;;;;;;;;;;;;;;;14337:13;14310:11;:24;;;:40;;;;;;;;;;;;;;;;;;14391:13;14364:11;:24;;;:40;;;;;;;;;;;;;;;;;;14447:15;14418:11;:26;;;:44;;;;;;;;;;;;;;;;;;14508:119;14527:9;;14538:11;14551:16;14569:10;14581:13;14596;14611:15;14508:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;13908:726;;13703:931;;;;;;;;:::o;2101:173:9:-;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;34818:2:21;35401:87:0;;;34800:21:21;34857:2;34837:18;;;34830:30;34896:34;34876:18;;;34869:62;-1:-1:-1;;;34947:18:21;;;34940:38;34995:19;;35401:87:0;34616:404:21;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;35227:2:21;26359:106:0;;;35209:21:21;35266:2;35246:18;;;35239:30;35305:34;35285:18;;;35278:62;-1:-1:-1;;;35356:18:21;;;35349:37;35403:19;;26359:106:0;35025:403:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:21;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:21;;14:180;-1:-1:-1;14:180:21:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:21;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:21;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:21:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:21;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:21:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:21;1729:40;;-1:-1:-1;;;;;1784:34:21;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:21:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:21;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:21:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:21;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:21;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:21:o;4225:165::-;4292:20;;4352:12;4341:24;;4331:35;;4321:63;;4380:1;4377;4370:12;4321:63;4225:165;;;:::o;4395:184::-;4453:6;4506:2;4494:9;4485:7;4481:23;4477:32;4474:52;;;4522:1;4519;4512:12;4474:52;4545:28;4563:9;4545:28;:::i;:::-;4535:38;4395:184;-1:-1:-1;;;4395:184:21:o;4695:1175::-;4742:3;4770:6;4811:5;4805:12;4838:2;4833:3;4826:15;4862:45;4903:2;4898:3;4894:12;4880;4862:45;:::i;:::-;4850:57;;;4955:4;4948:5;4944:16;4938:23;4970:49;5013:4;5008:3;5004:14;4988;896:12;885:24;873:37;;820:96;4970:49;;5068:4;5061:5;5057:16;5051:23;5044:4;5039:3;5035:14;5028:47;5124:4;5117:5;5113:16;5107:23;5100:4;5095:3;5091:14;5084:47;5179:4;5172:5;5168:16;5162:23;5194:48;5236:4;5231:3;5227:14;5211;3274:4;3263:16;3251:29;;3207:75;5194:48;;5290:4;5283:5;5279:16;5273:23;5305:49;5348:4;5343:3;5339:14;5323;3363:8;3352:20;3340:33;;3287:92;5305:49;;5402:4;5395:5;5391:16;5385:23;5417:49;5460:4;5455:3;5451:14;5435;-1:-1:-1;;;;;4649:34:21;4637:47;;4584:106;5417:49;;5514:4;5507:5;5503:16;5497:23;5529:49;5572:4;5567:3;5563:14;5547;801:6;790:18;778:31;;725:90;5529:49;-1:-1:-1;5597:6:21;5640:14;;;5634:21;801:6;790:18;5698:12;;;778:31;5730:6;5773:14;;;5767:21;896:12;885:24;;5831:12;;;873:37;5797:47;820:96;5875:1357;6135:4;6183:2;6172:9;6168:18;6213:2;6202:9;6195:21;6236:6;6271;6265:13;6302:6;6294;6287:22;6340:2;6329:9;6325:18;6318:25;;6402:2;6392:6;6389:1;6385:14;6374:9;6370:30;6366:39;6352:53;;6424:4;6463:2;6455:6;6451:15;6484:1;6494:260;6508:6;6505:1;6502:13;6494:260;;;6601:2;6597:7;6585:9;6577:6;6573:22;6569:36;6564:3;6557:49;6629:45;6667:6;6658;6652:13;6629:45;:::i;:::-;6619:55;-1:-1:-1;6732:12:21;;;;6697:15;;;;6530:1;6523:9;6494:260;;;-1:-1:-1;;6790:22:21;;;6770:18;;;6763:50;6866:13;;6888:24;;;6970:15;;;;6930;;;-1:-1:-1;6866:13:21;-1:-1:-1;7005:1:21;7015:189;7031:8;7026:3;7023:17;7015:189;;;7100:15;;7086:30;;7177:17;;;;7138:14;;;;7059:1;7050:11;7015:189;;;-1:-1:-1;7221:5:21;;5875:1357;-1:-1:-1;;;;;;;5875:1357:21:o;7237:348::-;7289:8;7299:6;7353:3;7346:4;7338:6;7334:17;7330:27;7320:55;;7371:1;7368;7361:12;7320:55;-1:-1:-1;7394:20:21;;-1:-1:-1;;;;;7426:30:21;;7423:50;;;7469:1;7466;7459:12;7423:50;7506:4;7498:6;7494:17;7482:29;;7558:3;7551:4;7542:6;7534;7530:19;7526:30;7523:39;7520:59;;;7575:1;7572;7565:12;7520:59;7237:348;;;;;:::o;7590:161::-;7657:20;;7717:8;7706:20;;7696:31;;7686:59;;7741:1;7738;7731:12;7756:159;7823:20;;7883:6;7872:18;;7862:29;;7852:57;;7905:1;7902;7895:12;7920:859;8030:6;8038;8046;8054;8062;8070;8078;8131:3;8119:9;8110:7;8106:23;8102:33;8099:53;;;8148:1;8145;8138:12;8099:53;8188:9;8175:23;-1:-1:-1;;;;;8213:6:21;8210:30;8207:50;;;8253:1;8250;8243:12;8207:50;8292:59;8343:7;8334:6;8323:9;8319:22;8292:59;:::i;:::-;8370:8;;-1:-1:-1;8266:85:21;-1:-1:-1;;8455:2:21;8440:18;;8427:32;8499:4;8488:16;;8478:27;;8468:55;;8519:1;8516;8509:12;8468:55;8542:5;-1:-1:-1;8566:37:21;8599:2;8584:18;;8566:37;:::i;:::-;8556:47;;8622:37;8655:2;8644:9;8640:18;8622:37;:::i;:::-;8612:47;;8678:38;8711:3;8700:9;8696:19;8678:38;:::i;:::-;8668:48;;8735:38;8768:3;8757:9;8753:19;8735:38;:::i;:::-;8725:48;;7920:859;;;;;;;;;;:::o;8784:248::-;8852:6;8860;8913:2;8901:9;8892:7;8888:23;8884:32;8881:52;;;8929:1;8926;8919:12;8881:52;-1:-1:-1;;8952:23:21;;;9022:2;9007:18;;;8994:32;;-1:-1:-1;8784:248:21:o;9219:131::-;-1:-1:-1;;;;;9294:31:21;;9284:42;;9274:70;;9340:1;9337;9330:12;9355:247;9414:6;9467:2;9455:9;9446:7;9442:23;9438:32;9435:52;;;9483:1;9480;9473:12;9435:52;9522:9;9509:23;9541:31;9566:5;9541:31;:::i;9607:531::-;9650:5;9703:3;9696:4;9688:6;9684:17;9680:27;9670:55;;9721:1;9718;9711:12;9670:55;9757:6;9744:20;-1:-1:-1;;;;;9779:2:21;9776:26;9773:52;;;9805:18;;:::i;:::-;9849:55;9892:2;9873:13;;-1:-1:-1;;9869:27:21;9898:4;9865:38;9849:55;:::i;:::-;9929:2;9920:7;9913:19;9975:3;9968:4;9963:2;9955:6;9951:15;9947:26;9944:35;9941:55;;;9992:1;9989;9982:12;9941:55;10057:2;10050:4;10042:6;10038:17;10031:4;10022:7;10018:18;10005:55;10105:1;10080:16;;;10098:4;10076:27;10069:38;;;;10084:7;9607:531;-1:-1:-1;;;9607:531:21:o;10143:462::-;10229:6;10237;10245;10298:2;10286:9;10277:7;10273:23;10269:32;10266:52;;;10314:1;10311;10304:12;10266:52;10354:9;10341:23;-1:-1:-1;;;;;10379:6:21;10376:30;10373:50;;;10419:1;10416;10409:12;10373:50;10442;10484:7;10475:6;10464:9;10460:22;10442:50;:::i;:::-;10432:60;;;10539:2;10528:9;10524:18;10511:32;10501:42;;10562:37;10595:2;10584:9;10580:18;10562:37;:::i;:::-;10552:47;;10143:462;;;;;:::o;10610:316::-;10687:6;10695;10703;10756:2;10744:9;10735:7;10731:23;10727:32;10724:52;;;10772:1;10769;10762:12;10724:52;-1:-1:-1;;10795:23:21;;;10865:2;10850:18;;10837:32;;-1:-1:-1;10916:2:21;10901:18;;;10888:32;;10610:316;-1:-1:-1;10610:316:21:o;10931:1018::-;11279:4;11308:3;11338:2;11327:9;11320:21;11358:45;11399:2;11388:9;11384:18;11376:6;11358:45;:::i;:::-;11422:12;11470:15;;;11465:2;11450:18;;11443:43;11517:2;11502:18;;11495:34;;;;-1:-1:-1;;11560:2:21;11545:18;;11538:34;;;;11621:4;11609:17;;;;11603:3;11588:19;;11581:46;11676:8;11664:21;;;;11658:3;11643:19;;11636:50;-1:-1:-1;;;;;11723:35:21;;;;11717:3;11702:19;;11695:64;11778:6;11821:15;;;11815:3;11800:19;;11793:44;11874:15;11868:3;11853:19;;11846:44;11927:15;;;11921:3;11906:19;;;11899:44;;;;11350:53;10931:1018;-1:-1:-1;10931:1018:21:o;12162:245::-;12331:2;12320:9;12313:21;12294:4;12351:50;12397:2;12386:9;12382:18;12374:6;12351:50;:::i;12412:803::-;12574:4;12603:2;12643;12632:9;12628:18;12673:2;12662:9;12655:21;12696:6;12731;12725:13;12762:6;12754;12747:22;12800:2;12789:9;12785:18;12778:25;;12862:2;12852:6;12849:1;12845:14;12834:9;12830:30;12826:39;12812:53;;12900:2;12892:6;12888:15;12921:1;12931:255;12945:6;12942:1;12939:13;12931:255;;;13038:2;13034:7;13022:9;13014:6;13010:22;13006:36;13001:3;12994:49;13066:40;13099:6;13090;13084:13;13066:40;:::i;:::-;13056:50;-1:-1:-1;13164:12:21;;;;13129:15;;;;12967:1;12960:9;12931:255;;;-1:-1:-1;13203:6:21;;12412:803;-1:-1:-1;;;;;;;12412:803:21:o;13220:774::-;13331:6;13339;13347;13355;13363;13371;13379;13432:3;13420:9;13411:7;13407:23;13403:33;13400:53;;;13449:1;13446;13439:12;13400:53;13489:9;13476:23;-1:-1:-1;;;;;13514:6:21;13511:30;13508:50;;;13554:1;13551;13544:12;13508:50;13593:59;13644:7;13635:6;13624:9;13620:22;13593:59;:::i;:::-;13671:8;;-1:-1:-1;13567:85:21;-1:-1:-1;13725:37:21;;-1:-1:-1;13758:2:21;13743:18;;13725:37;:::i;14280:484::-;14382:6;14390;14398;14451:2;14439:9;14430:7;14426:23;14422:32;14419:52;;;14467:1;14464;14457:12;14419:52;14503:9;14490:23;14480:33;;14560:2;14549:9;14545:18;14532:32;14522:42;;14615:2;14604:9;14600:18;14587:32;-1:-1:-1;;;;;14634:6:21;14631:30;14628:50;;;14674:1;14671;14664:12;14628:50;14697:61;14750:7;14741:6;14730:9;14726:22;14697:61;:::i;:::-;14687:71;;;14280:484;;;;;:::o;14961:322::-;15030:6;15083:2;15071:9;15062:7;15058:23;15054:32;15051:52;;;15099:1;15096;15089:12;15051:52;15139:9;15126:23;-1:-1:-1;;;;;15164:6:21;15161:30;15158:50;;;15204:1;15201;15194:12;15158:50;15227;15269:7;15260:6;15249:9;15245:22;15227:50;:::i;:::-;15217:60;14961:322;-1:-1:-1;;;;14961:322:21:o;15288:643::-;15457:2;15509:21;;;15579:13;;15482:18;;;15601:22;;;15428:4;;15457:2;15680:15;;;;15654:2;15639:18;;;15428:4;15723:182;15737:6;15734:1;15731:13;15723:182;;;15802:13;;15817:6;15798:26;15786:39;;15880:15;;;;15845:12;;;;15759:1;15752:9;15723:182;;;-1:-1:-1;15922:3:21;;15288:643;-1:-1:-1;;;;;;15288:643:21:o;15936:380::-;16015:1;16011:12;;;;16058;;;16079:61;;16133:4;16125:6;16121:17;16111:27;;16079:61;16186:2;16178:6;16175:14;16155:18;16152:38;16149:161;;16232:10;16227:3;16223:20;16220:1;16213:31;16267:4;16264:1;16257:15;16295:4;16292:1;16285:15;16149:161;;15936:380;;;:::o;16321:127::-;16382:10;16377:3;16373:20;16370:1;16363:31;16413:4;16410:1;16403:15;16437:4;16434:1;16427:15;16640:543;16858:13;;16801:3;;16832;;16911:4;16938:15;;;16801:3;16981:175;16995:6;16992:1;16989:13;16981:175;;;17058:13;;17044:28;;17094:14;;;;17131:15;;;;17017:1;17010:9;16981:175;;;-1:-1:-1;17172:5:21;;16640:543;-1:-1:-1;;;;;;16640:543:21:o;17188:443::-;17413:6;17402:9;17395:25;17470:6;17463:14;17456:22;17451:2;17440:9;17436:18;17429:50;17515:6;17510:2;17499:9;17495:18;17488:34;17558:3;17553:2;17542:9;17538:18;17531:31;17376:4;17579:46;17620:3;17609:9;17605:19;17597:6;17579:46;:::i;:::-;17571:54;17188:443;-1:-1:-1;;;;;;17188:443:21:o;17985:356::-;18187:2;18169:21;;;18206:18;;;18199:30;18265:34;18260:2;18245:18;;18238:62;18332:2;18317:18;;17985:356::o;18346:220::-;18495:2;18484:9;18477:21;18458:4;18515:45;18556:2;18545:9;18541:18;18533:6;18515:45;:::i;18697:772::-;18747:3;18788:5;18782:12;18817:36;18843:9;18817:36;:::i;:::-;18862:19;;;18900:4;18923:1;18940:18;;;18967:146;;;;19127:1;19122:341;;;;18933:530;;18967:146;-1:-1:-1;;19009:24:21;;18995:12;;;18988:46;19081:14;;19074:22;19071:1;19067:30;19058:40;;19054:49;;;-1:-1:-1;18967:146:21;;19122:341;19153:5;19150:1;19143:16;19200:2;19197:1;19187:16;19225:1;19239:174;19253:6;19250:1;19247:13;19239:174;;;19340:14;;19322:11;;;19318:20;;19311:44;19383:16;;;;19268:10;;19239:174;;;19437:11;;19433:20;;;-1:-1:-1;;18933:530:21;;;;;;18697:772;;;;:::o;19474:225::-;19620:2;19609:9;19602:21;19583:4;19640:53;19689:2;19678:9;19674:18;19666:6;19640:53;:::i;20052:545::-;20154:2;20149:3;20146:11;20143:448;;;20190:1;20215:5;20211:2;20204:17;20260:4;20256:2;20246:19;20330:2;20318:10;20314:19;20311:1;20307:27;20301:4;20297:38;20366:4;20354:10;20351:20;20348:47;;;-1:-1:-1;20389:4:21;20348:47;20444:2;20439:3;20435:12;20432:1;20428:20;20422:4;20418:31;20408:41;;20499:82;20517:2;20510:5;20507:13;20499:82;;;20562:17;;;20543:1;20532:13;20499:82;;;20503:3;;;20143:448;20052:545;;;:::o;20773:1352::-;20899:3;20893:10;-1:-1:-1;;;;;20918:6:21;20915:30;20912:56;;;20948:18;;:::i;:::-;20977:97;21067:6;21027:38;21059:4;21053:11;21027:38;:::i;:::-;21021:4;20977:97;:::i;:::-;21129:4;;21193:2;21182:14;;21210:1;21205:663;;;;21912:1;21929:6;21926:89;;;-1:-1:-1;21981:19:21;;;21975:26;21926:89;-1:-1:-1;;20730:1:21;20726:11;;;20722:24;20718:29;20708:40;20754:1;20750:11;;;20705:57;22028:81;;21175:944;;21205:663;18644:1;18637:14;;;18681:4;18668:18;;-1:-1:-1;;21241:20:21;;;21359:236;21373:7;21370:1;21367:14;21359:236;;;21462:19;;;21456:26;21441:42;;21554:27;;;;21522:1;21510:14;;;;21389:19;;21359:236;;;21363:3;21623:6;21614:7;21611:19;21608:201;;;21684:19;;;21678:26;-1:-1:-1;;21767:1:21;21763:14;;;21779:3;21759:24;21755:37;21751:42;21736:58;21721:74;;21608:201;-1:-1:-1;;;;;21855:1:21;21839:14;;;21835:22;21822:36;;-1:-1:-1;20773:1352:21:o;22130:127::-;22191:10;22186:3;22182:20;22179:1;22172:31;22222:4;22219:1;22212:15;22246:4;22243:1;22236:15;22262:128;22302:3;22333:1;22329:6;22326:1;22323:13;22320:39;;;22339:18;;:::i;:::-;-1:-1:-1;22375:9:21;;22262:128::o;22395:217::-;22434:4;22463:6;22519:10;;;;22489;;22541:12;;;22538:38;;;22556:18;;:::i;:::-;22593:13;;22395:217;-1:-1:-1;;;22395:217:21:o;22617:125::-;22657:4;22685:1;22682;22679:8;22676:34;;;22690:18;;:::i;:::-;-1:-1:-1;22727:9:21;;22617:125::o;22747:453::-;22991:12;22983:6;22979:25;22968:9;22961:44;23041:6;23036:2;23025:9;23021:18;23014:34;23084:3;23079:2;23068:9;23064:18;23057:31;22942:4;23105:46;23146:3;23135:9;23131:19;23123:6;23105:46;:::i;:::-;23097:54;;23187:6;23182:2;23171:9;23167:18;23160:34;22747:453;;;;;;;:::o;23898:135::-;23937:3;23958:17;;;23955:43;;23978:18;;:::i;:::-;-1:-1:-1;24025:1:21;24014:13;;23898:135::o;24726:251::-;24796:6;24849:2;24837:9;24828:7;24824:23;24820:32;24817:52;;;24865:1;24862;24855:12;24817:52;24897:9;24891:16;24916:31;24941:5;24916:31;:::i;26487:1206::-;-1:-1:-1;;;;;26606:3:21;26603:27;26600:53;;;26633:18;;:::i;:::-;26662:94;26752:3;26712:38;26744:4;26738:11;26712:38;:::i;:::-;26706:4;26662:94;:::i;:::-;26782:1;26807:2;26802:3;26799:11;26824:1;26819:616;;;;27479:1;27496:3;27493:93;;;-1:-1:-1;27552:19:21;;;27539:33;27493:93;-1:-1:-1;;20730:1:21;20726:11;;;20722:24;20718:29;20708:40;20754:1;20750:11;;;20705:57;27599:78;;26792:895;;26819:616;18644:1;18637:14;;;18681:4;18668:18;;-1:-1:-1;;26855:17:21;;;26956:9;26978:229;26992:7;26989:1;26986:14;26978:229;;;27081:19;;;27068:33;27053:49;;27188:4;27173:20;;;;27141:1;27129:14;;;;27008:12;26978:229;;;26982:3;27235;27226:7;27223:16;27220:159;;;27359:1;27355:6;27349:3;27343;27340:1;27336:11;27332:21;27328:34;27324:39;27311:9;27306:3;27302:19;27289:33;27285:79;27277:6;27270:95;27220:159;;;27422:1;27416:3;27413:1;27409:11;27405:19;27399:4;27392:33;26792:895;;26487:1206;;;:::o;27833:1322::-;28055:6;28044:9;28037:25;28098:6;28093:2;28082:9;28078:18;28071:34;28141:2;28136;28125:9;28121:18;28114:30;28018:4;28163:6;28205:2;28200;28189:9;28185:18;28178:30;28231:54;28280:3;28269:9;28265:19;28257:6;28231:54;:::i;:::-;28374:4;28362:17;;28356:24;27809:12;27793:29;896:12;885:24;;28437:3;28422:19;;873:37;-1:-1:-1;28497:4:21;28485:17;;28479:24;28473:3;28458:19;;28451:53;28559:4;28547:17;;28541:24;28535:3;28520:19;;28513:53;28610:4;28598:17;;28592:24;28657:4;28642:20;;28679:3;28664:19;;3251:29;28719:1;28715:17;;;28734:8;28711:32;28760:3;28745:19;;3340:33;28800:2;28796:18;;;-1:-1:-1;;;;;28792:47:21;28856:3;28841:19;;4637:47;28880:6;28921:3;28917:19;;;28913:28;;28943:18;;;778:31;28971:68;29034:3;29023:9;29019:19;29014:2;29002:9;28997:3;28993:19;28989:28;801:6;790:18;778:31;;725:90;28971:68;-1:-1:-1;29074:3:21;29070:19;;;29091:12;29066:38;29121:3;29106:19;;873:37;-1:-1:-1;29143:6:21;27833:1322;-1:-1:-1;;;;;;27833:1322:21:o;30017:300::-;30056:1;-1:-1:-1;;;;;30131:2:21;30128:1;30124:10;30153:3;30143:134;;30199:10;30194:3;30190:20;30187:1;30180:31;30234:4;30231:1;30224:15;30262:4;30259:1;30252:15;30143:134;30295:10;;30291:20;;;;;30017:300;-1:-1:-1;;30017:300:21:o;31276:344::-;31478:2;31460:21;;;31517:2;31497:18;;;31490:30;-1:-1:-1;;;31551:2:21;31536:18;;31529:50;31611:2;31596:18;;31276:344::o;32285:276::-;32416:3;32454:6;32448:13;32470:53;32516:6;32511:3;32504:4;32496:6;32492:17;32470:53;:::i;:::-;32539:16;;;;;32285:276;-1:-1:-1;;32285:276:21:o;32566:842::-;32694:3;32723:1;32756:6;32750:13;32786:36;32812:9;32786:36;:::i;:::-;32841:1;32858:18;;;32885:133;;;;33032:1;33027:356;;;;32851:532;;32885:133;-1:-1:-1;;32918:24:21;;32906:37;;32991:14;;32984:22;32972:35;;32963:45;;;-1:-1:-1;32885:133:21;;33027:356;33058:6;33055:1;33048:17;33088:4;33133:2;33130:1;33120:16;33158:1;33172:165;33186:6;33183:1;33180:13;33172:165;;;33264:14;;33251:11;;;33244:35;33307:16;;;;33201:10;;33172:165;;;-1:-1:-1;;;33357:16:21;;;;;33399:3;-1:-1:-1;;;;;;32566:842:21:o;33413:265::-;33452:3;33480:9;;;33505:10;;-1:-1:-1;;;;;33524:27:21;;;33517:35;;33501:52;33498:78;;;33556:18;;:::i;:::-;-1:-1:-1;;;33603:19:21;;;33596:27;;33588:36;;33585:62;;;33627:18;;:::i;:::-;-1:-1:-1;;33663:9:21;;33413:265::o;33683:928::-;33996:3;33985:9;33978:22;34037:6;34031:3;34020:9;34016:19;34009:35;33959:4;34063:3;34116:6;34108;34103:2;34092:9;34088:18;34075:48;34172:1;34143:22;;;34139:31;;34132:42;34264:12;34314:15;;;34307:4;34292:20;;34285:45;34378:4;34366:17;;;;34361:2;34346:18;;34339:45;-1:-1:-1;34432:8:21;34420:21;;;;34415:2;34400:18;;34393:49;34479:15;;;34473:3;34458:19;;34451:44;34532:15;;;34526:3;34511:19;;34504:44;34597:6;34585:19;;;34579:3;34564:19;;34557:48;34235:2;34214:15;;;-1:-1:-1;;34210:29:21;34195:45;34191:54;;;-1:-1:-1;33683:928:21:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    22489
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE95D2347 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D03738 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x31AF JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP3 SWAP2 SWAP1 PUSH2 0x329B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x3440 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x3477 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0xD43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3503 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x3559 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3585 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A8 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3606 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x31AF JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3619 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x367B JUMP JUMPDEST PUSH2 0x1A56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x1B6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x448 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x1EA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x3477 JUMP JUMPDEST PUSH2 0x264D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x26E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x371A JUMP JUMPDEST PUSH2 0x28B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x512 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F57 JUMP JUMPDEST PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x53A SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x566 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x588 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x596 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x600 JUMPI PUSH2 0x600 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6A4 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x669 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x691 JUMPI PUSH2 0x691 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x634 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x37EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x709 JUMPI PUSH2 0x709 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x722 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x764 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x790 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x859 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x863 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9EB JUMPI PUSH2 0x87B PUSH1 0x5 DUP3 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x8A9 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D5 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x922 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x922 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x905 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0x9D7 JUMPI POP DUP8 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x9E3 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x868 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xA58 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA13 PUSH2 0x2EB9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA0B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP4 SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH2 0xA73 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAAC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA99 PUSH2 0x2EB9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA91 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH2 0xAC9 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xCBF JUMPI PUSH2 0xB0B PUSH1 0x5 DUP3 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP9 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xB39 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB65 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP9 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xC67 JUMPI POP DUP11 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xCB7 JUMPI DUP7 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC9D JUMPI PUSH2 0xC9D PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 ADD SWAP4 POP DUP5 DUP5 GT PUSH2 0xCBF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xAF8 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCEE DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3855 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3855 JUMP JUMPDEST PUSH2 0xD77 PUSH1 0x0 PUSH2 0x2D6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x11F7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDC0 JUMPI PUSH2 0xDC0 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x391A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x11EF JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE10 JUMPI PUSH2 0xE10 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xE74 JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE4E JUMPI PUSH2 0xE4E PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEF9 JUMPI PUSH2 0xEF9 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xFD1 SWAP1 DUP3 PUSH2 0x397C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x10D5 SWAP1 DUP5 SWAP1 PUSH2 0x3A51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10E8 SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x3A51 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1136 JUMPI PUSH2 0x1136 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x3A69 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x12EF JUMPI PUSH2 0x12EF PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x1335 JUMPI PUSH2 0x1335 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x1365 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x138E JUMPI PUSH2 0x138E PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x13B6 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x13C0 DUP2 PUSH2 0x3ADA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12AE JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x140A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1467 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1493 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x1556 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x157F SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15AB SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x17A8 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B4 JUMPI PUSH2 0x16B4 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1718 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16F3 JUMPI PUSH2 0x16F3 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1757 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1733 JUMPI PUSH2 0x1733 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1794 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1773 JUMPI PUSH2 0x1773 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x17A0 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1696 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x1814 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17C8 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1802 JUMPI PUSH2 0x1802 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182E PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1861 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x184C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1A4C JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1886 JUMPI PUSH2 0x1886 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x18EA JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18C5 JUMPI PUSH2 0x18C5 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1929 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1905 JUMPI PUSH2 0x1905 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1966 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1A44 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x197E JUMPI PUSH2 0x197E PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x199A SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19C6 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A13 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A13 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A2A JUMPI PUSH2 0x1A2A PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x1A4C JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1868 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1A6F JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1ABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1ACE SWAP2 SWAP1 PUSH2 0x3A51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1B4D DUP9 DUP11 DUP4 PUSH2 0x3B10 JUMP JUMPDEST POP PUSH2 0x1B61 DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2BEB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B90 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1BA7 PUSH1 0x5 DUP3 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1BD5 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C01 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C4E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C23 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C4E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C31 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x1D00 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D15 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E98 JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x1D31 SWAP1 TIMESTAMP PUSH2 0x3A51 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1D5D SWAP1 DUP3 PUSH2 0x397C JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x1E8F SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x3BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B94 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F14 SWAP2 SWAP1 PUSH2 0x3AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1F45 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x1F91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1F9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x203A JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2038 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1FE3 JUMPI PUSH2 0x1FE3 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FFD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2025 JUMPI PUSH2 0x2025 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1FC8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x204D SWAP2 SWAP1 PUSH2 0x37EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x2079 JUMPI PUSH1 0x0 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x23E2 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x210C SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3C9A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2178 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x219C SWAP2 SWAP1 PUSH2 0x3AF3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x221A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x22CC DUP3 DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x234A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x234F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3CCE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x23D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3CCE JUMP JUMPDEST POP POP POP POP PUSH2 0xCEE JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x2559 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2411 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3C9A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x247D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A1 SWAP2 SWAP1 PUSH2 0x3AF3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2519 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x2589 DUP3 DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x25D0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x261F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3CCE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x3855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x26DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x26E5 DUP2 PUSH2 0x2D6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2704 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x270E PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28AD JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x2728 PUSH1 0x5 DUP5 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2755 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2781 SWAP1 PUSH2 0x379E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x27A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2880 JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2895 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x28A5 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2711 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2A51 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28D6 SWAP2 SWAP1 PUSH2 0x3CFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28FF JUMPI PUSH2 0x28FF PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2920 SWAP2 SWAP1 PUSH2 0x3D18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2A49 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2950 JUMPI PUSH2 0x2950 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2976 SWAP2 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2986 JUMPI PUSH2 0x2986 PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x29AD SWAP2 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29BD JUMPI PUSH2 0x29BD PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x29DD SWAP2 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0x29FF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3A8C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2A0F JUMPI PUSH2 0x2A0F PUSH2 0x37D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2A2F SWAP2 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x2A51 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x28BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x2A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AC8 JUMPI PUSH2 0x2AC8 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AF1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B73 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2B22 JUMPI PUSH2 0x2B22 PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B4E JUMPI PUSH2 0x2B4E PUSH2 0x37D8 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2B6B DUP2 PUSH2 0x3ADA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AF7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B9D PUSH2 0x2B89 DUP5 PUSH2 0x2DBC JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2B98 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x2E2A JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x2BD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2C0E JUMPI PUSH2 0x2C0E PUSH2 0x37D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x2C2F DUP11 DUP13 DUP4 PUSH2 0x3B10 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2D56 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2E26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x2E5D JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2E26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2F19 SWAP1 PUSH2 0x379E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2F29 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26E5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E26 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F8B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11F7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2FB4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F70 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2FDB PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2F9C JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x304A JUMPI PUSH2 0x304A PUSH2 0x300C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x307E JUMPI PUSH2 0x307E PUSH2 0x300C JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x308D DUP3 DUP3 ADD PUSH2 0x3022 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x30A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x30C6 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x30AD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x310F DUP7 DUP3 DUP8 ADD PUSH2 0x3052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x3144 DUP2 DUP5 ADD DUP13 PUSH2 0x2F9C JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x31AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31CA DUP3 PUSH2 0x3195 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x31E7 DUP3 DUP7 ADD DUP3 PUSH2 0x2F9C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3202 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x322B PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3242 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x325D PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3273 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32F2 JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x32E0 DUP7 DUP4 MLOAD PUSH2 0x31D1 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32C4 JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP6 MSTORE DUP8 DUP3 ADD SWAP5 DUP3 ADD SWAP4 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3329 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x330D JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x335F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x31AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x31AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x33BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33E0 DUP11 DUP3 DUP12 ADD PUSH2 0x3336 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x33FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x3408 PUSH1 0x40 DUP10 ADD PUSH2 0x337E JUMP JUMPDEST SWAP4 POP PUSH2 0x3416 PUSH1 0x60 DUP10 ADD PUSH2 0x3195 JUMP JUMPDEST SWAP3 POP PUSH2 0x3424 PUSH1 0x80 DUP10 ADD PUSH2 0x3195 JUMP JUMPDEST SWAP2 POP PUSH2 0x3432 PUSH1 0xA0 DUP10 ADD PUSH2 0x3391 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31CA DUP2 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34BE JUMPI PUSH2 0x34BE PUSH2 0x300C JUMP JUMPDEST PUSH2 0x34D1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3022 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x34E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x353A DUP7 DUP3 DUP8 ADD PUSH2 0x3494 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3550 PUSH1 0x40 DUP6 ADD PUSH2 0x3195 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x356E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x3599 DUP2 DUP5 ADD DUP15 PUSH2 0x2F9C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x31CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x366E JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x365C DUP6 DUP4 MLOAD PUSH2 0x2F9C JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3640 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36B8 DUP11 DUP3 DUP12 ADD PUSH2 0x3336 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x33FA SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x3391 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3710 DUP7 DUP3 DUP8 ADD PUSH2 0x3052 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x374E DUP5 DUP3 DUP6 ADD PUSH2 0x3494 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3792 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3772 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x37B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x37D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3818 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x37FC JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x384B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2F9C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x31CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F9C JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x38AA DUP2 PUSH2 0x379E JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x38C7 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x38E1 JUMPI PUSH2 0x390F JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x390F JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3907 JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x38EC JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x31CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x389D JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3977 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3954 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3973 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3960 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3995 JUMPI PUSH2 0x3995 PUSH2 0x300C JUMP JUMPDEST PUSH2 0x39A9 DUP2 PUSH2 0x39A3 DUP5 SLOAD PUSH2 0x379E JUMP JUMPDEST DUP5 PUSH2 0x392D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39DE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x39C6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3973 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3A0D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x39EE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3A2B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3A64 JUMPI PUSH2 0x3A64 PUSH2 0x3A3B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3A84 JUMPI PUSH2 0x3A84 PUSH2 0x3A3B JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3A9E JUMPI PUSH2 0x3A9E PUSH2 0x3A3B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3AC9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3AEC JUMPI PUSH2 0x3AEC PUSH2 0x3A3B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x31CA DUP2 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x3B27 JUMPI PUSH2 0x3B27 PUSH2 0x300C JUMP JUMPDEST PUSH2 0x3B3B DUP4 PUSH2 0x3B35 DUP4 SLOAD PUSH2 0x379E JUMP JUMPDEST DUP4 PUSH2 0x392D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B6F JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x3B57 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3BA0 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3B80 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x3BBD JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3BF8 PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x389D JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x3C7C PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x3CC2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3D0E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F70 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x3D26 DUP2 PUSH2 0x379E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3D3E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3D53 JUMPI PUSH2 0x3818 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3818 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3D79 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3D60 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3DAC JUMPI PUSH2 0x3DAC PUSH2 0x3A3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3DC5 JUMPI PUSH2 0x3DC5 PUSH2 0x3A3B JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xBE PUSH1 0x15 0xB0 DUP4 0xB5 SWAP11 SWAP2 PUSH25 0x37A58BEAEA9422A129E2675D30812E89E782DB75025464736F PUSH13 0x634300080F0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x462"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x482"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A2"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D2"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F2"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x388"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B5"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E2"
    },
    "166": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x402"
    },
    "177": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "REVERT",
      "path": "2"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "GT",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D4"
    },
    "237": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F4"
    },
    "248": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314"
    },
    "259": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "REVERT",
      "path": "2"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x195"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B7"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "308": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "319": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "EQ",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x239"
    },
    "330": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "REVERT",
      "path": "2"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156"
    },
    "340": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "STOP",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "345": {
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "DUP1",
      "path": "2"
    },
    "346": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        22489
      ],
      "op": "REVERT",
      "path": "2"
    },
    "347": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "349": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "351": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "354": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "REVERT",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B"
    },
    "364": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "367": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "370": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "373": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51F"
    },
    "378": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "382": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "386": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "387": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC8"
    },
    "395": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "399": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "400": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "RETURN",
      "path": "2"
    },
    "405": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "407": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "409": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "412": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "413": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "416": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "REVERT",
      "path": "2"
    },
    "417": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "422": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "425": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "426": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "428": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D1"
    },
    "431": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "432": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EB"
    },
    "436": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "STOP",
      "path": "2"
    },
    "439": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "441": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "442": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "443": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3"
    },
    "446": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "447": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "450": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "451": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7"
    },
    "456": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "465": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x731"
    },
    "470": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "474": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "475": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "478": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "484": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "485": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3130"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "DUP1",
      "path": "2"
    },
    "494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F7"
    },
    "498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "DUP1",
      "path": "2"
    },
    "502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "REVERT",
      "path": "2"
    },
    "503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206"
    },
    "511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31AF"
    },
    "517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83B"
    },
    "522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x329B"
    },
    "536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "537": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "539": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "540": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "541": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225"
    },
    "544": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "545": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "548": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "REVERT",
      "path": "2"
    },
    "549": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "550": {
      "op": "POP"
    },
    "551": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "554": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234"
    },
    "557": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "558": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "560": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33A3"
    },
    "563": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "564": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "565": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCF"
    },
    "568": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "569": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "570": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "571": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "573": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245"
    },
    "576": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "577": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "579": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "581": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "586": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x254"
    },
    "589": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "590": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "592": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3440"
    },
    "595": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "596": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "597": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "599": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "601": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "604": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "606": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "607": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "609": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "617": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "623": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "625": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "626": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "628": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "629": {
      "op": "SWAP1"
    },
    "630": {
      "op": "DUP2"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "638": {
      "op": "JUMP"
    },
    "639": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "640": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "641": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "DUP1",
      "path": "2"
    },
    "642": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "643": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B"
    },
    "646": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "647": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "DUP1",
      "path": "2"
    },
    "650": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "REVERT",
      "path": "2"
    },
    "651": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "656": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A"
    },
    "659": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "660": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "662": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3477"
    },
    "665": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "666": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF7"
    },
    "670": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AB"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "9"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "9"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD43"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "692": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "693": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "694": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "DUP1",
      "path": "2"
    },
    "695": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "696": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0"
    },
    "699": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "700": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "REVERT",
      "path": "2"
    },
    "704": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "709": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF"
    },
    "712": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "713": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "715": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3503"
    },
    "718": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "719": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "720": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD79"
    },
    "723": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "REVERT",
      "path": "2"
    },
    "736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF"
    },
    "744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "750": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11FD"
    },
    "755": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "756": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "757": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "758": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "DUP1",
      "path": "2"
    },
    "759": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "760": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "764": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "DUP1",
      "path": "2"
    },
    "767": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "REVERT",
      "path": "2"
    },
    "768": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "769": {
      "op": "POP"
    },
    "770": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "773": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F"
    },
    "776": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "777": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "779": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3559"
    },
    "782": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "783": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "784": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1413"
    },
    "787": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "788": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "789": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "790": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "792": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x320"
    },
    "795": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "796": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "REVERT",
      "path": "2"
    },
    "800": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "805": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32F"
    },
    "808": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "809": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "811": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "814": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "815": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "816": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144C"
    },
    "819": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "820": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "821": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "824": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "829": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "833": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "835": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "836": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "838": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3585"
    },
    "841": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "846": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x356"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "9"
    },
    "854": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "859": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "872": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "873": {
      "op": "DUP2"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18C"
    },
    "881": {
      "op": "JUMP"
    },
    "882": {
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37E"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "890": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "893": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "894": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "POP",
      "path": "2"
    },
    "896": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "899": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "902": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "903": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "907": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "908": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x394"
    },
    "911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "912": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "915": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "REVERT",
      "path": "2"
    },
    "916": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A8"
    },
    "921": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A3"
    },
    "924": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "925": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "927": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "930": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "932": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x154E"
    },
    "935": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "936": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "937": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "939": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "940": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "943": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "944": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "945": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3606"
    },
    "948": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "REVERT",
      "path": "2"
    },
    "961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D5"
    },
    "966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D0"
    },
    "969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31AF"
    },
    "975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1690"
    },
    "980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3619"
    },
    "993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "994": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "995": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "996": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "997": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "998": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EE"
    },
    "1001": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1002": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1004": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1005": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1006": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1011": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD"
    },
    "1014": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1015": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1017": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367B"
    },
    "1020": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1021": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1022": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A56"
    },
    "1025": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "1033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D"
    },
    "1046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "1052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6B"
    },
    "1057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1058": {
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42E"
    },
    "1065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "1078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DIV",
      "path": "2"
    },
    "1092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1103": {
      "op": "SWAP4"
    },
    "1104": {
      "op": "DUP5"
    },
    "1105": {
      "op": "SIGNEXTEND"
    },
    "1106": {
      "op": "DUP2"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "SWAP2"
    },
    "1109": {
      "op": "SWAP1"
    },
    "1110": {
      "op": "SWAP3"
    },
    "1111": {
      "op": "SIGNEXTEND"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1121": {
      "op": "JUMP"
    },
    "1122": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1126": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46E"
    },
    "1129": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1130": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1132": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1134": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1139": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47D"
    },
    "1142": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1143": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1145": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36CB"
    },
    "1148": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1150": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA7"
    },
    "1153": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x48E"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "1171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x49D"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3477"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x264D"
    },
    "1185": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1190": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1194": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C2"
    },
    "1203": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "1206": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1207": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1209": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "1212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1214": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E8"
    },
    "1217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1219": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1221": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1222": {
      "op": "SWAP1"
    },
    "1223": {
      "op": "ISZERO"
    },
    "1224": {
      "op": "ISZERO"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1233": {
      "op": "JUMP"
    },
    "1234": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1235": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1238": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DE"
    },
    "1241": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1242": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1244": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1246": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1251": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ED"
    },
    "1254": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1255": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1257": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371A"
    },
    "1260": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1261": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1262": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B8"
    },
    "1265": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1270": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FE"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1274": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1278": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x512"
    },
    "1283": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50D"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1287": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1289": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F57"
    },
    "1292": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1293": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1294": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A55"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1299": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1302": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1305": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1307": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3756"
    },
    "1310": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1311": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1314": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1319": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1322": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1327": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1329": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1330": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53A"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1334": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "1337": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1338": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1340": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1342": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1343": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1351": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1352": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1356": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1357": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1358": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1365": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1366": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1370": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1371": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x566"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1378": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B3"
    },
    "1388": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1389": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "LT",
      "path": "2"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x588"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1397": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1402": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1403": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1407": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1408": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B3"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1418": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1426": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1430": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1436": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1438": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1439": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1440": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1442": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1443": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "GT",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1451": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "1453": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1459": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1466": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1469": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1476": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1477": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1482": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1502": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1504": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1516": {
      "fn": "Governance.testHashing",
      "offset": [
        17168,
        17190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17217
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1519": {
      "fn": "Governance.testHashing",
      "offset": [
        17218,
        17219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "LT",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "1528": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "1532": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "1535": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17210,
        17220
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1539": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "MUL",
      "path": "2"
    },
    "1540": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1542": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "ADD",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "ADD",
      "path": "2"
    },
    "1544": {
      "fn": "Governance.testHashing",
      "offset": [
        17210,
        17220
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1545": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1547": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1548": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1550": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "ADD",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61A"
    },
    "1554": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1555": {
      "op": "DUP2"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "SWAP1"
    },
    "1561": {
      "op": "JUMP"
    },
    "1562": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1565": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1566": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1568": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "SUB",
      "path": "2"
    },
    "1571": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "SUB",
      "path": "2"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1575": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        17193,
        17221
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1578": {
      "fn": "Governance.testHashing",
      "offset": [
        17168,
        17221
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.testHashing",
      "offset": [
        17168,
        17221
      ],
      "op": "POP",
      "path": "2"
    },
    "1580": {
      "branch": 114,
      "fn": "Governance.testHashing",
      "offset": [
        17234,
        17242
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.testHashing",
      "offset": [
        17231,
        17424
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1582": {
      "fn": "Governance.testHashing",
      "offset": [
        17231,
        17424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A6"
    },
    "1585": {
      "branch": 114,
      "fn": "Governance.testHashing",
      "offset": [
        17231,
        17424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1586": {
      "fn": "Governance.testHashing",
      "offset": [
        17262,
        17271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1588": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1589": {
      "fn": "Governance.testHashing",
      "offset": [
        17281,
        17288
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        17281,
        17295
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        17277,
        17278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        17277,
        17295
      ],
      "op": "LT",
      "path": "2"
    },
    "1593": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1594": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A4"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17362
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        17363,
        17364
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "LT",
      "path": "2"
    },
    "1604": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "1607": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "1611": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "1614": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17355,
        17365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1615": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1616": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "MUL",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1621": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "ADD",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "ADD",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17355,
        17365
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1624": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1627": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "ADD",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x669"
    },
    "1633": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "SWAP1"
    },
    "1640": {
      "op": "JUMP"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1645": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "SUB",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "SUB",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        17338,
        17366
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1660": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1662": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "ADD",
      "path": "2"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "offset": [
        17328,
        17367
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.testHashing",
      "offset": [
        17323,
        17324
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1666": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "LT",
      "path": "2"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x691"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1674": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x691"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17315,
        17325
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1682": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "MUL",
      "path": "2"
    },
    "1687": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "ADD",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17325
      ],
      "op": "ADD",
      "path": "2"
    },
    "1692": {
      "fn": "Governance.testHashing",
      "offset": [
        17315,
        17367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        17395,
        17398
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17395,
        17398
      ],
      "op": "ADD",
      "path": "2"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x634"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        17258,
        17414
      ],
      "op": "POP",
      "path": "2"
    },
    "1702": {
      "fn": "Governance.testHashing",
      "offset": [
        17231,
        17424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1703": {
      "fn": "Governance.testHashing",
      "offset": [
        17433,
        17447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        17477,
        17484
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1709": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "ADD",
      "path": "2"
    },
    "1712": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B9"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1717": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37EE"
    },
    "1720": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17460,
        17485
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1727": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "SUB",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "SUB",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        17460,
        17485
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1738": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1742": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "ADD",
      "path": "2"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        17450,
        17486
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        17433,
        17486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.testHashing",
      "offset": [
        17433,
        17486
      ],
      "op": "POP",
      "path": "2"
    },
    "1746": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        17513,
        17519
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        17529,
        17539
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        17521,
        17527
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        17521,
        17539
      ],
      "op": "EQ",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17548
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        17549,
        17550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "LT",
      "path": "2"
    },
    "1790": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x709"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x709"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17541,
        17551
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "MUL",
      "path": "2"
    },
    "1805": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "ADD",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "ADD",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        17541,
        17551
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        17553,
        17562
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1811": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1814": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x722"
    },
    "1817": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3824"
    },
    "1825": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17501,
        17563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SUB",
      "path": "2"
    },
    "1833": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        17501,
        17563
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        17158,
        17570
      ],
      "op": "POP",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        17158,
        17570
      ],
      "op": "POP",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "POP",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "POP",
      "path": "2"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        17067,
        17570
      ],
      "op": "POP",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        17067,
        17570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1841": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1842": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1859": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1862": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1864": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1868": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1872": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1877": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1879": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1883": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1884": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x764"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1892": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1903": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1905": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1906": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1919": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1922": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1928": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x790"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "1935": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DD"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1944": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B2"
    },
    "1950": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1951": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1960": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1961": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1962": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1966": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DD"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1970": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1971": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1972": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1977": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1978": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1980": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1982": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1983": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1990": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1992": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1993": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1994": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1996": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1997": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "GT",
      "path": "2"
    },
    "2000": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C0"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SUB",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2009": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2019": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2020": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2024": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2029": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2033": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2039": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2042": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2047": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2055": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2059": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2071": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2078": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2079": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2081": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2088": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2089": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2090": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2091": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2092": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2093": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2102": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2105": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2106": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2108": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6763,
        6776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6778,
        6794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6806,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2113": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6836,
        6885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x859"
    },
    "2116": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6860,
        6884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2118": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 4
    },
    "2119": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2121": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2122": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2123": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2130": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2131": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2132": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2133": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2134": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2135": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2136": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2137": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6836,
        6885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6806,
        6885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6806,
        6885
      ],
      "op": "POP",
      "path": "2"
    },
    "2140": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6895,
        6913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x863"
    },
    "2143": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6895,
        6913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "2146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6895,
        6913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2147": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6895,
        6913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6923,
        6937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6923,
        6937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6923,
        6937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6995,
        7014
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6991,
        6992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6991,
        7014
      ],
      "op": "LT",
      "path": "2"
    },
    "2156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2157": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9EB"
    },
    "2160": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7048,
        7096
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x87B"
    },
    "2164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7068,
        7092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2166": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7094,
        7095
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2167": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7048,
        7067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7A"
    },
    "2170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7048,
        7096
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2171": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7048,
        7096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7040,
        7097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "2175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2176": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2181": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2184": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2187": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2189": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2190": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2194": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2200": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7040,
        7097
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2201": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7040,
        7097
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7120,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2209": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A9"
    },
    "2212": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "2216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2218": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2219": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2221": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2227": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MUL",
      "path": "2"
    },
    "2228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2230": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2231": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2252": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2253": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D5"
    },
    "2256": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "2260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2264": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "2267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2271": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "LT",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F7"
    },
    "2275": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MUL",
      "path": "2"
    },
    "2284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2285": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2286": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2287": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2290": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "2294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2299": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2300": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2302": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2303": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2314": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2318": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "GT",
      "path": "2"
    },
    "2325": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x905"
    },
    "2328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SUB",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2337": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2338": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2343": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2351": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2361": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2365": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2371": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2375": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2380": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2381": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2383": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2385": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2391": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2395": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2398": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2400": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2401": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2404": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2411": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2414": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2415": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2416": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2423": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2433": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2436": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2437": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2444": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2445": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2448": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2450": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2453": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2454": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2455": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2463": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2467": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DIV",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2476": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "AND",
      "path": "2"
    },
    "2477": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2480": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2481": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "ADD",
      "path": "2"
    },
    "2483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7111,
        7133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7187
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7187
      ],
      "op": "ADD",
      "path": "2"
    },
    "2486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7187
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2487": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7187
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7190,
        7205
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7205
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7205
      ],
      "op": "AND",
      "path": "2"
    },
    "2493": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7205
      ],
      "op": "GT",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2496": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D7"
    },
    "2499": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "POP",
      "path": "2"
    },
    "2501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7229,
        7235
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7235
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7235
      ],
      "op": "AND",
      "path": "2"
    },
    "2509": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7215
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2510": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7226
      ],
      "op": "ADD",
      "path": "2"
    },
    "2513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7235
      ],
      "op": "AND",
      "path": "2"
    },
    "2518": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7209,
        7235
      ],
      "op": "EQ",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7151,
        7235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2520": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7147,
        7287
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7147,
        7287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E3"
    },
    "2524": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7147,
        7287
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2525": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7264,
        7271
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "2526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7264,
        7271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7264,
        7271
      ],
      "op": "ADD",
      "path": "2"
    },
    "2529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7264,
        7271
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7264,
        7271
      ],
      "op": "POP",
      "path": "2"
    },
    "2531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7147,
        7287
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7310,
        7313
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "2534": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7310,
        7313
      ],
      "op": "ADD",
      "path": "2"
    },
    "2535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x868"
    },
    "2538": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        7325
      ],
      "op": "POP",
      "path": "2"
    },
    "2541": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7382,
        7387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2542": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7389,
        7390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2544": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7382,
        7390
      ],
      "op": "SUB",
      "path": "2"
    },
    "2545": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7378,
        7627
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA58"
    },
    "2548": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7378,
        7627
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2552": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7441,
        7442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "ADD",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7406,
        7428
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7406,
        7428
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2567": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "ADD",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2572": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA13"
    },
    "2575": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "2578": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7430,
        7443
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "ADD",
      "path": "2"
    },
    "2585": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SUB",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2591": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2592": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0B"
    },
    "2595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7430,
        7443
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2600": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2601": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7502,
        7503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2604": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2605": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "ADD",
      "path": "2"
    },
    "2610": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2611": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2613": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7406,
        7443
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7406,
        7443
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7457,
        7486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7457,
        7486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2619": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2620": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "ADD",
      "path": "2"
    },
    "2625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2627": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2629": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7488,
        7504
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 9
    },
    "2632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7601
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2648": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7378,
        7627
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7637,
        7652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2651": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7666,
        7687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7701,
        7706
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2659": {
      "op": "SHL"
    },
    "2660": {
      "op": "SUB"
    },
    "2661": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2662": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "GT",
      "path": "2"
    },
    "2663": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2664": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA73"
    },
    "2667": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA73"
    },
    "2671": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300C"
    },
    "2674": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2675": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2676": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2683": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "MUL",
      "path": "2"
    },
    "2687": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "2690": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2694": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2697": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAC"
    },
    "2700": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2704": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "2705": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA99"
    },
    "2709": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "2712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2714": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2715": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "2719": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2720": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2722": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SUB",
      "path": "2"
    },
    "2724": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2726": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA91"
    },
    "2729": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2731": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "POP",
      "path": "2"
    },
    "2732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7690,
        7707
      ],
      "op": "POP",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7666,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7666,
        7707
      ],
      "op": "POP",
      "path": "2"
    },
    "2736": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2738": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7760,
        7765
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2748": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "GT",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC9"
    },
    "2753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC9"
    },
    "2757": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300C"
    },
    "2760": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7746,
        7766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2761": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2762": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2764": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2765": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2766": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2769": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2770": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2772": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "MUL",
      "path": "2"
    },
    "2773": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2775": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2776": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF2"
    },
    "2786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2793": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "MUL",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7746,
        7766
      ],
      "op": "POP",
      "path": "2"
    },
    "2804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7766
      ],
      "op": "POP",
      "path": "2"
    },
    "2806": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7798,
        7817
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7794,
        7795
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7794,
        7817
      ],
      "op": "LT",
      "path": "2"
    },
    "2812": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBF"
    },
    "2816": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2817": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7851,
        7899
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xB0B"
    },
    "2820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7871,
        7895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2822": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2823": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7851,
        7870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7A"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7851,
        7899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7851,
        7899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7843,
        7900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 11
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2835": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2840": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2841": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2846": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2854": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2855": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7843,
        7900
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7843,
        7900
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2862": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2863": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7923,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2865": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB39"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "2872": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "2883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MUL",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2886": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2887": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2891": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2892": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2905": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB65"
    },
    "2912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2918": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2919": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB2"
    },
    "2923": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2925": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "LT",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB87"
    },
    "2931": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2932": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2938": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "2939": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MUL",
      "path": "2"
    },
    "2940": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2943": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB2"
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2954": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2956": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2959": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2964": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2970": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2971": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2973": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2974": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2975": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2977": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "GT",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB95"
    },
    "2984": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2985": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2986": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2987": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SUB",
      "path": "2"
    },
    "2988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2992": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3001": {
      "op": "POP"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3006": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3014": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3016": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3017": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3021": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3025": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3026": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3029": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3031": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3034": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3035": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3037": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3039": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3044": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3045": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3048": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3050": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3051": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3052": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3055": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3057": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3060": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3061": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3062": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "3063": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3068": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3070": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3071": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3079": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3089": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3091": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3100": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "3101": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3104": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3122": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3123": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3128": {
      "op": "SHL"
    },
    "3129": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3130": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DIV",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3132": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "3133": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3137": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "ADD",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7914,
        7936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3140": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        7990
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        7990
      ],
      "op": "ADD",
      "path": "2"
    },
    "3142": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        7990
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3143": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        7990
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        7990
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7993,
        8008
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8008
      ],
      "op": "AND",
      "path": "2"
    },
    "3149": {
      "branch": 118,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8008
      ],
      "op": "GT",
      "path": "2"
    },
    "3150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC67"
    },
    "3155": {
      "branch": 118,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "POP",
      "path": "2"
    },
    "3157": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8032,
        8038
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8038
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8038
      ],
      "op": "AND",
      "path": "2"
    },
    "3165": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8018
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3166": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8029
      ],
      "op": "ADD",
      "path": "2"
    },
    "3169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3173": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8038
      ],
      "op": "AND",
      "path": "2"
    },
    "3174": {
      "branch": 119,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8012,
        8038
      ],
      "op": "EQ",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7954,
        8038
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3176": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7950,
        8222
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7950,
        8222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB7"
    },
    "3180": {
      "branch": 119,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7950,
        8222
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3181": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8076,
        8082
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 12
    },
    "3182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8064
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8065,
        8072
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3184": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3187": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "LT",
      "path": "2"
    },
    "3188": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7F"
    },
    "3191": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3192": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7F"
    },
    "3195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8057,
        8073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3202": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "MUL",
      "path": "2"
    },
    "3203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "ADD",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8073
      ],
      "op": "ADD",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3209": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8057,
        8082
      ],
      "op": "POP",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8127
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 13
    },
    "3212": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8109
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3213": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8110,
        8117
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "LT",
      "path": "2"
    },
    "3218": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9D"
    },
    "3221": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9D"
    },
    "3225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8100,
        8118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3230": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3232": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "MUL",
      "path": "2"
    },
    "3233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "ADD",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8118
      ],
      "op": "ADD",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3238": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8127
      ],
      "op": "POP",
      "path": "2"
    },
    "3241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8100,
        8127
      ],
      "op": "POP",
      "path": "2"
    },
    "3242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8155,
        8164
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 14
    },
    "3243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8155,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8155,
        8164
      ],
      "op": "ADD",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8155,
        8164
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8155,
        8164
      ],
      "op": "POP",
      "path": "2"
    },
    "3248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8194,
        8199
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8186,
        8193
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3250": {
      "branch": 120,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8186,
        8199
      ],
      "op": "GT",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8201,
        8206
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0xCBF"
    },
    "3254": {
      "branch": 120,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8183,
        8208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8183,
        8208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8245,
        8248
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "3258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8245,
        8248
      ],
      "op": "ADD",
      "path": "2"
    },
    "3259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF8"
    },
    "3262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7776,
        8260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8277,
        8284
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 17
    },
    "3266": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8277,
        8284
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "3267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8286,
        8295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8286,
        8295
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8303
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3271": {
      "op": "POP"
    },
    "3272": {
      "op": "POP"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "POP"
    },
    "3278": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        6694,
        8303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3279": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3280": {
      "offset": [
        22407,
        22443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDD"
    },
    "3283": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3284": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3285": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3287": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3288": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3289": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3290": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "SUB",
      "path": "2"
    },
    "3291": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3293": {
      "fn": "Governance.createTaskType",
      "offset": [
        22407,
        22443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3294": {
      "fn": "Governance.createTaskType",
      "offset": [
        13584,
        13690
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xCEE"
    },
    "3297": {
      "fn": "Governance.createTaskType",
      "offset": [
        13600,
        13609
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3298": {
      "fn": "Governance.createTaskType",
      "offset": [
        13600,
        13609
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3299": {
      "fn": "Governance.createTaskType",
      "offset": [
        13611,
        13612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3301": {
      "fn": "Governance.createTaskType",
      "offset": [
        13614,
        13630
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3302": {
      "fn": "Governance.createTaskType",
      "offset": [
        13632,
        13642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3303": {
      "fn": "Governance.createTaskType",
      "offset": [
        13644,
        13657
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3304": {
      "fn": "Governance.createTaskType",
      "offset": [
        13659,
        13672
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3305": {
      "fn": "Governance.createTaskType",
      "offset": [
        13674,
        13689
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.createTaskType",
      "offset": [
        13584,
        13599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BEB"
    },
    "3309": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13584,
        13690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3310": {
      "fn": "Governance.createTaskType",
      "offset": [
        13584,
        13690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3311": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3313": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3314": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3315": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3316": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.createTaskType",
      "offset": [
        13377,
        13697
      ],
      "op": "POP",
      "path": "2"
    },
    "3318": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        13377,
        13697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3319": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3320": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3322": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3332": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 19
    },
    "3333": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3334": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD21"
    },
    "3337": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3338": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3340": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3347": {
      "op": "SHL"
    },
    "3348": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3349": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3350": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3352": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3353": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD4"
    },
    "3356": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3357": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3855"
    },
    "3360": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3361": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3362": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10066
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x2"
    },
    "3364": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3365": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3372": {
      "op": "SHL"
    },
    "3373": {
      "op": "SUB"
    },
    "3374": {
      "op": "NOT"
    },
    "3375": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "AND",
      "path": "2"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3385": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3386": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3387": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "AND",
      "path": "2"
    },
    "3388": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3389": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3390": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3391": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "OR",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10056,
        10083
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3394": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        9989,
        10090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3396": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3398": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "op": "SUB"
    },
    "3407": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3408": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3409": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3410": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD6D"
    },
    "3413": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3414": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3416": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3423": {
      "op": "SHL"
    },
    "3424": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3425": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3426": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3428": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3429": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD4"
    },
    "3432": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3433": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3855"
    },
    "3436": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3437": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 21,
      "value": "0xD77"
    },
    "3441": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D6A"
    },
    "3446": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3448": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3449": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.completeTask",
      "offset": [
        15959,
        15968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3452": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3453": {
      "fn": "Governance.completeTask",
      "offset": [
        15976,
        15985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3455": {
      "fn": "Governance.completeTask",
      "offset": [
        15976,
        15992
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3456": {
      "fn": "Governance.completeTask",
      "offset": [
        15974,
        15992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.completeTask",
      "offset": [
        15974,
        15992
      ],
      "op": "LT",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3459": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F7"
    },
    "3462": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3463": {
      "fn": "Governance.completeTask",
      "offset": [
        16080,
        16089
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3464": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3466": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3469": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "ADD",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD97"
    },
    "3473": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3474": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3475": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x388A"
    },
    "3478": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16069,
        16090
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3479": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3480": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3482": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3483": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3485": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "SUB",
      "path": "2"
    },
    "3488": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "SUB",
      "path": "2"
    },
    "3489": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3491": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3492": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3494": {
      "fn": "Governance.completeTask",
      "offset": [
        16069,
        16090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3496": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3497": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3500": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "ADD",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.completeTask",
      "offset": [
        16059,
        16091
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3502": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3504": {
      "fn": "Governance.completeTask",
      "offset": [
        16042,
        16043
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3507": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3508": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "LT",
      "path": "2"
    },
    "3509": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC0"
    },
    "3512": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3513": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC0"
    },
    "3516": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3519": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16032,
        16044
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3520": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3524": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3527": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3529": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3530": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3533": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "MUL",
      "path": "2"
    },
    "3534": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16044
      ],
      "op": "ADD",
      "path": "2"
    },
    "3535": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3537": {
      "fn": "Governance.completeTask",
      "offset": [
        16032,
        16053
      ],
      "op": "ADD",
      "path": "2"
    },
    "3538": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3540": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3541": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3543": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "ADD",
      "path": "2"
    },
    "3544": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE1"
    },
    "3547": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3549": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x391A"
    },
    "3552": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16021,
        16054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3553": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3554": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3556": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3559": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3560": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3561": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "SUB",
      "path": "2"
    },
    "3562": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "SUB",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3565": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3566": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3568": {
      "fn": "Governance.completeTask",
      "offset": [
        16021,
        16054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3570": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3571": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3572": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3574": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "ADD",
      "path": "2"
    },
    "3575": {
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16055
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3576": {
      "branch": 121,
      "fn": "Governance.completeTask",
      "offset": [
        16011,
        16091
      ],
      "op": "SUB",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.completeTask",
      "offset": [
        16008,
        16997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11EF"
    },
    "3580": {
      "branch": 121,
      "fn": "Governance.completeTask",
      "offset": [
        16008,
        16997
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3581": {
      "fn": "Governance.completeTask",
      "offset": [
        16207,
        16222
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 22
    },
    "3582": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3584": {
      "fn": "Governance.completeTask",
      "offset": [
        16188,
        16189
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3585": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3586": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3587": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3588": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "LT",
      "path": "2"
    },
    "3589": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE10"
    },
    "3592": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3593": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE10"
    },
    "3596": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3599": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16178,
        16190
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3600": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3601": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3603": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3604": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3605": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3606": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3608": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3609": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3611": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3613": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3614": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "MUL",
      "path": "2"
    },
    "3616": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16190
      ],
      "op": "ADD",
      "path": "2"
    },
    "3617": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3619": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "ADD",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3627": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "DIV",
      "path": "2"
    },
    "3628": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3634": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16203
      ],
      "op": "AND",
      "path": "2"
    },
    "3635": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16222
      ],
      "op": "GT",
      "path": "2"
    },
    "3636": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16222
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3637": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16222
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3638": {
      "branch": 122,
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16222
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3639": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE74"
    },
    "3642": {
      "branch": 122,
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16270
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3643": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16270
      ],
      "op": "POP",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3646": {
      "fn": "Governance.completeTask",
      "offset": [
        16255,
        16256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3647": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3648": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3649": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3650": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "LT",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4E"
    },
    "3654": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3655": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4E"
    },
    "3658": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3661": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16245,
        16257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3662": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3663": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3665": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3666": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3667": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3670": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3671": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3672": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3675": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3677": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "MUL",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16257
      ],
      "op": "ADD",
      "path": "2"
    },
    "3679": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3681": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "ADD",
      "path": "2"
    },
    "3682": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3689": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "DIV",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3696": {
      "fn": "Governance.completeTask",
      "offset": [
        16245,
        16270
      ],
      "op": "AND",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.completeTask",
      "offset": [
        16226,
        16241
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.completeTask",
      "offset": [
        16226,
        16270
      ],
      "op": "GT",
      "path": "2"
    },
    "3699": {
      "branch": 123,
      "fn": "Governance.completeTask",
      "offset": [
        16226,
        16270
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3700": {
      "fn": "Governance.completeTask",
      "offset": [
        16178,
        16270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB6"
    },
    "3704": {
      "branch": 123,
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3707": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3719": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3721": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3722": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "ADD",
      "path": "2"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3728": {
      "op": "DUP3"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "MSTORE"
    },
    "3731": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3756": {
      "op": "DUP3"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3761": {
      "op": "ADD"
    },
    "3762": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "3765": {
      "op": "JUMP"
    },
    "3766": {
      "fn": "Governance.completeTask",
      "offset": [
        16170,
        16294
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3767": {
      "fn": "Governance.completeTask",
      "offset": [
        16347,
        16365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3769": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3771": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3772": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3773": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3776": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3779": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3780": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.completeTask",
      "offset": [
        16373,
        16382
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3782": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3783": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3786": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3787": {
      "fn": "Governance.completeTask",
      "offset": [
        16383,
        16389
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3788": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3794": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "AND",
      "path": "2"
    },
    "3795": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3799": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.completeTask",
      "offset": [
        16391,
        16396
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3803": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3805": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3806": {
      "fn": "Governance.completeTask",
      "offset": [
        16398,
        16399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3808": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3809": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SHL",
      "path": "2"
    },
    "3810": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3811": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3812": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3814": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3815": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3817": {
      "fn": "Governance.completeTask",
      "offset": [
        16411,
        16412
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3818": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3819": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3820": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3821": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "LT",
      "path": "2"
    },
    "3822": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF9"
    },
    "3825": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3826": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF9"
    },
    "3829": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3832": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16401,
        16413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3833": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3834": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3835": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3837": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3838": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3840": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3842": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3843": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3844": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3846": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "MUL",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16413
      ],
      "op": "ADD",
      "path": "2"
    },
    "3848": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3850": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "ADD",
      "path": "2"
    },
    "3851": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3853": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3854": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3855": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3856": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3859": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "EXP",
      "path": "2"
    },
    "3860": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3861": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "DIV",
      "path": "2"
    },
    "3862": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3864": {
      "fn": "Governance.completeTask",
      "offset": [
        16401,
        16429
      ],
      "op": "AND",
      "path": "2"
    },
    "3865": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3867": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "AND",
      "path": "2"
    },
    "3868": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3869": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3872": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3875": {
      "fn": "Governance.completeTask",
      "offset": [
        16441,
        16442
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "LT",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "3883": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3884": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "3887": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "3890": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16431,
        16443
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3894": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3895": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3896": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3899": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3900": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3901": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3904": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3905": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3906": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "MUL",
      "path": "2"
    },
    "3908": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3909": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3910": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16443
      ],
      "op": "ADD",
      "path": "2"
    },
    "3911": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3913": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "ADD",
      "path": "2"
    },
    "3914": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3921": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "DIV",
      "path": "2"
    },
    "3922": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3926": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16453
      ],
      "op": "AND",
      "path": "2"
    },
    "3927": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3928": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3929": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3932": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3933": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3934": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3937": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3938": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3939": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3940": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3942": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3943": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3945": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3948": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3949": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3950": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3952": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3953": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3954": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3955": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3956": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3957": {
      "fn": "Governance.completeTask",
      "offset": [
        16368,
        16466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3958": {
      "fn": "Governance.completeTask",
      "offset": [
        16544,
        16563
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0xA"
    },
    "3960": {
      "fn": "Governance.completeTask",
      "offset": [
        16544,
        16563
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3961": {
      "fn": "Governance.completeTask",
      "offset": [
        16510,
        16534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3963": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3964": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3969": {
      "op": "SHL"
    },
    "3970": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3971": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3972": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3973": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "3974": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "3976": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3977": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "3978": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3979": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3980": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "3982": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3983": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3984": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3985": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3986": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3987": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3988": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3989": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3990": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 25
    },
    "3991": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3992": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4009": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4010": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4011": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4012": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4014": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4015": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4016": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "4017": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4018": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4019": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4020": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "4021": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "4022": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4023": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4024": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 26
    },
    "4025": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4028": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4029": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4030": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4031": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4032": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4033": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4034": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4037": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4038": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4039": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4040": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFD1"
    },
    "4043": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4044": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4045": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397C"
    },
    "4048": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16583,
        16618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4049": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4050": {
      "op": "POP"
    },
    "4051": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4053": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4054": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4055": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4056": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4058": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4059": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4060": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4061": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4063": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4069": {
      "op": "NOT"
    },
    "4070": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4071": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4077": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4078": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4079": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4080": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4081": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4082": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4083": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4085": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4086": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4087": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4088": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4090": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4091": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4092": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4093": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4095": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4096": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4097": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4098": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4100": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4101": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4102": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4103": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4105": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4106": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4107": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4108": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4110": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4112": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4113": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4114": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4115": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4117": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4119": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4120": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4122": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4123": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4127": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4128": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4129": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4133": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4134": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4140": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4141": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "4142": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "ADD",
      "path": "2"
    },
    "4143": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4144": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4146": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4147": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4148": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4149": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4154": {
      "op": "NOT"
    },
    "4155": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4158": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4159": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4161": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4162": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4166": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4167": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4168": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4169": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4170": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MUL",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4174": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4175": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4176": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "4193": {
      "op": "NOT"
    },
    "4194": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4199": {
      "op": "SHL"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4206": {
      "op": "SHL"
    },
    "4207": {
      "op": "SUB"
    },
    "4208": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4209": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4210": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4214": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MUL",
      "path": "2"
    },
    "4215": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4220": {
      "op": "SHL"
    },
    "4221": {
      "op": "NOT"
    },
    "4222": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4223": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4228": {
      "op": "SHL"
    },
    "4229": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4233": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MUL",
      "path": "2"
    },
    "4236": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4237": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4247": {
      "op": "SHL"
    },
    "4248": {
      "op": "NOT"
    },
    "4249": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4256": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4257": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4258": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MUL",
      "path": "2"
    },
    "4260": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "NOT"
    },
    "4270": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4272": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4273": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4274": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4279": {
      "op": "SHL"
    },
    "4280": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4283": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "AND",
      "path": "2"
    },
    "4284": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4285": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4286": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4287": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "MUL",
      "path": "2"
    },
    "4288": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "OR",
      "path": "2"
    },
    "4289": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16655
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0xA"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4298": {
      "op": "SWAP1"
    },
    "4299": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D5"
    },
    "4302": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4303": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4304": {
      "fn": "Governance.completeTask",
      "offset": [
        16583,
        16618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4305": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A51"
    },
    "4308": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16636,
        16658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.completeTask",
      "offset": [
        16636,
        16658
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16760,
        16784
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x10E8"
    },
    "4317": {
      "fn": "Governance.completeTask",
      "offset": [
        16760,
        16784
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "fn": "Governance.completeTask",
      "offset": [
        16760,
        16775
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.completeTask",
      "offset": [
        16778,
        16784
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16760,
        16784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A51"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16760,
        16784
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4328": {
      "fn": "Governance.completeTask",
      "offset": [
        16760,
        16784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4329": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4331": {
      "fn": "Governance.completeTask",
      "offset": [
        16723,
        16724
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4332": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4333": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "LT",
      "path": "2"
    },
    "4336": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FB"
    },
    "4339": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4340": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FB"
    },
    "4343": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "4346": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16713,
        16725
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4348": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4350": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4351": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4352": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4355": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4356": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4358": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4364": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4365": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "AND",
      "path": "2"
    },
    "4366": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4367": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4368": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4370": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4371": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4372": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "MUL",
      "path": "2"
    },
    "4373": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4374": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4375": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16725
      ],
      "op": "ADD",
      "path": "2"
    },
    "4376": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4377": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4378": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4380": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16757
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.completeTask",
      "offset": [
        16713,
        16784
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x4"
    },
    "4385": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4387": {
      "fn": "Governance.completeTask",
      "offset": [
        16862,
        16863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4389": {
      "fn": "Governance.completeTask",
      "offset": [
        16862,
        16863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4390": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4391": {
      "fn": "Governance.completeTask",
      "offset": [
        16842,
        16843
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.completeTask",
      "offset": [
        16842,
        16843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4393": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4394": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "LT",
      "path": "2"
    },
    "4395": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1136"
    },
    "4398": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4399": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1136"
    },
    "4402": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "4405": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16832,
        16844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4406": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4410": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4413": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4416": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4417": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4419": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "MUL",
      "path": "2"
    },
    "4420": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16844
      ],
      "op": "ADD",
      "path": "2"
    },
    "4421": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4423": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "ADD",
      "path": "2"
    },
    "4424": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4426": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4428": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4432": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "EXP",
      "path": "2"
    },
    "4433": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4434": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "DIV",
      "path": "2"
    },
    "4435": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4438": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16859
      ],
      "op": "AND",
      "path": "2"
    },
    "4439": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1160"
    },
    "4442": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4444": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A69"
    },
    "4447": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16832,
        16863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4448": {
      "fn": "Governance.completeTask",
      "offset": [
        16832,
        16863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4449": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4451": {
      "fn": "Governance.completeTask",
      "offset": [
        16812,
        16813
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4452": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4453": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4455": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "LT",
      "path": "2"
    },
    "4456": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1173"
    },
    "4459": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4460": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1173"
    },
    "4463": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "4466": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16802,
        16814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4467": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4468": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4469": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4471": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4472": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4474": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4476": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4478": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4480": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "MUL",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16814
      ],
      "op": "ADD",
      "path": "2"
    },
    "4482": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4484": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16829
      ],
      "op": "ADD",
      "path": "2"
    },
    "4485": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4490": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "EXP",
      "path": "2"
    },
    "4491": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4492": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4493": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4497": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "MUL",
      "path": "2"
    },
    "4498": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "NOT",
      "path": "2"
    },
    "4499": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "AND",
      "path": "2"
    },
    "4500": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4501": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4502": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "AND",
      "path": "2"
    },
    "4506": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "MUL",
      "path": "2"
    },
    "4507": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "OR",
      "path": "2"
    },
    "4508": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4509": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4510": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16863
      ],
      "op": "POP",
      "path": "2"
    },
    "4511": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 30,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "4544": {
      "fn": "Governance.completeTask",
      "offset": [
        16901,
        16907
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4545": {
      "fn": "Governance.completeTask",
      "offset": [
        16929,
        16930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4547": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4549": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16927
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4550": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11CF"
    },
    "4553": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4554": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4555": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A8C"
    },
    "4558": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16908,
        16930
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4559": {
      "fn": "Governance.completeTask",
      "offset": [
        16908,
        16930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4560": {
      "fn": "Governance.completeTask",
      "offset": [
        16932,
        16941
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4561": {
      "fn": "Governance.completeTask",
      "offset": [
        16943,
        16958
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4562": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4564": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4565": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E1"
    },
    "4568": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4569": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4570": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4571": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4573": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AA3"
    },
    "4576": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16887,
        16959
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4577": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4578": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4580": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4581": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4582": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4583": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SUB",
      "path": "2"
    },
    "4584": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4585": {
      "fn": "Governance.completeTask",
      "offset": [
        16887,
        16959
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4586": {
      "fn": "Governance.completeTask",
      "offset": [
        16977,
        16982
      ],
      "op": "POP",
      "path": "2",
      "statement": 31
    },
    "4587": {
      "fn": "Governance.completeTask",
      "offset": [
        16977,
        16982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F7"
    },
    "4590": {
      "fn": "Governance.completeTask",
      "offset": [
        16977,
        16982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4591": {
      "fn": "Governance.completeTask",
      "offset": [
        16008,
        16997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4592": {
      "fn": "Governance.completeTask",
      "offset": [
        17020,
        17023
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x1"
    },
    "4594": {
      "fn": "Governance.completeTask",
      "offset": [
        17020,
        17023
      ],
      "op": "ADD",
      "path": "2"
    },
    "4595": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7C"
    },
    "4598": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4599": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4600": {
      "fn": "Governance.completeTask",
      "offset": [
        15955,
        17035
      ],
      "op": "POP",
      "path": "2"
    },
    "4601": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "POP",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "POP",
      "path": "2"
    },
    "4603": {
      "fn": "Governance.completeTask",
      "offset": [
        15775,
        17061
      ],
      "op": "POP",
      "path": "2"
    },
    "4604": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        15775,
        17061
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4605": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5050,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4608": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x8"
    },
    "4610": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4611": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5088
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4612": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5105
      ],
      "op": "LT",
      "path": "2"
    },
    "4613": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1243"
    },
    "4616": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4617": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4619": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4628": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4633": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4634": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "ADD",
      "path": "2"
    },
    "4635": {
      "op": "MSTORE"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4640": {
      "op": "DUP3"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "MSTORE"
    },
    "4643": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4665": {
      "op": "DUP3"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "MSTORE"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4670": {
      "op": "ADD"
    },
    "4671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "4674": {
      "op": "JUMP"
    },
    "4675": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4676": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x0"
    },
    "4678": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4680": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4681": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4685": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4686": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4688": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4692": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "ADD",
      "path": "2"
    },
    "4693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4698": {
      "op": "SHL"
    },
    "4699": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "DIV",
      "path": "2"
    },
    "4701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "AND",
      "path": "2"
    },
    "4708": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5160
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4709": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5197
      ],
      "op": "GT",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A7"
    },
    "4713": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4714": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "ADD",
      "path": "2"
    },
    "4732": {
      "op": "MSTORE"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4737": {
      "op": "DUP3"
    },
    "4738": {
      "op": "ADD"
    },
    "4739": {
      "op": "MSTORE"
    },
    "4740": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4762": {
      "op": "SHL"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4765": {
      "op": "DUP3"
    },
    "4766": {
      "op": "ADD"
    },
    "4767": {
      "op": "MSTORE"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4770": {
      "op": "ADD"
    },
    "4771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "4774": {
      "op": "JUMP"
    },
    "4775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5341,
        5360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4778": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5370,
        5395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5405,
        5416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4781": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5432,
        5441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4785": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4786": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4793": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4796": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4799": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "ADD",
      "path": "2"
    },
    "4800": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4801": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4804": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "AND",
      "path": "2"
    },
    "4805": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "LT",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C8"
    },
    "4811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4812": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4817": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4821": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4825": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4826": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4828": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4830": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "ADD",
      "path": "2"
    },
    "4831": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5572,
        5573
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4834": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4835": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "LT",
      "path": "2"
    },
    "4836": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "4839": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "4843": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "4846": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4852": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "ADD",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4856": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MOD",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4860": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MUL",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "EXP",
      "path": "2"
    },
    "4868": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4869": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4873": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "AND",
      "path": "2"
    },
    "4874": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4877": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "AND",
      "path": "2"
    },
    "4878": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "GT",
      "path": "2"
    },
    "4879": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4880": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136A"
    },
    "4883": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4884": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x0"
    },
    "4886": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4887": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4889": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4891": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4893": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4894": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4896": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4897": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4898": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4900": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "ADD",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5662,
        5663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4902": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4904": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4905": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "LT",
      "path": "2"
    },
    "4906": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1335"
    },
    "4909": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4910": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1335"
    },
    "4913": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "4916": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4917": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4918": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4920": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4921": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4922": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4923": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "ADD",
      "path": "2"
    },
    "4925": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4926": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4927": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MOD",
      "path": "2"
    },
    "4928": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4930": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MUL",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4933": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4934": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4937": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "EXP",
      "path": "2"
    },
    "4938": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4939": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4940": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4943": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4944": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4947": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4948": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4949": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "POP",
      "path": "2"
    },
    "4950": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5696,
        5697
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 36
    },
    "4951": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4952": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "POP",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4954": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5724,
        5725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4956": {
      "branch": 127,
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5725
      ],
      "op": "SUB",
      "path": "2"
    },
    "4957": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1365"
    },
    "4960": {
      "branch": 127,
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5735,
        5736
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "4963": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4964": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "POP",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4966": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B6"
    },
    "4969": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4970": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4971": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4973": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4974": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4975": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4978": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4980": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4981": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4983": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4984": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4985": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4986": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4989": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "ADD",
      "path": "2"
    },
    "4990": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5801,
        5802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4991": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4993": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4994": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "LT",
      "path": "2"
    },
    "4995": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138E"
    },
    "4998": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4999": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138E"
    },
    "5002": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "5005": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5006": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5007": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5009": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5010": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5011": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5012": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "5013": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "ADD",
      "path": "2"
    },
    "5014": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5015": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5016": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MOD",
      "path": "2"
    },
    "5017": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5019": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MUL",
      "path": "2"
    },
    "5020": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5021": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5022": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5023": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5026": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "EXP",
      "path": "2"
    },
    "5027": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5028": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "5029": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5032": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "AND",
      "path": "2"
    },
    "5033": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5036": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "AND",
      "path": "2"
    },
    "5037": {
      "branch": 128,
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "SUB",
      "path": "2"
    },
    "5038": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B6"
    },
    "5041": {
      "branch": 128,
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5042": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5847,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x1"
    },
    "5044": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5045": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "POP",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5047": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "5048": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C0"
    },
    "5051": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ADA"
    },
    "5055": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5056": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5057": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5058": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "5059": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "5060": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12AE"
    },
    "5063": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5064": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 40
    },
    "5067": {
      "branch": 129,
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140A"
    },
    "5071": {
      "branch": 129,
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5072": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5074": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5081": {
      "op": "SHL"
    },
    "5082": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5086": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5088": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5089": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "ADD",
      "path": "2"
    },
    "5090": {
      "op": "MSTORE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5095": {
      "op": "DUP3"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "MSTORE"
    },
    "5098": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5117": {
      "op": "SHL"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5120": {
      "op": "DUP3"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "MSTORE"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "5129": {
      "op": "JUMP"
    },
    "5130": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 41
    },
    "5133": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5134": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "op": "POP"
    },
    "5137": {
      "op": "POP"
    },
    "5138": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.vote",
      "offset": [
        11898,
        12562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5140": {
      "offset": [
        22298,
        22329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5142": {
      "fn": "Governance.vote",
      "offset": [
        22298,
        22329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5149": {
      "op": "SHL"
    },
    "5150": {
      "offset": [
        22298,
        22329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5151": {
      "fn": "Governance.vote",
      "offset": [
        22298,
        22329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5154": {
      "offset": [
        22298,
        22329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5156": {
      "fn": "Governance.vote",
      "offset": [
        22298,
        22329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5157": {
      "fn": "Governance.vote",
      "offset": [
        22298,
        22329
      ],
      "op": "ADD",
      "path": "2"
    },
    "5158": {
      "op": "MSTORE"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5163": {
      "op": "DUP3"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "MSTORE"
    },
    "5166": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "MSTORE"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5191": {
      "op": "ADD"
    },
    "5192": {
      "offset": [
        22298,
        22329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "5195": {
      "op": "JUMP"
    },
    "5196": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5197": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5199": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5201": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5204": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5209": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5211": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5212": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5213": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1467"
    },
    "5218": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5219": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "5222": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5223": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5224": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5227": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5228": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5230": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5233": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5234": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5236": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5237": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5239": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5243": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5245": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5246": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5247": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5248": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5249": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5250": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5251": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5252": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5253": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5255": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5256": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5258": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5259": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1493"
    },
    "5262": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5263": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "5266": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5267": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5269": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5270": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E0"
    },
    "5273": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5275": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5277": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "LT",
      "path": "2"
    },
    "5278": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B5"
    },
    "5281": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5282": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5285": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5286": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5287": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5288": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5289": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5290": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5292": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5293": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5295": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E0"
    },
    "5300": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5302": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5303": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5304": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5308": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5309": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5311": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5313": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5314": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5315": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5316": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5317": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5321": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5323": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5324": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5325": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5327": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5328": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5329": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5330": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "GT",
      "path": "2"
    },
    "5331": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C3"
    },
    "5334": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5335": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5336": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5337": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SUB",
      "path": "2"
    },
    "5338": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5340": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5341": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5342": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5343": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5344": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "op": "POP"
    },
    "5347": {
      "op": "POP"
    },
    "5348": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5350": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5351": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5352": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5353": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5355": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5356": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5357": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5358": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5360": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5361": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5362": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5365": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5366": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5368": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5369": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5370": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5371": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5377": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5378": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5379": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5380": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5381": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5383": {
      "op": "POP"
    },
    "5384": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5385": {
      "op": "POP"
    },
    "5386": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5388": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5390": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5391": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5395": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5398": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5399": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5400": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5401": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "op": "SUB"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5414": {
      "op": "SHL"
    },
    "5415": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5416": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5417": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5418": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5419": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5426": {
      "op": "SHL"
    },
    "5427": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5428": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5430": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5431": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5436": {
      "op": "SHL"
    },
    "5437": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5438": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5441": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5447": {
      "op": "SHL"
    },
    "5448": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5449": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5450": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5451": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5452": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5453": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5454": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5455": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1556"
    },
    "5458": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "5461": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5462": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5463": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x0"
    },
    "5465": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5466": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5467": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5468": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5470": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5472": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5473": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5475": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5476": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5477": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5479": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5480": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5481": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5484": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5485": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5486": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5487": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5488": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5489": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5490": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5491": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5492": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5494": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5495": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157F"
    },
    "5498": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5499": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "5502": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5503": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5504": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5507": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5508": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5510": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5511": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5513": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5514": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5516": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5517": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5519": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5523": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5525": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5526": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5527": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5528": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5529": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5531": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5532": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5533": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5535": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5536": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5537": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5538": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5539": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AB"
    },
    "5542": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5543": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "5546": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5547": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5548": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5549": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5550": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F8"
    },
    "5553": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5554": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5555": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5557": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "LT",
      "path": "2"
    },
    "5558": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15CD"
    },
    "5561": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5565": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5566": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5567": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5568": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5569": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5570": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5571": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5572": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5575": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5576": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5577": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F8"
    },
    "5580": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5581": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5582": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5583": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5585": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5586": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5588": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5589": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5591": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5593": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5596": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5597": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5598": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5599": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5600": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5601": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5603": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5604": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5605": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5607": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5608": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5609": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5610": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "GT",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15DB"
    },
    "5614": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5616": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SUB",
      "path": "2"
    },
    "5618": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5620": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5621": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5622": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "op": "POP"
    },
    "5628": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5629": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5635": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5644": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5645": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5646": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5647": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5649": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5650": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5651": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5654": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5655": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5656": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5657": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5659": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5660": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5662": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5664": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5666": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5667": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5669": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5674": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5678": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5680": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5681": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5682": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5684": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5685": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5690": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5691": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5693": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5697": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5700": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5709": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5716": {
      "op": "SHL"
    },
    "5717": {
      "op": "SUB"
    },
    "5718": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5721": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5728": {
      "op": "SHL"
    },
    "5729": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5730": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5731": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5734": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5736": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5737": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5739": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5740": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5741": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5746": {
      "op": "SHL"
    },
    "5747": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5748": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5749": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5750": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5752": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5753": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5760": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5762": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5764": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5767": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5768": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5770": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5771": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5772": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8450,
        8465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8477,
        8490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8477,
        8490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8520,
        8529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8520,
        8536
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8517,
        8536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8517,
        8536
      ],
      "op": "LT",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A8"
    },
    "5792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8602,
        8617
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8565,
        8566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "LT",
      "path": "2"
    },
    "5801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B4"
    },
    "5804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B4"
    },
    "5808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "5811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8555,
        8567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5830": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "AND",
      "path": "2"
    },
    "5831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "MUL",
      "path": "2"
    },
    "5838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8567
      ],
      "op": "ADD",
      "path": "2"
    },
    "5841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8599
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5848": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8617
      ],
      "op": "LT",
      "path": "2"
    },
    "5849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1718"
    },
    "5854": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "POP",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8662,
        8677
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8643,
        8644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "LT",
      "path": "2"
    },
    "5864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F3"
    },
    "5867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F3"
    },
    "5871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "5874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8633,
        8645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5875": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5881": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5890": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "MUL",
      "path": "2"
    },
    "5891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8645
      ],
      "op": "ADD",
      "path": "2"
    },
    "5892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "ADD",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "DIV",
      "path": "2"
    },
    "5903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8658
      ],
      "op": "AND",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8677
      ],
      "op": "GT",
      "path": "2"
    },
    "5911": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8633,
        8677
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1757"
    },
    "5918": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "POP",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8709,
        8724
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8691,
        8692
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "LT",
      "path": "2"
    },
    "5928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1733"
    },
    "5931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1733"
    },
    "5935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "5938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8681,
        8693
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "MUL",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8693
      ],
      "op": "ADD",
      "path": "2"
    },
    "5956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "ADD",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "DIV",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8706
      ],
      "op": "AND",
      "path": "2"
    },
    "5974": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8681,
        8724
      ],
      "op": "GT",
      "path": "2"
    },
    "5975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1794"
    },
    "5981": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "POP",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8770,
        8771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8750,
        8751
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "LT",
      "path": "2"
    },
    "5992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1773"
    },
    "5995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1773"
    },
    "5999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8740,
        8752
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "MUL",
      "path": "2"
    },
    "6019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8752
      ],
      "op": "ADD",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "ADD",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6028": {
      "op": "SHL"
    },
    "6029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "DIV",
      "path": "2"
    },
    "6031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8767
      ],
      "op": "AND",
      "path": "2"
    },
    "6035": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8740,
        8771
      ],
      "op": "GT",
      "path": "2"
    },
    "6036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8555,
        8771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8552,
        8837
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8552,
        8837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A0"
    },
    "6041": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8552,
        8837
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8814,
        8821
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 43
    },
    "6043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8814,
        8821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8814,
        8821
      ],
      "op": "ADD",
      "path": "2"
    },
    "6046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8814,
        8821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6047": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8814,
        8821
      ],
      "op": "POP",
      "path": "2"
    },
    "6048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8552,
        8837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9029,
        9032
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x1"
    },
    "6051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9029,
        9032
      ],
      "op": "ADD",
      "path": "2"
    },
    "6052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1696"
    },
    "6055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8500,
        9044
      ],
      "op": "POP",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9101,
        9106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9108,
        9109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6061": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9101,
        9109
      ],
      "op": "SUB",
      "path": "2"
    },
    "6062": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9097,
        9236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1814"
    },
    "6065": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9097,
        9236
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9164,
        9165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "ADD",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9125,
        9149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9125,
        9149
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "ADD",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "ADD",
      "path": "2"
    },
    "6096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SUB",
      "path": "2"
    },
    "6101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C8"
    },
    "6106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "POP",
      "path": "2"
    },
    "6109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9151,
        9166
      ],
      "op": "POP",
      "path": "2"
    },
    "6110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9125,
        9166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9125,
        9166
      ],
      "op": "POP",
      "path": "2"
    },
    "6112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x40"
    },
    "6114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6115": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "ADD",
      "path": "2"
    },
    "6119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6123": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "POP",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9189,
        9190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "LT",
      "path": "2"
    },
    "6135": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1802"
    },
    "6138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1802"
    },
    "6142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9180,
        9191
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6147": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6149": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "MUL",
      "path": "2"
    },
    "6152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6153": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "ADD",
      "path": "2"
    },
    "6156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9191
      ],
      "op": "ADD",
      "path": "2"
    },
    "6157": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9180,
        9196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6158": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9217,
        9225
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 46
    },
    "6159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "op": "POP"
    },
    "6162": {
      "op": "POP"
    },
    "6163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9097,
        9236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9246,
        9269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9285,
        9290
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "op": "SUB"
    },
    "6176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "GT",
      "path": "2"
    },
    "6178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x182E"
    },
    "6182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x182E"
    },
    "6186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300C"
    },
    "6189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6193": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "MUL",
      "path": "2"
    },
    "6202": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6207": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1861"
    },
    "6215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6225": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SUB",
      "path": "2"
    },
    "6233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184C"
    },
    "6238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "POP",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9272,
        9291
      ],
      "op": "POP",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9246,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9246,
        9291
      ],
      "op": "POP",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9301,
        9316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9334,
        9343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9366
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9347,
        9366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9347,
        9366
      ],
      "op": "LT",
      "path": "2"
    },
    "6254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6255": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4C"
    },
    "6258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9432,
        9447
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6260": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9395,
        9396
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "LT",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1886"
    },
    "6270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1886"
    },
    "6274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9385,
        9397
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6284": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6288": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "DUP12",
      "path": "2"
    },
    "6296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "AND",
      "path": "2"
    },
    "6297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "MUL",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9397
      ],
      "op": "ADD",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6312": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9429
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6314": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9447
      ],
      "op": "LT",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EA"
    },
    "6320": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "POP",
      "path": "2"
    },
    "6322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9507
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9473,
        9474
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "LT",
      "path": "2"
    },
    "6330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C5"
    },
    "6333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C5"
    },
    "6337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9463,
        9475
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "MUL",
      "path": "2"
    },
    "6357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9475
      ],
      "op": "ADD",
      "path": "2"
    },
    "6358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "ADD",
      "path": "2"
    },
    "6361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6366": {
      "op": "SHL"
    },
    "6367": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "DIV",
      "path": "2"
    },
    "6369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9488
      ],
      "op": "AND",
      "path": "2"
    },
    "6376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9507
      ],
      "op": "GT",
      "path": "2"
    },
    "6377": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9463,
        9507
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9507
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1929"
    },
    "6384": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "POP",
      "path": "2"
    },
    "6386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9539,
        9554
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9521,
        9522
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "LT",
      "path": "2"
    },
    "6394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1905"
    },
    "6397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1905"
    },
    "6401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9511,
        9523
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "MUL",
      "path": "2"
    },
    "6421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9523
      ],
      "op": "ADD",
      "path": "2"
    },
    "6422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "ADD",
      "path": "2"
    },
    "6425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6430": {
      "op": "SHL"
    },
    "6431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "DIV",
      "path": "2"
    },
    "6433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6439": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9536
      ],
      "op": "AND",
      "path": "2"
    },
    "6440": {
      "branch": 137,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9511,
        9554
      ],
      "op": "GT",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1966"
    },
    "6447": {
      "branch": 137,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "POP",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9600,
        9601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9579
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9580,
        9581
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6454": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "LT",
      "path": "2"
    },
    "6458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1945"
    },
    "6461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1945"
    },
    "6465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9570,
        9582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "MUL",
      "path": "2"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9582
      ],
      "op": "ADD",
      "path": "2"
    },
    "6486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "ADD",
      "path": "2"
    },
    "6489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6494": {
      "op": "SHL"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "DIV",
      "path": "2"
    },
    "6497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9597
      ],
      "op": "AND",
      "path": "2"
    },
    "6501": {
      "branch": 138,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9570,
        9601
      ],
      "op": "GT",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9385,
        9601
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9382,
        9811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9382,
        9811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A44"
    },
    "6507": {
      "branch": 138,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9382,
        9811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9662
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x4"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9663,
        9664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "LT",
      "path": "2"
    },
    "6515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197E"
    },
    "6518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197E"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9653,
        9665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "MUL",
      "path": "2"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9665
      ],
      "op": "ADD",
      "path": "2"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6543": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9653,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199A"
    },
    "6549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "6553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DIV",
      "path": "2"
    },
    "6564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MUL",
      "path": "2"
    },
    "6565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6581": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C6"
    },
    "6593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "6597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "6604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "LT",
      "path": "2"
    },
    "6609": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E8"
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DIV",
      "path": "2"
    },
    "6620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MUL",
      "path": "2"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "6631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6633": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6634": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6644": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6645": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6652": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "GT",
      "path": "2"
    },
    "6662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F6"
    },
    "6665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6666": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SUB",
      "path": "2"
    },
    "6669": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "AND",
      "path": "2"
    },
    "6672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6677": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9641
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9642,
        9649
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "LT",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2A"
    },
    "6690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2A"
    },
    "6694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "6697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9634,
        9650
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "MUL",
      "path": "2"
    },
    "6702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "ADD",
      "path": "2"
    },
    "6705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9650
      ],
      "op": "ADD",
      "path": "2"
    },
    "6706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9634,
        9674
      ],
      "op": "POP",
      "path": "2"
    },
    "6710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9702,
        9711
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "6711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9702,
        9711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9702,
        9711
      ],
      "op": "ADD",
      "path": "2"
    },
    "6714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9702,
        9711
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9702,
        9711
      ],
      "op": "POP",
      "path": "2"
    },
    "6716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9744,
        9749
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9733,
        9740
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6718": {
      "branch": 139,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9733,
        9749
      ],
      "op": "LT",
      "path": "2"
    },
    "6719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9773,
        9778
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 49,
      "value": "0x1A4C"
    },
    "6723": {
      "branch": 139,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9797
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9834,
        9837
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x1"
    },
    "6727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9834,
        9837
      ],
      "op": "ADD",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1868"
    },
    "6731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9330,
        9849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6733": {
      "op": "POP"
    },
    "6734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9865,
        9872
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 51
    },
    "6735": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9865,
        9872
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6736": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8379,
        9879
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6737": {
      "op": "POP"
    },
    "6738": {
      "op": "POP"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "op": "POP"
    },
    "6741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8379,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6742": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6743": {
      "fn": "Governance.createProposal",
      "offset": [
        12827,
        12828
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x1"
    },
    "6745": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12824
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6746": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6749": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12828
      ],
      "op": "AND",
      "path": "2"
    },
    "6750": {
      "branch": 140,
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12828
      ],
      "op": "GT",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6752": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6753": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6F"
    },
    "6756": {
      "branch": 140,
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6757": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "POP",
      "path": "2"
    },
    "6758": {
      "fn": "Governance.createProposal",
      "offset": [
        12851,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "6761": {
      "fn": "Governance.createProposal",
      "offset": [
        12832,
        12848
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6762": {
      "fn": "Governance.createProposal",
      "offset": [
        12832,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6765": {
      "fn": "Governance.createProposal",
      "offset": [
        12832,
        12854
      ],
      "op": "AND",
      "path": "2"
    },
    "6766": {
      "branch": 141,
      "fn": "Governance.createProposal",
      "offset": [
        12832,
        12854
      ],
      "op": "LT",
      "path": "2"
    },
    "6767": {
      "fn": "Governance.createProposal",
      "offset": [
        12808,
        12854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6768": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ABB"
    },
    "6771": {
      "branch": 141,
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6772": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6774": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6783": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6786": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6788": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6789": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "ADD",
      "path": "2"
    },
    "6790": {
      "op": "MSTORE"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6795": {
      "op": "DUP3"
    },
    "6796": {
      "op": "ADD"
    },
    "6797": {
      "op": "MSTORE"
    },
    "6798": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6833": {
      "op": "DUP3"
    },
    "6834": {
      "op": "ADD"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6838": {
      "op": "ADD"
    },
    "6839": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "6842": {
      "op": "JUMP"
    },
    "6843": {
      "fn": "Governance.createProposal",
      "offset": [
        12800,
        12884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6844": {
      "fn": "Governance.createProposal",
      "offset": [
        12912,
        12913
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x1"
    },
    "6846": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6848": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6850": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6851": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6852": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6853": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACE"
    },
    "6856": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A51"
    },
    "6861": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12894,
        12913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6862": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6863": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6864": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6865": {
      "fn": "Governance.createProposal",
      "offset": [
        12894,
        12913
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6866": {
      "op": "POP"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "fn": "Governance.createProposal",
      "offset": [
        12984,
        12998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6870": {
      "fn": "Governance.createProposal",
      "offset": [
        12984,
        12998
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6871": {
      "fn": "Governance.createProposal",
      "offset": [
        12944,
        12971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6873": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6874": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6875": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6876": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6878": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6880": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6881": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6883": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6884": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6885": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13036
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x3"
    },
    "6887": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6888": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13036
      ],
      "op": "ADD",
      "path": "2"
    },
    "6889": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6890": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6891": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "6907": {
      "op": "NOT"
    },
    "6908": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "AND",
      "path": "2",
      "statement": 55
    },
    "6909": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "6916": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6922": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6923": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6924": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "AND",
      "path": "2"
    },
    "6925": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6926": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6927": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6928": {
      "fn": "Governance.createProposal",
      "offset": [
        13013,
        13052
      ],
      "op": "MUL",
      "path": "2"
    },
    "6929": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6937": {
      "op": "SHL"
    },
    "6938": {
      "op": "NOT"
    },
    "6939": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "AND",
      "path": "2"
    },
    "6940": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6941": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6942": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6943": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "OR",
      "path": "2"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6948": {
      "op": "SHL"
    },
    "6949": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "AND",
      "path": "2"
    },
    "6952": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6953": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6954": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6955": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "MUL",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "OR",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.createProposal",
      "offset": [
        13066,
        13105
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6961": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13145
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 56
    },
    "6962": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13145
      ],
      "op": "ADD",
      "path": "2"
    },
    "6963": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6965": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6968": {
      "op": "NOT"
    },
    "6969": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "AND",
      "path": "2"
    },
    "6970": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6973": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6974": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "AND",
      "path": "2"
    },
    "6975": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "OR",
      "path": "2"
    },
    "6976": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6977": {
      "fn": "Governance.createProposal",
      "offset": [
        13119,
        13164
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6978": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6979": {
      "fn": "Governance.createProposal",
      "offset": [
        13178,
        13209
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0x1B4D"
    },
    "6982": {
      "fn": "Governance.createProposal",
      "offset": [
        13200,
        13209
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6983": {
      "fn": "Governance.createProposal",
      "offset": [
        13200,
        13209
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6984": {
      "fn": "Governance.createProposal",
      "offset": [
        12974,
        12999
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6985": {
      "fn": "Governance.createProposal",
      "offset": [
        13178,
        13209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B10"
    },
    "6988": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13178,
        13209
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6989": {
      "fn": "Governance.createProposal",
      "offset": [
        13178,
        13209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6990": {
      "fn": "Governance.createProposal",
      "offset": [
        13178,
        13209
      ],
      "op": "POP",
      "path": "2"
    },
    "6991": {
      "fn": "Governance.createProposal",
      "offset": [
        13220,
        13332
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1B61"
    },
    "6994": {
      "fn": "Governance.createProposal",
      "offset": [
        13236,
        13245
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6995": {
      "fn": "Governance.createProposal",
      "offset": [
        13236,
        13245
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6996": {
      "fn": "Governance.createProposal",
      "offset": [
        13254,
        13268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6998": {
      "fn": "Governance.createProposal",
      "offset": [
        13254,
        13268
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6999": {
      "fn": "Governance.createProposal",
      "offset": [
        13271,
        13272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7001": {
      "fn": "Governance.createProposal",
      "offset": [
        13274,
        13284
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7002": {
      "fn": "Governance.createProposal",
      "offset": [
        13286,
        13299
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.createProposal",
      "offset": [
        13301,
        13314
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.createProposal",
      "offset": [
        13316,
        13331
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.createProposal",
      "offset": [
        13220,
        13235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BEB"
    },
    "7008": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13220,
        13332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7009": {
      "fn": "Governance.createProposal",
      "offset": [
        13220,
        13332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7010": {
      "fn": "Governance.createProposal",
      "offset": [
        12790,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7011": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7012": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7013": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7016": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7017": {
      "fn": "Governance.createProposal",
      "offset": [
        12608,
        13370
      ],
      "op": "POP",
      "path": "2"
    },
    "7018": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        12608,
        13370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14716,
        14743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14746,
        14795
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B86"
    },
    "7025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14770,
        14794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7027": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7028": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7030": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7031": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7032": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7037": {
      "op": "SHL"
    },
    "7038": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7039": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7040": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "7041": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7042": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7043": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "7044": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7045": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14746,
        14795
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14716,
        14795
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14716,
        14795
      ],
      "op": "POP",
      "path": "2"
    },
    "7049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14805,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B90"
    },
    "7052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14805,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "7055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14805,
        14823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14805,
        14823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14833,
        14847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14833,
        14847
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14966,
        14985
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14962,
        14963
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14962,
        14985
      ],
      "op": "LT",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA0"
    },
    "7068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15019,
        15067
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 59,
      "value": "0x1BA7"
    },
    "7072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15039,
        15063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15065,
        15066
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15019,
        15038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7A"
    },
    "7078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15019,
        15067
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15019,
        15067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15011,
        15068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 60
    },
    "7083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "7101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15011,
        15068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15011,
        15068
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7110": {
      "op": "POP"
    },
    "7111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7115": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15091,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD5"
    },
    "7120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "7124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MUL",
      "path": "2"
    },
    "7136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7148": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7154": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C01"
    },
    "7164": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7165": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "7168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4E"
    },
    "7175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "LT",
      "path": "2"
    },
    "7180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C23"
    },
    "7183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7190": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MUL",
      "path": "2"
    },
    "7192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4E"
    },
    "7202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7211": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7226": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7227": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7229": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7230": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7232": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "GT",
      "path": "2"
    },
    "7233": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C31"
    },
    "7236": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7237": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7238": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7239": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SUB",
      "path": "2"
    },
    "7240": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7247": {
      "op": "POP"
    },
    "7248": {
      "op": "POP"
    },
    "7249": {
      "op": "POP"
    },
    "7250": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7253": {
      "op": "POP"
    },
    "7254": {
      "op": "POP"
    },
    "7255": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7266": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7267": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7268": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7277": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7278": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7279": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7284": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7287": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7293": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7296": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7297": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7306": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7307": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7308": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7319": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7320": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7324": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7329": {
      "op": "SHL"
    },
    "7330": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7338": {
      "op": "SHL"
    },
    "7339": {
      "op": "SUB"
    },
    "7340": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7341": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7344": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7345": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7350": {
      "op": "SHL"
    },
    "7351": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7352": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7353": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7357": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7358": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7359": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7361": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7362": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7363": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7368": {
      "op": "SHL"
    },
    "7369": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7373": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7374": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7375": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7380": {
      "op": "SHL"
    },
    "7381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DIV",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "AND",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "ADD",
      "path": "2"
    },
    "7391": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15082,
        15104
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15158
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15158
      ],
      "op": "ADD",
      "path": "2"
    },
    "7394": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7395": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15158
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15158
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7397": {
      "op": "POP"
    },
    "7398": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15161,
        15176
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7399": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15176
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7400": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15176
      ],
      "op": "AND",
      "path": "2"
    },
    "7401": {
      "branch": 142,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15176
      ],
      "op": "LT",
      "path": "2"
    },
    "7402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7403": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7404": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D00"
    },
    "7407": {
      "branch": 142,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "POP",
      "path": "2"
    },
    "7409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15196,
        15202
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15186
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7411": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15192
      ],
      "op": "ADD",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15202
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7421": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15202
      ],
      "op": "AND",
      "path": "2"
    },
    "7422": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15202
      ],
      "op": "EQ",
      "path": "2"
    },
    "7423": {
      "branch": 143,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15180,
        15202
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7427": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D15"
    },
    "7430": {
      "branch": 143,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7431": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "POP",
      "path": "2"
    },
    "7432": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15225,
        15231
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7433": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15212
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7434": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7437": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15222
      ],
      "op": "ADD",
      "path": "2"
    },
    "7438": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15222
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7439": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15231
      ],
      "op": "AND",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15231
      ],
      "op": "EQ",
      "path": "2"
    },
    "7444": {
      "branch": 144,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15206,
        15231
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15122,
        15231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15118,
        15672
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15118,
        15672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E98"
    },
    "7450": {
      "branch": 144,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15118,
        15672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7451": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15444
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 61,
      "value": "0xFFFF"
    },
    "7454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15444
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7455": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15444
      ],
      "op": "AND",
      "path": "2"
    },
    "7456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15427
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15427
      ],
      "op": "ADD",
      "path": "2"
    },
    "7460": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        15444
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7461": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15526,
        15542
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0xB"
    },
    "7463": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15526,
        15542
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7464": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15508,
        15542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D31"
    },
    "7467": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15508,
        15542
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7468": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15508,
        15523
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7469": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15508,
        15542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A51"
    },
    "7472": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15508,
        15542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7473": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15508,
        15542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7474": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15543
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15543
      ],
      "op": "AND",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15498
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15498
      ],
      "op": "ADD",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7487": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x0"
    },
    "7489": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7490": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7491": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7492": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7494": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7496": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7497": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7499": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7500": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7501": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7502": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15468
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15462,
        15468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7508": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5D"
    },
    "7511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397C"
    },
    "7516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15561,
        15583
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7518": {
      "op": "POP"
    },
    "7519": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7524": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7531": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7537": {
      "op": "NOT"
    },
    "7538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7546": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7548": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7549": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7550": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7551": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7554": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7555": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7557": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7559": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7560": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7561": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7562": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7565": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7566": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7570": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7571": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7572": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7576": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7577": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7579": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7580": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7581": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7583": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7586": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7587": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7588": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7589": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7591": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7592": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7596": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7598": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP12",
      "path": "2"
    },
    "7604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7610": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "7611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7613": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7618": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7623": {
      "op": "NOT"
    },
    "7624": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7628": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7630": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7631": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7635": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7636": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7638": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7639": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7640": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MUL",
      "path": "2"
    },
    "7641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7642": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7643": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7644": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7645": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7662": {
      "op": "NOT"
    },
    "7663": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7668": {
      "op": "SHL"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "op": "SUB"
    },
    "7677": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7682": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MUL",
      "path": "2"
    },
    "7684": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7689": {
      "op": "SHL"
    },
    "7690": {
      "op": "NOT"
    },
    "7691": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7692": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7697": {
      "op": "SHL"
    },
    "7698": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7702": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7703": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7704": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MUL",
      "path": "2"
    },
    "7705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7706": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "NOT"
    },
    "7718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "7727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MUL",
      "path": "2"
    },
    "7729": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7737": {
      "op": "SHL"
    },
    "7738": {
      "op": "NOT"
    },
    "7739": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7748": {
      "op": "SHL"
    },
    "7749": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "7753": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "MUL",
      "path": "2"
    },
    "7757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "OR",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7759": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7760": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15561,
        15583
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7763": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 64
    },
    "7764": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7768": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7769": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7770": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7772": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7774": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7775": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7776": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7777": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "7810": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7811": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8F"
    },
    "7814": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7815": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15627,
        15633
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15627,
        15633
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7818": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15643,
        15656
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BCF"
    },
    "7822": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15606,
        15657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7823": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7824": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7826": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SUB",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15606,
        15657
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15118,
        15672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7833": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15695,
        15698
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0x1"
    },
    "7835": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15695,
        15698
      ],
      "op": "ADD",
      "path": "2"
    },
    "7836": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B94"
    },
    "7839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14944,
        15710
      ],
      "op": "POP",
      "path": "2"
    },
    "7842": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14706,
        15769
      ],
      "op": "POP",
      "path": "2"
    },
    "7843": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14706,
        15769
      ],
      "op": "POP",
      "path": "2"
    },
    "7844": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14706,
        15769
      ],
      "op": "POP",
      "path": "2"
    },
    "7845": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14641,
        15769
      ],
      "op": "POP",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        14641,
        15769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7847": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x2"
    },
    "7850": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7851": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7854": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7861": {
      "op": "SHL"
    },
    "7862": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7863": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7864": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7866": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7867": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ADD",
      "path": "2"
    },
    "7868": {
      "op": "DUP6"
    },
    "7869": {
      "op": "SWAP1"
    },
    "7870": {
      "op": "MSTORE"
    },
    "7871": {
      "fn": "Governance.submitVerification",
      "offset": [
        18470,
        18480
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7872": {
      "fn": "Governance.submitVerification",
      "offset": [
        18470,
        18480
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7879": {
      "op": "SHL"
    },
    "7880": {
      "op": "SUB"
    },
    "7881": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18450
      ],
      "op": "AND",
      "path": "2"
    },
    "7882": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7883": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18458
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7888": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7891": {
      "op": "ADD"
    },
    "7892": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7894": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7896": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7897": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7898": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7899": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "SUB",
      "path": "2"
    },
    "7900": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7901": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7902": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "GAS",
      "path": "2"
    },
    "7903": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7906": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF0"
    },
    "7910": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7912": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7914": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7915": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7916": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7917": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7919": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7920": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7921": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "POP",
      "path": "2"
    },
    "7922": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "POP",
      "path": "2"
    },
    "7923": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "POP",
      "path": "2"
    },
    "7924": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "POP",
      "path": "2"
    },
    "7925": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7929": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7931": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "NOT",
      "path": "2"
    },
    "7932": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7935": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ADD",
      "path": "2"
    },
    "7936": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "AND",
      "path": "2"
    },
    "7937": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7938": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ADD",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7940": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7942": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7943": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "POP",
      "path": "2"
    },
    "7944": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7945": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "ADD",
      "path": "2"
    },
    "7946": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7947": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F14"
    },
    "7950": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7951": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7952": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF3"
    },
    "7955": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18440,
        18466
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7956": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18466
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7963": {
      "op": "SHL"
    },
    "7964": {
      "op": "SUB"
    },
    "7965": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18480
      ],
      "op": "AND",
      "path": "2"
    },
    "7966": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18480
      ],
      "op": "EQ",
      "path": "2"
    },
    "7967": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7968": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18517
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7969": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F45"
    },
    "7972": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7973": {
      "op": "POP"
    },
    "7974": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7976": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7977": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7978": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7979": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7981": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7983": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7984": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7986": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7987": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18498
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7988": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7990": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "ADD",
      "path": "2"
    },
    "7991": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7996": {
      "op": "SHL"
    },
    "7997": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7998": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "DIV",
      "path": "2"
    },
    "7999": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18509
      ],
      "op": "AND",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8004": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        18484,
        18517
      ],
      "op": "EQ",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.submitVerification",
      "offset": [
        18440,
        18517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8006": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F91"
    },
    "8009": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8012": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8019": {
      "op": "SHL"
    },
    "8020": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8026": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8027": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "ADD",
      "path": "2"
    },
    "8028": {
      "op": "DUP2"
    },
    "8029": {
      "op": "SWAP1"
    },
    "8030": {
      "op": "MSTORE"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8033": {
      "op": "DUP3"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "op": "MSTORE"
    },
    "8036": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8071": {
      "op": "DUP3"
    },
    "8072": {
      "op": "ADD"
    },
    "8073": {
      "op": "MSTORE"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8076": {
      "op": "ADD"
    },
    "8077": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "8080": {
      "op": "JUMP"
    },
    "8081": {
      "fn": "Governance.submitVerification",
      "offset": [
        18432,
        18554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18590
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x0"
    },
    "8084": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18579
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8085": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8086": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18590
      ],
      "op": "GT",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9F"
    },
    "8090": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8093": {
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8095": {
      "fn": "Governance.submitVerification",
      "offset": [
        18564,
        18591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8096": {
      "fn": "Governance.submitVerification",
      "offset": [
        18602,
        18621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8098": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8099": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8100": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8101": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8103": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8105": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8106": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8108": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8109": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8110": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "ADD",
      "path": "2"
    },
    "8114": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8115": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.submitVerification",
      "offset": [
        18624,
        18638
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8117": {
      "fn": "Governance.submitVerification",
      "offset": [
        18602,
        18621
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8122": {
      "op": "SHL"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8124": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "DIV",
      "path": "2"
    },
    "8125": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8128": {
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19211
      ],
      "op": "AND",
      "path": "2"
    },
    "8129": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        19195,
        19215
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8130": {
      "fn": "Governance.submitVerification",
      "offset": [
        19192,
        19397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x203A"
    },
    "8133": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        19192,
        19397
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19235,
        19244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8136": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19254,
        19261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8138": {
      "fn": "Governance.submitVerification",
      "offset": [
        19254,
        19268
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8139": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8140": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19268
      ],
      "op": "LT",
      "path": "2"
    },
    "8141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8142": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2038"
    },
    "8145": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8146": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19335
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 68
    },
    "8147": {
      "fn": "Governance.submitVerification",
      "offset": [
        19336,
        19337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8148": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8149": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8151": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "LT",
      "path": "2"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE3"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8156": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE3"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "8162": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19328,
        19338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "MUL",
      "path": "2"
    },
    "8167": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8169": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "ADD",
      "path": "2"
    },
    "8170": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "ADD",
      "path": "2"
    },
    "8171": {
      "fn": "Governance.submitVerification",
      "offset": [
        19328,
        19338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8172": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8174": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8175": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "ADD",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FFD"
    },
    "8181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8182": {
      "op": "DUP2"
    },
    "8183": {
      "op": "MSTORE"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8186": {
      "op": "ADD"
    },
    "8187": {
      "op": "SWAP1"
    },
    "8188": {
      "op": "JUMP"
    },
    "8189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8190": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8195": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8196": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8197": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "SUB",
      "path": "2"
    },
    "8198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "SUB",
      "path": "2"
    },
    "8199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8200": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8201": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19311,
        19339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8205": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8210": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "ADD",
      "path": "2"
    },
    "8211": {
      "fn": "Governance.submitVerification",
      "offset": [
        19301,
        19340
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8212": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19295
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19296,
        19297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8214": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8216": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8217": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "LT",
      "path": "2"
    },
    "8218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2025"
    },
    "8221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2025"
    },
    "8225": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "8228": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19288,
        19298
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8229": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8230": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8232": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8233": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8234": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "MUL",
      "path": "2"
    },
    "8235": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8236": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8237": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8238": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "ADD",
      "path": "2"
    },
    "8239": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19298
      ],
      "op": "ADD",
      "path": "2"
    },
    "8240": {
      "fn": "Governance.submitVerification",
      "offset": [
        19288,
        19340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8241": {
      "fn": "Governance.submitVerification",
      "offset": [
        19368,
        19371
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x1"
    },
    "8243": {
      "fn": "Governance.submitVerification",
      "offset": [
        19368,
        19371
      ],
      "op": "ADD",
      "path": "2"
    },
    "8244": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC8"
    },
    "8247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19231,
        19387
      ],
      "op": "POP",
      "path": "2"
    },
    "8250": {
      "fn": "Governance.submitVerification",
      "offset": [
        19192,
        19397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8251": {
      "fn": "Governance.submitVerification",
      "offset": [
        19406,
        19420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8253": {
      "fn": "Governance.submitVerification",
      "offset": [
        19450,
        19457
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8254": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8256": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "ADD",
      "path": "2"
    },
    "8260": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x204D"
    },
    "8263": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37EE"
    },
    "8268": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19433,
        19458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8269": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8277": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "SUB",
      "path": "2"
    },
    "8278": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "SUB",
      "path": "2"
    },
    "8279": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8281": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8284": {
      "fn": "Governance.submitVerification",
      "offset": [
        19433,
        19458
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8287": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8290": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "ADD",
      "path": "2"
    },
    "8291": {
      "fn": "Governance.submitVerification",
      "offset": [
        19423,
        19459
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19406,
        19459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8293": {
      "fn": "Governance.submitVerification",
      "offset": [
        19406,
        19459
      ],
      "op": "POP",
      "path": "2"
    },
    "8294": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8296": {
      "fn": "Governance.submitVerification",
      "offset": [
        19507,
        19513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8297": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19498
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8300": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19503
      ],
      "op": "ADD",
      "path": "2"
    },
    "8301": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19503
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8302": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19513
      ],
      "op": "EQ",
      "path": "2"
    },
    "8303": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2079"
    },
    "8306": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19520,
        19521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x207C"
    },
    "8312": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19516,
        19517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8316": {
      "fn": "Governance.submitVerification",
      "offset": [
        19492,
        19521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8317": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8319": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8320": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8321": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "ADD",
      "path": "2"
    },
    "8322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8325": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8327": {
      "op": "DUP12"
    },
    "8328": {
      "op": "DUP2"
    },
    "8329": {
      "op": "MSTORE"
    },
    "8330": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8336": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19567,
        19579
      ],
      "op": "AND",
      "path": "2"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8341": {
      "op": "DUP4"
    },
    "8342": {
      "op": "ADD"
    },
    "8343": {
      "op": "MSTORE"
    },
    "8344": {
      "op": "DUP2"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "op": "DUP10"
    },
    "8347": {
      "op": "SWAP1"
    },
    "8348": {
      "op": "MSTORE"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8351": {
      "op": "DUP2"
    },
    "8352": {
      "op": "ADD"
    },
    "8353": {
      "op": "DUP6"
    },
    "8354": {
      "op": "SWAP1"
    },
    "8355": {
      "op": "MSTORE"
    },
    "8356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8358": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8359": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8360": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "AND",
      "path": "2"
    },
    "8362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19598,
        19612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8363": {
      "fn": "Governance.submitVerification",
      "offset": [
        19598,
        19612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19598,
        19612
      ],
      "op": "EQ",
      "path": "2"
    },
    "8365": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8367": {
      "op": "DUP4"
    },
    "8368": {
      "op": "ADD"
    },
    "8369": {
      "op": "MSTORE"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19470,
        19521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8371": {
      "op": "POP"
    },
    "8372": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "8405": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8408": {
      "op": "ADD"
    },
    "8409": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8414": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "SUB",
      "path": "2"
    },
    "8415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19537,
        19613
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8417": {
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8418": {
      "fn": "Governance.submitVerification",
      "offset": [
        19642,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8420": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19643
      ],
      "op": "SUB",
      "path": "2"
    },
    "8421": {
      "fn": "Governance.submitVerification",
      "offset": [
        19624,
        21890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E2"
    },
    "8424": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        19624,
        21890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "ADD",
      "path": "2"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8432": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8433": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x210C"
    },
    "8436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19753,
        19754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8439": {
      "fn": "Governance.submitVerification",
      "offset": [
        19753,
        19754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8444": {
      "op": "SHL"
    },
    "8445": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "DIV",
      "path": "2"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8451": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8453": {
      "op": "SHL"
    },
    "8454": {
      "op": "SUB"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19752
      ],
      "op": "AND",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9A"
    },
    "8459": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19738,
        19754
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8461": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8463": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8466": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8467": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8468": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8469": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8470": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8472": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8473": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8480": {
      "op": "SHL"
    },
    "8481": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8482": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8487": {
      "op": "SHL"
    },
    "8488": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8490": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8494": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19844
      ],
      "op": "AND",
      "path": "2"
    },
    "8495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8496": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8497": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ADD",
      "path": "2"
    },
    "8498": {
      "op": "SWAP2"
    },
    "8499": {
      "op": "SWAP1"
    },
    "8500": {
      "op": "SWAP2"
    },
    "8501": {
      "op": "MSTORE"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8508": {
      "op": "SHL"
    },
    "8509": {
      "op": "SUB"
    },
    "8510": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19754
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8511": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8512": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19754
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8513": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19754
      ],
      "op": "AND",
      "path": "2"
    },
    "8514": {
      "fn": "Governance.submitVerification",
      "offset": [
        19722,
        19754
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8515": {
      "op": "POP"
    },
    "8516": {
      "fn": "Governance.submitVerification",
      "offset": [
        19768,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8518": {
      "fn": "Governance.submitVerification",
      "offset": [
        19768,
        19797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8528": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8529": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "AND",
      "path": "2"
    },
    "8530": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8531": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8536": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8539": {
      "op": "ADD"
    },
    "8540": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8542": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8544": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8545": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8546": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8547": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "SUB",
      "path": "2"
    },
    "8548": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8550": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "GAS",
      "path": "2"
    },
    "8551": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8554": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8555": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2178"
    },
    "8558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8563": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8567": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8568": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8569": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "POP",
      "path": "2"
    },
    "8570": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "POP",
      "path": "2"
    },
    "8571": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "POP",
      "path": "2"
    },
    "8572": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "POP",
      "path": "2"
    },
    "8573": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8575": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8576": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8579": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "NOT",
      "path": "2"
    },
    "8580": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8582": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8583": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ADD",
      "path": "2"
    },
    "8584": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "AND",
      "path": "2"
    },
    "8585": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8586": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ADD",
      "path": "2"
    },
    "8587": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8588": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8590": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8591": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "POP",
      "path": "2"
    },
    "8592": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8593": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "ADD",
      "path": "2"
    },
    "8594": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8595": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219C"
    },
    "8598": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8600": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF3"
    },
    "8603": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19808,
        19845
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8604": {
      "fn": "Governance.submitVerification",
      "offset": [
        19808,
        19845
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8605": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x2"
    },
    "8607": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8610": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8611": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "ADD",
      "path": "2"
    },
    "8612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8615": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8616": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8617": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "ADD",
      "path": "2"
    },
    "8618": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8619": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8621": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8622": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8629": {
      "op": "SHL"
    },
    "8630": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8631": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8632": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8638": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8639": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8640": {
      "fn": "Governance.submitVerification",
      "offset": [
        19937,
        19949
      ],
      "op": "AND",
      "path": "2"
    },
    "8641": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8642": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8643": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "ADD",
      "path": "2"
    },
    "8644": {
      "op": "SWAP2"
    },
    "8645": {
      "op": "SWAP1"
    },
    "8646": {
      "op": "SWAP2"
    },
    "8647": {
      "op": "MSTORE"
    },
    "8648": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8652": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "DIV",
      "path": "2"
    },
    "8653": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8657": {
      "fn": "Governance.submitVerification",
      "offset": [
        19951,
        19967
      ],
      "op": "AND",
      "path": "2"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8660": {
      "op": "DUP3"
    },
    "8661": {
      "op": "ADD"
    },
    "8662": {
      "op": "MSTORE"
    },
    "8663": {
      "fn": "Governance.submitVerification",
      "offset": [
        19768,
        19846
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8664": {
      "fn": "Governance.submitVerification",
      "offset": [
        19768,
        19846
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8665": {
      "op": "POP"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8672": {
      "op": "SHL"
    },
    "8673": {
      "op": "SUB"
    },
    "8674": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "AND",
      "path": "2"
    },
    "8675": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19936
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8681": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8684": {
      "op": "ADD"
    },
    "8685": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8687": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8690": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8691": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8692": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "SUB",
      "path": "2"
    },
    "8693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8697": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8698": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8699": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8700": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8701": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8702": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2206"
    },
    "8705": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8708": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8709": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8710": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8711": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "POP",
      "path": "2"
    },
    "8712": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "GAS",
      "path": "2"
    },
    "8713": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "CALL",
      "path": "2"
    },
    "8714": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8715": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8716": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8717": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221A"
    },
    "8720": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8724": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8725": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8726": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8727": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8729": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8730": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19968
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8731": {
      "op": "POP"
    },
    "8732": {
      "op": "POP"
    },
    "8733": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x2"
    },
    "8735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8736": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8738": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8739": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8740": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "ADD",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        20023,
        20048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8744": {
      "fn": "Governance.submitVerification",
      "offset": [
        20023,
        20048
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8748": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8755": {
      "op": "SHL"
    },
    "8756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8762": {
      "op": "SHL"
    },
    "8763": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8764": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8765": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "DIV",
      "path": "2"
    },
    "8766": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8769": {
      "fn": "Governance.submitVerification",
      "offset": [
        20004,
        20021
      ],
      "op": "AND",
      "path": "2"
    },
    "8770": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8771": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8772": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "ADD",
      "path": "2"
    },
    "8773": {
      "op": "SWAP3"
    },
    "8774": {
      "op": "SWAP1"
    },
    "8775": {
      "op": "SWAP3"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8779": {
      "op": "DUP2"
    },
    "8780": {
      "op": "ADD"
    },
    "8781": {
      "op": "SWAP2"
    },
    "8782": {
      "op": "SWAP1"
    },
    "8783": {
      "op": "SWAP2"
    },
    "8784": {
      "op": "MSTORE"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8791": {
      "op": "SHL"
    },
    "8792": {
      "op": "SUB"
    },
    "8793": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8794": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "AND",
      "path": "2"
    },
    "8796": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        19992
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8797": {
      "op": "POP"
    },
    "8798": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20003
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8803": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20003
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8804": {
      "op": "POP"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8807": {
      "op": "ADD"
    },
    "8808": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8809": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8811": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8813": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8814": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8815": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "SUB",
      "path": "2"
    },
    "8817": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8818": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8820": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8821": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8822": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8823": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8824": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2282"
    },
    "8829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8830": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8832": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "POP",
      "path": "2"
    },
    "8836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "GAS",
      "path": "2"
    },
    "8837": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "CALL",
      "path": "2"
    },
    "8838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8841": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2296"
    },
    "8844": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8845": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8849": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8850": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8851": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8853": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8854": {
      "fn": "Governance.submitVerification",
      "offset": [
        19982,
        20049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8855": {
      "op": "POP"
    },
    "8856": {
      "op": "POP"
    },
    "8857": {
      "op": "POP"
    },
    "8858": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20078
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x4"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20078
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8861": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20078
      ],
      "op": "ADD",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20080
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8864": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "8879": {
      "op": "NOT"
    },
    "8880": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20080
      ],
      "op": "AND",
      "path": "2"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        20064,
        20080
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8883": {
      "op": "POP"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        20079,
        20080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 74
    },
    "8887": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8888": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8891": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8897": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8898": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8899": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22CC"
    },
    "8902": {
      "fn": "Governance.submitVerification",
      "offset": [
        20130,
        20144
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8903": {
      "fn": "Governance.submitVerification",
      "offset": [
        20079,
        20080
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8904": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0D"
    },
    "8907": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20123,
        20144
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8908": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8909": {
      "op": "POP"
    },
    "8910": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "ADD",
      "path": "2"
    },
    "8914": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8916": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8922": {
      "op": "NOT"
    },
    "8923": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "AND",
      "path": "2"
    },
    "8924": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8925": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8928": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8930": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8931": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "ADD",
      "path": "2"
    },
    "8932": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8933": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8937": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "ADD",
      "path": "2"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8942": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8944": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8945": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8946": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "ADD",
      "path": "2"
    },
    "8947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8948": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8955": {
      "op": "SHL"
    },
    "8956": {
      "op": "SUB"
    },
    "8957": {
      "op": "NOT"
    },
    "8958": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "AND",
      "path": "2"
    },
    "8959": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8960": {
      "fn": "Governance.submitVerification",
      "offset": [
        20123,
        20144
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8963": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8964": {
      "op": "DUP2"
    },
    "8965": {
      "op": "SWAP1"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8972": {
      "op": "SHL"
    },
    "8973": {
      "op": "SUB"
    },
    "8974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20248
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20248
      ],
      "op": "AND",
      "path": "2"
    },
    "8976": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20256,
        20261
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8978": {
      "fn": "Governance.submitVerification",
      "offset": [
        20256,
        20261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8979": {
      "op": "DUP4"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8981": {
      "op": "DUP2"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8983": {
      "fn": "Governance.submitVerification",
      "offset": [
        20256,
        20261
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20248
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "GAS",
      "path": "2"
    },
    "8986": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "CALL",
      "path": "2"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "8989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "8990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "8991": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "EQ",
      "path": "2"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234A"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9001": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9003": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9005": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "9006": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "NOT",
      "path": "2"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "ADD",
      "path": "2"
    },
    "9013": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "AND",
      "path": "2"
    },
    "9014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "ADD",
      "path": "2"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9018": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9021": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9028": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "ADD",
      "path": "2"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9030": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234F"
    },
    "9033": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9035": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9038": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "9039": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9040": {
      "fn": "Governance.submitVerification",
      "offset": [
        20230,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20197,
        20266
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20197,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "9043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20197,
        20266
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20197,
        20266
      ],
      "op": "POP",
      "path": "2"
    },
    "9045": {
      "branch": 151,
      "fn": "Governance.submitVerification",
      "offset": [
        20288,
        20292
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 75
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2371"
    },
    "9049": {
      "branch": 151,
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9050": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9052": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9059": {
      "op": "SHL"
    },
    "9060": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9061": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9062": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9064": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "ADD",
      "path": "2"
    },
    "9065": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "9068": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CCE"
    },
    "9072": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20280,
        20317
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9073": {
      "fn": "Governance.submitVerification",
      "offset": [
        20280,
        20317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9074": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x40"
    },
    "9076": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20389
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9078": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20402,
        20407
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9080": {
      "fn": "Governance.submitVerification",
      "offset": [
        20402,
        20407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9081": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9083": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9084": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9085": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20402,
        20407
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9087": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20389
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "GAS",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "CALL",
      "path": "2"
    },
    "9090": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9091": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "POP",
      "path": "2"
    },
    "9092": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "POP",
      "path": "2"
    },
    "9093": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "POP",
      "path": "2"
    },
    "9094": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9095": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9096": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9098": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9099": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "EQ",
      "path": "2"
    },
    "9100": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23B1"
    },
    "9103": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9104": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9108": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "POP",
      "path": "2"
    },
    "9109": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "NOT",
      "path": "2"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9115": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "ADD",
      "path": "2"
    },
    "9116": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "AND",
      "path": "2"
    },
    "9117": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9118": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "ADD",
      "path": "2"
    },
    "9119": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9121": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9122": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9123": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9124": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9125": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9126": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "ADD",
      "path": "2"
    },
    "9132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9133": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23B6"
    },
    "9136": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9137": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9138": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "POP",
      "path": "2"
    },
    "9142": {
      "fn": "Governance.submitVerification",
      "offset": [
        20379,
        20412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9143": {
      "op": "POP"
    },
    "9144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20364,
        20412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9145": {
      "fn": "Governance.submitVerification",
      "offset": [
        20364,
        20412
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9146": {
      "op": "POP"
    },
    "9147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20364,
        20412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9148": {
      "op": "POP"
    },
    "9149": {
      "fn": "Governance.submitVerification",
      "offset": [
        20364,
        20412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9150": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x23D9"
    },
    "9153": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9154": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9163": {
      "op": "SHL"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "ADD",
      "path": "2"
    },
    "9169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "9172": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9173": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CCE"
    },
    "9176": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20426,
        20463
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9177": {
      "fn": "Governance.submitVerification",
      "offset": [
        20426,
        20463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19644,
        20475
      ],
      "op": "POP",
      "path": "2"
    },
    "9179": {
      "fn": "Governance.submitVerification",
      "offset": [
        19644,
        20475
      ],
      "op": "POP",
      "path": "2"
    },
    "9180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19644,
        20475
      ],
      "op": "POP",
      "path": "2"
    },
    "9181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19644,
        20475
      ],
      "op": "POP",
      "path": "2"
    },
    "9182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19624,
        21890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCEE"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19624,
        21890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.submitVerification",
      "offset": [
        19624,
        21890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20657,
        20663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20637,
        20643
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20637,
        20655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9191": {
      "fn": "Governance.submitVerification",
      "offset": [
        20637,
        20655
      ],
      "op": "ADD",
      "path": "2"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20637,
        20655
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9193": {
      "branch": 152,
      "fn": "Governance.submitVerification",
      "offset": [
        20637,
        20663
      ],
      "op": "SUB",
      "path": "2"
    },
    "9194": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        21880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2559"
    },
    "9197": {
      "branch": 152,
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        21880
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9201": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "ADD",
      "path": "2"
    },
    "9202": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9205": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9206": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2411"
    },
    "9209": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9210": {
      "fn": "Governance.submitVerification",
      "offset": [
        20713,
        20714
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9212": {
      "fn": "Governance.submitVerification",
      "offset": [
        20713,
        20714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9217": {
      "op": "SHL"
    },
    "9218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "DIV",
      "path": "2"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9226": {
      "op": "SHL"
    },
    "9227": {
      "op": "SUB"
    },
    "9228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20712
      ],
      "op": "AND",
      "path": "2"
    },
    "9229": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9A"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20698,
        20714
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20698,
        20714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9234": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9236": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9239": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9240": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "ADD",
      "path": "2"
    },
    "9242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9246": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9253": {
      "op": "SHL"
    },
    "9254": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9255": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9263": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "DIV",
      "path": "2"
    },
    "9264": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9267": {
      "fn": "Governance.submitVerification",
      "offset": [
        20789,
        20805
      ],
      "op": "AND",
      "path": "2"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9270": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ADD",
      "path": "2"
    },
    "9271": {
      "op": "SWAP2"
    },
    "9272": {
      "op": "SWAP1"
    },
    "9273": {
      "op": "SWAP2"
    },
    "9274": {
      "op": "MSTORE"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9281": {
      "op": "SHL"
    },
    "9282": {
      "op": "SUB"
    },
    "9283": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20714
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20714
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20714
      ],
      "op": "AND",
      "path": "2"
    },
    "9287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20682,
        20714
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20759
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9298": {
      "op": "SHL"
    },
    "9299": {
      "op": "SUB"
    },
    "9300": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9301": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "AND",
      "path": "2"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20788
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9312": {
      "op": "ADD"
    },
    "9313": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9315": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9317": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9318": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9319": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "SUB",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9322": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9323": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "GAS",
      "path": "2"
    },
    "9324": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9325": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9328": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247D"
    },
    "9331": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9336": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9337": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9338": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9341": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "POP",
      "path": "2"
    },
    "9343": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "POP",
      "path": "2"
    },
    "9344": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "POP",
      "path": "2"
    },
    "9345": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "POP",
      "path": "2"
    },
    "9346": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9348": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9349": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9350": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9352": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "NOT",
      "path": "2"
    },
    "9353": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9355": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9356": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ADD",
      "path": "2"
    },
    "9357": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "AND",
      "path": "2"
    },
    "9358": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9359": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ADD",
      "path": "2"
    },
    "9360": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9363": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "POP",
      "path": "2"
    },
    "9365": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9366": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "ADD",
      "path": "2"
    },
    "9367": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9368": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A1"
    },
    "9371": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9372": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9373": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF3"
    },
    "9376": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20770,
        20806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9377": {
      "fn": "Governance.submitVerification",
      "offset": [
        20770,
        20806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9378": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20836
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x2"
    },
    "9380": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20836
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9381": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9383": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9384": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9385": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "ADD",
      "path": "2"
    },
    "9386": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9387": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20891
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9389": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20891
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9392": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9393": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9402": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9407": {
      "op": "SHL"
    },
    "9408": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9409": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9410": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "DIV",
      "path": "2"
    },
    "9411": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9414": {
      "fn": "Governance.submitVerification",
      "offset": [
        20848,
        20864
      ],
      "op": "AND",
      "path": "2"
    },
    "9415": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9416": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9417": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "ADD",
      "path": "2"
    },
    "9418": {
      "op": "SWAP3"
    },
    "9419": {
      "op": "SWAP1"
    },
    "9420": {
      "op": "SWAP3"
    },
    "9421": {
      "op": "MSTORE"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9424": {
      "op": "DUP2"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "op": "SWAP2"
    },
    "9427": {
      "op": "SWAP1"
    },
    "9428": {
      "op": "SWAP2"
    },
    "9429": {
      "op": "MSTORE"
    },
    "9430": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20807
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9431": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20807
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9432": {
      "op": "POP"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9439": {
      "op": "SHL"
    },
    "9440": {
      "op": "SUB"
    },
    "9441": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20836
      ],
      "op": "AND",
      "path": "2"
    },
    "9442": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20847
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9448": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20847
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9451": {
      "op": "ADD"
    },
    "9452": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9454": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9456": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9457": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9459": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "SUB",
      "path": "2"
    },
    "9460": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9461": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9463": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9464": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9465": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9466": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9467": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9468": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9469": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2505"
    },
    "9472": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9473": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9475": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9476": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9477": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9478": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "POP",
      "path": "2"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "GAS",
      "path": "2"
    },
    "9480": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "CALL",
      "path": "2"
    },
    "9481": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9482": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9483": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9484": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2519"
    },
    "9487": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9488": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9491": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9492": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9493": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9494": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9496": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9497": {
      "fn": "Governance.submitVerification",
      "offset": [
        20826,
        20892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9498": {
      "op": "POP"
    },
    "9499": {
      "op": "POP"
    },
    "9500": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x2"
    },
    "9502": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9503": {
      "fn": "Governance.submitVerification",
      "offset": [
        20940,
        20965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9505": {
      "fn": "Governance.submitVerification",
      "offset": [
        20940,
        20965
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9506": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9508": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9509": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9516": {
      "op": "SHL"
    },
    "9517": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9518": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9519": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9521": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9522": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "ADD",
      "path": "2"
    },
    "9523": {
      "op": "DUP15"
    },
    "9524": {
      "op": "SWAP1"
    },
    "9525": {
      "op": "MSTORE"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9528": {
      "op": "DUP2"
    },
    "9529": {
      "op": "ADD"
    },
    "9530": {
      "op": "SWAP2"
    },
    "9531": {
      "op": "SWAP1"
    },
    "9532": {
      "op": "SWAP2"
    },
    "9533": {
      "op": "MSTORE"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9540": {
      "op": "SHL"
    },
    "9541": {
      "op": "SUB"
    },
    "9542": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9543": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9544": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "AND",
      "path": "2"
    },
    "9545": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20920
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9546": {
      "op": "POP"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20931
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9552": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20931
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9553": {
      "op": "POP"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9556": {
      "op": "ADD"
    },
    "9557": {
      "fn": "Governance.submitVerification",
      "offset": [
        20910,
        20966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2268"
    },
    "9560": {
      "op": "JUMP"
    },
    "9561": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        21880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9565": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "ADD",
      "path": "2"
    },
    "9566": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9567": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9569": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 80
    },
    "9570": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9571": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9572": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "9574": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9576": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9577": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9579": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9580": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9585": {
      "op": "SHL"
    },
    "9586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9587": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9588": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "DIV",
      "path": "2"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9595": {
      "op": "SHL"
    },
    "9596": {
      "op": "SUB"
    },
    "9597": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "AND",
      "path": "2"
    },
    "9598": {
      "fn": "Governance.submitVerification",
      "offset": [
        21595,
        21609
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9599": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2589"
    },
    "9603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21634,
        21648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21579,
        21592
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9605": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0D"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21627,
        21648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9609": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9610": {
      "op": "POP"
    },
    "9611": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9613": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9614": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "ADD",
      "path": "2"
    },
    "9615": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9616": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9617": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9623": {
      "op": "NOT"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "AND",
      "path": "2"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9626": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9627": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9629": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9631": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "ADD",
      "path": "2"
    },
    "9633": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9634": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9638": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "ADD",
      "path": "2"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9642": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9643": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9645": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9646": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9647": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "ADD",
      "path": "2"
    },
    "9648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9656": {
      "op": "SHL"
    },
    "9657": {
      "op": "SUB"
    },
    "9658": {
      "op": "NOT"
    },
    "9659": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "AND",
      "path": "2"
    },
    "9660": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9661": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21627,
        21648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D0"
    },
    "9666": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9668": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9675": {
      "op": "SHL"
    },
    "9676": {
      "op": "SUB"
    },
    "9677": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9678": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9679": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9680": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9687": {
      "op": "SHL"
    },
    "9688": {
      "op": "SUB"
    },
    "9689": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21711
      ],
      "op": "AND",
      "path": "2"
    },
    "9690": {
      "fn": "Governance.submitVerification",
      "offset": [
        21719,
        21724
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9691": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9693": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9694": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9696": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9698": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9699": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9700": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9701": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "SUB",
      "path": "2"
    },
    "9702": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9703": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9704": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9705": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "GAS",
      "path": "2"
    },
    "9706": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "CALL",
      "path": "2"
    },
    "9707": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9708": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9709": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9710": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9711": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9712": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9713": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9715": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9716": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "EQ",
      "path": "2"
    },
    "9717": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x261A"
    },
    "9720": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9721": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9723": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9724": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9725": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9726": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9728": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "NOT",
      "path": "2"
    },
    "9729": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9731": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9732": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "ADD",
      "path": "2"
    },
    "9733": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "AND",
      "path": "2"
    },
    "9734": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9735": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "ADD",
      "path": "2"
    },
    "9736": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9738": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9739": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9740": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9741": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9742": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9743": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9745": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9747": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9748": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "ADD",
      "path": "2"
    },
    "9749": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9750": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x261F"
    },
    "9753": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9754": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9755": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9757": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9758": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9759": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9760": {
      "fn": "Governance.submitVerification",
      "offset": [
        21699,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9761": {
      "fn": "Governance.submitVerification",
      "offset": [
        21666,
        21729
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9762": {
      "fn": "Governance.submitVerification",
      "offset": [
        21666,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9763": {
      "fn": "Governance.submitVerification",
      "offset": [
        21666,
        21729
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9764": {
      "fn": "Governance.submitVerification",
      "offset": [
        21666,
        21729
      ],
      "op": "POP",
      "path": "2"
    },
    "9765": {
      "branch": 153,
      "fn": "Governance.submitVerification",
      "offset": [
        21805,
        21809
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 81
    },
    "9766": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2641"
    },
    "9769": {
      "branch": 153,
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9770": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9772": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9779": {
      "op": "SHL"
    },
    "9780": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9781": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9782": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9784": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "ADD",
      "path": "2"
    },
    "9785": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "9788": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9789": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CCE"
    },
    "9792": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21797,
        21834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9793": {
      "fn": "Governance.submitVerification",
      "offset": [
        21797,
        21834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9794": {
      "fn": "Governance.submitVerification",
      "offset": [
        21473,
        21880
      ],
      "op": "POP",
      "path": "2"
    },
    "9795": {
      "fn": "Governance.submitVerification",
      "offset": [
        21473,
        21880
      ],
      "op": "POP",
      "path": "2"
    },
    "9796": {
      "fn": "Governance.submitVerification",
      "offset": [
        21473,
        21880
      ],
      "op": "POP",
      "path": "2"
    },
    "9797": {
      "fn": "Governance.submitVerification",
      "offset": [
        18372,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9798": {
      "fn": "Governance.submitVerification",
      "offset": [
        18372,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9799": {
      "fn": "Governance.submitVerification",
      "offset": [
        18372,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9800": {
      "fn": "Governance.submitVerification",
      "offset": [
        18372,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9801": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9802": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9803": {
      "fn": "Governance.submitVerification",
      "offset": [
        18276,
        21896
      ],
      "op": "POP",
      "path": "2"
    },
    "9804": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        18276,
        21896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9806": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9808": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9815": {
      "op": "SHL"
    },
    "9816": {
      "op": "SUB"
    },
    "9817": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9818": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9819": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "9820": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2677"
    },
    "9823": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9824": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9826": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9833": {
      "op": "SHL"
    },
    "9834": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9835": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9836": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9838": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "9839": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD4"
    },
    "9842": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9843": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3855"
    },
    "9846": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9847": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9854": {
      "op": "SHL"
    },
    "9855": {
      "op": "SUB"
    },
    "9856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 82
    },
    "9857": {
      "branch": 160,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "9"
    },
    "9858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26DC"
    },
    "9861": {
      "branch": 160,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9871": {
      "op": "SHL"
    },
    "9872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9878": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "9"
    },
    "9880": {
      "op": "MSTORE"
    },
    "9881": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9885": {
      "op": "DUP3"
    },
    "9886": {
      "op": "ADD"
    },
    "9887": {
      "op": "MSTORE"
    },
    "9888": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9923": {
      "op": "DUP3"
    },
    "9924": {
      "op": "ADD"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9935": {
      "op": "SHL"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9938": {
      "op": "DUP3"
    },
    "9939": {
      "op": "ADD"
    },
    "9940": {
      "op": "MSTORE"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9943": {
      "op": "ADD"
    },
    "9944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD4"
    },
    "9947": {
      "op": "JUMP"
    },
    "9948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 83,
      "value": "0x26E5"
    },
    "9952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D6A"
    },
    "9956": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "9"
    },
    "9959": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9960": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9961": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6074,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9963": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9964": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2704"
    },
    "9967": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6144,
        6168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "9969": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9970": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9972": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9973": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9974": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9977": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9979": {
      "op": "SHL"
    },
    "9980": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9981": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9982": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "9983": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9984": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9985": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "9986": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9987": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9988": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9989": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "POP",
      "path": "2"
    },
    "9991": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270E"
    },
    "9994": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB9"
    },
    "9997": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9998": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9999": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6323,
        6332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10001": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10002": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6341,
        6360
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10003": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10004": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6360
      ],
      "op": "LT",
      "path": "2"
    },
    "10005": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10006": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28AD"
    },
    "10009": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10010": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6391
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x9"
    },
    "10012": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10014": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2728"
    },
    "10017": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6420,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10019": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6445,
        6446
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10020": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7A"
    },
    "10023": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10024": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10025": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10027": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "SHR",
      "path": "2"
    },
    "10028": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10029": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10030": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10032": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10033": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10034": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10035": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10036": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10038": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10039": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10041": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10042": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10044": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10045": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10046": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "10049": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10050": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10052": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10053": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10054": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10055": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10057": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10058": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10059": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10060": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10061": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2755"
    },
    "10064": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10065": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "10068": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10069": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10070": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10071": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10073": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10074": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10076": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10077": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10078": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10079": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "10080": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10082": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10083": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10085": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10086": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10087": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10088": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10089": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10091": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10092": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10093": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10094": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10095": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10096": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10097": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10098": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10099": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10101": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10102": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10103": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10104": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10105": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2781"
    },
    "10108": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10109": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "10112": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10113": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10114": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10115": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10116": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27CE"
    },
    "10119": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10120": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10121": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10123": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "LT",
      "path": "2"
    },
    "10124": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A3"
    },
    "10127": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10128": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10131": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10132": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10133": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10134": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10135": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "10136": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10137": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10138": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10139": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10141": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10142": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10143": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27CE"
    },
    "10146": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10147": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10148": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10149": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10150": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10151": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10152": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10154": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10155": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10157": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10159": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10160": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10161": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10162": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10163": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10164": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10165": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10166": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10167": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10169": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10170": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10171": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10173": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10174": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10175": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10176": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "GT",
      "path": "2"
    },
    "10177": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B1"
    },
    "10180": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10181": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10182": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10183": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SUB",
      "path": "2"
    },
    "10184": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10190": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10191": {
      "op": "POP"
    },
    "10192": {
      "op": "POP"
    },
    "10193": {
      "op": "POP"
    },
    "10194": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10195": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10197": {
      "op": "POP"
    },
    "10198": {
      "op": "POP"
    },
    "10199": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10201": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10202": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10203": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10204": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10210": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10211": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10213": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10215": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10216": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10221": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10222": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10223": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10225": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10226": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10227": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10228": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10230": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10231": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10232": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10233": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10235": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10236": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10237": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10238": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10240": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10241": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10242": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10243": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10244": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10246": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10247": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10248": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "10250": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10251": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10252": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10253": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10256": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10257": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10258": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10259": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10263": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10264": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "10266": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10267": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10268": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10273": {
      "op": "SHL"
    },
    "10274": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10275": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10282": {
      "op": "SHL"
    },
    "10283": {
      "op": "SUB"
    },
    "10284": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10285": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10287": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10288": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10289": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10292": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10294": {
      "op": "SHL"
    },
    "10295": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10296": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10297": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10300": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10301": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10302": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10303": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10305": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10306": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10312": {
      "op": "SHL"
    },
    "10313": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10314": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10315": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10317": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10318": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10324": {
      "op": "SHL"
    },
    "10325": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10326": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10327": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10328": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10329": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10332": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10333": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10334": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10335": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10336": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10337": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "ADD",
      "path": "2"
    },
    "10338": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10340": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10341": {
      "op": "POP"
    },
    "10342": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6506,
        6521
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "10343": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10344": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "AND",
      "path": "2"
    },
    "10345": {
      "branch": 154,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "LT",
      "path": "2"
    },
    "10346": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10347": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10348": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2880"
    },
    "10351": {
      "branch": 154,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10352": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "POP",
      "path": "2"
    },
    "10353": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6541,
        6547
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10354": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10355": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10357": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "ADD",
      "path": "2"
    },
    "10358": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10359": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10365": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "AND",
      "path": "2"
    },
    "10366": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "EQ",
      "path": "2"
    },
    "10367": {
      "branch": 155,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10368": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10369": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10370": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10371": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2895"
    },
    "10374": {
      "branch": 155,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10375": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "POP",
      "path": "2"
    },
    "10376": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6570,
        6576
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10377": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6557
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10381": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "ADD",
      "path": "2"
    },
    "10382": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10383": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10386": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "AND",
      "path": "2"
    },
    "10387": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "EQ",
      "path": "2"
    },
    "10388": {
      "branch": 156,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10389": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10390": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10391": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28A5"
    },
    "10394": {
      "branch": 156,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10395": {
      "op": "POP"
    },
    "10396": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x1"
    },
    "10398": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10399": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10400": {
      "op": "POP"
    },
    "10401": {
      "op": "POP"
    },
    "10402": {
      "op": "POP"
    },
    "10403": {
      "op": "POP"
    },
    "10404": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10405": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10406": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x1"
    },
    "10408": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "ADD",
      "path": "2"
    },
    "10409": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2711"
    },
    "10412": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10413": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10414": {
      "op": "POP"
    },
    "10415": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x0"
    },
    "10417": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10418": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10419": {
      "op": "POP"
    },
    "10420": {
      "op": "POP"
    },
    "10421": {
      "op": "POP"
    },
    "10422": {
      "op": "POP"
    },
    "10423": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10424": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10425": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10298,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10427": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10428": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10313,
        10322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10430": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10313,
        10329
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10431": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10311,
        10329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10432": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10311,
        10329
      ],
      "op": "LT",
      "path": "2"
    },
    "10433": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10434": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A51"
    },
    "10437": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10438": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10429,
        10438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10439": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10441": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10442": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10444": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "ADD",
      "path": "2"
    },
    "10445": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D6"
    },
    "10448": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10449": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10450": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CFC"
    },
    "10453": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10412,
        10439
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10454": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10455": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10457": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10458": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10460": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10461": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10462": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "SUB",
      "path": "2"
    },
    "10463": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "SUB",
      "path": "2"
    },
    "10464": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10465": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10466": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10467": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10469": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10412,
        10439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10470": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10471": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10472": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10473": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10475": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "ADD",
      "path": "2"
    },
    "10476": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10402,
        10440
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10477": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10479": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10385,
        10386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10480": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10481": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10482": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10483": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "LT",
      "path": "2"
    },
    "10484": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FF"
    },
    "10487": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10488": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FF"
    },
    "10491": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "10494": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10375,
        10387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10495": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10496": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10497": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10499": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10500": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10502": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10504": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10505": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10506": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10508": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "MUL",
      "path": "2"
    },
    "10509": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10387
      ],
      "op": "ADD",
      "path": "2"
    },
    "10510": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10512": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10375,
        10396
      ],
      "op": "ADD",
      "path": "2"
    },
    "10513": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10515": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10516": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10518": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "ADD",
      "path": "2"
    },
    "10519": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2920"
    },
    "10522": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10523": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10524": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D18"
    },
    "10527": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10358,
        10397
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10528": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10529": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10531": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10532": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10534": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10535": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10536": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "SUB",
      "path": "2"
    },
    "10537": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "SUB",
      "path": "2"
    },
    "10538": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10539": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10540": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10541": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10543": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10358,
        10397
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10544": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10545": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10546": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10547": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10549": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "ADD",
      "path": "2"
    },
    "10550": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10398
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10551": {
      "branch": 157,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10348,
        10440
      ],
      "op": "SUB",
      "path": "2"
    },
    "10552": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10345,
        11393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A49"
    },
    "10555": {
      "branch": 157,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10345,
        11393
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10556": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10523,
        10550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10558": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10560": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10563,
        10564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10561": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10562": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10563": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10564": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "LT",
      "path": "2"
    },
    "10565": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2950"
    },
    "10568": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10569": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2950"
    },
    "10572": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "10575": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10553,
        10565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10576": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10577": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10578": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10580": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10581": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10583": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10585": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10586": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10589": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "MUL",
      "path": "2"
    },
    "10590": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10553,
        10565
      ],
      "op": "ADD",
      "path": "2"
    },
    "10591": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10523,
        10565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10592": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10523,
        10565
      ],
      "op": "POP",
      "path": "2"
    },
    "10593": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10595": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10597": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10647,
        10648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10599": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10601": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10602": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10646
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10603": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10604": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10646
      ],
      "op": "POP",
      "path": "2"
    },
    "10605": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2976"
    },
    "10608": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10609": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10610": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A8C"
    },
    "10613": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10630,
        10648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10614": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10630,
        10648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10615": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10616": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10617": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10618": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "LT",
      "path": "2"
    },
    "10619": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2986"
    },
    "10622": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10623": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2986"
    },
    "10626": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "10629": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10620,
        10649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10630": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10631": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10632": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10634": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10635": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10637": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10639": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10640": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10641": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10643": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "MUL",
      "path": "2"
    },
    "10644": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10620,
        10649
      ],
      "op": "ADD",
      "path": "2"
    },
    "10645": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10646": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10649
      ],
      "op": "POP",
      "path": "2"
    },
    "10647": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10778,
        10795
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 88
    },
    "10648": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10765,
        10795
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10649": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10765,
        10795
      ],
      "op": "POP",
      "path": "2"
    },
    "10650": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x4"
    },
    "10652": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10847,
        10848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10654": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10656": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10657": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10846
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10658": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10659": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10846
      ],
      "op": "POP",
      "path": "2"
    },
    "10660": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29AD"
    },
    "10663": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10848
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10664": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10665": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A8C"
    },
    "10668": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10830,
        10848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10669": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10830,
        10848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10670": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10671": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10672": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10673": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "LT",
      "path": "2"
    },
    "10674": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BD"
    },
    "10677": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10678": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BD"
    },
    "10681": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "10684": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10820,
        10849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10685": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10686": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10687": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10689": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10690": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10692": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10694": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10695": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10696": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10698": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "MUL",
      "path": "2"
    },
    "10699": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "ADD",
      "path": "2"
    },
    "10700": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10820,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10702": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10704": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10705": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "ADD",
      "path": "2"
    },
    "10706": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10708": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29DD"
    },
    "10711": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10712": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10713": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0D"
    },
    "10716": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10813,
        10849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10717": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10718": {
      "op": "POP"
    },
    "10719": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10721": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "ADD",
      "path": "2"
    },
    "10722": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10723": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10730": {
      "op": "SHL"
    },
    "10731": {
      "op": "SUB"
    },
    "10732": {
      "op": "NOT"
    },
    "10733": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "AND",
      "path": "2"
    },
    "10734": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10735": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10736": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11335
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x4"
    },
    "10738": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10739": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11352
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10740": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11354
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29FF"
    },
    "10743": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11354
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10744": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10746": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10747": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11354
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A8C"
    },
    "10750": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11336,
        11354
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10751": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11336,
        11354
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10752": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10753": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10754": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10755": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "LT",
      "path": "2"
    },
    "10756": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0F"
    },
    "10759": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10760": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0F"
    },
    "10763": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "10766": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11326,
        11355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10767": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10768": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10769": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10771": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10772": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10774": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10776": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10777": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10778": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10780": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "MUL",
      "path": "2"
    },
    "10781": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "ADD",
      "path": "2"
    },
    "10782": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11326,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10784": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10786": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10787": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "ADD",
      "path": "2"
    },
    "10788": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10790": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2F"
    },
    "10793": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10794": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10795": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0D"
    },
    "10798": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11319,
        11355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10799": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10800": {
      "op": "POP"
    },
    "10801": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10803": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "ADD",
      "path": "2"
    },
    "10804": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10805": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10810": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10812": {
      "op": "SHL"
    },
    "10813": {
      "op": "SUB"
    },
    "10814": {
      "op": "NOT"
    },
    "10815": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "AND",
      "path": "2"
    },
    "10816": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10817": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11319,
        11355
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10818": {
      "op": "POP"
    },
    "10819": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11373,
        11378
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 91,
      "value": "0x2A51"
    },
    "10822": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11373,
        11378
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10823": {
      "op": "POP"
    },
    "10824": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11373,
        11378
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10825": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10345,
        11393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10826": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11416,
        11419
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 92,
      "value": "0x1"
    },
    "10828": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11416,
        11419
      ],
      "op": "ADD",
      "path": "2"
    },
    "10829": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28BB"
    },
    "10832": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10833": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10834": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10294,
        11431
      ],
      "op": "POP",
      "path": "2"
    },
    "10835": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10216,
        11437
      ],
      "op": "POP",
      "path": "2"
    },
    "10836": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        10216,
        11437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10837": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10838": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10840": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0x8"
    },
    "10842": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10843": {
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10844": {
      "branch": 158,
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4711
      ],
      "op": "LT",
      "path": "2"
    },
    "10845": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A9B"
    },
    "10848": {
      "branch": 158,
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10849": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10851": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10858": {
      "op": "SHL"
    },
    "10859": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10860": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10863": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10865": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10866": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "ADD",
      "path": "2"
    },
    "10867": {
      "op": "MSTORE"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10872": {
      "op": "DUP3"
    },
    "10873": {
      "op": "ADD"
    },
    "10874": {
      "op": "MSTORE"
    },
    "10875": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10897": {
      "op": "DUP3"
    },
    "10898": {
      "op": "ADD"
    },
    "10899": {
      "op": "MSTORE"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10902": {
      "op": "ADD"
    },
    "10903": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD4"
    },
    "10906": {
      "op": "JUMP"
    },
    "10907": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10908": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10910": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10911": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10912": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10913": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10915": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10917": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10918": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10920": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10921": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10922": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10924": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "ADD",
      "path": "2"
    },
    "10925": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10926": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10929": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "AND",
      "path": "2"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10936": {
      "op": "SHL"
    },
    "10937": {
      "op": "SUB"
    },
    "10938": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10939": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "GT",
      "path": "2"
    },
    "10940": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10941": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC8"
    },
    "10944": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10945": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC8"
    },
    "10948": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300C"
    },
    "10951": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10952": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10953": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10955": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10956": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10957": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10958": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10959": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10960": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10961": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10963": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10964": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10966": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10967": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10968": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10969": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10971": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10972": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10973": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10974": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF1"
    },
    "10977": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10978": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10979": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10981": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10982": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10984": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10985": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10986": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10987": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "10988": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10989": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "10990": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10991": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10992": {
      "op": "POP"
    },
    "10993": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10994": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10995": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10996": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10997": {
      "fn": "Governance.getVotes",
      "offset": [
        4835,
        4844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10999": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11000": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4862
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11001": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4869
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11002": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11003": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4869
      ],
      "op": "LT",
      "path": "2"
    },
    "11004": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11005": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B73"
    },
    "11008": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11009": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x0"
    },
    "11011": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11012": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11013": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11014": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11016": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11018": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11019": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11021": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11022": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11023": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11025": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "ADD",
      "path": "2"
    },
    "11026": {
      "fn": "Governance.getVotes",
      "offset": [
        4932,
        4933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11027": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "11029": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11030": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "LT",
      "path": "2"
    },
    "11031": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B22"
    },
    "11034": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11035": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B22"
    },
    "11038": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "11041": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11042": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11043": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "11045": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11046": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11047": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11048": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "11049": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "ADD",
      "path": "2"
    },
    "11050": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11051": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11052": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MOD",
      "path": "2"
    },
    "11053": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11055": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MUL",
      "path": "2"
    },
    "11056": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11057": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11058": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11059": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11062": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "EXP",
      "path": "2"
    },
    "11063": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11064": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "11065": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11068": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "11069": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11070": {
      "fn": "Governance.getVotes",
      "offset": [
        4899,
        4900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11071": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11072": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11073": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11074": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "LT",
      "path": "2"
    },
    "11075": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4E"
    },
    "11078": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11079": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4E"
    },
    "11082": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "11085": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11086": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11087": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11090": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11091": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11092": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "11093": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11095": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11096": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11097": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MUL",
      "path": "2"
    },
    "11098": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11099": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11100": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11101": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "11102": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11103": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11104": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "11105": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11106": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "11107": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6B"
    },
    "11110": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11111": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ADA"
    },
    "11114": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11115": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11116": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11117": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "11118": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "11119": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF7"
    },
    "11122": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11123": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11124": {
      "op": "POP"
    },
    "11125": {
      "fn": "Governance.getVotes",
      "offset": [
        4961,
        4970
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 96
    },
    "11126": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11127": {
      "op": "POP"
    },
    "11128": {
      "op": "POP"
    },
    "11129": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11130": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11131": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11133": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11134": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B9D"
    },
    "11137": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B89"
    },
    "11140": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11141": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DBC"
    },
    "11144": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11145": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11146": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11147": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11148": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B98"
    },
    "11151": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11152": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11153": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11155": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11156": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D8A"
    },
    "11159": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11160": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11161": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2A"
    },
    "11164": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11165": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11166": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 97
    },
    "11167": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11168": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11169": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11170": {
      "op": "POP"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11175": {
      "op": "SHL"
    },
    "11176": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11177": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "11178": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11180": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11181": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11182": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11183": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11184": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11185": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11186": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11187": {
      "branch": 159,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "11188": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BD0"
    },
    "11191": {
      "branch": 159,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11192": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11194": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11195": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "11202": {
      "op": "SHL"
    },
    "11203": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11204": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11205": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11207": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "11208": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11210": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11211": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11212": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11213": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "11214": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11215": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11216": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11217": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0xF"
    },
    "11219": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11220": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11222": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11223": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11224": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11225": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11227": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11228": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11229": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11230": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "11231": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11233": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11234": {
      "op": "POP"
    },
    "11235": {
      "op": "POP"
    },
    "11236": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11238": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11239": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11240": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11241": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11242": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11243": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11244": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11246": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11247": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11248": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x1"
    },
    "11250": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11251": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "ADD",
      "path": "2"
    },
    "11252": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11253": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11254": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11255": {
      "fn": "Governance._createTaskType",
      "offset": [
        13918,
        13941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11257": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11258": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11259": {
      "fn": "Governance._createTaskType",
      "offset": [
        13970,
        13986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11260": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11261": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11262": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13953
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11263": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11264": {
      "fn": "Governance._createTaskType",
      "offset": [
        13944,
        13960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11265": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11266": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "LT",
      "path": "2"
    },
    "11267": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0E"
    },
    "11270": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11271": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0E"
    },
    "11274": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D8"
    },
    "11277": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14027,
        14053
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11278": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11279": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11281": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11282": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11283": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11284": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11286": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11287": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11288": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11289": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11291": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11292": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11293": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "MUL",
      "path": "2"
    },
    "11294": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "ADD",
      "path": "2"
    },
    "11295": {
      "fn": "Governance._createTaskType",
      "offset": [
        14027,
        14053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11296": {
      "op": "POP"
    },
    "11297": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14087
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x1"
    },
    "11299": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11300": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14087
      ],
      "op": "ADD",
      "path": "2"
    },
    "11301": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C2F"
    },
    "11304": {
      "fn": "Governance._createTaskType",
      "offset": [
        14089,
        14098
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11305": {
      "fn": "Governance._createTaskType",
      "offset": [
        14089,
        14098
      ],
      "op": "DUP13",
      "path": "2"
    },
    "11306": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14087
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11307": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B10"
    },
    "11310": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14067,
        14098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11311": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11312": {
      "fn": "Governance._createTaskType",
      "offset": [
        14067,
        14098
      ],
      "op": "POP",
      "path": "2"
    },
    "11313": {
      "fn": "Governance._createTaskType",
      "offset": [
        14133,
        14138
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x0"
    },
    "11315": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14123
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11316": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11318": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14130
      ],
      "op": "ADD",
      "path": "2"
    },
    "11319": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11321": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11324": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "EXP",
      "path": "2"
    },
    "11325": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11326": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11327": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11328": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11330": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "MUL",
      "path": "2"
    },
    "11331": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "NOT",
      "path": "2"
    },
    "11332": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "AND",
      "path": "2"
    },
    "11333": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11334": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11335": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11336": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11337": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "MUL",
      "path": "2"
    },
    "11338": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "OR",
      "path": "2"
    },
    "11339": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11340": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11341": {
      "fn": "Governance._createTaskType",
      "offset": [
        14112,
        14138
      ],
      "op": "POP",
      "path": "2"
    },
    "11342": {
      "fn": "Governance._createTaskType",
      "offset": [
        14177,
        14188
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 102
    },
    "11343": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14163
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11344": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11346": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14174
      ],
      "op": "ADD",
      "path": "2"
    },
    "11347": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11349": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11352": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "EXP",
      "path": "2"
    },
    "11353": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11354": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11355": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11356": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11362": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "MUL",
      "path": "2"
    },
    "11363": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "NOT",
      "path": "2"
    },
    "11364": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "AND",
      "path": "2"
    },
    "11365": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11366": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11367": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11373": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "AND",
      "path": "2"
    },
    "11374": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "MUL",
      "path": "2"
    },
    "11375": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "OR",
      "path": "2"
    },
    "11376": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11377": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11378": {
      "fn": "Governance._createTaskType",
      "offset": [
        14152,
        14188
      ],
      "op": "POP",
      "path": "2"
    },
    "11379": {
      "fn": "Governance._createTaskType",
      "offset": [
        14232,
        14248
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 103
    },
    "11380": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11381": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11383": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14229
      ],
      "op": "ADD",
      "path": "2"
    },
    "11384": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11386": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11389": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "EXP",
      "path": "2"
    },
    "11390": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11391": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11392": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11393": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11395": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "MUL",
      "path": "2"
    },
    "11396": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "NOT",
      "path": "2"
    },
    "11397": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "AND",
      "path": "2"
    },
    "11398": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11399": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11400": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11402": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "AND",
      "path": "2"
    },
    "11403": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "MUL",
      "path": "2"
    },
    "11404": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "OR",
      "path": "2"
    },
    "11405": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11406": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11407": {
      "fn": "Governance._createTaskType",
      "offset": [
        14202,
        14248
      ],
      "op": "POP",
      "path": "2"
    },
    "11408": {
      "fn": "Governance._createTaskType",
      "offset": [
        14286,
        14296
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 104
    },
    "11409": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11410": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11412": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14283
      ],
      "op": "ADD",
      "path": "2"
    },
    "11413": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11415": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11418": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "EXP",
      "path": "2"
    },
    "11419": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11420": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11421": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11422": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11426": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "MUL",
      "path": "2"
    },
    "11427": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "NOT",
      "path": "2"
    },
    "11428": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "AND",
      "path": "2"
    },
    "11429": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11430": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11431": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11435": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "AND",
      "path": "2"
    },
    "11436": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "MUL",
      "path": "2"
    },
    "11437": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "OR",
      "path": "2"
    },
    "11438": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11439": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11440": {
      "fn": "Governance._createTaskType",
      "offset": [
        14262,
        14296
      ],
      "op": "POP",
      "path": "2"
    },
    "11441": {
      "fn": "Governance._createTaskType",
      "offset": [
        14337,
        14350
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 105
    },
    "11442": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11443": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11445": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14334
      ],
      "op": "ADD",
      "path": "2"
    },
    "11446": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "11448": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11451": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "EXP",
      "path": "2"
    },
    "11452": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11453": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11454": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11455": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11461": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "MUL",
      "path": "2"
    },
    "11462": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "NOT",
      "path": "2"
    },
    "11463": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "AND",
      "path": "2"
    },
    "11464": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11465": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11466": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11472": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "AND",
      "path": "2"
    },
    "11473": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "MUL",
      "path": "2"
    },
    "11474": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "OR",
      "path": "2"
    },
    "11475": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11476": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11477": {
      "fn": "Governance._createTaskType",
      "offset": [
        14310,
        14350
      ],
      "op": "POP",
      "path": "2"
    },
    "11478": {
      "fn": "Governance._createTaskType",
      "offset": [
        14391,
        14404
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 106
    },
    "11479": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11480": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11482": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14388
      ],
      "op": "ADD",
      "path": "2"
    },
    "11483": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11485": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11488": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "EXP",
      "path": "2"
    },
    "11489": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11490": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11491": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11492": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11498": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "MUL",
      "path": "2"
    },
    "11499": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "NOT",
      "path": "2"
    },
    "11500": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "AND",
      "path": "2"
    },
    "11501": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11502": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11503": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11509": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "AND",
      "path": "2"
    },
    "11510": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "MUL",
      "path": "2"
    },
    "11511": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "OR",
      "path": "2"
    },
    "11512": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11513": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11514": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14404
      ],
      "op": "POP",
      "path": "2"
    },
    "11515": {
      "fn": "Governance._createTaskType",
      "offset": [
        14447,
        14462
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 107
    },
    "11516": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11517": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11519": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14444
      ],
      "op": "ADD",
      "path": "2"
    },
    "11520": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "11522": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11525": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "EXP",
      "path": "2"
    },
    "11526": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11527": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11528": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11529": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11532": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "MUL",
      "path": "2"
    },
    "11533": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "NOT",
      "path": "2"
    },
    "11534": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "AND",
      "path": "2"
    },
    "11535": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11536": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11537": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11540": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "AND",
      "path": "2"
    },
    "11541": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "MUL",
      "path": "2"
    },
    "11542": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "OR",
      "path": "2"
    },
    "11543": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11544": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11545": {
      "fn": "Governance._createTaskType",
      "offset": [
        14418,
        14462
      ],
      "op": "POP",
      "path": "2"
    },
    "11546": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 108,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "11579": {
      "fn": "Governance._createTaskType",
      "offset": [
        14527,
        14536
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11580": {
      "fn": "Governance._createTaskType",
      "offset": [
        14527,
        14536
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11581": {
      "fn": "Governance._createTaskType",
      "offset": [
        14538,
        14549
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11582": {
      "fn": "Governance._createTaskType",
      "offset": [
        14551,
        14567
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11583": {
      "fn": "Governance._createTaskType",
      "offset": [
        14569,
        14579
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11584": {
      "fn": "Governance._createTaskType",
      "offset": [
        14581,
        14594
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11585": {
      "fn": "Governance._createTaskType",
      "offset": [
        14596,
        14609
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11586": {
      "fn": "Governance._createTaskType",
      "offset": [
        14611,
        14626
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11587": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11589": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11590": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D56"
    },
    "11593": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "11594": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "11595": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "11596": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "11597": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11598": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11599": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11600": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11601": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11602": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DCB"
    },
    "11605": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14508,
        14627
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11606": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11607": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11609": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11610": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11611": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11612": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SUB",
      "path": "2"
    },
    "11613": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11614": {
      "fn": "Governance._createTaskType",
      "offset": [
        14508,
        14627
      ],
      "op": "LOG1",
      "path": "2"
    },
    "11615": {
      "fn": "Governance._createTaskType",
      "offset": [
        13908,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11616": {
      "fn": "Governance._createTaskType",
      "offset": [
        13908,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11617": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11618": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11619": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11620": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11621": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11622": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11623": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11624": {
      "fn": "Governance._createTaskType",
      "offset": [
        13703,
        14634
      ],
      "op": "POP",
      "path": "2"
    },
    "11625": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        13703,
        14634
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11626": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "11627": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "11629": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "9"
    },
    "11630": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11637": {
      "op": "SHL"
    },
    "11638": {
      "op": "SUB"
    },
    "11639": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 109
    },
    "11640": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11641": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11648": {
      "op": "SHL"
    },
    "11649": {
      "op": "SUB"
    },
    "11650": {
      "op": "NOT"
    },
    "11651": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9"
    },
    "11652": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11653": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11654": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "9"
    },
    "11655": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11656": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "11657": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "11658": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 110,
      "value": "0x40"
    },
    "11660": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "11661": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11662": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "9"
    },
    "11663": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11664": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11665": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "9"
    },
    "11666": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11667": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11700": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11701": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "11703": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11704": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "9"
    },
    "11705": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11706": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11707": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "9"
    },
    "11708": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11709": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11717": {
      "op": "SHL"
    },
    "11718": {
      "op": "SUB"
    },
    "11719": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 111
    },
    "11720": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "11721": {
      "branch": 161,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11722": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E26"
    },
    "11725": {
      "branch": 161,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11726": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11728": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11735": {
      "op": "SHL"
    },
    "11736": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11737": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11740": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11742": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11743": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "11744": {
      "op": "MSTORE"
    },
    "11745": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11749": {
      "op": "DUP3"
    },
    "11750": {
      "op": "ADD"
    },
    "11751": {
      "op": "MSTORE"
    },
    "11752": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11787": {
      "op": "DUP3"
    },
    "11788": {
      "op": "ADD"
    },
    "11789": {
      "op": "MSTORE"
    },
    "11790": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "11799": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11801": {
      "op": "SHL"
    },
    "11802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11804": {
      "op": "DUP3"
    },
    "11805": {
      "op": "ADD"
    },
    "11806": {
      "op": "MSTORE"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11809": {
      "op": "ADD"
    },
    "11810": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "11813": {
      "op": "JUMP"
    },
    "11814": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11815": {
      "op": "POP"
    },
    "11816": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 112
    },
    "11817": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11818": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11819": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11821": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11838": {
      "op": "NOT"
    },
    "11839": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 113
    },
    "11840": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "11841": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11842": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11843": {
      "branch": 162,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11844": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5D"
    },
    "11847": {
      "branch": 162,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11848": {
      "op": "POP"
    },
    "11849": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11866": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11867": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "11868": {
      "branch": 163,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11869": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11870": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E26"
    },
    "11873": {
      "branch": 163,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11874": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11876": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11883": {
      "op": "SHL"
    },
    "11884": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11885": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11888": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11890": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11891": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "11892": {
      "op": "MSTORE"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11897": {
      "op": "DUP3"
    },
    "11898": {
      "op": "ADD"
    },
    "11899": {
      "op": "MSTORE"
    },
    "11900": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "11933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11935": {
      "op": "DUP3"
    },
    "11936": {
      "op": "ADD"
    },
    "11937": {
      "op": "MSTORE"
    },
    "11938": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "11946": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11948": {
      "op": "SHL"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11951": {
      "op": "DUP3"
    },
    "11952": {
      "op": "ADD"
    },
    "11953": {
      "op": "MSTORE"
    },
    "11954": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11956": {
      "op": "ADD"
    },
    "11957": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD4"
    },
    "11960": {
      "op": "JUMP"
    },
    "11961": {
      "op": "JUMPDEST"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11964": {
      "op": "DUP1"
    },
    "11965": {
      "op": "MLOAD"
    },
    "11966": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11969": {
      "op": "DUP2"
    },
    "11970": {
      "op": "ADD"
    },
    "11971": {
      "op": "DUP3"
    },
    "11972": {
      "op": "MSTORE"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11975": {
      "op": "DUP1"
    },
    "11976": {
      "op": "DUP3"
    },
    "11977": {
      "op": "MSTORE"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11982": {
      "op": "DUP4"
    },
    "11983": {
      "op": "ADD"
    },
    "11984": {
      "op": "DUP2"
    },
    "11985": {
      "op": "SWAP1"
    },
    "11986": {
      "op": "MSTORE"
    },
    "11987": {
      "op": "SWAP3"
    },
    "11988": {
      "op": "DUP3"
    },
    "11989": {
      "op": "ADD"
    },
    "11990": {
      "op": "DUP4"
    },
    "11991": {
      "op": "SWAP1"
    },
    "11992": {
      "op": "MSTORE"
    },
    "11993": {
      "op": "DUP2"
    },
    "11994": {
      "op": "ADD"
    },
    "11995": {
      "op": "DUP3"
    },
    "11996": {
      "op": "SWAP1"
    },
    "11997": {
      "op": "MSTORE"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12000": {
      "op": "DUP2"
    },
    "12001": {
      "op": "ADD"
    },
    "12002": {
      "op": "DUP3"
    },
    "12003": {
      "op": "SWAP1"
    },
    "12004": {
      "op": "MSTORE"
    },
    "12005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12007": {
      "op": "DUP2"
    },
    "12008": {
      "op": "ADD"
    },
    "12009": {
      "op": "DUP3"
    },
    "12010": {
      "op": "SWAP1"
    },
    "12011": {
      "op": "MSTORE"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12014": {
      "op": "DUP2"
    },
    "12015": {
      "op": "ADD"
    },
    "12016": {
      "op": "DUP3"
    },
    "12017": {
      "op": "SWAP1"
    },
    "12018": {
      "op": "MSTORE"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12021": {
      "op": "DUP2"
    },
    "12022": {
      "op": "ADD"
    },
    "12023": {
      "op": "DUP3"
    },
    "12024": {
      "op": "SWAP1"
    },
    "12025": {
      "op": "MSTORE"
    },
    "12026": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12029": {
      "op": "DUP2"
    },
    "12030": {
      "op": "ADD"
    },
    "12031": {
      "op": "DUP3"
    },
    "12032": {
      "op": "SWAP1"
    },
    "12033": {
      "op": "MSTORE"
    },
    "12034": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12037": {
      "op": "DUP2"
    },
    "12038": {
      "op": "ADD"
    },
    "12039": {
      "op": "SWAP2"
    },
    "12040": {
      "op": "SWAP1"
    },
    "12041": {
      "op": "SWAP2"
    },
    "12042": {
      "op": "MSTORE"
    },
    "12043": {
      "op": "SWAP1"
    },
    "12044": {
      "jump": "o",
      "op": "JUMP"
    },
    "12045": {
      "op": "JUMPDEST"
    },
    "12046": {
      "op": "POP"
    },
    "12047": {
      "op": "DUP1"
    },
    "12048": {
      "op": "SLOAD"
    },
    "12049": {
      "op": "PUSH2",
      "value": "0x2F19"
    },
    "12052": {
      "op": "SWAP1"
    },
    "12053": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "12056": {
      "jump": "i",
      "op": "JUMP"
    },
    "12057": {
      "op": "JUMPDEST"
    },
    "12058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12060": {
      "op": "DUP3"
    },
    "12061": {
      "op": "SSTORE"
    },
    "12062": {
      "op": "DUP1"
    },
    "12063": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12065": {
      "op": "LT"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2F29"
    },
    "12069": {
      "op": "JUMPI"
    },
    "12070": {
      "op": "POP"
    },
    "12071": {
      "op": "POP"
    },
    "12072": {
      "jump": "o",
      "op": "JUMP"
    },
    "12073": {
      "op": "JUMPDEST"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12076": {
      "op": "ADD"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12079": {
      "op": "SWAP1"
    },
    "12080": {
      "op": "DIV"
    },
    "12081": {
      "op": "SWAP1"
    },
    "12082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12084": {
      "op": "MSTORE"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12089": {
      "op": "KECCAK256"
    },
    "12090": {
      "op": "SWAP1"
    },
    "12091": {
      "op": "DUP2"
    },
    "12092": {
      "op": "ADD"
    },
    "12093": {
      "op": "SWAP1"
    },
    "12094": {
      "op": "PUSH2",
      "value": "0x26E5"
    },
    "12097": {
      "op": "SWAP2"
    },
    "12098": {
      "op": "SWAP1"
    },
    "12099": {
      "op": "JUMPDEST"
    },
    "12100": {
      "op": "DUP1"
    },
    "12101": {
      "op": "DUP3"
    },
    "12102": {
      "op": "GT"
    },
    "12103": {
      "op": "ISZERO"
    },
    "12104": {
      "op": "PUSH2",
      "value": "0x2E26"
    },
    "12107": {
      "op": "JUMPI"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12110": {
      "op": "DUP2"
    },
    "12111": {
      "op": "SSTORE"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12114": {
      "op": "ADD"
    },
    "12115": {
      "op": "PUSH2",
      "value": "0x2F43"
    },
    "12118": {
      "op": "JUMP"
    },
    "12119": {
      "op": "JUMPDEST"
    },
    "12120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12124": {
      "op": "DUP3"
    },
    "12125": {
      "op": "DUP5"
    },
    "12126": {
      "op": "SUB"
    },
    "12127": {
      "op": "SLT"
    },
    "12128": {
      "op": "ISZERO"
    },
    "12129": {
      "op": "PUSH2",
      "value": "0x2F69"
    },
    "12132": {
      "op": "JUMPI"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12135": {
      "op": "DUP1"
    },
    "12136": {
      "op": "REVERT"
    },
    "12137": {
      "op": "JUMPDEST"
    },
    "12138": {
      "op": "POP"
    },
    "12139": {
      "op": "CALLDATALOAD"
    },
    "12140": {
      "op": "SWAP2"
    },
    "12141": {
      "op": "SWAP1"
    },
    "12142": {
      "op": "POP"
    },
    "12143": {
      "jump": "o",
      "op": "JUMP"
    },
    "12144": {
      "op": "JUMPDEST"
    },
    "12145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12147": {
      "op": "JUMPDEST"
    },
    "12148": {
      "op": "DUP4"
    },
    "12149": {
      "op": "DUP2"
    },
    "12150": {
      "op": "LT"
    },
    "12151": {
      "op": "ISZERO"
    },
    "12152": {
      "op": "PUSH2",
      "value": "0x2F8B"
    },
    "12155": {
      "op": "JUMPI"
    },
    "12156": {
      "op": "DUP2"
    },
    "12157": {
      "op": "DUP2"
    },
    "12158": {
      "op": "ADD"
    },
    "12159": {
      "op": "MLOAD"
    },
    "12160": {
      "op": "DUP4"
    },
    "12161": {
      "op": "DUP3"
    },
    "12162": {
      "op": "ADD"
    },
    "12163": {
      "op": "MSTORE"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12166": {
      "op": "ADD"
    },
    "12167": {
      "op": "PUSH2",
      "value": "0x2F73"
    },
    "12170": {
      "op": "JUMP"
    },
    "12171": {
      "op": "JUMPDEST"
    },
    "12172": {
      "op": "DUP4"
    },
    "12173": {
      "op": "DUP2"
    },
    "12174": {
      "op": "GT"
    },
    "12175": {
      "op": "ISZERO"
    },
    "12176": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "12179": {
      "op": "JUMPI"
    },
    "12180": {
      "op": "POP"
    },
    "12181": {
      "op": "POP"
    },
    "12182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12184": {
      "op": "SWAP2"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "op": "MSTORE"
    },
    "12187": {
      "jump": "o",
      "op": "JUMP"
    },
    "12188": {
      "op": "JUMPDEST"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12191": {
      "op": "DUP2"
    },
    "12192": {
      "op": "MLOAD"
    },
    "12193": {
      "op": "DUP1"
    },
    "12194": {
      "op": "DUP5"
    },
    "12195": {
      "op": "MSTORE"
    },
    "12196": {
      "op": "PUSH2",
      "value": "0x2FB4"
    },
    "12199": {
      "op": "DUP2"
    },
    "12200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12202": {
      "op": "DUP7"
    },
    "12203": {
      "op": "ADD"
    },
    "12204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12206": {
      "op": "DUP7"
    },
    "12207": {
      "op": "ADD"
    },
    "12208": {
      "op": "PUSH2",
      "value": "0x2F70"
    },
    "12211": {
      "jump": "i",
      "op": "JUMP"
    },
    "12212": {
      "op": "JUMPDEST"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12215": {
      "op": "ADD"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12218": {
      "op": "NOT"
    },
    "12219": {
      "op": "AND"
    },
    "12220": {
      "op": "SWAP3"
    },
    "12221": {
      "op": "SWAP1"
    },
    "12222": {
      "op": "SWAP3"
    },
    "12223": {
      "op": "ADD"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12226": {
      "op": "ADD"
    },
    "12227": {
      "op": "SWAP3"
    },
    "12228": {
      "op": "SWAP2"
    },
    "12229": {
      "op": "POP"
    },
    "12230": {
      "op": "POP"
    },
    "12231": {
      "jump": "o",
      "op": "JUMP"
    },
    "12232": {
      "op": "JUMPDEST"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12235": {
      "op": "DUP2"
    },
    "12236": {
      "op": "MSTORE"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12239": {
      "op": "PUSH2",
      "value": "0x2FDB"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12244": {
      "op": "DUP4"
    },
    "12245": {
      "op": "ADD"
    },
    "12246": {
      "op": "DUP9"
    },
    "12247": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "12250": {
      "jump": "i",
      "op": "JUMP"
    },
    "12251": {
      "op": "JUMPDEST"
    },
    "12252": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12255": {
      "op": "SWAP7"
    },
    "12256": {
      "op": "SWAP1"
    },
    "12257": {
      "op": "SWAP7"
    },
    "12258": {
      "op": "AND"
    },
    "12259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12261": {
      "op": "DUP4"
    },
    "12262": {
      "op": "ADD"
    },
    "12263": {
      "op": "MSTORE"
    },
    "12264": {
      "op": "POP"
    },
    "12265": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12271": {
      "op": "SWAP4"
    },
    "12272": {
      "op": "DUP5"
    },
    "12273": {
      "op": "AND"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12276": {
      "op": "DUP3"
    },
    "12277": {
      "op": "ADD"
    },
    "12278": {
      "op": "MSTORE"
    },
    "12279": {
      "op": "SWAP2"
    },
    "12280": {
      "op": "DUP4"
    },
    "12281": {
      "op": "AND"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12284": {
      "op": "DUP4"
    },
    "12285": {
      "op": "ADD"
    },
    "12286": {
      "op": "MSTORE"
    },
    "12287": {
      "op": "SWAP1"
    },
    "12288": {
      "op": "SWAP2"
    },
    "12289": {
      "op": "AND"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12292": {
      "op": "SWAP1"
    },
    "12293": {
      "op": "SWAP2"
    },
    "12294": {
      "op": "ADD"
    },
    "12295": {
      "op": "MSTORE"
    },
    "12296": {
      "op": "SWAP2"
    },
    "12297": {
      "op": "SWAP1"
    },
    "12298": {
      "op": "POP"
    },
    "12299": {
      "jump": "o",
      "op": "JUMP"
    },
    "12300": {
      "op": "JUMPDEST"
    },
    "12301": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12306": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12308": {
      "op": "SHL"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12311": {
      "op": "MSTORE"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12316": {
      "op": "MSTORE"
    },
    "12317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12321": {
      "op": "REVERT"
    },
    "12322": {
      "op": "JUMPDEST"
    },
    "12323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12325": {
      "op": "MLOAD"
    },
    "12326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12328": {
      "op": "DUP3"
    },
    "12329": {
      "op": "ADD"
    },
    "12330": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12332": {
      "op": "NOT"
    },
    "12333": {
      "op": "AND"
    },
    "12334": {
      "op": "DUP2"
    },
    "12335": {
      "op": "ADD"
    },
    "12336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12342": {
      "op": "SHL"
    },
    "12343": {
      "op": "SUB"
    },
    "12344": {
      "op": "DUP2"
    },
    "12345": {
      "op": "GT"
    },
    "12346": {
      "op": "DUP3"
    },
    "12347": {
      "op": "DUP3"
    },
    "12348": {
      "op": "LT"
    },
    "12349": {
      "op": "OR"
    },
    "12350": {
      "op": "ISZERO"
    },
    "12351": {
      "op": "PUSH2",
      "value": "0x304A"
    },
    "12354": {
      "op": "JUMPI"
    },
    "12355": {
      "op": "PUSH2",
      "value": "0x304A"
    },
    "12358": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "12361": {
      "jump": "i",
      "op": "JUMP"
    },
    "12362": {
      "op": "JUMPDEST"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12365": {
      "op": "MSTORE"
    },
    "12366": {
      "op": "SWAP2"
    },
    "12367": {
      "op": "SWAP1"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "jump": "o",
      "op": "JUMP"
    },
    "12370": {
      "op": "JUMPDEST"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12373": {
      "op": "DUP3"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12376": {
      "op": "DUP4"
    },
    "12377": {
      "op": "ADD"
    },
    "12378": {
      "op": "SLT"
    },
    "12379": {
      "op": "PUSH2",
      "value": "0x3063"
    },
    "12382": {
      "op": "JUMPI"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12385": {
      "op": "DUP1"
    },
    "12386": {
      "op": "REVERT"
    },
    "12387": {
      "op": "JUMPDEST"
    },
    "12388": {
      "op": "DUP2"
    },
    "12389": {
      "op": "CALLDATALOAD"
    },
    "12390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12398": {
      "op": "SHL"
    },
    "12399": {
      "op": "SUB"
    },
    "12400": {
      "op": "DUP3"
    },
    "12401": {
      "op": "GT"
    },
    "12402": {
      "op": "ISZERO"
    },
    "12403": {
      "op": "PUSH2",
      "value": "0x307E"
    },
    "12406": {
      "op": "JUMPI"
    },
    "12407": {
      "op": "PUSH2",
      "value": "0x307E"
    },
    "12410": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "12413": {
      "jump": "i",
      "op": "JUMP"
    },
    "12414": {
      "op": "JUMPDEST"
    },
    "12415": {
      "op": "DUP2"
    },
    "12416": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12418": {
      "op": "SHL"
    },
    "12419": {
      "op": "PUSH2",
      "value": "0x308D"
    },
    "12422": {
      "op": "DUP3"
    },
    "12423": {
      "op": "DUP3"
    },
    "12424": {
      "op": "ADD"
    },
    "12425": {
      "op": "PUSH2",
      "value": "0x3022"
    },
    "12428": {
      "jump": "i",
      "op": "JUMP"
    },
    "12429": {
      "op": "JUMPDEST"
    },
    "12430": {
      "op": "SWAP3"
    },
    "12431": {
      "op": "DUP4"
    },
    "12432": {
      "op": "MSTORE"
    },
    "12433": {
      "op": "DUP5"
    },
    "12434": {
      "op": "DUP2"
    },
    "12435": {
      "op": "ADD"
    },
    "12436": {
      "op": "DUP3"
    },
    "12437": {
      "op": "ADD"
    },
    "12438": {
      "op": "SWAP3"
    },
    "12439": {
      "op": "DUP3"
    },
    "12440": {
      "op": "DUP2"
    },
    "12441": {
      "op": "ADD"
    },
    "12442": {
      "op": "SWAP1"
    },
    "12443": {
      "op": "DUP8"
    },
    "12444": {
      "op": "DUP6"
    },
    "12445": {
      "op": "GT"
    },
    "12446": {
      "op": "ISZERO"
    },
    "12447": {
      "op": "PUSH2",
      "value": "0x30A7"
    },
    "12450": {
      "op": "JUMPI"
    },
    "12451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12453": {
      "op": "DUP1"
    },
    "12454": {
      "op": "REVERT"
    },
    "12455": {
      "op": "JUMPDEST"
    },
    "12456": {
      "op": "DUP4"
    },
    "12457": {
      "op": "DUP8"
    },
    "12458": {
      "op": "ADD"
    },
    "12459": {
      "op": "SWAP3"
    },
    "12460": {
      "op": "POP"
    },
    "12461": {
      "op": "JUMPDEST"
    },
    "12462": {
      "op": "DUP5"
    },
    "12463": {
      "op": "DUP4"
    },
    "12464": {
      "op": "LT"
    },
    "12465": {
      "op": "ISZERO"
    },
    "12466": {
      "op": "PUSH2",
      "value": "0x30C6"
    },
    "12469": {
      "op": "JUMPI"
    },
    "12470": {
      "op": "DUP3"
    },
    "12471": {
      "op": "CALLDATALOAD"
    },
    "12472": {
      "op": "DUP3"
    },
    "12473": {
      "op": "MSTORE"
    },
    "12474": {
      "op": "SWAP2"
    },
    "12475": {
      "op": "DUP4"
    },
    "12476": {
      "op": "ADD"
    },
    "12477": {
      "op": "SWAP2"
    },
    "12478": {
      "op": "SWAP1"
    },
    "12479": {
      "op": "DUP4"
    },
    "12480": {
      "op": "ADD"
    },
    "12481": {
      "op": "SWAP1"
    },
    "12482": {
      "op": "PUSH2",
      "value": "0x30AD"
    },
    "12485": {
      "op": "JUMP"
    },
    "12486": {
      "op": "JUMPDEST"
    },
    "12487": {
      "op": "SWAP8"
    },
    "12488": {
      "op": "SWAP7"
    },
    "12489": {
      "op": "POP"
    },
    "12490": {
      "op": "POP"
    },
    "12491": {
      "op": "POP"
    },
    "12492": {
      "op": "POP"
    },
    "12493": {
      "op": "POP"
    },
    "12494": {
      "op": "POP"
    },
    "12495": {
      "op": "POP"
    },
    "12496": {
      "jump": "o",
      "op": "JUMP"
    },
    "12497": {
      "op": "JUMPDEST"
    },
    "12498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12500": {
      "op": "DUP1"
    },
    "12501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12505": {
      "op": "DUP5"
    },
    "12506": {
      "op": "DUP7"
    },
    "12507": {
      "op": "SUB"
    },
    "12508": {
      "op": "SLT"
    },
    "12509": {
      "op": "ISZERO"
    },
    "12510": {
      "op": "PUSH2",
      "value": "0x30E6"
    },
    "12513": {
      "op": "JUMPI"
    },
    "12514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12516": {
      "op": "DUP1"
    },
    "12517": {
      "op": "REVERT"
    },
    "12518": {
      "op": "JUMPDEST"
    },
    "12519": {
      "op": "DUP4"
    },
    "12520": {
      "op": "CALLDATALOAD"
    },
    "12521": {
      "op": "SWAP3"
    },
    "12522": {
      "op": "POP"
    },
    "12523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12525": {
      "op": "DUP5"
    },
    "12526": {
      "op": "ADD"
    },
    "12527": {
      "op": "CALLDATALOAD"
    },
    "12528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12534": {
      "op": "SHL"
    },
    "12535": {
      "op": "SUB"
    },
    "12536": {
      "op": "DUP2"
    },
    "12537": {
      "op": "GT"
    },
    "12538": {
      "op": "ISZERO"
    },
    "12539": {
      "op": "PUSH2",
      "value": "0x3103"
    },
    "12542": {
      "op": "JUMPI"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12545": {
      "op": "DUP1"
    },
    "12546": {
      "op": "REVERT"
    },
    "12547": {
      "op": "JUMPDEST"
    },
    "12548": {
      "op": "PUSH2",
      "value": "0x310F"
    },
    "12551": {
      "op": "DUP7"
    },
    "12552": {
      "op": "DUP3"
    },
    "12553": {
      "op": "DUP8"
    },
    "12554": {
      "op": "ADD"
    },
    "12555": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "12558": {
      "jump": "i",
      "op": "JUMP"
    },
    "12559": {
      "op": "JUMPDEST"
    },
    "12560": {
      "op": "SWAP3"
    },
    "12561": {
      "op": "POP"
    },
    "12562": {
      "op": "POP"
    },
    "12563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12565": {
      "op": "DUP5"
    },
    "12566": {
      "op": "ADD"
    },
    "12567": {
      "op": "CALLDATALOAD"
    },
    "12568": {
      "op": "DUP1"
    },
    "12569": {
      "op": "ISZERO"
    },
    "12570": {
      "op": "ISZERO"
    },
    "12571": {
      "op": "DUP2"
    },
    "12572": {
      "op": "EQ"
    },
    "12573": {
      "op": "PUSH2",
      "value": "0x3125"
    },
    "12576": {
      "op": "JUMPI"
    },
    "12577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12579": {
      "op": "DUP1"
    },
    "12580": {
      "op": "REVERT"
    },
    "12581": {
      "op": "JUMPDEST"
    },
    "12582": {
      "op": "DUP1"
    },
    "12583": {
      "op": "SWAP2"
    },
    "12584": {
      "op": "POP"
    },
    "12585": {
      "op": "POP"
    },
    "12586": {
      "op": "SWAP3"
    },
    "12587": {
      "op": "POP"
    },
    "12588": {
      "op": "SWAP3"
    },
    "12589": {
      "op": "POP"
    },
    "12590": {
      "op": "SWAP3"
    },
    "12591": {
      "jump": "o",
      "op": "JUMP"
    },
    "12592": {
      "op": "JUMPDEST"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12595": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12598": {
      "op": "DUP1"
    },
    "12599": {
      "op": "DUP4"
    },
    "12600": {
      "op": "MSTORE"
    },
    "12601": {
      "op": "PUSH2",
      "value": "0x3144"
    },
    "12604": {
      "op": "DUP2"
    },
    "12605": {
      "op": "DUP5"
    },
    "12606": {
      "op": "ADD"
    },
    "12607": {
      "op": "DUP13"
    },
    "12608": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "12611": {
      "jump": "i",
      "op": "JUMP"
    },
    "12612": {
      "op": "JUMPDEST"
    },
    "12613": {
      "op": "SWAP10"
    },
    "12614": {
      "op": "ISZERO"
    },
    "12615": {
      "op": "ISZERO"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12618": {
      "op": "DUP5"
    },
    "12619": {
      "op": "ADD"
    },
    "12620": {
      "op": "MSTORE"
    },
    "12621": {
      "op": "POP"
    },
    "12622": {
      "op": "POP"
    },
    "12623": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12629": {
      "op": "SWAP7"
    },
    "12630": {
      "op": "DUP8"
    },
    "12631": {
      "op": "AND"
    },
    "12632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12634": {
      "op": "DUP3"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "MSTORE"
    },
    "12637": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12639": {
      "op": "SWAP6"
    },
    "12640": {
      "op": "SWAP1"
    },
    "12641": {
      "op": "SWAP6"
    },
    "12642": {
      "op": "AND"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12645": {
      "op": "DUP7"
    },
    "12646": {
      "op": "ADD"
    },
    "12647": {
      "op": "MSTORE"
    },
    "12648": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12652": {
      "op": "SWAP4"
    },
    "12653": {
      "op": "SWAP1"
    },
    "12654": {
      "op": "SWAP4"
    },
    "12655": {
      "op": "AND"
    },
    "12656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12658": {
      "op": "DUP6"
    },
    "12659": {
      "op": "ADD"
    },
    "12660": {
      "op": "MSTORE"
    },
    "12661": {
      "op": "SWAP1"
    },
    "12662": {
      "op": "DUP5"
    },
    "12663": {
      "op": "AND"
    },
    "12664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12666": {
      "op": "DUP5"
    },
    "12667": {
      "op": "ADD"
    },
    "12668": {
      "op": "MSTORE"
    },
    "12669": {
      "op": "SWAP1"
    },
    "12670": {
      "op": "SWAP3"
    },
    "12671": {
      "op": "AND"
    },
    "12672": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12674": {
      "op": "DUP3"
    },
    "12675": {
      "op": "ADD"
    },
    "12676": {
      "op": "MSTORE"
    },
    "12677": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12680": {
      "op": "SWAP1"
    },
    "12681": {
      "op": "SWAP2"
    },
    "12682": {
      "op": "AND"
    },
    "12683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12685": {
      "op": "SWAP1"
    },
    "12686": {
      "op": "SWAP2"
    },
    "12687": {
      "op": "ADD"
    },
    "12688": {
      "op": "MSTORE"
    },
    "12689": {
      "op": "SWAP2"
    },
    "12690": {
      "op": "SWAP1"
    },
    "12691": {
      "op": "POP"
    },
    "12692": {
      "jump": "o",
      "op": "JUMP"
    },
    "12693": {
      "op": "JUMPDEST"
    },
    "12694": {
      "op": "DUP1"
    },
    "12695": {
      "op": "CALLDATALOAD"
    },
    "12696": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12702": {
      "op": "DUP2"
    },
    "12703": {
      "op": "AND"
    },
    "12704": {
      "op": "DUP2"
    },
    "12705": {
      "op": "EQ"
    },
    "12706": {
      "op": "PUSH2",
      "value": "0x31AA"
    },
    "12709": {
      "op": "JUMPI"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12712": {
      "op": "DUP1"
    },
    "12713": {
      "op": "REVERT"
    },
    "12714": {
      "op": "JUMPDEST"
    },
    "12715": {
      "op": "SWAP2"
    },
    "12716": {
      "op": "SWAP1"
    },
    "12717": {
      "op": "POP"
    },
    "12718": {
      "jump": "o",
      "op": "JUMP"
    },
    "12719": {
      "op": "JUMPDEST"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12724": {
      "op": "DUP3"
    },
    "12725": {
      "op": "DUP5"
    },
    "12726": {
      "op": "SUB"
    },
    "12727": {
      "op": "SLT"
    },
    "12728": {
      "op": "ISZERO"
    },
    "12729": {
      "op": "PUSH2",
      "value": "0x31C1"
    },
    "12732": {
      "op": "JUMPI"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12735": {
      "op": "DUP1"
    },
    "12736": {
      "op": "REVERT"
    },
    "12737": {
      "op": "JUMPDEST"
    },
    "12738": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "12741": {
      "op": "DUP3"
    },
    "12742": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "12745": {
      "jump": "i",
      "op": "JUMP"
    },
    "12746": {
      "op": "JUMPDEST"
    },
    "12747": {
      "op": "SWAP4"
    },
    "12748": {
      "op": "SWAP3"
    },
    "12749": {
      "op": "POP"
    },
    "12750": {
      "op": "POP"
    },
    "12751": {
      "op": "POP"
    },
    "12752": {
      "jump": "o",
      "op": "JUMP"
    },
    "12753": {
      "op": "JUMPDEST"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12756": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12759": {
      "op": "DUP3"
    },
    "12760": {
      "op": "MLOAD"
    },
    "12761": {
      "op": "DUP2"
    },
    "12762": {
      "op": "DUP6"
    },
    "12763": {
      "op": "MSTORE"
    },
    "12764": {
      "op": "PUSH2",
      "value": "0x31E7"
    },
    "12767": {
      "op": "DUP3"
    },
    "12768": {
      "op": "DUP7"
    },
    "12769": {
      "op": "ADD"
    },
    "12770": {
      "op": "DUP3"
    },
    "12771": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "12774": {
      "jump": "i",
      "op": "JUMP"
    },
    "12775": {
      "op": "JUMPDEST"
    },
    "12776": {
      "op": "SWAP2"
    },
    "12777": {
      "op": "POP"
    },
    "12778": {
      "op": "POP"
    },
    "12779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12781": {
      "op": "DUP4"
    },
    "12782": {
      "op": "ADD"
    },
    "12783": {
      "op": "MLOAD"
    },
    "12784": {
      "op": "PUSH2",
      "value": "0x3202"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12789": {
      "op": "DUP7"
    },
    "12790": {
      "op": "ADD"
    },
    "12791": {
      "op": "DUP3"
    },
    "12792": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12798": {
      "op": "AND"
    },
    "12799": {
      "op": "SWAP1"
    },
    "12800": {
      "op": "MSTORE"
    },
    "12801": {
      "op": "JUMP"
    },
    "12802": {
      "op": "JUMPDEST"
    },
    "12803": {
      "op": "POP"
    },
    "12804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12806": {
      "op": "DUP4"
    },
    "12807": {
      "op": "ADD"
    },
    "12808": {
      "op": "MLOAD"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12811": {
      "op": "DUP6"
    },
    "12812": {
      "op": "ADD"
    },
    "12813": {
      "op": "MSTORE"
    },
    "12814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12816": {
      "op": "DUP4"
    },
    "12817": {
      "op": "ADD"
    },
    "12818": {
      "op": "MLOAD"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12821": {
      "op": "DUP6"
    },
    "12822": {
      "op": "ADD"
    },
    "12823": {
      "op": "MSTORE"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12826": {
      "op": "DUP4"
    },
    "12827": {
      "op": "ADD"
    },
    "12828": {
      "op": "MLOAD"
    },
    "12829": {
      "op": "PUSH2",
      "value": "0x322B"
    },
    "12832": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12834": {
      "op": "DUP7"
    },
    "12835": {
      "op": "ADD"
    },
    "12836": {
      "op": "DUP3"
    },
    "12837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12839": {
      "op": "AND"
    },
    "12840": {
      "op": "SWAP1"
    },
    "12841": {
      "op": "MSTORE"
    },
    "12842": {
      "op": "JUMP"
    },
    "12843": {
      "op": "JUMPDEST"
    },
    "12844": {
      "op": "POP"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12847": {
      "op": "DUP4"
    },
    "12848": {
      "op": "ADD"
    },
    "12849": {
      "op": "MLOAD"
    },
    "12850": {
      "op": "PUSH2",
      "value": "0x3242"
    },
    "12853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12855": {
      "op": "DUP7"
    },
    "12856": {
      "op": "ADD"
    },
    "12857": {
      "op": "DUP3"
    },
    "12858": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12862": {
      "op": "AND"
    },
    "12863": {
      "op": "SWAP1"
    },
    "12864": {
      "op": "MSTORE"
    },
    "12865": {
      "op": "JUMP"
    },
    "12866": {
      "op": "JUMPDEST"
    },
    "12867": {
      "op": "POP"
    },
    "12868": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12870": {
      "op": "DUP4"
    },
    "12871": {
      "op": "ADD"
    },
    "12872": {
      "op": "MLOAD"
    },
    "12873": {
      "op": "PUSH2",
      "value": "0x325D"
    },
    "12876": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12878": {
      "op": "DUP7"
    },
    "12879": {
      "op": "ADD"
    },
    "12880": {
      "op": "DUP3"
    },
    "12881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12885": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "12887": {
      "op": "SHL"
    },
    "12888": {
      "op": "SUB"
    },
    "12889": {
      "op": "AND"
    },
    "12890": {
      "op": "SWAP1"
    },
    "12891": {
      "op": "MSTORE"
    },
    "12892": {
      "op": "JUMP"
    },
    "12893": {
      "op": "JUMPDEST"
    },
    "12894": {
      "op": "POP"
    },
    "12895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12897": {
      "op": "DUP4"
    },
    "12898": {
      "op": "ADD"
    },
    "12899": {
      "op": "MLOAD"
    },
    "12900": {
      "op": "PUSH2",
      "value": "0x3273"
    },
    "12903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12905": {
      "op": "DUP7"
    },
    "12906": {
      "op": "ADD"
    },
    "12907": {
      "op": "DUP3"
    },
    "12908": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12911": {
      "op": "AND"
    },
    "12912": {
      "op": "SWAP1"
    },
    "12913": {
      "op": "MSTORE"
    },
    "12914": {
      "op": "JUMP"
    },
    "12915": {
      "op": "JUMPDEST"
    },
    "12916": {
      "op": "POP"
    },
    "12917": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12920": {
      "op": "DUP4"
    },
    "12921": {
      "op": "DUP2"
    },
    "12922": {
      "op": "ADD"
    },
    "12923": {
      "op": "MLOAD"
    },
    "12924": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12927": {
      "op": "AND"
    },
    "12928": {
      "op": "SWAP1"
    },
    "12929": {
      "op": "DUP6"
    },
    "12930": {
      "op": "ADD"
    },
    "12931": {
      "op": "MSTORE"
    },
    "12932": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12935": {
      "op": "DUP1"
    },
    "12936": {
      "op": "DUP5"
    },
    "12937": {
      "op": "ADD"
    },
    "12938": {
      "op": "MLOAD"
    },
    "12939": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12945": {
      "op": "DUP2"
    },
    "12946": {
      "op": "AND"
    },
    "12947": {
      "op": "DUP3"
    },
    "12948": {
      "op": "DUP8"
    },
    "12949": {
      "op": "ADD"
    },
    "12950": {
      "op": "MSTORE"
    },
    "12951": {
      "op": "PUSH2",
      "value": "0x1A4C"
    },
    "12954": {
      "op": "JUMP"
    },
    "12955": {
      "op": "JUMPDEST"
    },
    "12956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12960": {
      "op": "DUP3"
    },
    "12961": {
      "op": "ADD"
    },
    "12962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12964": {
      "op": "DUP4"
    },
    "12965": {
      "op": "MSTORE"
    },
    "12966": {
      "op": "DUP1"
    },
    "12967": {
      "op": "DUP6"
    },
    "12968": {
      "op": "MLOAD"
    },
    "12969": {
      "op": "DUP1"
    },
    "12970": {
      "op": "DUP4"
    },
    "12971": {
      "op": "MSTORE"
    },
    "12972": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12974": {
      "op": "DUP6"
    },
    "12975": {
      "op": "ADD"
    },
    "12976": {
      "op": "SWAP2"
    },
    "12977": {
      "op": "POP"
    },
    "12978": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12980": {
      "op": "DUP2"
    },
    "12981": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12983": {
      "op": "SHL"
    },
    "12984": {
      "op": "DUP7"
    },
    "12985": {
      "op": "ADD"
    },
    "12986": {
      "op": "ADD"
    },
    "12987": {
      "op": "SWAP3"
    },
    "12988": {
      "op": "POP"
    },
    "12989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12991": {
      "op": "DUP1"
    },
    "12992": {
      "op": "DUP9"
    },
    "12993": {
      "op": "ADD"
    },
    "12994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12996": {
      "op": "JUMPDEST"
    },
    "12997": {
      "op": "DUP4"
    },
    "12998": {
      "op": "DUP2"
    },
    "12999": {
      "op": "LT"
    },
    "13000": {
      "op": "ISZERO"
    },
    "13001": {
      "op": "PUSH2",
      "value": "0x32F2"
    },
    "13004": {
      "op": "JUMPI"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "13007": {
      "op": "NOT"
    },
    "13008": {
      "op": "DUP9"
    },
    "13009": {
      "op": "DUP8"
    },
    "13010": {
      "op": "SUB"
    },
    "13011": {
      "op": "ADD"
    },
    "13012": {
      "op": "DUP6"
    },
    "13013": {
      "op": "MSTORE"
    },
    "13014": {
      "op": "PUSH2",
      "value": "0x32E0"
    },
    "13017": {
      "op": "DUP7"
    },
    "13018": {
      "op": "DUP4"
    },
    "13019": {
      "op": "MLOAD"
    },
    "13020": {
      "op": "PUSH2",
      "value": "0x31D1"
    },
    "13023": {
      "jump": "i",
      "op": "JUMP"
    },
    "13024": {
      "op": "JUMPDEST"
    },
    "13025": {
      "op": "SWAP6"
    },
    "13026": {
      "op": "POP"
    },
    "13027": {
      "op": "SWAP4"
    },
    "13028": {
      "op": "DUP3"
    },
    "13029": {
      "op": "ADD"
    },
    "13030": {
      "op": "SWAP4"
    },
    "13031": {
      "op": "SWAP1"
    },
    "13032": {
      "op": "DUP3"
    },
    "13033": {
      "op": "ADD"
    },
    "13034": {
      "op": "SWAP1"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13037": {
      "op": "ADD"
    },
    "13038": {
      "op": "PUSH2",
      "value": "0x32C4"
    },
    "13041": {
      "op": "JUMP"
    },
    "13042": {
      "op": "JUMPDEST"
    },
    "13043": {
      "op": "POP"
    },
    "13044": {
      "op": "POP"
    },
    "13045": {
      "op": "DUP6"
    },
    "13046": {
      "op": "DUP5"
    },
    "13047": {
      "op": "SUB"
    },
    "13048": {
      "op": "DUP2"
    },
    "13049": {
      "op": "DUP8"
    },
    "13050": {
      "op": "ADD"
    },
    "13051": {
      "op": "MSTORE"
    },
    "13052": {
      "op": "DUP7"
    },
    "13053": {
      "op": "MLOAD"
    },
    "13054": {
      "op": "DUP1"
    },
    "13055": {
      "op": "DUP6"
    },
    "13056": {
      "op": "MSTORE"
    },
    "13057": {
      "op": "DUP8"
    },
    "13058": {
      "op": "DUP3"
    },
    "13059": {
      "op": "ADD"
    },
    "13060": {
      "op": "SWAP5"
    },
    "13061": {
      "op": "DUP3"
    },
    "13062": {
      "op": "ADD"
    },
    "13063": {
      "op": "SWAP4"
    },
    "13064": {
      "op": "POP"
    },
    "13065": {
      "op": "SWAP2"
    },
    "13066": {
      "op": "POP"
    },
    "13067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13069": {
      "op": "JUMPDEST"
    },
    "13070": {
      "op": "DUP3"
    },
    "13071": {
      "op": "DUP2"
    },
    "13072": {
      "op": "LT"
    },
    "13073": {
      "op": "ISZERO"
    },
    "13074": {
      "op": "PUSH2",
      "value": "0x3329"
    },
    "13077": {
      "op": "JUMPI"
    },
    "13078": {
      "op": "DUP5"
    },
    "13079": {
      "op": "MLOAD"
    },
    "13080": {
      "op": "DUP5"
    },
    "13081": {
      "op": "MSTORE"
    },
    "13082": {
      "op": "SWAP4"
    },
    "13083": {
      "op": "DUP2"
    },
    "13084": {
      "op": "ADD"
    },
    "13085": {
      "op": "SWAP4"
    },
    "13086": {
      "op": "SWAP3"
    },
    "13087": {
      "op": "DUP2"
    },
    "13088": {
      "op": "ADD"
    },
    "13089": {
      "op": "SWAP3"
    },
    "13090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13092": {
      "op": "ADD"
    },
    "13093": {
      "op": "PUSH2",
      "value": "0x330D"
    },
    "13096": {
      "op": "JUMP"
    },
    "13097": {
      "op": "JUMPDEST"
    },
    "13098": {
      "op": "POP"
    },
    "13099": {
      "op": "SWAP2"
    },
    "13100": {
      "op": "SWAP8"
    },
    "13101": {
      "op": "SWAP7"
    },
    "13102": {
      "op": "POP"
    },
    "13103": {
      "op": "POP"
    },
    "13104": {
      "op": "POP"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "op": "POP"
    },
    "13107": {
      "op": "POP"
    },
    "13108": {
      "op": "POP"
    },
    "13109": {
      "jump": "o",
      "op": "JUMP"
    },
    "13110": {
      "op": "JUMPDEST"
    },
    "13111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13113": {
      "op": "DUP1"
    },
    "13114": {
      "op": "DUP4"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13117": {
      "op": "DUP5"
    },
    "13118": {
      "op": "ADD"
    },
    "13119": {
      "op": "SLT"
    },
    "13120": {
      "op": "PUSH2",
      "value": "0x3348"
    },
    "13123": {
      "op": "JUMPI"
    },
    "13124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13126": {
      "op": "DUP1"
    },
    "13127": {
      "op": "REVERT"
    },
    "13128": {
      "op": "JUMPDEST"
    },
    "13129": {
      "op": "POP"
    },
    "13130": {
      "op": "DUP2"
    },
    "13131": {
      "op": "CALLDATALOAD"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13138": {
      "op": "SHL"
    },
    "13139": {
      "op": "SUB"
    },
    "13140": {
      "op": "DUP2"
    },
    "13141": {
      "op": "GT"
    },
    "13142": {
      "op": "ISZERO"
    },
    "13143": {
      "op": "PUSH2",
      "value": "0x335F"
    },
    "13146": {
      "op": "JUMPI"
    },
    "13147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13149": {
      "op": "DUP1"
    },
    "13150": {
      "op": "REVERT"
    },
    "13151": {
      "op": "JUMPDEST"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13154": {
      "op": "DUP4"
    },
    "13155": {
      "op": "ADD"
    },
    "13156": {
      "op": "SWAP2"
    },
    "13157": {
      "op": "POP"
    },
    "13158": {
      "op": "DUP4"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13161": {
      "op": "DUP3"
    },
    "13162": {
      "op": "DUP6"
    },
    "13163": {
      "op": "ADD"
    },
    "13164": {
      "op": "ADD"
    },
    "13165": {
      "op": "GT"
    },
    "13166": {
      "op": "ISZERO"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x3377"
    },
    "13170": {
      "op": "JUMPI"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13173": {
      "op": "DUP1"
    },
    "13174": {
      "op": "REVERT"
    },
    "13175": {
      "op": "JUMPDEST"
    },
    "13176": {
      "op": "SWAP3"
    },
    "13177": {
      "op": "POP"
    },
    "13178": {
      "op": "SWAP3"
    },
    "13179": {
      "op": "SWAP1"
    },
    "13180": {
      "op": "POP"
    },
    "13181": {
      "jump": "o",
      "op": "JUMP"
    },
    "13182": {
      "op": "JUMPDEST"
    },
    "13183": {
      "op": "DUP1"
    },
    "13184": {
      "op": "CALLDATALOAD"
    },
    "13185": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13189": {
      "op": "DUP2"
    },
    "13190": {
      "op": "AND"
    },
    "13191": {
      "op": "DUP2"
    },
    "13192": {
      "op": "EQ"
    },
    "13193": {
      "op": "PUSH2",
      "value": "0x31AA"
    },
    "13196": {
      "op": "JUMPI"
    },
    "13197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13199": {
      "op": "DUP1"
    },
    "13200": {
      "op": "REVERT"
    },
    "13201": {
      "op": "JUMPDEST"
    },
    "13202": {
      "op": "DUP1"
    },
    "13203": {
      "op": "CALLDATALOAD"
    },
    "13204": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13207": {
      "op": "DUP2"
    },
    "13208": {
      "op": "AND"
    },
    "13209": {
      "op": "DUP2"
    },
    "13210": {
      "op": "EQ"
    },
    "13211": {
      "op": "PUSH2",
      "value": "0x31AA"
    },
    "13214": {
      "op": "JUMPI"
    },
    "13215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13217": {
      "op": "DUP1"
    },
    "13218": {
      "op": "REVERT"
    },
    "13219": {
      "op": "JUMPDEST"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13222": {
      "op": "DUP1"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13225": {
      "op": "DUP1"
    },
    "13226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13228": {
      "op": "DUP1"
    },
    "13229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13233": {
      "op": "DUP9"
    },
    "13234": {
      "op": "DUP11"
    },
    "13235": {
      "op": "SUB"
    },
    "13236": {
      "op": "SLT"
    },
    "13237": {
      "op": "ISZERO"
    },
    "13238": {
      "op": "PUSH2",
      "value": "0x33BE"
    },
    "13241": {
      "op": "JUMPI"
    },
    "13242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13244": {
      "op": "DUP1"
    },
    "13245": {
      "op": "REVERT"
    },
    "13246": {
      "op": "JUMPDEST"
    },
    "13247": {
      "op": "DUP8"
    },
    "13248": {
      "op": "CALLDATALOAD"
    },
    "13249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13255": {
      "op": "SHL"
    },
    "13256": {
      "op": "SUB"
    },
    "13257": {
      "op": "DUP2"
    },
    "13258": {
      "op": "GT"
    },
    "13259": {
      "op": "ISZERO"
    },
    "13260": {
      "op": "PUSH2",
      "value": "0x33D4"
    },
    "13263": {
      "op": "JUMPI"
    },
    "13264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13266": {
      "op": "DUP1"
    },
    "13267": {
      "op": "REVERT"
    },
    "13268": {
      "op": "JUMPDEST"
    },
    "13269": {
      "op": "PUSH2",
      "value": "0x33E0"
    },
    "13272": {
      "op": "DUP11"
    },
    "13273": {
      "op": "DUP3"
    },
    "13274": {
      "op": "DUP12"
    },
    "13275": {
      "op": "ADD"
    },
    "13276": {
      "op": "PUSH2",
      "value": "0x3336"
    },
    "13279": {
      "jump": "i",
      "op": "JUMP"
    },
    "13280": {
      "op": "JUMPDEST"
    },
    "13281": {
      "op": "SWAP1"
    },
    "13282": {
      "op": "SWAP9"
    },
    "13283": {
      "op": "POP"
    },
    "13284": {
      "op": "SWAP7"
    },
    "13285": {
      "op": "POP"
    },
    "13286": {
      "op": "POP"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13289": {
      "op": "DUP9"
    },
    "13290": {
      "op": "ADD"
    },
    "13291": {
      "op": "CALLDATALOAD"
    },
    "13292": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13294": {
      "op": "DUP2"
    },
    "13295": {
      "op": "AND"
    },
    "13296": {
      "op": "DUP2"
    },
    "13297": {
      "op": "EQ"
    },
    "13298": {
      "op": "PUSH2",
      "value": "0x33FA"
    },
    "13301": {
      "op": "JUMPI"
    },
    "13302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13304": {
      "op": "DUP1"
    },
    "13305": {
      "op": "REVERT"
    },
    "13306": {
      "op": "JUMPDEST"
    },
    "13307": {
      "op": "SWAP5"
    },
    "13308": {
      "op": "POP"
    },
    "13309": {
      "op": "PUSH2",
      "value": "0x3408"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13314": {
      "op": "DUP10"
    },
    "13315": {
      "op": "ADD"
    },
    "13316": {
      "op": "PUSH2",
      "value": "0x337E"
    },
    "13319": {
      "jump": "i",
      "op": "JUMP"
    },
    "13320": {
      "op": "JUMPDEST"
    },
    "13321": {
      "op": "SWAP4"
    },
    "13322": {
      "op": "POP"
    },
    "13323": {
      "op": "PUSH2",
      "value": "0x3416"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13328": {
      "op": "DUP10"
    },
    "13329": {
      "op": "ADD"
    },
    "13330": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "13333": {
      "jump": "i",
      "op": "JUMP"
    },
    "13334": {
      "op": "JUMPDEST"
    },
    "13335": {
      "op": "SWAP3"
    },
    "13336": {
      "op": "POP"
    },
    "13337": {
      "op": "PUSH2",
      "value": "0x3424"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13342": {
      "op": "DUP10"
    },
    "13343": {
      "op": "ADD"
    },
    "13344": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "13347": {
      "jump": "i",
      "op": "JUMP"
    },
    "13348": {
      "op": "JUMPDEST"
    },
    "13349": {
      "op": "SWAP2"
    },
    "13350": {
      "op": "POP"
    },
    "13351": {
      "op": "PUSH2",
      "value": "0x3432"
    },
    "13354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13356": {
      "op": "DUP10"
    },
    "13357": {
      "op": "ADD"
    },
    "13358": {
      "op": "PUSH2",
      "value": "0x3391"
    },
    "13361": {
      "jump": "i",
      "op": "JUMP"
    },
    "13362": {
      "op": "JUMPDEST"
    },
    "13363": {
      "op": "SWAP1"
    },
    "13364": {
      "op": "POP"
    },
    "13365": {
      "op": "SWAP3"
    },
    "13366": {
      "op": "SWAP6"
    },
    "13367": {
      "op": "SWAP9"
    },
    "13368": {
      "op": "SWAP2"
    },
    "13369": {
      "op": "SWAP5"
    },
    "13370": {
      "op": "SWAP8"
    },
    "13371": {
      "op": "POP"
    },
    "13372": {
      "op": "SWAP3"
    },
    "13373": {
      "op": "SWAP6"
    },
    "13374": {
      "op": "POP"
    },
    "13375": {
      "jump": "o",
      "op": "JUMP"
    },
    "13376": {
      "op": "JUMPDEST"
    },
    "13377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13379": {
      "op": "DUP1"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13382": {
      "op": "DUP4"
    },
    "13383": {
      "op": "DUP6"
    },
    "13384": {
      "op": "SUB"
    },
    "13385": {
      "op": "SLT"
    },
    "13386": {
      "op": "ISZERO"
    },
    "13387": {
      "op": "PUSH2",
      "value": "0x3453"
    },
    "13390": {
      "op": "JUMPI"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13393": {
      "op": "DUP1"
    },
    "13394": {
      "op": "REVERT"
    },
    "13395": {
      "op": "JUMPDEST"
    },
    "13396": {
      "op": "POP"
    },
    "13397": {
      "op": "POP"
    },
    "13398": {
      "op": "DUP1"
    },
    "13399": {
      "op": "CALLDATALOAD"
    },
    "13400": {
      "op": "SWAP3"
    },
    "13401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13403": {
      "op": "SWAP1"
    },
    "13404": {
      "op": "SWAP2"
    },
    "13405": {
      "op": "ADD"
    },
    "13406": {
      "op": "CALLDATALOAD"
    },
    "13407": {
      "op": "SWAP2"
    },
    "13408": {
      "op": "POP"
    },
    "13409": {
      "jump": "o",
      "op": "JUMP"
    },
    "13410": {
      "op": "JUMPDEST"
    },
    "13411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13417": {
      "op": "SHL"
    },
    "13418": {
      "op": "SUB"
    },
    "13419": {
      "op": "DUP2"
    },
    "13420": {
      "op": "AND"
    },
    "13421": {
      "op": "DUP2"
    },
    "13422": {
      "op": "EQ"
    },
    "13423": {
      "op": "PUSH2",
      "value": "0x26E5"
    },
    "13426": {
      "op": "JUMPI"
    },
    "13427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13429": {
      "op": "DUP1"
    },
    "13430": {
      "op": "REVERT"
    },
    "13431": {
      "op": "JUMPDEST"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13436": {
      "op": "DUP3"
    },
    "13437": {
      "op": "DUP5"
    },
    "13438": {
      "op": "SUB"
    },
    "13439": {
      "op": "SLT"
    },
    "13440": {
      "op": "ISZERO"
    },
    "13441": {
      "op": "PUSH2",
      "value": "0x3489"
    },
    "13444": {
      "op": "JUMPI"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13447": {
      "op": "DUP1"
    },
    "13448": {
      "op": "REVERT"
    },
    "13449": {
      "op": "JUMPDEST"
    },
    "13450": {
      "op": "DUP2"
    },
    "13451": {
      "op": "CALLDATALOAD"
    },
    "13452": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "13455": {
      "op": "DUP2"
    },
    "13456": {
      "op": "PUSH2",
      "value": "0x3462"
    },
    "13459": {
      "jump": "i",
      "op": "JUMP"
    },
    "13460": {
      "op": "JUMPDEST"
    },
    "13461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13463": {
      "op": "DUP3"
    },
    "13464": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13466": {
      "op": "DUP4"
    },
    "13467": {
      "op": "ADD"
    },
    "13468": {
      "op": "SLT"
    },
    "13469": {
      "op": "PUSH2",
      "value": "0x34A5"
    },
    "13472": {
      "op": "JUMPI"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13475": {
      "op": "DUP1"
    },
    "13476": {
      "op": "REVERT"
    },
    "13477": {
      "op": "JUMPDEST"
    },
    "13478": {
      "op": "DUP2"
    },
    "13479": {
      "op": "CALLDATALOAD"
    },
    "13480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13486": {
      "op": "SHL"
    },
    "13487": {
      "op": "SUB"
    },
    "13488": {
      "op": "DUP2"
    },
    "13489": {
      "op": "GT"
    },
    "13490": {
      "op": "ISZERO"
    },
    "13491": {
      "op": "PUSH2",
      "value": "0x34BE"
    },
    "13494": {
      "op": "JUMPI"
    },
    "13495": {
      "op": "PUSH2",
      "value": "0x34BE"
    },
    "13498": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "13501": {
      "jump": "i",
      "op": "JUMP"
    },
    "13502": {
      "op": "JUMPDEST"
    },
    "13503": {
      "op": "PUSH2",
      "value": "0x34D1"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13508": {
      "op": "DUP3"
    },
    "13509": {
      "op": "ADD"
    },
    "13510": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13512": {
      "op": "NOT"
    },
    "13513": {
      "op": "AND"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13516": {
      "op": "ADD"
    },
    "13517": {
      "op": "PUSH2",
      "value": "0x3022"
    },
    "13520": {
      "jump": "i",
      "op": "JUMP"
    },
    "13521": {
      "op": "JUMPDEST"
    },
    "13522": {
      "op": "DUP2"
    },
    "13523": {
      "op": "DUP2"
    },
    "13524": {
      "op": "MSTORE"
    },
    "13525": {
      "op": "DUP5"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13528": {
      "op": "DUP4"
    },
    "13529": {
      "op": "DUP7"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "ADD"
    },
    "13532": {
      "op": "GT"
    },
    "13533": {
      "op": "ISZERO"
    },
    "13534": {
      "op": "PUSH2",
      "value": "0x34E6"
    },
    "13537": {
      "op": "JUMPI"
    },
    "13538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13540": {
      "op": "DUP1"
    },
    "13541": {
      "op": "REVERT"
    },
    "13542": {
      "op": "JUMPDEST"
    },
    "13543": {
      "op": "DUP2"
    },
    "13544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13546": {
      "op": "DUP6"
    },
    "13547": {
      "op": "ADD"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13550": {
      "op": "DUP4"
    },
    "13551": {
      "op": "ADD"
    },
    "13552": {
      "op": "CALLDATACOPY"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13555": {
      "op": "SWAP2"
    },
    "13556": {
      "op": "DUP2"
    },
    "13557": {
      "op": "ADD"
    },
    "13558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13560": {
      "op": "ADD"
    },
    "13561": {
      "op": "SWAP2"
    },
    "13562": {
      "op": "SWAP1"
    },
    "13563": {
      "op": "SWAP2"
    },
    "13564": {
      "op": "MSTORE"
    },
    "13565": {
      "op": "SWAP4"
    },
    "13566": {
      "op": "SWAP3"
    },
    "13567": {
      "op": "POP"
    },
    "13568": {
      "op": "POP"
    },
    "13569": {
      "op": "POP"
    },
    "13570": {
      "jump": "o",
      "op": "JUMP"
    },
    "13571": {
      "op": "JUMPDEST"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13574": {
      "op": "DUP1"
    },
    "13575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13577": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13579": {
      "op": "DUP5"
    },
    "13580": {
      "op": "DUP7"
    },
    "13581": {
      "op": "SUB"
    },
    "13582": {
      "op": "SLT"
    },
    "13583": {
      "op": "ISZERO"
    },
    "13584": {
      "op": "PUSH2",
      "value": "0x3518"
    },
    "13587": {
      "op": "JUMPI"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13590": {
      "op": "DUP1"
    },
    "13591": {
      "op": "REVERT"
    },
    "13592": {
      "op": "JUMPDEST"
    },
    "13593": {
      "op": "DUP4"
    },
    "13594": {
      "op": "CALLDATALOAD"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13601": {
      "op": "SHL"
    },
    "13602": {
      "op": "SUB"
    },
    "13603": {
      "op": "DUP2"
    },
    "13604": {
      "op": "GT"
    },
    "13605": {
      "op": "ISZERO"
    },
    "13606": {
      "op": "PUSH2",
      "value": "0x352E"
    },
    "13609": {
      "op": "JUMPI"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13612": {
      "op": "DUP1"
    },
    "13613": {
      "op": "REVERT"
    },
    "13614": {
      "op": "JUMPDEST"
    },
    "13615": {
      "op": "PUSH2",
      "value": "0x353A"
    },
    "13618": {
      "op": "DUP7"
    },
    "13619": {
      "op": "DUP3"
    },
    "13620": {
      "op": "DUP8"
    },
    "13621": {
      "op": "ADD"
    },
    "13622": {
      "op": "PUSH2",
      "value": "0x3494"
    },
    "13625": {
      "jump": "i",
      "op": "JUMP"
    },
    "13626": {
      "op": "JUMPDEST"
    },
    "13627": {
      "op": "SWAP4"
    },
    "13628": {
      "op": "POP"
    },
    "13629": {
      "op": "POP"
    },
    "13630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13632": {
      "op": "DUP5"
    },
    "13633": {
      "op": "ADD"
    },
    "13634": {
      "op": "CALLDATALOAD"
    },
    "13635": {
      "op": "SWAP2"
    },
    "13636": {
      "op": "POP"
    },
    "13637": {
      "op": "PUSH2",
      "value": "0x3550"
    },
    "13640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13642": {
      "op": "DUP6"
    },
    "13643": {
      "op": "ADD"
    },
    "13644": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "13647": {
      "jump": "i",
      "op": "JUMP"
    },
    "13648": {
      "op": "JUMPDEST"
    },
    "13649": {
      "op": "SWAP1"
    },
    "13650": {
      "op": "POP"
    },
    "13651": {
      "op": "SWAP3"
    },
    "13652": {
      "op": "POP"
    },
    "13653": {
      "op": "SWAP3"
    },
    "13654": {
      "op": "POP"
    },
    "13655": {
      "op": "SWAP3"
    },
    "13656": {
      "jump": "o",
      "op": "JUMP"
    },
    "13657": {
      "op": "JUMPDEST"
    },
    "13658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13660": {
      "op": "DUP1"
    },
    "13661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13663": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13665": {
      "op": "DUP5"
    },
    "13666": {
      "op": "DUP7"
    },
    "13667": {
      "op": "SUB"
    },
    "13668": {
      "op": "SLT"
    },
    "13669": {
      "op": "ISZERO"
    },
    "13670": {
      "op": "PUSH2",
      "value": "0x356E"
    },
    "13673": {
      "op": "JUMPI"
    },
    "13674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13676": {
      "op": "DUP1"
    },
    "13677": {
      "op": "REVERT"
    },
    "13678": {
      "op": "JUMPDEST"
    },
    "13679": {
      "op": "POP"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "DUP2"
    },
    "13682": {
      "op": "CALLDATALOAD"
    },
    "13683": {
      "op": "SWAP4"
    },
    "13684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13686": {
      "op": "DUP4"
    },
    "13687": {
      "op": "ADD"
    },
    "13688": {
      "op": "CALLDATALOAD"
    },
    "13689": {
      "op": "SWAP4"
    },
    "13690": {
      "op": "POP"
    },
    "13691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13693": {
      "op": "SWAP1"
    },
    "13694": {
      "op": "SWAP3"
    },
    "13695": {
      "op": "ADD"
    },
    "13696": {
      "op": "CALLDATALOAD"
    },
    "13697": {
      "op": "SWAP2"
    },
    "13698": {
      "op": "SWAP1"
    },
    "13699": {
      "op": "POP"
    },
    "13700": {
      "jump": "o",
      "op": "JUMP"
    },
    "13701": {
      "op": "JUMPDEST"
    },
    "13702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13704": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13707": {
      "op": "DUP1"
    },
    "13708": {
      "op": "DUP4"
    },
    "13709": {
      "op": "MSTORE"
    },
    "13710": {
      "op": "PUSH2",
      "value": "0x3599"
    },
    "13713": {
      "op": "DUP2"
    },
    "13714": {
      "op": "DUP5"
    },
    "13715": {
      "op": "ADD"
    },
    "13716": {
      "op": "DUP15"
    },
    "13717": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "13720": {
      "jump": "i",
      "op": "JUMP"
    },
    "13721": {
      "op": "JUMPDEST"
    },
    "13722": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13728": {
      "op": "SWAP13"
    },
    "13729": {
      "op": "DUP14"
    },
    "13730": {
      "op": "AND"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13733": {
      "op": "DUP6"
    },
    "13734": {
      "op": "ADD"
    },
    "13735": {
      "op": "MSTORE"
    },
    "13736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13738": {
      "op": "DUP5"
    },
    "13739": {
      "op": "ADD"
    },
    "13740": {
      "op": "SWAP12"
    },
    "13741": {
      "op": "SWAP1"
    },
    "13742": {
      "op": "SWAP12"
    },
    "13743": {
      "op": "MSTORE"
    },
    "13744": {
      "op": "POP"
    },
    "13745": {
      "op": "POP"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13748": {
      "op": "DUP2"
    },
    "13749": {
      "op": "ADD"
    },
    "13750": {
      "op": "SWAP8"
    },
    "13751": {
      "op": "SWAP1"
    },
    "13752": {
      "op": "SWAP8"
    },
    "13753": {
      "op": "MSTORE"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13756": {
      "op": "SWAP6"
    },
    "13757": {
      "op": "SWAP1"
    },
    "13758": {
      "op": "SWAP6"
    },
    "13759": {
      "op": "AND"
    },
    "13760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13762": {
      "op": "DUP8"
    },
    "13763": {
      "op": "ADD"
    },
    "13764": {
      "op": "MSTORE"
    },
    "13765": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13769": {
      "op": "SWAP4"
    },
    "13770": {
      "op": "SWAP1"
    },
    "13771": {
      "op": "SWAP4"
    },
    "13772": {
      "op": "AND"
    },
    "13773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13775": {
      "op": "DUP7"
    },
    "13776": {
      "op": "ADD"
    },
    "13777": {
      "op": "MSTORE"
    },
    "13778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13782": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13784": {
      "op": "SHL"
    },
    "13785": {
      "op": "SUB"
    },
    "13786": {
      "op": "SWAP2"
    },
    "13787": {
      "op": "SWAP1"
    },
    "13788": {
      "op": "SWAP2"
    },
    "13789": {
      "op": "AND"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13792": {
      "op": "DUP6"
    },
    "13793": {
      "op": "ADD"
    },
    "13794": {
      "op": "MSTORE"
    },
    "13795": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13798": {
      "op": "SWAP1"
    },
    "13799": {
      "op": "DUP2"
    },
    "13800": {
      "op": "AND"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13803": {
      "op": "DUP6"
    },
    "13804": {
      "op": "ADD"
    },
    "13805": {
      "op": "MSTORE"
    },
    "13806": {
      "op": "AND"
    },
    "13807": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13810": {
      "op": "DUP4"
    },
    "13811": {
      "op": "ADD"
    },
    "13812": {
      "op": "MSTORE"
    },
    "13813": {
      "op": "SWAP1"
    },
    "13814": {
      "op": "SWAP3"
    },
    "13815": {
      "op": "AND"
    },
    "13816": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13819": {
      "op": "SWAP1"
    },
    "13820": {
      "op": "SWAP3"
    },
    "13821": {
      "op": "ADD"
    },
    "13822": {
      "op": "SWAP2"
    },
    "13823": {
      "op": "SWAP1"
    },
    "13824": {
      "op": "SWAP2"
    },
    "13825": {
      "op": "MSTORE"
    },
    "13826": {
      "op": "SWAP2"
    },
    "13827": {
      "op": "SWAP1"
    },
    "13828": {
      "op": "POP"
    },
    "13829": {
      "jump": "o",
      "op": "JUMP"
    },
    "13830": {
      "op": "JUMPDEST"
    },
    "13831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13833": {
      "op": "DUP2"
    },
    "13834": {
      "op": "MSTORE"
    },
    "13835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13837": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13842": {
      "op": "DUP4"
    },
    "13843": {
      "op": "ADD"
    },
    "13844": {
      "op": "DUP5"
    },
    "13845": {
      "op": "PUSH2",
      "value": "0x31D1"
    },
    "13848": {
      "jump": "i",
      "op": "JUMP"
    },
    "13849": {
      "op": "JUMPDEST"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13854": {
      "op": "DUP1"
    },
    "13855": {
      "op": "DUP4"
    },
    "13856": {
      "op": "ADD"
    },
    "13857": {
      "op": "DUP2"
    },
    "13858": {
      "op": "DUP5"
    },
    "13859": {
      "op": "MSTORE"
    },
    "13860": {
      "op": "DUP1"
    },
    "13861": {
      "op": "DUP6"
    },
    "13862": {
      "op": "MLOAD"
    },
    "13863": {
      "op": "DUP1"
    },
    "13864": {
      "op": "DUP4"
    },
    "13865": {
      "op": "MSTORE"
    },
    "13866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13868": {
      "op": "DUP7"
    },
    "13869": {
      "op": "ADD"
    },
    "13870": {
      "op": "SWAP2"
    },
    "13871": {
      "op": "POP"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13874": {
      "op": "DUP2"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13877": {
      "op": "SHL"
    },
    "13878": {
      "op": "DUP8"
    },
    "13879": {
      "op": "ADD"
    },
    "13880": {
      "op": "ADD"
    },
    "13881": {
      "op": "SWAP3"
    },
    "13882": {
      "op": "POP"
    },
    "13883": {
      "op": "DUP4"
    },
    "13884": {
      "op": "DUP8"
    },
    "13885": {
      "op": "ADD"
    },
    "13886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13888": {
      "op": "JUMPDEST"
    },
    "13889": {
      "op": "DUP3"
    },
    "13890": {
      "op": "DUP2"
    },
    "13891": {
      "op": "LT"
    },
    "13892": {
      "op": "ISZERO"
    },
    "13893": {
      "op": "PUSH2",
      "value": "0x366E"
    },
    "13896": {
      "op": "JUMPI"
    },
    "13897": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13899": {
      "op": "NOT"
    },
    "13900": {
      "op": "DUP9"
    },
    "13901": {
      "op": "DUP7"
    },
    "13902": {
      "op": "SUB"
    },
    "13903": {
      "op": "ADD"
    },
    "13904": {
      "op": "DUP5"
    },
    "13905": {
      "op": "MSTORE"
    },
    "13906": {
      "op": "PUSH2",
      "value": "0x365C"
    },
    "13909": {
      "op": "DUP6"
    },
    "13910": {
      "op": "DUP4"
    },
    "13911": {
      "op": "MLOAD"
    },
    "13912": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "13915": {
      "jump": "i",
      "op": "JUMP"
    },
    "13916": {
      "op": "JUMPDEST"
    },
    "13917": {
      "op": "SWAP5"
    },
    "13918": {
      "op": "POP"
    },
    "13919": {
      "op": "SWAP3"
    },
    "13920": {
      "op": "DUP6"
    },
    "13921": {
      "op": "ADD"
    },
    "13922": {
      "op": "SWAP3"
    },
    "13923": {
      "op": "SWAP1"
    },
    "13924": {
      "op": "DUP6"
    },
    "13925": {
      "op": "ADD"
    },
    "13926": {
      "op": "SWAP1"
    },
    "13927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13929": {
      "op": "ADD"
    },
    "13930": {
      "op": "PUSH2",
      "value": "0x3640"
    },
    "13933": {
      "op": "JUMP"
    },
    "13934": {
      "op": "JUMPDEST"
    },
    "13935": {
      "op": "POP"
    },
    "13936": {
      "op": "SWAP3"
    },
    "13937": {
      "op": "SWAP8"
    },
    "13938": {
      "op": "SWAP7"
    },
    "13939": {
      "op": "POP"
    },
    "13940": {
      "op": "POP"
    },
    "13941": {
      "op": "POP"
    },
    "13942": {
      "op": "POP"
    },
    "13943": {
      "op": "POP"
    },
    "13944": {
      "op": "POP"
    },
    "13945": {
      "op": "POP"
    },
    "13946": {
      "jump": "o",
      "op": "JUMP"
    },
    "13947": {
      "op": "JUMPDEST"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13950": {
      "op": "DUP1"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13953": {
      "op": "DUP1"
    },
    "13954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13956": {
      "op": "DUP1"
    },
    "13957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13959": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13961": {
      "op": "DUP9"
    },
    "13962": {
      "op": "DUP11"
    },
    "13963": {
      "op": "SUB"
    },
    "13964": {
      "op": "SLT"
    },
    "13965": {
      "op": "ISZERO"
    },
    "13966": {
      "op": "PUSH2",
      "value": "0x3696"
    },
    "13969": {
      "op": "JUMPI"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13972": {
      "op": "DUP1"
    },
    "13973": {
      "op": "REVERT"
    },
    "13974": {
      "op": "JUMPDEST"
    },
    "13975": {
      "op": "DUP8"
    },
    "13976": {
      "op": "CALLDATALOAD"
    },
    "13977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13983": {
      "op": "SHL"
    },
    "13984": {
      "op": "SUB"
    },
    "13985": {
      "op": "DUP2"
    },
    "13986": {
      "op": "GT"
    },
    "13987": {
      "op": "ISZERO"
    },
    "13988": {
      "op": "PUSH2",
      "value": "0x36AC"
    },
    "13991": {
      "op": "JUMPI"
    },
    "13992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13994": {
      "op": "DUP1"
    },
    "13995": {
      "op": "REVERT"
    },
    "13996": {
      "op": "JUMPDEST"
    },
    "13997": {
      "op": "PUSH2",
      "value": "0x36B8"
    },
    "14000": {
      "op": "DUP11"
    },
    "14001": {
      "op": "DUP3"
    },
    "14002": {
      "op": "DUP12"
    },
    "14003": {
      "op": "ADD"
    },
    "14004": {
      "op": "PUSH2",
      "value": "0x3336"
    },
    "14007": {
      "jump": "i",
      "op": "JUMP"
    },
    "14008": {
      "op": "JUMPDEST"
    },
    "14009": {
      "op": "SWAP1"
    },
    "14010": {
      "op": "SWAP9"
    },
    "14011": {
      "op": "POP"
    },
    "14012": {
      "op": "SWAP7"
    },
    "14013": {
      "op": "POP"
    },
    "14014": {
      "op": "PUSH2",
      "value": "0x33FA"
    },
    "14017": {
      "op": "SWAP1"
    },
    "14018": {
      "op": "POP"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14021": {
      "op": "DUP10"
    },
    "14022": {
      "op": "ADD"
    },
    "14023": {
      "op": "PUSH2",
      "value": "0x3391"
    },
    "14026": {
      "jump": "i",
      "op": "JUMP"
    },
    "14027": {
      "op": "JUMPDEST"
    },
    "14028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14030": {
      "op": "DUP1"
    },
    "14031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14035": {
      "op": "DUP5"
    },
    "14036": {
      "op": "DUP7"
    },
    "14037": {
      "op": "SUB"
    },
    "14038": {
      "op": "SLT"
    },
    "14039": {
      "op": "ISZERO"
    },
    "14040": {
      "op": "PUSH2",
      "value": "0x36E0"
    },
    "14043": {
      "op": "JUMPI"
    },
    "14044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14046": {
      "op": "DUP1"
    },
    "14047": {
      "op": "REVERT"
    },
    "14048": {
      "op": "JUMPDEST"
    },
    "14049": {
      "op": "DUP4"
    },
    "14050": {
      "op": "CALLDATALOAD"
    },
    "14051": {
      "op": "SWAP3"
    },
    "14052": {
      "op": "POP"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14055": {
      "op": "DUP5"
    },
    "14056": {
      "op": "ADD"
    },
    "14057": {
      "op": "CALLDATALOAD"
    },
    "14058": {
      "op": "SWAP2"
    },
    "14059": {
      "op": "POP"
    },
    "14060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14062": {
      "op": "DUP5"
    },
    "14063": {
      "op": "ADD"
    },
    "14064": {
      "op": "CALLDATALOAD"
    },
    "14065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14071": {
      "op": "SHL"
    },
    "14072": {
      "op": "SUB"
    },
    "14073": {
      "op": "DUP2"
    },
    "14074": {
      "op": "GT"
    },
    "14075": {
      "op": "ISZERO"
    },
    "14076": {
      "op": "PUSH2",
      "value": "0x3704"
    },
    "14079": {
      "op": "JUMPI"
    },
    "14080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14082": {
      "op": "DUP1"
    },
    "14083": {
      "op": "REVERT"
    },
    "14084": {
      "op": "JUMPDEST"
    },
    "14085": {
      "op": "PUSH2",
      "value": "0x3710"
    },
    "14088": {
      "op": "DUP7"
    },
    "14089": {
      "op": "DUP3"
    },
    "14090": {
      "op": "DUP8"
    },
    "14091": {
      "op": "ADD"
    },
    "14092": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "14095": {
      "jump": "i",
      "op": "JUMP"
    },
    "14096": {
      "op": "JUMPDEST"
    },
    "14097": {
      "op": "SWAP2"
    },
    "14098": {
      "op": "POP"
    },
    "14099": {
      "op": "POP"
    },
    "14100": {
      "op": "SWAP3"
    },
    "14101": {
      "op": "POP"
    },
    "14102": {
      "op": "SWAP3"
    },
    "14103": {
      "op": "POP"
    },
    "14104": {
      "op": "SWAP3"
    },
    "14105": {
      "jump": "o",
      "op": "JUMP"
    },
    "14106": {
      "op": "JUMPDEST"
    },
    "14107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14111": {
      "op": "DUP3"
    },
    "14112": {
      "op": "DUP5"
    },
    "14113": {
      "op": "SUB"
    },
    "14114": {
      "op": "SLT"
    },
    "14115": {
      "op": "ISZERO"
    },
    "14116": {
      "op": "PUSH2",
      "value": "0x372C"
    },
    "14119": {
      "op": "JUMPI"
    },
    "14120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14122": {
      "op": "DUP1"
    },
    "14123": {
      "op": "REVERT"
    },
    "14124": {
      "op": "JUMPDEST"
    },
    "14125": {
      "op": "DUP2"
    },
    "14126": {
      "op": "CALLDATALOAD"
    },
    "14127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14133": {
      "op": "SHL"
    },
    "14134": {
      "op": "SUB"
    },
    "14135": {
      "op": "DUP2"
    },
    "14136": {
      "op": "GT"
    },
    "14137": {
      "op": "ISZERO"
    },
    "14138": {
      "op": "PUSH2",
      "value": "0x3742"
    },
    "14141": {
      "op": "JUMPI"
    },
    "14142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14144": {
      "op": "DUP1"
    },
    "14145": {
      "op": "REVERT"
    },
    "14146": {
      "op": "JUMPDEST"
    },
    "14147": {
      "op": "PUSH2",
      "value": "0x374E"
    },
    "14150": {
      "op": "DUP5"
    },
    "14151": {
      "op": "DUP3"
    },
    "14152": {
      "op": "DUP6"
    },
    "14153": {
      "op": "ADD"
    },
    "14154": {
      "op": "PUSH2",
      "value": "0x3494"
    },
    "14157": {
      "jump": "i",
      "op": "JUMP"
    },
    "14158": {
      "op": "JUMPDEST"
    },
    "14159": {
      "op": "SWAP5"
    },
    "14160": {
      "op": "SWAP4"
    },
    "14161": {
      "op": "POP"
    },
    "14162": {
      "op": "POP"
    },
    "14163": {
      "op": "POP"
    },
    "14164": {
      "op": "POP"
    },
    "14165": {
      "jump": "o",
      "op": "JUMP"
    },
    "14166": {
      "op": "JUMPDEST"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14169": {
      "op": "DUP1"
    },
    "14170": {
      "op": "DUP3"
    },
    "14171": {
      "op": "MSTORE"
    },
    "14172": {
      "op": "DUP3"
    },
    "14173": {
      "op": "MLOAD"
    },
    "14174": {
      "op": "DUP3"
    },
    "14175": {
      "op": "DUP3"
    },
    "14176": {
      "op": "ADD"
    },
    "14177": {
      "op": "DUP2"
    },
    "14178": {
      "op": "SWAP1"
    },
    "14179": {
      "op": "MSTORE"
    },
    "14180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14182": {
      "op": "SWAP2"
    },
    "14183": {
      "op": "SWAP1"
    },
    "14184": {
      "op": "DUP5"
    },
    "14185": {
      "op": "DUP3"
    },
    "14186": {
      "op": "ADD"
    },
    "14187": {
      "op": "SWAP1"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14190": {
      "op": "DUP6"
    },
    "14191": {
      "op": "ADD"
    },
    "14192": {
      "op": "SWAP1"
    },
    "14193": {
      "op": "DUP5"
    },
    "14194": {
      "op": "JUMPDEST"
    },
    "14195": {
      "op": "DUP2"
    },
    "14196": {
      "op": "DUP2"
    },
    "14197": {
      "op": "LT"
    },
    "14198": {
      "op": "ISZERO"
    },
    "14199": {
      "op": "PUSH2",
      "value": "0x3792"
    },
    "14202": {
      "op": "JUMPI"
    },
    "14203": {
      "op": "DUP4"
    },
    "14204": {
      "op": "MLOAD"
    },
    "14205": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14208": {
      "op": "AND"
    },
    "14209": {
      "op": "DUP4"
    },
    "14210": {
      "op": "MSTORE"
    },
    "14211": {
      "op": "SWAP3"
    },
    "14212": {
      "op": "DUP5"
    },
    "14213": {
      "op": "ADD"
    },
    "14214": {
      "op": "SWAP3"
    },
    "14215": {
      "op": "SWAP2"
    },
    "14216": {
      "op": "DUP5"
    },
    "14217": {
      "op": "ADD"
    },
    "14218": {
      "op": "SWAP2"
    },
    "14219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14221": {
      "op": "ADD"
    },
    "14222": {
      "op": "PUSH2",
      "value": "0x3772"
    },
    "14225": {
      "op": "JUMP"
    },
    "14226": {
      "op": "JUMPDEST"
    },
    "14227": {
      "op": "POP"
    },
    "14228": {
      "op": "SWAP1"
    },
    "14229": {
      "op": "SWAP7"
    },
    "14230": {
      "op": "SWAP6"
    },
    "14231": {
      "op": "POP"
    },
    "14232": {
      "op": "POP"
    },
    "14233": {
      "op": "POP"
    },
    "14234": {
      "op": "POP"
    },
    "14235": {
      "op": "POP"
    },
    "14236": {
      "op": "POP"
    },
    "14237": {
      "jump": "o",
      "op": "JUMP"
    },
    "14238": {
      "op": "JUMPDEST"
    },
    "14239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14241": {
      "op": "DUP2"
    },
    "14242": {
      "op": "DUP2"
    },
    "14243": {
      "op": "SHR"
    },
    "14244": {
      "op": "SWAP1"
    },
    "14245": {
      "op": "DUP3"
    },
    "14246": {
      "op": "AND"
    },
    "14247": {
      "op": "DUP1"
    },
    "14248": {
      "op": "PUSH2",
      "value": "0x37B2"
    },
    "14251": {
      "op": "JUMPI"
    },
    "14252": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14254": {
      "op": "DUP3"
    },
    "14255": {
      "op": "AND"
    },
    "14256": {
      "op": "SWAP2"
    },
    "14257": {
      "op": "POP"
    },
    "14258": {
      "op": "JUMPDEST"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14261": {
      "op": "DUP3"
    },
    "14262": {
      "op": "LT"
    },
    "14263": {
      "op": "DUP2"
    },
    "14264": {
      "op": "SUB"
    },
    "14265": {
      "op": "PUSH2",
      "value": "0x37D2"
    },
    "14268": {
      "op": "JUMPI"
    },
    "14269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14276": {
      "op": "SHL"
    },
    "14277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14279": {
      "op": "MSTORE"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14284": {
      "op": "MSTORE"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14289": {
      "op": "REVERT"
    },
    "14290": {
      "op": "JUMPDEST"
    },
    "14291": {
      "op": "POP"
    },
    "14292": {
      "op": "SWAP2"
    },
    "14293": {
      "op": "SWAP1"
    },
    "14294": {
      "op": "POP"
    },
    "14295": {
      "jump": "o",
      "op": "JUMP"
    },
    "14296": {
      "op": "JUMPDEST"
    },
    "14297": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14302": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14304": {
      "op": "SHL"
    },
    "14305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14307": {
      "op": "MSTORE"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14312": {
      "op": "MSTORE"
    },
    "14313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14317": {
      "op": "REVERT"
    },
    "14318": {
      "op": "JUMPDEST"
    },
    "14319": {
      "op": "DUP2"
    },
    "14320": {
      "op": "MLOAD"
    },
    "14321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14323": {
      "op": "SWAP1"
    },
    "14324": {
      "op": "DUP3"
    },
    "14325": {
      "op": "SWAP1"
    },
    "14326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14328": {
      "op": "DUP1"
    },
    "14329": {
      "op": "DUP7"
    },
    "14330": {
      "op": "ADD"
    },
    "14331": {
      "op": "DUP5"
    },
    "14332": {
      "op": "JUMPDEST"
    },
    "14333": {
      "op": "DUP4"
    },
    "14334": {
      "op": "DUP2"
    },
    "14335": {
      "op": "LT"
    },
    "14336": {
      "op": "ISZERO"
    },
    "14337": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "14340": {
      "op": "JUMPI"
    },
    "14341": {
      "op": "DUP2"
    },
    "14342": {
      "op": "MLOAD"
    },
    "14343": {
      "op": "DUP6"
    },
    "14344": {
      "op": "MSTORE"
    },
    "14345": {
      "op": "SWAP4"
    },
    "14346": {
      "op": "DUP3"
    },
    "14347": {
      "op": "ADD"
    },
    "14348": {
      "op": "SWAP4"
    },
    "14349": {
      "op": "SWAP1"
    },
    "14350": {
      "op": "DUP3"
    },
    "14351": {
      "op": "ADD"
    },
    "14352": {
      "op": "SWAP1"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14355": {
      "op": "ADD"
    },
    "14356": {
      "op": "PUSH2",
      "value": "0x37FC"
    },
    "14359": {
      "op": "JUMP"
    },
    "14360": {
      "op": "JUMPDEST"
    },
    "14361": {
      "op": "POP"
    },
    "14362": {
      "op": "SWAP3"
    },
    "14363": {
      "op": "SWAP7"
    },
    "14364": {
      "op": "SWAP6"
    },
    "14365": {
      "op": "POP"
    },
    "14366": {
      "op": "POP"
    },
    "14367": {
      "op": "POP"
    },
    "14368": {
      "op": "POP"
    },
    "14369": {
      "op": "POP"
    },
    "14370": {
      "op": "POP"
    },
    "14371": {
      "jump": "o",
      "op": "JUMP"
    },
    "14372": {
      "op": "JUMPDEST"
    },
    "14373": {
      "op": "DUP5"
    },
    "14374": {
      "op": "DUP2"
    },
    "14375": {
      "op": "MSTORE"
    },
    "14376": {
      "op": "DUP4"
    },
    "14377": {
      "op": "ISZERO"
    },
    "14378": {
      "op": "ISZERO"
    },
    "14379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14381": {
      "op": "DUP3"
    },
    "14382": {
      "op": "ADD"
    },
    "14383": {
      "op": "MSTORE"
    },
    "14384": {
      "op": "DUP3"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14387": {
      "op": "DUP3"
    },
    "14388": {
      "op": "ADD"
    },
    "14389": {
      "op": "MSTORE"
    },
    "14390": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14394": {
      "op": "DUP3"
    },
    "14395": {
      "op": "ADD"
    },
    "14396": {
      "op": "MSTORE"
    },
    "14397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14399": {
      "op": "PUSH2",
      "value": "0x384B"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14404": {
      "op": "DUP4"
    },
    "14405": {
      "op": "ADD"
    },
    "14406": {
      "op": "DUP5"
    },
    "14407": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "14410": {
      "jump": "i",
      "op": "JUMP"
    },
    "14411": {
      "op": "JUMPDEST"
    },
    "14412": {
      "op": "SWAP7"
    },
    "14413": {
      "op": "SWAP6"
    },
    "14414": {
      "op": "POP"
    },
    "14415": {
      "op": "POP"
    },
    "14416": {
      "op": "POP"
    },
    "14417": {
      "op": "POP"
    },
    "14418": {
      "op": "POP"
    },
    "14419": {
      "op": "POP"
    },
    "14420": {
      "jump": "o",
      "op": "JUMP"
    },
    "14421": {
      "op": "JUMPDEST"
    },
    "14422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14424": {
      "op": "DUP1"
    },
    "14425": {
      "op": "DUP3"
    },
    "14426": {
      "op": "MSTORE"
    },
    "14427": {
      "op": "DUP2"
    },
    "14428": {
      "op": "DUP2"
    },
    "14429": {
      "op": "ADD"
    },
    "14430": {
      "op": "MSTORE"
    },
    "14431": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14466": {
      "op": "DUP3"
    },
    "14467": {
      "op": "ADD"
    },
    "14468": {
      "op": "MSTORE"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14471": {
      "op": "ADD"
    },
    "14472": {
      "op": "SWAP1"
    },
    "14473": {
      "jump": "o",
      "op": "JUMP"
    },
    "14474": {
      "op": "JUMPDEST"
    },
    "14475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14477": {
      "op": "DUP2"
    },
    "14478": {
      "op": "MSTORE"
    },
    "14479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14481": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "14484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14486": {
      "op": "DUP4"
    },
    "14487": {
      "op": "ADD"
    },
    "14488": {
      "op": "DUP5"
    },
    "14489": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "14492": {
      "jump": "i",
      "op": "JUMP"
    },
    "14493": {
      "op": "JUMPDEST"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14496": {
      "op": "DUP2"
    },
    "14497": {
      "op": "SLOAD"
    },
    "14498": {
      "op": "PUSH2",
      "value": "0x38AA"
    },
    "14501": {
      "op": "DUP2"
    },
    "14502": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "14505": {
      "jump": "i",
      "op": "JUMP"
    },
    "14506": {
      "op": "JUMPDEST"
    },
    "14507": {
      "op": "DUP1"
    },
    "14508": {
      "op": "DUP6"
    },
    "14509": {
      "op": "MSTORE"
    },
    "14510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14514": {
      "op": "DUP4"
    },
    "14515": {
      "op": "DUP2"
    },
    "14516": {
      "op": "AND"
    },
    "14517": {
      "op": "DUP1"
    },
    "14518": {
      "op": "ISZERO"
    },
    "14519": {
      "op": "PUSH2",
      "value": "0x38C7"
    },
    "14522": {
      "op": "JUMPI"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14525": {
      "op": "DUP2"
    },
    "14526": {
      "op": "EQ"
    },
    "14527": {
      "op": "PUSH2",
      "value": "0x38E1"
    },
    "14530": {
      "op": "JUMPI"
    },
    "14531": {
      "op": "PUSH2",
      "value": "0x390F"
    },
    "14534": {
      "op": "JUMP"
    },
    "14535": {
      "op": "JUMPDEST"
    },
    "14536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14538": {
      "op": "NOT"
    },
    "14539": {
      "op": "DUP6"
    },
    "14540": {
      "op": "AND"
    },
    "14541": {
      "op": "DUP9"
    },
    "14542": {
      "op": "DUP5"
    },
    "14543": {
      "op": "ADD"
    },
    "14544": {
      "op": "MSTORE"
    },
    "14545": {
      "op": "DUP4"
    },
    "14546": {
      "op": "ISZERO"
    },
    "14547": {
      "op": "ISZERO"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14550": {
      "op": "SHL"
    },
    "14551": {
      "op": "DUP9"
    },
    "14552": {
      "op": "ADD"
    },
    "14553": {
      "op": "DUP4"
    },
    "14554": {
      "op": "ADD"
    },
    "14555": {
      "op": "SWAP6"
    },
    "14556": {
      "op": "POP"
    },
    "14557": {
      "op": "PUSH2",
      "value": "0x390F"
    },
    "14560": {
      "op": "JUMP"
    },
    "14561": {
      "op": "JUMPDEST"
    },
    "14562": {
      "op": "DUP7"
    },
    "14563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14565": {
      "op": "MSTORE"
    },
    "14566": {
      "op": "DUP3"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14569": {
      "op": "KECCAK256"
    },
    "14570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14572": {
      "op": "JUMPDEST"
    },
    "14573": {
      "op": "DUP6"
    },
    "14574": {
      "op": "DUP2"
    },
    "14575": {
      "op": "LT"
    },
    "14576": {
      "op": "ISZERO"
    },
    "14577": {
      "op": "PUSH2",
      "value": "0x3907"
    },
    "14580": {
      "op": "JUMPI"
    },
    "14581": {
      "op": "DUP2"
    },
    "14582": {
      "op": "SLOAD"
    },
    "14583": {
      "op": "DUP11"
    },
    "14584": {
      "op": "DUP3"
    },
    "14585": {
      "op": "ADD"
    },
    "14586": {
      "op": "DUP7"
    },
    "14587": {
      "op": "ADD"
    },
    "14588": {
      "op": "MSTORE"
    },
    "14589": {
      "op": "SWAP1"
    },
    "14590": {
      "op": "DUP4"
    },
    "14591": {
      "op": "ADD"
    },
    "14592": {
      "op": "SWAP1"
    },
    "14593": {
      "op": "DUP5"
    },
    "14594": {
      "op": "ADD"
    },
    "14595": {
      "op": "PUSH2",
      "value": "0x38EC"
    },
    "14598": {
      "op": "JUMP"
    },
    "14599": {
      "op": "JUMPDEST"
    },
    "14600": {
      "op": "DUP10"
    },
    "14601": {
      "op": "ADD"
    },
    "14602": {
      "op": "DUP5"
    },
    "14603": {
      "op": "ADD"
    },
    "14604": {
      "op": "SWAP7"
    },
    "14605": {
      "op": "POP"
    },
    "14606": {
      "op": "POP"
    },
    "14607": {
      "op": "JUMPDEST"
    },
    "14608": {
      "op": "POP"
    },
    "14609": {
      "op": "POP"
    },
    "14610": {
      "op": "POP"
    },
    "14611": {
      "op": "POP"
    },
    "14612": {
      "op": "POP"
    },
    "14613": {
      "op": "SWAP3"
    },
    "14614": {
      "op": "SWAP2"
    },
    "14615": {
      "op": "POP"
    },
    "14616": {
      "op": "POP"
    },
    "14617": {
      "jump": "o",
      "op": "JUMP"
    },
    "14618": {
      "op": "JUMPDEST"
    },
    "14619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14621": {
      "op": "DUP2"
    },
    "14622": {
      "op": "MSTORE"
    },
    "14623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14625": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "14628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14630": {
      "op": "DUP4"
    },
    "14631": {
      "op": "ADD"
    },
    "14632": {
      "op": "DUP5"
    },
    "14633": {
      "op": "PUSH2",
      "value": "0x389D"
    },
    "14636": {
      "jump": "i",
      "op": "JUMP"
    },
    "14637": {
      "op": "JUMPDEST"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14640": {
      "op": "DUP3"
    },
    "14641": {
      "op": "GT"
    },
    "14642": {
      "op": "ISZERO"
    },
    "14643": {
      "op": "PUSH2",
      "value": "0x3977"
    },
    "14646": {
      "op": "JUMPI"
    },
    "14647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14649": {
      "op": "DUP2"
    },
    "14650": {
      "op": "DUP2"
    },
    "14651": {
      "op": "MSTORE"
    },
    "14652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14654": {
      "op": "DUP2"
    },
    "14655": {
      "op": "KECCAK256"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14658": {
      "op": "DUP6"
    },
    "14659": {
      "op": "ADD"
    },
    "14660": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14662": {
      "op": "SHR"
    },
    "14663": {
      "op": "DUP2"
    },
    "14664": {
      "op": "ADD"
    },
    "14665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14667": {
      "op": "DUP7"
    },
    "14668": {
      "op": "LT"
    },
    "14669": {
      "op": "ISZERO"
    },
    "14670": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "14673": {
      "op": "JUMPI"
    },
    "14674": {
      "op": "POP"
    },
    "14675": {
      "op": "DUP1"
    },
    "14676": {
      "op": "JUMPDEST"
    },
    "14677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14679": {
      "op": "DUP6"
    },
    "14680": {
      "op": "ADD"
    },
    "14681": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14683": {
      "op": "SHR"
    },
    "14684": {
      "op": "DUP3"
    },
    "14685": {
      "op": "ADD"
    },
    "14686": {
      "op": "SWAP2"
    },
    "14687": {
      "op": "POP"
    },
    "14688": {
      "op": "JUMPDEST"
    },
    "14689": {
      "op": "DUP2"
    },
    "14690": {
      "op": "DUP2"
    },
    "14691": {
      "op": "LT"
    },
    "14692": {
      "op": "ISZERO"
    },
    "14693": {
      "op": "PUSH2",
      "value": "0x3973"
    },
    "14696": {
      "op": "JUMPI"
    },
    "14697": {
      "op": "DUP3"
    },
    "14698": {
      "op": "DUP2"
    },
    "14699": {
      "op": "SSTORE"
    },
    "14700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14702": {
      "op": "ADD"
    },
    "14703": {
      "op": "PUSH2",
      "value": "0x3960"
    },
    "14706": {
      "op": "JUMP"
    },
    "14707": {
      "op": "JUMPDEST"
    },
    "14708": {
      "op": "POP"
    },
    "14709": {
      "op": "POP"
    },
    "14710": {
      "op": "POP"
    },
    "14711": {
      "op": "JUMPDEST"
    },
    "14712": {
      "op": "POP"
    },
    "14713": {
      "op": "POP"
    },
    "14714": {
      "op": "POP"
    },
    "14715": {
      "jump": "o",
      "op": "JUMP"
    },
    "14716": {
      "op": "JUMPDEST"
    },
    "14717": {
      "op": "DUP2"
    },
    "14718": {
      "op": "MLOAD"
    },
    "14719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14725": {
      "op": "SHL"
    },
    "14726": {
      "op": "SUB"
    },
    "14727": {
      "op": "DUP2"
    },
    "14728": {
      "op": "GT"
    },
    "14729": {
      "op": "ISZERO"
    },
    "14730": {
      "op": "PUSH2",
      "value": "0x3995"
    },
    "14733": {
      "op": "JUMPI"
    },
    "14734": {
      "op": "PUSH2",
      "value": "0x3995"
    },
    "14737": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "14740": {
      "jump": "i",
      "op": "JUMP"
    },
    "14741": {
      "op": "JUMPDEST"
    },
    "14742": {
      "op": "PUSH2",
      "value": "0x39A9"
    },
    "14745": {
      "op": "DUP2"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0x39A3"
    },
    "14749": {
      "op": "DUP5"
    },
    "14750": {
      "op": "SLOAD"
    },
    "14751": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "14754": {
      "jump": "i",
      "op": "JUMP"
    },
    "14755": {
      "op": "JUMPDEST"
    },
    "14756": {
      "op": "DUP5"
    },
    "14757": {
      "op": "PUSH2",
      "value": "0x392D"
    },
    "14760": {
      "jump": "i",
      "op": "JUMP"
    },
    "14761": {
      "op": "JUMPDEST"
    },
    "14762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14764": {
      "op": "DUP1"
    },
    "14765": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14767": {
      "op": "DUP4"
    },
    "14768": {
      "op": "GT"
    },
    "14769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14771": {
      "op": "DUP2"
    },
    "14772": {
      "op": "EQ"
    },
    "14773": {
      "op": "PUSH2",
      "value": "0x39DE"
    },
    "14776": {
      "op": "JUMPI"
    },
    "14777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14779": {
      "op": "DUP5"
    },
    "14780": {
      "op": "ISZERO"
    },
    "14781": {
      "op": "PUSH2",
      "value": "0x39C6"
    },
    "14784": {
      "op": "JUMPI"
    },
    "14785": {
      "op": "POP"
    },
    "14786": {
      "op": "DUP6"
    },
    "14787": {
      "op": "DUP4"
    },
    "14788": {
      "op": "ADD"
    },
    "14789": {
      "op": "MLOAD"
    },
    "14790": {
      "op": "JUMPDEST"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14793": {
      "op": "NOT"
    },
    "14794": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14796": {
      "op": "DUP7"
    },
    "14797": {
      "op": "SWAP1"
    },
    "14798": {
      "op": "SHL"
    },
    "14799": {
      "op": "SHR"
    },
    "14800": {
      "op": "NOT"
    },
    "14801": {
      "op": "AND"
    },
    "14802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14804": {
      "op": "DUP6"
    },
    "14805": {
      "op": "SWAP1"
    },
    "14806": {
      "op": "SHL"
    },
    "14807": {
      "op": "OR"
    },
    "14808": {
      "op": "DUP6"
    },
    "14809": {
      "op": "SSTORE"
    },
    "14810": {
      "op": "PUSH2",
      "value": "0x3973"
    },
    "14813": {
      "op": "JUMP"
    },
    "14814": {
      "op": "JUMPDEST"
    },
    "14815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14817": {
      "op": "DUP6"
    },
    "14818": {
      "op": "DUP2"
    },
    "14819": {
      "op": "MSTORE"
    },
    "14820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14822": {
      "op": "DUP2"
    },
    "14823": {
      "op": "KECCAK256"
    },
    "14824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14826": {
      "op": "NOT"
    },
    "14827": {
      "op": "DUP7"
    },
    "14828": {
      "op": "AND"
    },
    "14829": {
      "op": "SWAP2"
    },
    "14830": {
      "op": "JUMPDEST"
    },
    "14831": {
      "op": "DUP3"
    },
    "14832": {
      "op": "DUP2"
    },
    "14833": {
      "op": "LT"
    },
    "14834": {
      "op": "ISZERO"
    },
    "14835": {
      "op": "PUSH2",
      "value": "0x3A0D"
    },
    "14838": {
      "op": "JUMPI"
    },
    "14839": {
      "op": "DUP9"
    },
    "14840": {
      "op": "DUP7"
    },
    "14841": {
      "op": "ADD"
    },
    "14842": {
      "op": "MLOAD"
    },
    "14843": {
      "op": "DUP3"
    },
    "14844": {
      "op": "SSTORE"
    },
    "14845": {
      "op": "SWAP5"
    },
    "14846": {
      "op": "DUP5"
    },
    "14847": {
      "op": "ADD"
    },
    "14848": {
      "op": "SWAP5"
    },
    "14849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14851": {
      "op": "SWAP1"
    },
    "14852": {
      "op": "SWAP2"
    },
    "14853": {
      "op": "ADD"
    },
    "14854": {
      "op": "SWAP1"
    },
    "14855": {
      "op": "DUP5"
    },
    "14856": {
      "op": "ADD"
    },
    "14857": {
      "op": "PUSH2",
      "value": "0x39EE"
    },
    "14860": {
      "op": "JUMP"
    },
    "14861": {
      "op": "JUMPDEST"
    },
    "14862": {
      "op": "POP"
    },
    "14863": {
      "op": "DUP6"
    },
    "14864": {
      "op": "DUP3"
    },
    "14865": {
      "op": "LT"
    },
    "14866": {
      "op": "ISZERO"
    },
    "14867": {
      "op": "PUSH2",
      "value": "0x3A2B"
    },
    "14870": {
      "op": "JUMPI"
    },
    "14871": {
      "op": "DUP8"
    },
    "14872": {
      "op": "DUP6"
    },
    "14873": {
      "op": "ADD"
    },
    "14874": {
      "op": "MLOAD"
    },
    "14875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14877": {
      "op": "NOT"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14880": {
      "op": "DUP9"
    },
    "14881": {
      "op": "SWAP1"
    },
    "14882": {
      "op": "SHL"
    },
    "14883": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14885": {
      "op": "AND"
    },
    "14886": {
      "op": "SHR"
    },
    "14887": {
      "op": "NOT"
    },
    "14888": {
      "op": "AND"
    },
    "14889": {
      "op": "DUP2"
    },
    "14890": {
      "op": "SSTORE"
    },
    "14891": {
      "op": "JUMPDEST"
    },
    "14892": {
      "op": "POP"
    },
    "14893": {
      "op": "POP"
    },
    "14894": {
      "op": "POP"
    },
    "14895": {
      "op": "POP"
    },
    "14896": {
      "op": "POP"
    },
    "14897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14899": {
      "op": "SWAP1"
    },
    "14900": {
      "op": "DUP2"
    },
    "14901": {
      "op": "SHL"
    },
    "14902": {
      "op": "ADD"
    },
    "14903": {
      "op": "SWAP1"
    },
    "14904": {
      "op": "SSTORE"
    },
    "14905": {
      "op": "POP"
    },
    "14906": {
      "jump": "o",
      "op": "JUMP"
    },
    "14907": {
      "op": "JUMPDEST"
    },
    "14908": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14915": {
      "op": "SHL"
    },
    "14916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14918": {
      "op": "MSTORE"
    },
    "14919": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14921": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14923": {
      "op": "MSTORE"
    },
    "14924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14928": {
      "op": "REVERT"
    },
    "14929": {
      "op": "JUMPDEST"
    },
    "14930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14932": {
      "op": "DUP3"
    },
    "14933": {
      "op": "NOT"
    },
    "14934": {
      "op": "DUP3"
    },
    "14935": {
      "op": "GT"
    },
    "14936": {
      "op": "ISZERO"
    },
    "14937": {
      "op": "PUSH2",
      "value": "0x3A64"
    },
    "14940": {
      "op": "JUMPI"
    },
    "14941": {
      "op": "PUSH2",
      "value": "0x3A64"
    },
    "14944": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "14947": {
      "jump": "i",
      "op": "JUMP"
    },
    "14948": {
      "op": "JUMPDEST"
    },
    "14949": {
      "op": "POP"
    },
    "14950": {
      "op": "ADD"
    },
    "14951": {
      "op": "SWAP1"
    },
    "14952": {
      "jump": "o",
      "op": "JUMP"
    },
    "14953": {
      "op": "JUMPDEST"
    },
    "14954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14956": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14959": {
      "op": "DUP4"
    },
    "14960": {
      "op": "DUP2"
    },
    "14961": {
      "op": "AND"
    },
    "14962": {
      "op": "SWAP1"
    },
    "14963": {
      "op": "DUP4"
    },
    "14964": {
      "op": "AND"
    },
    "14965": {
      "op": "DUP2"
    },
    "14966": {
      "op": "DUP2"
    },
    "14967": {
      "op": "LT"
    },
    "14968": {
      "op": "ISZERO"
    },
    "14969": {
      "op": "PUSH2",
      "value": "0x3A84"
    },
    "14972": {
      "op": "JUMPI"
    },
    "14973": {
      "op": "PUSH2",
      "value": "0x3A84"
    },
    "14976": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "14979": {
      "jump": "i",
      "op": "JUMP"
    },
    "14980": {
      "op": "JUMPDEST"
    },
    "14981": {
      "op": "SUB"
    },
    "14982": {
      "op": "SWAP4"
    },
    "14983": {
      "op": "SWAP3"
    },
    "14984": {
      "op": "POP"
    },
    "14985": {
      "op": "POP"
    },
    "14986": {
      "op": "POP"
    },
    "14987": {
      "jump": "o",
      "op": "JUMP"
    },
    "14988": {
      "op": "JUMPDEST"
    },
    "14989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14991": {
      "op": "DUP3"
    },
    "14992": {
      "op": "DUP3"
    },
    "14993": {
      "op": "LT"
    },
    "14994": {
      "op": "ISZERO"
    },
    "14995": {
      "op": "PUSH2",
      "value": "0x3A9E"
    },
    "14998": {
      "op": "JUMPI"
    },
    "14999": {
      "op": "PUSH2",
      "value": "0x3A9E"
    },
    "15002": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "15005": {
      "jump": "i",
      "op": "JUMP"
    },
    "15006": {
      "op": "JUMPDEST"
    },
    "15007": {
      "op": "POP"
    },
    "15008": {
      "op": "SUB"
    },
    "15009": {
      "op": "SWAP1"
    },
    "15010": {
      "jump": "o",
      "op": "JUMP"
    },
    "15011": {
      "op": "JUMPDEST"
    },
    "15012": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15018": {
      "op": "DUP6"
    },
    "15019": {
      "op": "AND"
    },
    "15020": {
      "op": "DUP2"
    },
    "15021": {
      "op": "MSTORE"
    },
    "15022": {
      "op": "DUP4"
    },
    "15023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15025": {
      "op": "DUP3"
    },
    "15026": {
      "op": "ADD"
    },
    "15027": {
      "op": "MSTORE"
    },
    "15028": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15032": {
      "op": "DUP3"
    },
    "15033": {
      "op": "ADD"
    },
    "15034": {
      "op": "MSTORE"
    },
    "15035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15037": {
      "op": "PUSH2",
      "value": "0x3AC9"
    },
    "15040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15042": {
      "op": "DUP4"
    },
    "15043": {
      "op": "ADD"
    },
    "15044": {
      "op": "DUP6"
    },
    "15045": {
      "op": "PUSH2",
      "value": "0x2F9C"
    },
    "15048": {
      "jump": "i",
      "op": "JUMP"
    },
    "15049": {
      "op": "JUMPDEST"
    },
    "15050": {
      "op": "SWAP1"
    },
    "15051": {
      "op": "POP"
    },
    "15052": {
      "op": "DUP3"
    },
    "15053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15055": {
      "op": "DUP4"
    },
    "15056": {
      "op": "ADD"
    },
    "15057": {
      "op": "MSTORE"
    },
    "15058": {
      "op": "SWAP6"
    },
    "15059": {
      "op": "SWAP5"
    },
    "15060": {
      "op": "POP"
    },
    "15061": {
      "op": "POP"
    },
    "15062": {
      "op": "POP"
    },
    "15063": {
      "op": "POP"
    },
    "15064": {
      "op": "POP"
    },
    "15065": {
      "jump": "o",
      "op": "JUMP"
    },
    "15066": {
      "op": "JUMPDEST"
    },
    "15067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15071": {
      "op": "DUP3"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "PUSH2",
      "value": "0x3AEC"
    },
    "15076": {
      "op": "JUMPI"
    },
    "15077": {
      "op": "PUSH2",
      "value": "0x3AEC"
    },
    "15080": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "15083": {
      "jump": "i",
      "op": "JUMP"
    },
    "15084": {
      "op": "JUMPDEST"
    },
    "15085": {
      "op": "POP"
    },
    "15086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15088": {
      "op": "ADD"
    },
    "15089": {
      "op": "SWAP1"
    },
    "15090": {
      "jump": "o",
      "op": "JUMP"
    },
    "15091": {
      "op": "JUMPDEST"
    },
    "15092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15096": {
      "op": "DUP3"
    },
    "15097": {
      "op": "DUP5"
    },
    "15098": {
      "op": "SUB"
    },
    "15099": {
      "op": "SLT"
    },
    "15100": {
      "op": "ISZERO"
    },
    "15101": {
      "op": "PUSH2",
      "value": "0x3B05"
    },
    "15104": {
      "op": "JUMPI"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15107": {
      "op": "DUP1"
    },
    "15108": {
      "op": "REVERT"
    },
    "15109": {
      "op": "JUMPDEST"
    },
    "15110": {
      "op": "DUP2"
    },
    "15111": {
      "op": "MLOAD"
    },
    "15112": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "15115": {
      "op": "DUP2"
    },
    "15116": {
      "op": "PUSH2",
      "value": "0x3462"
    },
    "15119": {
      "jump": "i",
      "op": "JUMP"
    },
    "15120": {
      "op": "JUMPDEST"
    },
    "15121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15127": {
      "op": "SHL"
    },
    "15128": {
      "op": "SUB"
    },
    "15129": {
      "op": "DUP4"
    },
    "15130": {
      "op": "GT"
    },
    "15131": {
      "op": "ISZERO"
    },
    "15132": {
      "op": "PUSH2",
      "value": "0x3B27"
    },
    "15135": {
      "op": "JUMPI"
    },
    "15136": {
      "op": "PUSH2",
      "value": "0x3B27"
    },
    "15139": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "15142": {
      "jump": "i",
      "op": "JUMP"
    },
    "15143": {
      "op": "JUMPDEST"
    },
    "15144": {
      "op": "PUSH2",
      "value": "0x3B3B"
    },
    "15147": {
      "op": "DUP4"
    },
    "15148": {
      "op": "PUSH2",
      "value": "0x3B35"
    },
    "15151": {
      "op": "DUP4"
    },
    "15152": {
      "op": "SLOAD"
    },
    "15153": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "15156": {
      "jump": "i",
      "op": "JUMP"
    },
    "15157": {
      "op": "JUMPDEST"
    },
    "15158": {
      "op": "DUP4"
    },
    "15159": {
      "op": "PUSH2",
      "value": "0x392D"
    },
    "15162": {
      "jump": "i",
      "op": "JUMP"
    },
    "15163": {
      "op": "JUMPDEST"
    },
    "15164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15166": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15168": {
      "op": "DUP5"
    },
    "15169": {
      "op": "GT"
    },
    "15170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15172": {
      "op": "DUP2"
    },
    "15173": {
      "op": "EQ"
    },
    "15174": {
      "op": "PUSH2",
      "value": "0x3B6F"
    },
    "15177": {
      "op": "JUMPI"
    },
    "15178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15180": {
      "op": "DUP6"
    },
    "15181": {
      "op": "ISZERO"
    },
    "15182": {
      "op": "PUSH2",
      "value": "0x3B57"
    },
    "15185": {
      "op": "JUMPI"
    },
    "15186": {
      "op": "POP"
    },
    "15187": {
      "op": "DUP4"
    },
    "15188": {
      "op": "DUP3"
    },
    "15189": {
      "op": "ADD"
    },
    "15190": {
      "op": "CALLDATALOAD"
    },
    "15191": {
      "op": "JUMPDEST"
    },
    "15192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15194": {
      "op": "NOT"
    },
    "15195": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15197": {
      "op": "DUP8"
    },
    "15198": {
      "op": "SWAP1"
    },
    "15199": {
      "op": "SHL"
    },
    "15200": {
      "op": "SHR"
    },
    "15201": {
      "op": "NOT"
    },
    "15202": {
      "op": "AND"
    },
    "15203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15205": {
      "op": "DUP7"
    },
    "15206": {
      "op": "SWAP1"
    },
    "15207": {
      "op": "SHL"
    },
    "15208": {
      "op": "OR"
    },
    "15209": {
      "op": "DUP4"
    },
    "15210": {
      "op": "SSTORE"
    },
    "15211": {
      "op": "PUSH2",
      "value": "0x1EA0"
    },
    "15214": {
      "op": "JUMP"
    },
    "15215": {
      "op": "JUMPDEST"
    },
    "15216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15218": {
      "op": "DUP4"
    },
    "15219": {
      "op": "DUP2"
    },
    "15220": {
      "op": "MSTORE"
    },
    "15221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15223": {
      "op": "SWAP1"
    },
    "15224": {
      "op": "KECCAK256"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15227": {
      "op": "NOT"
    },
    "15228": {
      "op": "DUP7"
    },
    "15229": {
      "op": "AND"
    },
    "15230": {
      "op": "SWAP1"
    },
    "15231": {
      "op": "DUP4"
    },
    "15232": {
      "op": "JUMPDEST"
    },
    "15233": {
      "op": "DUP3"
    },
    "15234": {
      "op": "DUP2"
    },
    "15235": {
      "op": "LT"
    },
    "15236": {
      "op": "ISZERO"
    },
    "15237": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15240": {
      "op": "JUMPI"
    },
    "15241": {
      "op": "DUP7"
    },
    "15242": {
      "op": "DUP6"
    },
    "15243": {
      "op": "ADD"
    },
    "15244": {
      "op": "CALLDATALOAD"
    },
    "15245": {
      "op": "DUP3"
    },
    "15246": {
      "op": "SSTORE"
    },
    "15247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15249": {
      "op": "SWAP5"
    },
    "15250": {
      "op": "DUP6"
    },
    "15251": {
      "op": "ADD"
    },
    "15252": {
      "op": "SWAP5"
    },
    "15253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15255": {
      "op": "SWAP1"
    },
    "15256": {
      "op": "SWAP3"
    },
    "15257": {
      "op": "ADD"
    },
    "15258": {
      "op": "SWAP2"
    },
    "15259": {
      "op": "ADD"
    },
    "15260": {
      "op": "PUSH2",
      "value": "0x3B80"
    },
    "15263": {
      "op": "JUMP"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "POP"
    },
    "15266": {
      "op": "DUP7"
    },
    "15267": {
      "op": "DUP3"
    },
    "15268": {
      "op": "LT"
    },
    "15269": {
      "op": "ISZERO"
    },
    "15270": {
      "op": "PUSH2",
      "value": "0x3BBD"
    },
    "15273": {
      "op": "JUMPI"
    },
    "15274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15276": {
      "op": "NOT"
    },
    "15277": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15279": {
      "op": "DUP9"
    },
    "15280": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15282": {
      "op": "SHL"
    },
    "15283": {
      "op": "AND"
    },
    "15284": {
      "op": "SHR"
    },
    "15285": {
      "op": "NOT"
    },
    "15286": {
      "op": "DUP5"
    },
    "15287": {
      "op": "DUP8"
    },
    "15288": {
      "op": "ADD"
    },
    "15289": {
      "op": "CALLDATALOAD"
    },
    "15290": {
      "op": "AND"
    },
    "15291": {
      "op": "DUP2"
    },
    "15292": {
      "op": "SSTORE"
    },
    "15293": {
      "op": "JUMPDEST"
    },
    "15294": {
      "op": "POP"
    },
    "15295": {
      "op": "POP"
    },
    "15296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15298": {
      "op": "DUP6"
    },
    "15299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15301": {
      "op": "SHL"
    },
    "15302": {
      "op": "ADD"
    },
    "15303": {
      "op": "DUP4"
    },
    "15304": {
      "op": "SSTORE"
    },
    "15305": {
      "op": "POP"
    },
    "15306": {
      "op": "POP"
    },
    "15307": {
      "op": "POP"
    },
    "15308": {
      "op": "POP"
    },
    "15309": {
      "op": "POP"
    },
    "15310": {
      "jump": "o",
      "op": "JUMP"
    },
    "15311": {
      "op": "JUMPDEST"
    },
    "15312": {
      "op": "DUP4"
    },
    "15313": {
      "op": "DUP2"
    },
    "15314": {
      "op": "MSTORE"
    },
    "15315": {
      "op": "DUP3"
    },
    "15316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15318": {
      "op": "DUP3"
    },
    "15319": {
      "op": "ADD"
    },
    "15320": {
      "op": "MSTORE"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15325": {
      "op": "DUP3"
    },
    "15326": {
      "op": "ADD"
    },
    "15327": {
      "op": "MSTORE"
    },
    "15328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15330": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15333": {
      "op": "DUP1"
    },
    "15334": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15336": {
      "op": "DUP5"
    },
    "15337": {
      "op": "ADD"
    },
    "15338": {
      "op": "MSTORE"
    },
    "15339": {
      "op": "PUSH2",
      "value": "0x3BF8"
    },
    "15342": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15345": {
      "op": "DUP5"
    },
    "15346": {
      "op": "ADD"
    },
    "15347": {
      "op": "DUP6"
    },
    "15348": {
      "op": "PUSH2",
      "value": "0x389D"
    },
    "15351": {
      "jump": "i",
      "op": "JUMP"
    },
    "15352": {
      "op": "JUMPDEST"
    },
    "15353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15355": {
      "op": "DUP6"
    },
    "15356": {
      "op": "ADD"
    },
    "15357": {
      "op": "SLOAD"
    },
    "15358": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15364": {
      "op": "AND"
    },
    "15365": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15371": {
      "op": "DUP2"
    },
    "15372": {
      "op": "AND"
    },
    "15373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15375": {
      "op": "DUP7"
    },
    "15376": {
      "op": "ADD"
    },
    "15377": {
      "op": "MSTORE"
    },
    "15378": {
      "op": "POP"
    },
    "15379": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15381": {
      "op": "DUP6"
    },
    "15382": {
      "op": "ADD"
    },
    "15383": {
      "op": "SLOAD"
    },
    "15384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15386": {
      "op": "DUP6"
    },
    "15387": {
      "op": "ADD"
    },
    "15388": {
      "op": "MSTORE"
    },
    "15389": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15391": {
      "op": "DUP6"
    },
    "15392": {
      "op": "ADD"
    },
    "15393": {
      "op": "SLOAD"
    },
    "15394": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15396": {
      "op": "DUP6"
    },
    "15397": {
      "op": "ADD"
    },
    "15398": {
      "op": "MSTORE"
    },
    "15399": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15401": {
      "op": "DUP6"
    },
    "15402": {
      "op": "ADD"
    },
    "15403": {
      "op": "SLOAD"
    },
    "15404": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15406": {
      "op": "DUP2"
    },
    "15407": {
      "op": "AND"
    },
    "15408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15410": {
      "op": "DUP7"
    },
    "15411": {
      "op": "ADD"
    },
    "15412": {
      "op": "MSTORE"
    },
    "15413": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "15415": {
      "op": "DUP2"
    },
    "15416": {
      "op": "SWAP1"
    },
    "15417": {
      "op": "SHR"
    },
    "15418": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15422": {
      "op": "AND"
    },
    "15423": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15426": {
      "op": "DUP7"
    },
    "15427": {
      "op": "ADD"
    },
    "15428": {
      "op": "MSTORE"
    },
    "15429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15431": {
      "op": "DUP2"
    },
    "15432": {
      "op": "SWAP1"
    },
    "15433": {
      "op": "SHR"
    },
    "15434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15438": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15440": {
      "op": "SHL"
    },
    "15441": {
      "op": "SUB"
    },
    "15442": {
      "op": "AND"
    },
    "15443": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15446": {
      "op": "DUP7"
    },
    "15447": {
      "op": "ADD"
    },
    "15448": {
      "op": "MSTORE"
    },
    "15449": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15452": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "15454": {
      "op": "DUP3"
    },
    "15455": {
      "op": "SWAP1"
    },
    "15456": {
      "op": "SHR"
    },
    "15457": {
      "op": "DUP2"
    },
    "15458": {
      "op": "AND"
    },
    "15459": {
      "op": "DUP5"
    },
    "15460": {
      "op": "DUP8"
    },
    "15461": {
      "op": "ADD"
    },
    "15462": {
      "op": "MSTORE"
    },
    "15463": {
      "op": "PUSH2",
      "value": "0x3C7C"
    },
    "15466": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15469": {
      "op": "DUP8"
    },
    "15470": {
      "op": "ADD"
    },
    "15471": {
      "op": "DUP3"
    },
    "15472": {
      "op": "DUP5"
    },
    "15473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15475": {
      "op": "SHR"
    },
    "15476": {
      "op": "AND"
    },
    "15477": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15480": {
      "op": "AND"
    },
    "15481": {
      "op": "SWAP1"
    },
    "15482": {
      "op": "MSTORE"
    },
    "15483": {
      "op": "JUMP"
    },
    "15484": {
      "op": "JUMPDEST"
    },
    "15485": {
      "op": "POP"
    },
    "15486": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "15488": {
      "op": "DUP2"
    },
    "15489": {
      "op": "SWAP1"
    },
    "15490": {
      "op": "SHR"
    },
    "15491": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15497": {
      "op": "AND"
    },
    "15498": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15501": {
      "op": "DUP7"
    },
    "15502": {
      "op": "ADD"
    },
    "15503": {
      "op": "MSTORE"
    },
    "15504": {
      "op": "POP"
    },
    "15505": {
      "op": "SWAP7"
    },
    "15506": {
      "op": "SWAP6"
    },
    "15507": {
      "op": "POP"
    },
    "15508": {
      "op": "POP"
    },
    "15509": {
      "op": "POP"
    },
    "15510": {
      "op": "POP"
    },
    "15511": {
      "op": "POP"
    },
    "15512": {
      "op": "POP"
    },
    "15513": {
      "jump": "o",
      "op": "JUMP"
    },
    "15514": {
      "op": "JUMPDEST"
    },
    "15515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15523": {
      "op": "SHL"
    },
    "15524": {
      "op": "SUB"
    },
    "15525": {
      "op": "DUP1"
    },
    "15526": {
      "op": "DUP5"
    },
    "15527": {
      "op": "AND"
    },
    "15528": {
      "op": "DUP1"
    },
    "15529": {
      "op": "PUSH2",
      "value": "0x3CC2"
    },
    "15532": {
      "op": "JUMPI"
    },
    "15533": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15540": {
      "op": "SHL"
    },
    "15541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15543": {
      "op": "MSTORE"
    },
    "15544": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15546": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15548": {
      "op": "MSTORE"
    },
    "15549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15553": {
      "op": "REVERT"
    },
    "15554": {
      "op": "JUMPDEST"
    },
    "15555": {
      "op": "SWAP3"
    },
    "15556": {
      "op": "AND"
    },
    "15557": {
      "op": "SWAP2"
    },
    "15558": {
      "op": "SWAP1"
    },
    "15559": {
      "op": "SWAP2"
    },
    "15560": {
      "op": "DIV"
    },
    "15561": {
      "op": "SWAP3"
    },
    "15562": {
      "op": "SWAP2"
    },
    "15563": {
      "op": "POP"
    },
    "15564": {
      "op": "POP"
    },
    "15565": {
      "jump": "o",
      "op": "JUMP"
    },
    "15566": {
      "op": "JUMPDEST"
    },
    "15567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15569": {
      "op": "DUP1"
    },
    "15570": {
      "op": "DUP3"
    },
    "15571": {
      "op": "MSTORE"
    },
    "15572": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15574": {
      "op": "SWAP1"
    },
    "15575": {
      "op": "DUP3"
    },
    "15576": {
      "op": "ADD"
    },
    "15577": {
      "op": "MSTORE"
    },
    "15578": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "15599": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "15601": {
      "op": "SHL"
    },
    "15602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15604": {
      "op": "DUP3"
    },
    "15605": {
      "op": "ADD"
    },
    "15606": {
      "op": "MSTORE"
    },
    "15607": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15609": {
      "op": "ADD"
    },
    "15610": {
      "op": "SWAP1"
    },
    "15611": {
      "jump": "o",
      "op": "JUMP"
    },
    "15612": {
      "op": "JUMPDEST"
    },
    "15613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15615": {
      "op": "DUP3"
    },
    "15616": {
      "op": "MLOAD"
    },
    "15617": {
      "op": "PUSH2",
      "value": "0x3D0E"
    },
    "15620": {
      "op": "DUP2"
    },
    "15621": {
      "op": "DUP5"
    },
    "15622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15624": {
      "op": "DUP8"
    },
    "15625": {
      "op": "ADD"
    },
    "15626": {
      "op": "PUSH2",
      "value": "0x2F70"
    },
    "15629": {
      "jump": "i",
      "op": "JUMP"
    },
    "15630": {
      "op": "JUMPDEST"
    },
    "15631": {
      "op": "SWAP2"
    },
    "15632": {
      "op": "SWAP1"
    },
    "15633": {
      "op": "SWAP2"
    },
    "15634": {
      "op": "ADD"
    },
    "15635": {
      "op": "SWAP3"
    },
    "15636": {
      "op": "SWAP2"
    },
    "15637": {
      "op": "POP"
    },
    "15638": {
      "op": "POP"
    },
    "15639": {
      "jump": "o",
      "op": "JUMP"
    },
    "15640": {
      "op": "JUMPDEST"
    },
    "15641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15643": {
      "op": "DUP1"
    },
    "15644": {
      "op": "DUP4"
    },
    "15645": {
      "op": "SLOAD"
    },
    "15646": {
      "op": "PUSH2",
      "value": "0x3D26"
    },
    "15649": {
      "op": "DUP2"
    },
    "15650": {
      "op": "PUSH2",
      "value": "0x379E"
    },
    "15653": {
      "jump": "i",
      "op": "JUMP"
    },
    "15654": {
      "op": "JUMPDEST"
    },
    "15655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15657": {
      "op": "DUP3"
    },
    "15658": {
      "op": "DUP2"
    },
    "15659": {
      "op": "AND"
    },
    "15660": {
      "op": "DUP1"
    },
    "15661": {
      "op": "ISZERO"
    },
    "15662": {
      "op": "PUSH2",
      "value": "0x3D3E"
    },
    "15665": {
      "op": "JUMPI"
    },
    "15666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15668": {
      "op": "DUP2"
    },
    "15669": {
      "op": "EQ"
    },
    "15670": {
      "op": "PUSH2",
      "value": "0x3D53"
    },
    "15673": {
      "op": "JUMPI"
    },
    "15674": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "15677": {
      "op": "JUMP"
    },
    "15678": {
      "op": "JUMPDEST"
    },
    "15679": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15681": {
      "op": "NOT"
    },
    "15682": {
      "op": "DUP5"
    },
    "15683": {
      "op": "AND"
    },
    "15684": {
      "op": "DUP8"
    },
    "15685": {
      "op": "MSTORE"
    },
    "15686": {
      "op": "DUP3"
    },
    "15687": {
      "op": "ISZERO"
    },
    "15688": {
      "op": "ISZERO"
    },
    "15689": {
      "op": "DUP4"
    },
    "15690": {
      "op": "MUL"
    },
    "15691": {
      "op": "DUP8"
    },
    "15692": {
      "op": "ADD"
    },
    "15693": {
      "op": "SWAP5"
    },
    "15694": {
      "op": "POP"
    },
    "15695": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "15698": {
      "op": "JUMP"
    },
    "15699": {
      "op": "JUMPDEST"
    },
    "15700": {
      "op": "DUP8"
    },
    "15701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15703": {
      "op": "MSTORE"
    },
    "15704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15706": {
      "op": "DUP1"
    },
    "15707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15709": {
      "op": "KECCAK256"
    },
    "15710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15712": {
      "op": "JUMPDEST"
    },
    "15713": {
      "op": "DUP6"
    },
    "15714": {
      "op": "DUP2"
    },
    "15715": {
      "op": "LT"
    },
    "15716": {
      "op": "ISZERO"
    },
    "15717": {
      "op": "PUSH2",
      "value": "0x3D79"
    },
    "15720": {
      "op": "JUMPI"
    },
    "15721": {
      "op": "DUP2"
    },
    "15722": {
      "op": "SLOAD"
    },
    "15723": {
      "op": "DUP11"
    },
    "15724": {
      "op": "DUP3"
    },
    "15725": {
      "op": "ADD"
    },
    "15726": {
      "op": "MSTORE"
    },
    "15727": {
      "op": "SWAP1"
    },
    "15728": {
      "op": "DUP5"
    },
    "15729": {
      "op": "ADD"
    },
    "15730": {
      "op": "SWAP1"
    },
    "15731": {
      "op": "DUP3"
    },
    "15732": {
      "op": "ADD"
    },
    "15733": {
      "op": "PUSH2",
      "value": "0x3D60"
    },
    "15736": {
      "op": "JUMP"
    },
    "15737": {
      "op": "JUMPDEST"
    },
    "15738": {
      "op": "POP"
    },
    "15739": {
      "op": "POP"
    },
    "15740": {
      "op": "POP"
    },
    "15741": {
      "op": "SWAP6"
    },
    "15742": {
      "op": "SWAP1"
    },
    "15743": {
      "op": "SWAP2"
    },
    "15744": {
      "op": "ADD"
    },
    "15745": {
      "op": "SWAP7"
    },
    "15746": {
      "op": "SWAP6"
    },
    "15747": {
      "op": "POP"
    },
    "15748": {
      "op": "POP"
    },
    "15749": {
      "op": "POP"
    },
    "15750": {
      "op": "POP"
    },
    "15751": {
      "op": "POP"
    },
    "15752": {
      "op": "POP"
    },
    "15753": {
      "jump": "o",
      "op": "JUMP"
    },
    "15754": {
      "op": "JUMPDEST"
    },
    "15755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15757": {
      "op": "DUP1"
    },
    "15758": {
      "op": "DUP3"
    },
    "15759": {
      "op": "SLT"
    },
    "15760": {
      "op": "DUP1"
    },
    "15761": {
      "op": "ISZERO"
    },
    "15762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15766": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15768": {
      "op": "SHL"
    },
    "15769": {
      "op": "SUB"
    },
    "15770": {
      "op": "DUP5"
    },
    "15771": {
      "op": "SWAP1"
    },
    "15772": {
      "op": "SUB"
    },
    "15773": {
      "op": "DUP6"
    },
    "15774": {
      "op": "SGT"
    },
    "15775": {
      "op": "AND"
    },
    "15776": {
      "op": "ISZERO"
    },
    "15777": {
      "op": "PUSH2",
      "value": "0x3DAC"
    },
    "15780": {
      "op": "JUMPI"
    },
    "15781": {
      "op": "PUSH2",
      "value": "0x3DAC"
    },
    "15784": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "15787": {
      "jump": "i",
      "op": "JUMP"
    },
    "15788": {
      "op": "JUMPDEST"
    },
    "15789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15791": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15793": {
      "op": "SHL"
    },
    "15794": {
      "op": "DUP4"
    },
    "15795": {
      "op": "SWAP1"
    },
    "15796": {
      "op": "SUB"
    },
    "15797": {
      "op": "DUP5"
    },
    "15798": {
      "op": "SLT"
    },
    "15799": {
      "op": "DUP2"
    },
    "15800": {
      "op": "AND"
    },
    "15801": {
      "op": "ISZERO"
    },
    "15802": {
      "op": "PUSH2",
      "value": "0x3DC5"
    },
    "15805": {
      "op": "JUMPI"
    },
    "15806": {
      "op": "PUSH2",
      "value": "0x3DC5"
    },
    "15809": {
      "op": "PUSH2",
      "value": "0x3A3B"
    },
    "15812": {
      "jump": "i",
      "op": "JUMP"
    },
    "15813": {
      "op": "JUMPDEST"
    },
    "15814": {
      "op": "POP"
    },
    "15815": {
      "op": "POP"
    },
    "15816": {
      "op": "ADD"
    },
    "15817": {
      "op": "SWAP1"
    },
    "15818": {
      "jump": "o",
      "op": "JUMP"
    },
    "15819": {
      "op": "JUMPDEST"
    },
    "15820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15822": {
      "op": "DUP2"
    },
    "15823": {
      "op": "MSTORE"
    },
    "15824": {
      "op": "DUP8"
    },
    "15825": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15827": {
      "op": "DUP3"
    },
    "15828": {
      "op": "ADD"
    },
    "15829": {
      "op": "MSTORE"
    },
    "15830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15832": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15835": {
      "op": "DUP10"
    },
    "15836": {
      "op": "DUP12"
    },
    "15837": {
      "op": "DUP3"
    },
    "15838": {
      "op": "DUP6"
    },
    "15839": {
      "op": "ADD"
    },
    "15840": {
      "op": "CALLDATACOPY"
    },
    "15841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15843": {
      "op": "DUP11"
    },
    "15844": {
      "op": "DUP5"
    },
    "15845": {
      "op": "ADD"
    },
    "15846": {
      "op": "DUP3"
    },
    "15847": {
      "op": "ADD"
    },
    "15848": {
      "op": "MSTORE"
    },
    "15849": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15855": {
      "op": "SWAP9"
    },
    "15856": {
      "op": "DUP10"
    },
    "15857": {
      "op": "AND"
    },
    "15858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15860": {
      "op": "DUP5"
    },
    "15861": {
      "op": "ADD"
    },
    "15862": {
      "op": "MSTORE"
    },
    "15863": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15865": {
      "op": "SWAP8"
    },
    "15866": {
      "op": "SWAP1"
    },
    "15867": {
      "op": "SWAP8"
    },
    "15868": {
      "op": "AND"
    },
    "15869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15871": {
      "op": "DUP4"
    },
    "15872": {
      "op": "ADD"
    },
    "15873": {
      "op": "MSTORE"
    },
    "15874": {
      "op": "POP"
    },
    "15875": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15879": {
      "op": "SWAP5"
    },
    "15880": {
      "op": "SWAP1"
    },
    "15881": {
      "op": "SWAP5"
    },
    "15882": {
      "op": "AND"
    },
    "15883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15885": {
      "op": "DUP6"
    },
    "15886": {
      "op": "ADD"
    },
    "15887": {
      "op": "MSTORE"
    },
    "15888": {
      "op": "SWAP2"
    },
    "15889": {
      "op": "DUP6"
    },
    "15890": {
      "op": "AND"
    },
    "15891": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15893": {
      "op": "DUP5"
    },
    "15894": {
      "op": "ADD"
    },
    "15895": {
      "op": "MSTORE"
    },
    "15896": {
      "op": "SWAP1"
    },
    "15897": {
      "op": "SWAP4"
    },
    "15898": {
      "op": "AND"
    },
    "15899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15901": {
      "op": "DUP3"
    },
    "15902": {
      "op": "ADD"
    },
    "15903": {
      "op": "MSTORE"
    },
    "15904": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15907": {
      "op": "SWAP1"
    },
    "15908": {
      "op": "SWAP3"
    },
    "15909": {
      "op": "AND"
    },
    "15910": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15912": {
      "op": "DUP4"
    },
    "15913": {
      "op": "ADD"
    },
    "15914": {
      "op": "MSTORE"
    },
    "15915": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15917": {
      "op": "SWAP1"
    },
    "15918": {
      "op": "SWAP3"
    },
    "15919": {
      "op": "ADD"
    },
    "15920": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15922": {
      "op": "NOT"
    },
    "15923": {
      "op": "AND"
    },
    "15924": {
      "op": "ADD"
    },
    "15925": {
      "op": "ADD"
    },
    "15926": {
      "op": "SWAP2"
    },
    "15927": {
      "op": "SWAP1"
    },
    "15928": {
      "op": "POP"
    },
    "15929": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "73e34abed8acf8d3103edeb69978651cdecc491c",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory, uint256[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            uint256[] memory myReturnUint= new uint256[](1);\n//            myReturn[0].NFTID=0;\n//            myReturn[0] = \"\";\n            return (myReturn, myReturnUint);\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        uint256[] memory myTaskIds = new uint256[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                myTaskIds[counter] = taskId;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return (myTasks, myTaskIds);\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:21746:2:-:0;;;2921:5;2894:32;;2982:6;2946:42;;11645:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:10;1778:7;:22;889:23:9;679:10:3;889:9:9;:23::i;:::-;11724:10:2;:26;;-1:-1:-1;;;;;;11724:26:2;-1:-1:-1;;;;;11724:26:2;;;;;;;;;;743:21746;;2101:173:9;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;743:21746:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}